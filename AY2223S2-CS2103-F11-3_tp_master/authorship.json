[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"# Vaccination Management System","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103-F11-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103-F11-3/tp/actions) [![codecov](https://codecov.io/gh/AY2223S2-CS2103-F11-3/tp/branch/master/graph/badge.svg?token\u003d2HQAFUFOZJ)](https://codecov.io/gh/AY2223S2-CS2103-F11-3/tp)","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"## Target user:","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"The target user profile for the Vaccination Management System is an administrative staff who manages vaccinations centre. They prefer to work with a (CLI) for speed and efficiency. They have a fast typing speed and value the ability to manage the stock of vaccines, determine vaccine suitability, and schedule appointments.","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"## Value Proposition:","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"The Vaccination Management System provides an efficient solution for managing vaccine stock, determining patient suitability and scheduling appointments, and improving administrative efficiency and patient care. The system is optimised for typist, making it an ideal choice for busy administrative staff who type fast and prefer a CLI-first design.","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"# Credits:","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"daitenshionyan":2,"francisyzy":13}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"mainClassName \u003d \u0027seedu.vms.Main\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    archiveFileName \u003d \u0027vms.jar\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"daitenshionyan":2,"-":70}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/intermediate.html","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2019-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    IMPORT CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","lastModifiedDate":"2017-01-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","lastModifiedDate":"2017-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      1. STATIC: static imports","lastModifiedDate":"2017-01-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","lastModifiedDate":"2017-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","lastModifiedDate":"2017-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","lastModifiedDate":"2017-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"customImportOrderRules\"","lastModifiedDate":"2017-01-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    An import statement is redundant if:","lastModifiedDate":"2017-01-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2017-01-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2017-01-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2017-01-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    An import statement is unused if:","lastModifiedDate":"2017-01-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2017-01-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    NAMING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2017-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        else","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2017-04-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2016-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      else if {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      if (true)","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return 1; // Not allowed","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2017-09-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"       value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    ORDER CHECKS","lastModifiedDate":"2017-01-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2017-04-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2017-04-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2017-04-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      3. Constructors","lastModifiedDate":"2017-04-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      4. Methods","lastModifiedDate":"2017-04-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2017-01-16"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"           This includes most binary operators and keywords followed","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"           by regular or curly braces.","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","lastModifiedDate":"2016-12-10"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        UNARY_PLUS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    \u003c!-- No trailing whitespace --\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","lastModifiedDate":"2017-05-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","lastModifiedDate":"2017-05-22"},{"lineNumber":318,"author":{"gitId":"-"},"content":"             e.g. String::compareToIgnoreCase","lastModifiedDate":"2017-05-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","lastModifiedDate":"2017-05-22"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":340,"author":{"gitId":"daitenshionyan"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI\"/\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-14"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there is no whitespace between method/constructor name and open parenthesis. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodParamPad\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","lastModifiedDate":"2018-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"         a \u003d 1; // Allowed","lastModifiedDate":"2018-08-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","lastModifiedDate":"2018-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","lastModifiedDate":"2018-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","lastModifiedDate":"2018-08-15"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2017-08-20"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2017-08-20"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all block-tags are ordered correctly. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Javadoc block tags appear only at the beginning of the line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that for block tags, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every public method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":425,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":427,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*)\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public class, enumeration and interface has a header comment. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocType\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":433,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":434,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":1,"-":433}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"You can reach us by creating Github issues [here](https://github.com/AY2223S2-CS2103-F11-3/tp/issues)!","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"### Francis Yeo","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"\u003cimg src\u003d\"images/francisyzy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"[[homepage](https://francisyzy.com)]","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"[[github](https://github.com/francisyzy)]","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"[[portfolio](team/francisyzy.md)]","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"* Role: Team Lead","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"* Responsibilities: NOT UI","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"### daitenshionyan","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"\u003cimg src\u003d\"images/daitenshionyan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"[[github](https://github.com/daitenshionyan)]","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"[[portfolio](team/daitenshionyan.md)]","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"* Role: Developer","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"### nusE0726844","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"\u003cimg src\u003d\"images/nuse0726844.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"[[github](http://github.com/nusE0726844)] [[portfolio](team/nuse0726844.md)]","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"slackernoob"},"content":"### slackernoob","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"slackernoob"},"content":"\u003cimg src\u003d\"images/slackernoob.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"slackernoob"},"content":"[[github](http://github.com/slackernoob)]","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"slackernoob"},"content":"[[portfolio](team/slackernoob.md)]","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"daitenshionyan":5,"slackernoob":4,"-":31,"francisyzy":9,"nusE0726844":2}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2023-01-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your tests.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"However, because Codecov is known to run into intermittent problems (e.g., report upload fails) due to issues on the Codecov service side, the CI is configured to pass even if the Codecov task failed. Therefore, developers are advised to check the code coverage levels periodically and take corrective actions if the coverage level falls below desired levels.","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"To enable Codecov for forks of this project, follow the steps given in [this se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/MainApp.java).","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"daitenshionyan":1,"-":78}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"* COVID-19 vaccination data - [MOH | COVID-19 Vaccination](https://www.moh.gov.sg/covid-19/vaccination)","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"* Chemical name synonyms - [PubChem](https://pubchem.ncbi.nlm.nih.gov/)","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/MainApp.java). It is responsible for,","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/ui/Ui.java)","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PatientListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"* depends on some classes in the `Model` component, as it displays `Patient` object residing in the `Model`.","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/logic/Logic.java)","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"1. When `Logic` is called upon to execute a command, it uses the `VmsParser` class to parse the user command.","lastModifiedDate":"2023-02-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a patient).","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"* When called upon to parse a user command, the `VmsParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `VmsParser` returns back as a `Command` object.","lastModifiedDate":"2023-02-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/model/Model.java)","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"francisyzy"},"content":"* stores the patient manager data i.e., all `Patient` objects (which are contained in a `UniquePatientList` object).","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"francisyzy"},"content":"* stores the currently \u0027selected\u0027 `Patient` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPatient\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"francisyzy"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `Vms`, which `Patient` references. This allows `Vms` to only require one `Tag` object per unique tag, instead of each `Patient` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103-F11-3/tp/tree/master/src/main/java/seedu/vms/storage/Storage.java)","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"francisyzy"},"content":"* can save both patient manager data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"francisyzy"},"content":"* inherits from both `VmsStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-02-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"francisyzy"},"content":"Classes used by multiple components are in the `seedu.vms.commons` package.","lastModifiedDate":"2023-02-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"francisyzy"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedVms`. It extends `Vms` with an undo/redo history, stored internally as an `patientManagerStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"francisyzy"},"content":"* `VersionedVms#commit()` — Saves the current patient manager state in its history.","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"francisyzy"},"content":"* `VersionedVms#undo()` — Restores the previous patient manager state from its history.","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"francisyzy"},"content":"* `VersionedVms#redo()` — Restores a previously undone patient manager state from its history.","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"francisyzy"},"content":"These operations are exposed in the `Model` interface as `Model#commitVms()`, `Model#undoVms()` and `Model#redoVms()` respectively.","lastModifiedDate":"2023-02-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"francisyzy"},"content":"Step 1. The user launches the application for the first time. The `VersionedVms` will be initialized with the initial patient manager state, and the `currentStatePointer` pointing to that single patient manager state.","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"francisyzy"},"content":"Step 2. The user executes `delete 5` command to delete the 5th patient in the patient manager. The `delete` command calls `Model#commitVms()`, causing the modified state of the patient manager after the `delete 5` command executes to be saved in the `patientManagerStateList`, and the `currentStatePointer` is shifted to the newly inserted patient manager state.","lastModifiedDate":"2023-03-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"francisyzy"},"content":"Step 3. The user executes `add n/David …​` to add a new patient. The `add` command also calls `Model#commitVms()`, causing another modified patient manager state to be saved into the `patientManagerStateList`.","lastModifiedDate":"2023-03-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"francisyzy"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitVms()`, so the patient manager state will not be saved into the `patientManagerStateList`.","lastModifiedDate":"2023-03-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"francisyzy"},"content":"Step 4. The user now decides that adding the patient was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoVms()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous patient manager state, and restores the patient manager to that state.","lastModifiedDate":"2023-03-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"francisyzy"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial Vms state, then there are no previous Vms states to restore. The `undo` command uses `Model#canUndoVms()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-02-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"francisyzy"},"content":"The `redo` command does the opposite — it calls `Model#redoVms()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the patient manager to that state.","lastModifiedDate":"2023-03-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"francisyzy"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `patientManagerStateList.size() - 1`, pointing to the latest patient manager state, then there are no undone Vms states to restore. The `redo` command uses `Model#canRedoVms()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-03-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"francisyzy"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the patient manager, such as `list`, will usually not call `Model#commitVms()`, `Model#undoVms()` or `Model#redoVms()`. Thus, the `patientManagerStateList` remains unchanged.","lastModifiedDate":"2023-03-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"francisyzy"},"content":"Step 6. The user executes `clear`, which calls `Model#commitVms()`. Since the `currentStatePointer` is not pointing at the end of the `patientManagerStateList`, all patient manager states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-03-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"francisyzy"},"content":"* **Alternative 1 (current choice):** Saves the entire patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"francisyzy"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the patient being deleted).","lastModifiedDate":"2023-03-03"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"francisyzy"},"content":"* has a need to manage a significant number of patients","lastModifiedDate":"2023-02-21"},{"lineNumber":262,"author":{"gitId":"daitenshionyan"},"content":"* has a need to manage patient schedules","lastModifiedDate":"2023-03-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":266,"author":{"gitId":"francisyzy"},"content":"* is reasonably comfortable using CLI apps for speed and efficiency","lastModifiedDate":"2023-02-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"francisyzy"},"content":"**Value proposition**: VMS provides an efficient solution for managing vaccine stock, determining patient suitability and scheduling appointments, and improving administrative efficiency and patient care. The system is optimised for typist, making it an ideal choice for busy administrative staff who type fast and prefer a CLI-first design.","lastModifiedDate":"2023-02-21"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| Priority | As a …​                          | I want to …​                                                                               | So that I can …​                                                                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"francisyzy"},"content":"| -------- | -------------------------------- | ------------------------------------------------------------------------------------------ | --------------------------------------------------------------------------------- |","lastModifiedDate":"2023-02-20"},{"lineNumber":276,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | Receptionist                     | check the list of patients details                                                         | verify and mark the new arrival\u0027s attendance                                      |","lastModifiedDate":"2023-03-07"},{"lineNumber":277,"author":{"gitId":"francisyzy"},"content":"| `* * *`  | Receptionist                     | check the patient\u0027s medical records                                                        | prepare the right type of vaccination                                             |","lastModifiedDate":"2023-02-20"},{"lineNumber":278,"author":{"gitId":"francisyzy"},"content":"| `* * *`  | Receptionist                     | get the patient\u0027s contact easily                                                           | contact them when needed.                                                         |","lastModifiedDate":"2023-02-20"},{"lineNumber":279,"author":{"gitId":"francisyzy"},"content":"| `* * *`  | Receptionist                     | be able to key in people with the same name                                                | save the data of people with the same name.                                       |","lastModifiedDate":"2023-02-20"},{"lineNumber":280,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | Receptionist                     | add a patient                                                                              |                                                                                   |","lastModifiedDate":"2023-03-07"},{"lineNumber":281,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | Receptionist                     | update a patient                                                                           |                                                                                   |","lastModifiedDate":"2023-03-07"},{"lineNumber":282,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | Receptionist                     | delete a patient                                                                           |                                                                                   |","lastModifiedDate":"2023-03-07"},{"lineNumber":283,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | Receptionist                     | view appointment details                                                                   | recall the details of an appointment                                              |","lastModifiedDate":"2023-03-07"},{"lineNumber":284,"author":{"gitId":"francisyzy"},"content":"| `* * *`  | Receptionist                     | add an appointment                                                                         |                                                                                   |","lastModifiedDate":"2023-02-20"},{"lineNumber":285,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | Receptionist                     | delete an appointment                                                                      |                                                                                   |","lastModifiedDate":"2023-03-07"},{"lineNumber":286,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | Receptionist                     | update an appointment                                                                      |                                                                                   |","lastModifiedDate":"2023-03-07"},{"lineNumber":287,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | Receptionist                     | view vaccination type details                                                              | recall the details of a vaccination type                                          |","lastModifiedDate":"2023-03-07"},{"lineNumber":288,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | Receptionist                     | add a vaccination type                                                                     |                                                                                   |","lastModifiedDate":"2023-03-07"},{"lineNumber":289,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | Receptionist                     | delete a vaccination type                                                                  |                                                                                   |","lastModifiedDate":"2023-03-07"},{"lineNumber":290,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | Receptionist                     | update a vaccination type                                                                  |                                                                                   |","lastModifiedDate":"2023-03-07"},{"lineNumber":291,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | Receptionist                     | view allergy details                                                                       | recall the details of an allergy                                                  |","lastModifiedDate":"2023-03-07"},{"lineNumber":292,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | Receptionist                     | add an allergy                                                                             |                                                                                   |","lastModifiedDate":"2023-03-07"},{"lineNumber":293,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | Receptionist                     | delete an allergy                                                                          |                                                                                   |","lastModifiedDate":"2023-03-07"},{"lineNumber":294,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | Receptionist                     | update an allergy                                                                          |                                                                                   |","lastModifiedDate":"2023-03-07"},{"lineNumber":295,"author":{"gitId":"daitenshionyan"},"content":"| `* * *`  | New user wanting to use the app  | purge all the current data                                                                 | get rid of sample/experiment data                                                 |","lastModifiedDate":"2023-03-07"},{"lineNumber":296,"author":{"gitId":"francisyzy"},"content":"| `* *`    | Junior receptionist              | view a quick start guide easily                                                            | learn the basic features of the system quickly                                    |","lastModifiedDate":"2023-02-20"},{"lineNumber":297,"author":{"gitId":"francisyzy"},"content":"| `* *`    | Receptionist                     | update the status of a patient                                                             | they can be tracked and not go missing                                            |","lastModifiedDate":"2023-02-20"},{"lineNumber":298,"author":{"gitId":"francisyzy"},"content":"| `* *`    | Potential user exploring the app | see the app populated with sample data                                                     | use it as a tutorial for how the app will work                                    |","lastModifiedDate":"2023-02-20"},{"lineNumber":299,"author":{"gitId":"daitenshionyan"},"content":"| `* *`    | Expert user                      | enter arguments in masses                                                                  | type less                                                                         |","lastModifiedDate":"2023-03-07"},{"lineNumber":300,"author":{"gitId":"francisyzy"},"content":"| `* *`    | Receptionist                     | check what is the next free appointment slot                                               | choose the best time for the patient                                              |","lastModifiedDate":"2023-02-20"},{"lineNumber":301,"author":{"gitId":"daitenshionyan"},"content":"| `* *`    | Expert user                      | enter shortened command names to perform the same command                                  | type less                                                                         |","lastModifiedDate":"2023-03-07"},{"lineNumber":302,"author":{"gitId":"daitenshionyan"},"content":"| `* *`    | Receptionist                     | filter vaccination types                                                                   | find the vaccination type that I am looking for easier                            |","lastModifiedDate":"2023-03-07"},{"lineNumber":303,"author":{"gitId":"daitenshionyan"},"content":"| `* *`    | Receptionist                     | add custom reference names to vaccination types                                            | refer to a vaccination type with shortened names                                  |","lastModifiedDate":"2023-03-07"},{"lineNumber":304,"author":{"gitId":"francisyzy"},"content":"| `*`      | Receptionist                     | check the appointment schedule                                                             | see when an open slot is                                                          |","lastModifiedDate":"2023-02-20"},{"lineNumber":305,"author":{"gitId":"francisyzy"},"content":"| `*`      | Receptionist                     | check the status of patients                                                               | know when to let the next waiting in line in                                      |","lastModifiedDate":"2023-02-20"},{"lineNumber":306,"author":{"gitId":"francisyzy"},"content":"| `*`      | Overworked receptionist          | automate checking the number of patients that are still in                                 | know whether to let the next patient in quicker                                   |","lastModifiedDate":"2023-03-03"},{"lineNumber":307,"author":{"gitId":"francisyzy"},"content":"| `*`      | Receptionist                     | view the appointments made for the day                                                     | roughly know how many patients to expect that day to allocate enough vaccinations |","lastModifiedDate":"2023-02-20"},{"lineNumber":308,"author":{"gitId":"francisyzy"},"content":"| `*`      | Receptionist                     | see the status of all patients                                                             | know where they are                                                               |","lastModifiedDate":"2023-02-20"},{"lineNumber":309,"author":{"gitId":"francisyzy"},"content":"| `*`      | Receptionist                     | check the list of patients                                                                 | prepare the correct number of vaccinations                                        |","lastModifiedDate":"2023-02-20"},{"lineNumber":310,"author":{"gitId":"francisyzy"},"content":"| `*`      | New user                         | view the user guide easily                                                                 |                                                                                   |","lastModifiedDate":"2023-02-20"},{"lineNumber":311,"author":{"gitId":"francisyzy"},"content":"| `*`      | Forgetful user                   | see what commands there are                                                                | know what commands I can use                                                      |","lastModifiedDate":"2023-02-20"},{"lineNumber":312,"author":{"gitId":"francisyzy"},"content":"| `*`      | Forgetful user                   | see the syntax of commands                                                                 | know how to use the command                                                       |","lastModifiedDate":"2023-02-20"},{"lineNumber":313,"author":{"gitId":"francisyzy"},"content":"| `*`      | Stock checker                    | see what vaccinations are expiring                                                         | know what I need to dispose                                                       |","lastModifiedDate":"2023-02-20"},{"lineNumber":314,"author":{"gitId":"francisyzy"},"content":"| `*`      | Expert user                      | use bash script to generate reports                                                        | automate the process                                                              |","lastModifiedDate":"2023-02-20"},{"lineNumber":315,"author":{"gitId":"francisyzy"},"content":"| `*`      | Receptionist                     | view the error occurred due to typographical errors                                        | understand exactly what went wrong                                                |","lastModifiedDate":"2023-02-20"},{"lineNumber":316,"author":{"gitId":"francisyzy"},"content":"| `*`      | Receptionist                     | check if a patient is compatible with a vaccination                                        | am able to tell if he can take that vaccination                                   |","lastModifiedDate":"2023-02-20"},{"lineNumber":317,"author":{"gitId":"francisyzy"},"content":"| `*`      | Receptionist                     | know which patients are done with the 30 min monitoring after vaccinate (to check allergy) | tell them to go home                                                              |","lastModifiedDate":"2023-02-20"},{"lineNumber":318,"author":{"gitId":"francisyzy"},"content":"| `*`      | Receptionist                     | rely on the system to verify that the patient has done the order of vaccinations correctly | verify that they can be safe                                                      |","lastModifiedDate":"2023-02-20"},{"lineNumber":319,"author":{"gitId":"francisyzy"},"content":"| `*`      | Forgetful receptionist           | view a list of commands entered into the application                                       | verify that the entries are correct                                               |","lastModifiedDate":"2023-02-20"},{"lineNumber":320,"author":{"gitId":"francisyzy"},"content":"| `*`      | Receptionist                     | find patients who did not come                                                             | send them a reminder to take their vaccination                                    |","lastModifiedDate":"2023-02-20"},{"lineNumber":321,"author":{"gitId":"francisyzy"},"content":"| `*`      | Receptionist                     | archive/hide unused data                                                                   | am not distracted by irrelevant data                                              |","lastModifiedDate":"2023-02-20"},{"lineNumber":322,"author":{"gitId":"francisyzy"},"content":"| `*`      | Receptionist                     | undo my latest action                                                                      | do not accidentally nuke all data                                                 |","lastModifiedDate":"2023-02-20"},{"lineNumber":323,"author":{"gitId":"daitenshionyan"},"content":"| `*`      | User                             | view the records that I have deleted                                                       | so that I can add them back when needed                                           |","lastModifiedDate":"2023-03-07"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"daitenshionyan"},"content":"For all use cases below, the **System** is the `VMS` and the **Actor** is the `user`, unless specified otherwise.","lastModifiedDate":"2023-03-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"daitenshionyan"},"content":"#### UC-PAT-001 - Add patient","lastModifiedDate":"2023-03-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"francisyzy"},"content":"1. User requests to add patient.","lastModifiedDate":"2023-02-20"},{"lineNumber":334,"author":{"gitId":"francisyzy"},"content":"2. VMS adds the patient.","lastModifiedDate":"2023-02-20"},{"lineNumber":335,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":336,"author":{"gitId":"francisyzy"},"content":"  Use case ends.","lastModifiedDate":"2023-02-20"},{"lineNumber":337,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":338,"author":{"gitId":"daitenshionyan"},"content":"#### UC-PAT-002 - List patients","lastModifiedDate":"2023-03-07"},{"lineNumber":339,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":340,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":341,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":342,"author":{"gitId":"francisyzy"},"content":"1. User requests to list patients.","lastModifiedDate":"2023-02-20"},{"lineNumber":343,"author":{"gitId":"francisyzy"},"content":"2. VMS shows a the list of patients with their corresponding IDs.","lastModifiedDate":"2023-02-20"},{"lineNumber":344,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":345,"author":{"gitId":"francisyzy"},"content":"  Use case ends.","lastModifiedDate":"2023-02-20"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":347,"author":{"gitId":"daitenshionyan"},"content":"#### UC-PAT-003 - Update patient","lastModifiedDate":"2023-03-07"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":349,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":351,"author":{"gitId":"francisyzy"},"content":"1. User requests to list patients.","lastModifiedDate":"2023-02-20"},{"lineNumber":352,"author":{"gitId":"francisyzy"},"content":"2. VMS shows a the list of patients with their corresponding IDs.","lastModifiedDate":"2023-02-20"},{"lineNumber":353,"author":{"gitId":"francisyzy"},"content":"3. User requests to update a specific patient in the list with the args.","lastModifiedDate":"2023-02-20"},{"lineNumber":354,"author":{"gitId":"francisyzy"},"content":"4. VMS updates the patients","lastModifiedDate":"2023-02-20"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-02-20"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":358,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-03-07"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":360,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-02-20"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":362,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-02-20"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":364,"author":{"gitId":"francisyzy"},"content":"* 3a. The given ID is invalid.","lastModifiedDate":"2023-02-20"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":366,"author":{"gitId":"francisyzy"},"content":"  * 3a1. VMS shows an error message.","lastModifiedDate":"2023-02-20"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":368,"author":{"gitId":"francisyzy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-20"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":370,"author":{"gitId":"daitenshionyan"},"content":"#### UC-PAT-004 - Delete patient","lastModifiedDate":"2023-03-07"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":372,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":373,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":374,"author":{"gitId":"francisyzy"},"content":"1. User requests to list patients.","lastModifiedDate":"2023-02-20"},{"lineNumber":375,"author":{"gitId":"francisyzy"},"content":"2. VMS shows a the list of patients with their corresponding IDs.","lastModifiedDate":"2023-02-20"},{"lineNumber":376,"author":{"gitId":"francisyzy"},"content":"3. User requests to delete a specific patient in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":377,"author":{"gitId":"francisyzy"},"content":"4. VMS soft deletes the patient.","lastModifiedDate":"2023-02-20"},{"lineNumber":378,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":379,"author":{"gitId":"francisyzy"},"content":"    Use case ends.","lastModifiedDate":"2023-02-20"},{"lineNumber":380,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":381,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-03-07"},{"lineNumber":382,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":383,"author":{"gitId":"francisyzy"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-02-20"},{"lineNumber":384,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":385,"author":{"gitId":"francisyzy"},"content":"  Use case ends.","lastModifiedDate":"2023-02-20"},{"lineNumber":386,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":387,"author":{"gitId":"francisyzy"},"content":"* 3a. The given ID is invalid.","lastModifiedDate":"2023-02-20"},{"lineNumber":388,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":389,"author":{"gitId":"francisyzy"},"content":"  * 3a1. VMS shows an error message.","lastModifiedDate":"2023-02-20"},{"lineNumber":390,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":391,"author":{"gitId":"francisyzy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-20"},{"lineNumber":392,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":393,"author":{"gitId":"daitenshionyan"},"content":"#### UC-APT-001 - Add appointment","lastModifiedDate":"2023-03-07"},{"lineNumber":394,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":395,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":396,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":397,"author":{"gitId":"francisyzy"},"content":"1. User request to add an appointment.","lastModifiedDate":"2023-02-20"},{"lineNumber":398,"author":{"gitId":"francisyzy"},"content":"2. User enters the start and end timing of the appointment, and the associated patient.","lastModifiedDate":"2023-02-20"},{"lineNumber":399,"author":{"gitId":"francisyzy"},"content":"3. VMS adds the appointment.","lastModifiedDate":"2023-02-20"},{"lineNumber":400,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":401,"author":{"gitId":"francisyzy"},"content":"    Use case ends.","lastModifiedDate":"2023-02-20"},{"lineNumber":402,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":403,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-03-07"},{"lineNumber":404,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":405,"author":{"gitId":"francisyzy"},"content":"* 2a. timing format or patient ID is invalid.","lastModifiedDate":"2023-02-20"},{"lineNumber":406,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":407,"author":{"gitId":"francisyzy"},"content":"  * 2a1. VMS shows an error message.","lastModifiedDate":"2023-02-20"},{"lineNumber":408,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":409,"author":{"gitId":"francisyzy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-20"},{"lineNumber":410,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":411,"author":{"gitId":"daitenshionyan"},"content":"#### UC-APT-002 - View appointments","lastModifiedDate":"2023-03-07"},{"lineNumber":412,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":413,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":414,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":415,"author":{"gitId":"francisyzy"},"content":"1. User requests to list appointments.","lastModifiedDate":"2023-02-20"},{"lineNumber":416,"author":{"gitId":"francisyzy"},"content":"2. VMS shows a list of appointments.","lastModifiedDate":"2023-02-20"},{"lineNumber":417,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":418,"author":{"gitId":"francisyzy"},"content":"    Use case ends.","lastModifiedDate":"2023-02-20"},{"lineNumber":419,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":420,"author":{"gitId":"daitenshionyan"},"content":"#### UC-APT-003 - Update appointment","lastModifiedDate":"2023-03-07"},{"lineNumber":421,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":422,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":423,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":424,"author":{"gitId":"francisyzy"},"content":"1. User requests to list appointments.","lastModifiedDate":"2023-02-20"},{"lineNumber":425,"author":{"gitId":"francisyzy"},"content":"2. VMS shows a list of appointments.","lastModifiedDate":"2023-02-20"},{"lineNumber":426,"author":{"gitId":"francisyzy"},"content":"3. User requests to update a specific appointment in the list using the ID with the args.","lastModifiedDate":"2023-02-20"},{"lineNumber":427,"author":{"gitId":"francisyzy"},"content":"4. VMS update the appointment.","lastModifiedDate":"2023-02-20"},{"lineNumber":428,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":429,"author":{"gitId":"francisyzy"},"content":"    Use case ends.","lastModifiedDate":"2023-02-20"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":431,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-03-07"},{"lineNumber":432,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":433,"author":{"gitId":"francisyzy"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-02-20"},{"lineNumber":434,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":435,"author":{"gitId":"francisyzy"},"content":"  Use case ends.","lastModifiedDate":"2023-02-20"},{"lineNumber":436,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":437,"author":{"gitId":"francisyzy"},"content":"* 3a. The given ID is invalid.","lastModifiedDate":"2023-02-20"},{"lineNumber":438,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":439,"author":{"gitId":"francisyzy"},"content":"  * 3a1. VMS shows an error message.","lastModifiedDate":"2023-02-20"},{"lineNumber":440,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":441,"author":{"gitId":"francisyzy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-20"},{"lineNumber":442,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":443,"author":{"gitId":"daitenshionyan"},"content":"#### UC-APT-004 - Delete appointment","lastModifiedDate":"2023-03-07"},{"lineNumber":444,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":445,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":446,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":447,"author":{"gitId":"francisyzy"},"content":"1. User requests to list appointments.","lastModifiedDate":"2023-02-20"},{"lineNumber":448,"author":{"gitId":"francisyzy"},"content":"2. VMS shows a list of appointments.","lastModifiedDate":"2023-02-20"},{"lineNumber":449,"author":{"gitId":"francisyzy"},"content":"3. User requests to delete a specific appointment in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":450,"author":{"gitId":"francisyzy"},"content":"4. VMS deletes the appointment.","lastModifiedDate":"2023-02-20"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-03-07"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"francisyzy"},"content":"* 3a. The given ID is invalid.","lastModifiedDate":"2023-02-20"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"francisyzy"},"content":"  * 3a1. VMS shows an error message.","lastModifiedDate":"2023-02-20"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"francisyzy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-20"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"daitenshionyan"},"content":"#### UC-VAC-001 - Add vaccination type","lastModifiedDate":"2023-03-07"},{"lineNumber":467,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":468,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":469,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":470,"author":{"gitId":"daitenshionyan"},"content":"1. User enters command to add a vaccination type.","lastModifiedDate":"2023-03-07"},{"lineNumber":471,"author":{"gitId":"daitenshionyan"},"content":"2. VMS adds the vaccination type.\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":472,"author":{"gitId":"daitenshionyan"},"content":"    Use case ends.","lastModifiedDate":"2023-03-07"},{"lineNumber":473,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":474,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-03-07"},{"lineNumber":475,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":476,"author":{"gitId":"daitenshionyan"},"content":"* 2a. Command contains syntax errors","lastModifiedDate":"2023-03-07"},{"lineNumber":477,"author":{"gitId":"daitenshionyan"},"content":"  * 2a1. VMS shows an error message.\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":478,"author":{"gitId":"daitenshionyan"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2023-03-07"},{"lineNumber":479,"author":{"gitId":"daitenshionyan"},"content":"* 2b. Vaccination type already exists.","lastModifiedDate":"2023-03-07"},{"lineNumber":480,"author":{"gitId":"daitenshionyan"},"content":"  * 2b1. VMS shows an error message.\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":481,"author":{"gitId":"daitenshionyan"},"content":"      Use case resumes from step 1.","lastModifiedDate":"2023-03-07"},{"lineNumber":482,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":483,"author":{"gitId":"daitenshionyan"},"content":"#### UC-VAC-002 - List vaccination types","lastModifiedDate":"2023-03-07"},{"lineNumber":484,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":485,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":486,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":487,"author":{"gitId":"daitenshionyan"},"content":"1. User enters the command to list vaccination types.","lastModifiedDate":"2023-03-07"},{"lineNumber":488,"author":{"gitId":"daitenshionyan"},"content":"2. VMS lists all available vaccination types.","lastModifiedDate":"2023-03-07"},{"lineNumber":489,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":490,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-03-07"},{"lineNumber":491,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":492,"author":{"gitId":"daitenshionyan"},"content":"* 2a. Command contains syntax errors.","lastModifiedDate":"2023-03-07"},{"lineNumber":493,"author":{"gitId":"daitenshionyan"},"content":"  * 2a1. VMS shows an error message.\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":494,"author":{"gitId":"daitenshionyan"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2023-03-07"},{"lineNumber":495,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":496,"author":{"gitId":"daitenshionyan"},"content":"#### UC-VAC-003 - Update vaccination type","lastModifiedDate":"2023-03-07"},{"lineNumber":497,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":498,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":499,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":500,"author":{"gitId":"daitenshionyan"},"content":"1. User enters command to update a vaccination type.","lastModifiedDate":"2023-03-07"},{"lineNumber":501,"author":{"gitId":"daitenshionyan"},"content":"2. VMS updates the vaccination type.","lastModifiedDate":"2023-03-07"},{"lineNumber":502,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":503,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-03-07"},{"lineNumber":504,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":505,"author":{"gitId":"daitenshionyan"},"content":"* 2a. Command contains syntax errors.","lastModifiedDate":"2023-03-07"},{"lineNumber":506,"author":{"gitId":"daitenshionyan"},"content":"  * 2a1. VMS shows an error message.\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":507,"author":{"gitId":"daitenshionyan"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2023-03-07"},{"lineNumber":508,"author":{"gitId":"daitenshionyan"},"content":"* 2b. Vaccination type does not exist.","lastModifiedDate":"2023-03-07"},{"lineNumber":509,"author":{"gitId":"daitenshionyan"},"content":"  * 2a1. VMS shows an error message.\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":510,"author":{"gitId":"daitenshionyan"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2023-03-07"},{"lineNumber":511,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":512,"author":{"gitId":"daitenshionyan"},"content":"#### UC-VAC-004 - Delete vaccination type","lastModifiedDate":"2023-03-07"},{"lineNumber":513,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":514,"author":{"gitId":"daitenshionyan"},"content":"##### MSS","lastModifiedDate":"2023-03-07"},{"lineNumber":515,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":516,"author":{"gitId":"daitenshionyan"},"content":"1. User enters command to delete a vaccination type.","lastModifiedDate":"2023-03-07"},{"lineNumber":517,"author":{"gitId":"daitenshionyan"},"content":"2. VMS deletes the vaccination type.","lastModifiedDate":"2023-03-07"},{"lineNumber":518,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":519,"author":{"gitId":"daitenshionyan"},"content":"##### Extensions","lastModifiedDate":"2023-03-07"},{"lineNumber":520,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":521,"author":{"gitId":"daitenshionyan"},"content":"* 2a. Command contains syntax errors.","lastModifiedDate":"2023-03-07"},{"lineNumber":522,"author":{"gitId":"daitenshionyan"},"content":"  * 2a1. VMS shows an error message.\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":523,"author":{"gitId":"daitenshionyan"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2023-03-07"},{"lineNumber":524,"author":{"gitId":"daitenshionyan"},"content":"* 2b. Vaccination type does not exist.","lastModifiedDate":"2023-03-07"},{"lineNumber":525,"author":{"gitId":"daitenshionyan"},"content":"  * 2a1. VMS shows an error message.\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":526,"author":{"gitId":"daitenshionyan"},"content":"    Use case resumes from step 1.","lastModifiedDate":"2023-03-07"},{"lineNumber":527,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":528,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"francisyzy"},"content":"2. Should be able to hold up to 1000 patients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-02-21"},{"lineNumber":532,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"daitenshionyan"},"content":"4. Should auto save to prevent data loss if application crashes.","lastModifiedDate":"2023-03-07"},{"lineNumber":534,"author":{"gitId":"daitenshionyan"},"content":"5. All functionalities should be accessible through CLI.","lastModifiedDate":"2023-03-07"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"francisyzy"},"content":"* **VMS**: Vaccination Management System","lastModifiedDate":"2023-02-20"},{"lineNumber":539,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"francisyzy"},"content":"* **Private patient detail**: A patient detail that is not meant to be shared with others","lastModifiedDate":"2023-02-20"},{"lineNumber":541,"author":{"gitId":"francisyzy"},"content":"* **Feature**: Group of feature commands","lastModifiedDate":"2023-02-20"},{"lineNumber":542,"author":{"gitId":"francisyzy"},"content":"* **Vaccination**: The Covid-19 vaccine","lastModifiedDate":"2023-02-20"},{"lineNumber":543,"author":{"gitId":"francisyzy"},"content":"* **Patient**: Someone receiving the vaccine","lastModifiedDate":"2023-02-20"},{"lineNumber":544,"author":{"gitId":"francisyzy"},"content":"* **Receptionist**: The user of VMS","lastModifiedDate":"2023-02-20"},{"lineNumber":545,"author":{"gitId":"francisyzy"},"content":"* **Command parameter**: Arguments that affect how the command work","lastModifiedDate":"2023-02-20"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"francisyzy"},"content":"### Deleting a patient","lastModifiedDate":"2023-03-03"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"francisyzy"},"content":"1. Deleting a patient while all patients are being shown","lastModifiedDate":"2023-03-03"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"francisyzy"},"content":"   1. Prerequisites: List all patients using the `list` command. Multiple patients in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"francisyzy"},"content":"      Expected: No patient is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-03-03"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"daitenshionyan":117,"-":323,"francisyzy":158}},{"path":"docs/Documentation.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Documentation guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"**Setting up and maintaining the project website:**","lastModifiedDate":"2020-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* We use [**Jekyll**](https://jekyllrb.com/) to manage documentation.","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* The `docs/` folder is used for documentation.","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* To learn how set it up and maintain the project website, follow the guide [_[se-edu/guides] **Using Jekyll for project documentation**_](https://se-education.org/guides/tutorials/jekyll.html).","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* Note these points when adapting the documentation to a different project/product:","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * The \u0027Site-wide settings\u0027 section of the page linked above has information on how to update site-wide elements such as the top navigation bar.","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"  * :bulb: In addition to updating content files, you might have to update the config files `docs\\_config.yml` and `docs\\_sass\\minima\\_base.scss` (which contains a reference to `vms` that comes into play when converting documentation pages to PDF format).","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are using Intellij for editing documentation files, you can consider enabling \u0027soft wrapping\u0027 for `*.md` files, as explained in [_[se-edu/guides] **Intellij IDEA: Useful settings**_](https://se-education.org/guides/tutorials/intellijUsefulSettings.html#enabling-soft-wrapping)","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Style guidance:**","lastModifiedDate":"2020-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Follow the [**_Google developer documentation style guide_**](https://developers.google.com/style).","lastModifiedDate":"2020-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Also relevant is the [_[se-edu/guides] **Markdown coding standard**_](https://se-education.org/guides/conventions/markdown.html)","lastModifiedDate":"2020-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**Diagrams:**","lastModifiedDate":"2020-06-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* See the [_[se-edu/guides] **Using PlantUML**_](https://se-education.org/guides/tutorials/plantUml.html)","lastModifiedDate":"2020-06-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**Converting a document to the PDF format:**","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* See the guide [_[se-edu/guides] **Saving web documents as PDF files**_](https://se-education.org/guides/tutorials/savingPdf.html)","lastModifiedDate":"2020-06-07"}],"authorContributionMap":{"-":28,"francisyzy":1}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"   1. Run the `seedu.vms.Main` and try a few commands.","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [VMS’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"daitenshionyan":1,"-":53,"francisyzy":1}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"   e.g. `seedu.vms.commons.StringUtilTest`","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"   e.g. `seedu.vms.storage.StorageManagerTest`","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"   e.g. `seedu.vms.logic.LogicManagerTest`","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"daitenshionyan":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"Vaccination Management System (VMS) is a **desktop app for managing vaccination appointments, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, VMS can get your appointments sorted out with great efficiency.","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"1. Download the latest `vms.jar` from [here](https://github.com/AY2223S2-CS2103-F11-3/tp/releases).","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your VMS.","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar vms.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"\u003c!--    * `list` : Lists all contacts.","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"   * `exit` : Exits the app. --\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"## Command syntax","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"**:information_source: Command syntaxes presentation**\u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"* Words enclosed in braces, `{` and `}`, represents the name of the parameter to be supplied. It may be accompanied by a type.","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"* Words enclosed in triangle brackets `\u003c` and `\u003e` represent a type.","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"* Items in square brackets, `[` and `]`, are optional.","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"* Items with `?` after them can be used zero or one time.","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"* Items with `...` after them can be used zero or more times.","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"Example:","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"1. `{component \u003ccomponent\u003e}` would mean a `component` parameter of type `\u003ccomponent\u003e` will have to be supplied","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"2. `[{component \u003ccomponent\u003e}]` would meant the same as the first but is optional.","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"3. `{component \u003ccomponent\u003e}?` and `{component \u003ccomponent\u003e}...` would mean the same as the above but one or more times and zero or more times respectively.","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"### General command syntax","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"{component \u003ccomponent\u003e} {command word} [{preamble}] [--{flag name} {argument} [::{argument}]]...","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"* `{component}` may be omitted if it is `basic`.","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"* `--` is used to delimit flags.","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"* `::` is used to delimit parts of arguments of the same flag.","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"* Leading and trailing white spaces of arguments will be stripped off.","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"### Types","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"#### `\u003ccomponent\u003e`","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"The list of available components are given in the [components section](#components).","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"#### `\u003cstring\u003e`","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"Strings can take on any character sequence that do not contain `--` or new line characters.","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"#### `\u003cgroupName\u003e`","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"A character sequence consisting of only alphanumeric characters, spaces and brackets excluding `\u003c` and `\u003e`.","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"#### `\u003cinteger\u003e`","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"An integer value between `-2147483648` and `2147483647`.","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"#### `\u003cage\u003e`","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"An extension of `\u003cinteger\u003e`, allowing only positive values (ie. `x \u003e\u003d 0`). Age also has a max value of `200` which is allowed to be exceeded, provided it conforms to `\u003cinteger\u003e` restrictions as well. All values of age that exceed the max value will be evaluated to be equal.","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"#### `\u003cdate\u003e`","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"The supported date formats are:","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"* `yyyy-mm-ddThh:mm`\u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"    eg. 2023-05-03T04:45","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"* `yyyy-m-d hhmm` - single and double digit day and months are supported.\u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"  eg. 2023-5-3 0455","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"  * The following formats are also acceptable:","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"  * `yyyy-mm-d hhmm`","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"  * `yyyy-mm-dd hhmm`","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"  * `yyyy-m-dd hhmm`","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"#### `\u003cphone-number\u003e`","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"Only 8 digit Singapore numbers are allowed.","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"#### `\u003crequirement\u003e`","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"`\u003crequirement\u003e` arguments require 2 and only 2 parts. The general syntax is as follows:","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"{reqType \u003creqType\u003e} :: {reqSet \u003clist \u003cgroupName\u003e\u003e}","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"* The position of `reqType` and `reqSet` arguments are not substitutable.","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"* `reqSet` cannot be an empty list","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"* Duplicates withing `reqSet` are allowed but are omitted.","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"#### `\u003creqType\u003e`","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"Only the following values are allowed:","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"* `ALL` - all groups withing the `grpSet` of the requirement are required for a `true` evaluation.","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"* `ANY` - at least one occurrence of a group within the `grpSet` of the requirement is required for a `true` evaluation.","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"* `NONE` - zero occurrence of any groups in the `grpSet` of the requirement is required for a `true` evaluation.","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"## Components","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"Below shows a list of components, their supported command words and their usage.","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"### `basic` - Application\u0027s basic features","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"#### `exit` - Exit the program","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"francisyzy"},"content":"exit","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"#### `help` - Display help page","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"help","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"### `patient` - Patient functionalities","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"#### `add` - Add a patient","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-02-20"},{"lineNumber":155,"author":{"gitId":"slackernoob"},"content":"patient add --name \u003cstring\u003e --phone \u003cphone-number\u003e --dob \u003cdate\u003e --bloodtype \u003cstring\u003e --allergy \u003clist\u003cstring\u003e\u003e --vaccine \u003clist\u003cstring\u003e\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":156,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"francisyzy"},"content":"Example:","lastModifiedDate":"2023-02-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"slackernoob"},"content":"* `patient add --n John Doe --p 98765432 --d 2001-03-19 --b B+ --a catfur --a pollen --v covax`","lastModifiedDate":"2023-03-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"#### `delete` - Delete a patient","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-02-20"},{"lineNumber":165,"author":{"gitId":"francisyzy"},"content":"patient delete --index \u003cinteger\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":166,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"francisyzy"},"content":"Example:","lastModifiedDate":"2023-02-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"francisyzy"},"content":"* `patent delete --index 5`","lastModifiedDate":"2023-02-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"#### `find` - Locate a patient","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"francisyzy"},"content":"Finds patients whose names contain any of the given keywords.","lastModifiedDate":"2023-02-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-02-20"},{"lineNumber":177,"author":{"gitId":"francisyzy"},"content":"patient find --name \u003cstring\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":178,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"francisyzy"},"content":"Example:","lastModifiedDate":"2023-02-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"francisyzy"},"content":"* `patient find --name john`","lastModifiedDate":"2023-02-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"#### `list` - List all patients","lastModifiedDate":"2023-03-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-02-20"},{"lineNumber":187,"author":{"gitId":"francisyzy"},"content":"patient list","lastModifiedDate":"2023-02-20"},{"lineNumber":188,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":"### `appointment` - Appointment functionalities","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"#### `add` - Add an appointment","lastModifiedDate":"2023-03-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":194,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-02-20"},{"lineNumber":195,"author":{"gitId":"francisyzy"},"content":"appointment add --patient \u003cinteger\u003e --start \u003cdate\u003e --end \u003cdate\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":196,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":198,"author":{"gitId":"francisyzy"},"content":"Example:","lastModifiedDate":"2023-02-20"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":200,"author":{"gitId":"francisyzy"},"content":"* `appointment add --patient 5 --start 2023-3-5 0700 --end 2023-3-5 0800`","lastModifiedDate":"2023-02-20"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"daitenshionyan"},"content":"#### `delete` - Delete an appointment","lastModifiedDate":"2023-03-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-02-20"},{"lineNumber":205,"author":{"gitId":"francisyzy"},"content":"appointment delete --index \u003cinteger\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":206,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"francisyzy"},"content":"Example:","lastModifiedDate":"2023-02-20"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"francisyzy"},"content":"* `appointment delete --index 5`","lastModifiedDate":"2023-02-20"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"daitenshionyan"},"content":"#### `list` - List all appointments","lastModifiedDate":"2023-03-09"},{"lineNumber":213,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":214,"author":{"gitId":"francisyzy"},"content":"```text","lastModifiedDate":"2023-02-20"},{"lineNumber":215,"author":{"gitId":"francisyzy"},"content":"appointment list","lastModifiedDate":"2023-02-20"},{"lineNumber":216,"author":{"gitId":"francisyzy"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":217,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":218,"author":{"gitId":"daitenshionyan"},"content":"### `vaccination` - Vaccination functionalities","lastModifiedDate":"2023-03-09"},{"lineNumber":219,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":220,"author":{"gitId":"daitenshionyan"},"content":"#### `add` - Add a vaccination type","lastModifiedDate":"2023-03-09"},{"lineNumber":221,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":222,"author":{"gitId":"daitenshionyan"},"content":"```text","lastModifiedDate":"2023-03-09"},{"lineNumber":223,"author":{"gitId":"daitenshionyan"},"content":"vaccination add {name \u003cgroupName\u003e} [{groups \u003clist \u003cgroupName\u003e\u003e}] [--lal {minAge \u003cage\u003e}] [--ual {maxAge \u003cage\u003e}] [--s {spacing \u003cinteger\u003e}] [--a {allergyReq {requirement}}]... [--h {historyReq \u003crequirement\u003e}]...","lastModifiedDate":"2023-03-09"},{"lineNumber":224,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-03-09"},{"lineNumber":225,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":226,"author":{"gitId":"daitenshionyan"},"content":"* **name** - the name of the vaccination type to create.","lastModifiedDate":"2023-03-09"},{"lineNumber":227,"author":{"gitId":"daitenshionyan"},"content":"* **groups** - the list of groups the vaccination type classifies under.","lastModifiedDate":"2023-03-09"},{"lineNumber":228,"author":{"gitId":"daitenshionyan"},"content":"* **minAge** - the minimum required age (inclusive) to take the vaccine.","lastModifiedDate":"2023-03-09"},{"lineNumber":229,"author":{"gitId":"daitenshionyan"},"content":"* **maxAge** - the maximum require age (inclusive) to take the vaccine.","lastModifiedDate":"2023-03-09"},{"lineNumber":230,"author":{"gitId":"daitenshionyan"},"content":"* **spacing** - the minimum time in days from the last vaccination taken to take this vaccine.","lastModifiedDate":"2023-03-09"},{"lineNumber":231,"author":{"gitId":"daitenshionyan"},"content":"* **allergyReq** - the allergy requirement to take the vaccine.","lastModifiedDate":"2023-03-09"},{"lineNumber":232,"author":{"gitId":"daitenshionyan"},"content":"* **historyReq** - the vaccination group history requirement to take the vaccine.","lastModifiedDate":"2023-03-09"},{"lineNumber":233,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":234,"author":{"gitId":"daitenshionyan"},"content":"Example:","lastModifiedDate":"2023-03-09"},{"lineNumber":235,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":236,"author":{"gitId":"daitenshionyan"},"content":"* `vaccination add Pfizer (Dose 1) --groups DOSE 1, PFIZER, VACCINATION --lal 5 --s 56 --a NONE::allergy1, allergy2, allergy3 --h NONE::DOES 1`","lastModifiedDate":"2023-03-09"},{"lineNumber":237,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":238,"author":{"gitId":"francisyzy"},"content":"## Advance","lastModifiedDate":"2023-02-20"},{"lineNumber":239,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":240,"author":{"gitId":"francisyzy"},"content":"VMS data are saved as a JSON file. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-02-20"},{"lineNumber":241,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":242,"author":{"gitId":"francisyzy"},"content":"Locations:","lastModifiedDate":"2023-02-20"},{"lineNumber":243,"author":{"gitId":"francisyzy"},"content":"1. `[JAR file location]/data/patientlist.json`","lastModifiedDate":"2023-02-20"},{"lineNumber":244,"author":{"gitId":"francisyzy"},"content":"2. `[JAR file location]/data/appointmentlist.json`","lastModifiedDate":"2023-02-20"},{"lineNumber":245,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":246,"author":{"gitId":"francisyzy"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-02-20"},{"lineNumber":247,"author":{"gitId":"francisyzy"},"content":"If your changes to the data file makes its format invalid, VMS will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-02-20"},{"lineNumber":248,"author":{"gitId":"francisyzy"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":250,"author":{"gitId":"daitenshionyan"},"content":"### Vaccination type JSON","lastModifiedDate":"2023-03-09"},{"lineNumber":251,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":252,"author":{"gitId":"daitenshionyan"},"content":"Vaccination type JSON files will have the following format:","lastModifiedDate":"2023-03-09"},{"lineNumber":253,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":254,"author":{"gitId":"daitenshionyan"},"content":"##### Overall file","lastModifiedDate":"2023-03-09"},{"lineNumber":255,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":256,"author":{"gitId":"daitenshionyan"},"content":"| Variable | Is needed | Type                      | Default value |","lastModifiedDate":"2023-03-09"},{"lineNumber":257,"author":{"gitId":"daitenshionyan"},"content":"| -------- | --------- | ------------------------- | ------------- |","lastModifiedDate":"2023-03-09"},{"lineNumber":258,"author":{"gitId":"daitenshionyan"},"content":"| `types`  | YES       | List of vaccination types | -             |","lastModifiedDate":"2023-03-09"},{"lineNumber":259,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":260,"author":{"gitId":"daitenshionyan"},"content":"##### Vaccination type","lastModifiedDate":"2023-03-09"},{"lineNumber":261,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":262,"author":{"gitId":"daitenshionyan"},"content":"| Variable      | Is needed | Type                    | Default value |","lastModifiedDate":"2023-03-09"},{"lineNumber":263,"author":{"gitId":"daitenshionyan"},"content":"| ------------- | --------- | ----------------------- | ------------- |","lastModifiedDate":"2023-03-09"},{"lineNumber":264,"author":{"gitId":"daitenshionyan"},"content":"| `name`        | YES       | `\u003cgroupName\u003e`           | -             |","lastModifiedDate":"2023-03-09"},{"lineNumber":265,"author":{"gitId":"daitenshionyan"},"content":"| `groups`      | NO        | list of `\u003cgroupName\u003e`   | `[]`          |","lastModifiedDate":"2023-03-09"},{"lineNumber":266,"author":{"gitId":"daitenshionyan"},"content":"| `minAge`      | NO        | `\u003cage\u003e`                 | `0`           |","lastModifiedDate":"2023-03-09"},{"lineNumber":267,"author":{"gitId":"daitenshionyan"},"content":"| `maxAge`      | NO        | `\u003cage\u003e`                 | `200`         |","lastModifiedDate":"2023-03-09"},{"lineNumber":268,"author":{"gitId":"daitenshionyan"},"content":"| `minSpacing`  | NO        | `integer`               | `2147483647`  |","lastModifiedDate":"2023-03-09"},{"lineNumber":269,"author":{"gitId":"daitenshionyan"},"content":"| `historyReqs` | NO        | list of `\u003crequirement\u003e` | `[]`          |","lastModifiedDate":"2023-03-09"},{"lineNumber":270,"author":{"gitId":"daitenshionyan"},"content":"| `allergyReqs` | NO        | list of `\u003crequirement\u003e` | `[]`          |","lastModifiedDate":"2023-03-09"},{"lineNumber":271,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":272,"author":{"gitId":"daitenshionyan"},"content":"##### Requirement","lastModifiedDate":"2023-03-09"},{"lineNumber":273,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":274,"author":{"gitId":"daitenshionyan"},"content":"| Variable  | Is needed             | Type                  | Default value |","lastModifiedDate":"2023-03-09"},{"lineNumber":275,"author":{"gitId":"daitenshionyan"},"content":"| --------- | --------------------- | --------------------- | ------------- |","lastModifiedDate":"2023-03-09"},{"lineNumber":276,"author":{"gitId":"daitenshionyan"},"content":"| `reqType` | YES                   | `\u003creqType\u003e`           | -             |","lastModifiedDate":"2023-03-09"},{"lineNumber":277,"author":{"gitId":"daitenshionyan"},"content":"| `reqSet`  | YES (cannot be empty) | list of `\u003cgroupName\u003e` | -             |","lastModifiedDate":"2023-03-09"},{"lineNumber":278,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":279,"author":{"gitId":"daitenshionyan"},"content":"##### Example","lastModifiedDate":"2023-03-09"},{"lineNumber":280,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":281,"author":{"gitId":"daitenshionyan"},"content":"```json","lastModifiedDate":"2023-03-09"},{"lineNumber":282,"author":{"gitId":"daitenshionyan"},"content":"{","lastModifiedDate":"2023-03-09"},{"lineNumber":283,"author":{"gitId":"daitenshionyan"},"content":"  \"types\": [","lastModifiedDate":"2023-03-09"},{"lineNumber":284,"author":{"gitId":"daitenshionyan"},"content":"    {","lastModifiedDate":"2023-03-09"},{"lineNumber":285,"author":{"gitId":"daitenshionyan"},"content":"      \"name\": \"Dose 1 (Pfizer)\",","lastModifiedDate":"2023-03-09"},{"lineNumber":286,"author":{"gitId":"daitenshionyan"},"content":"      \"groups\": [\"DOSE 1\", \"Pfizer\", \"Vaccination\"],","lastModifiedDate":"2023-03-09"},{"lineNumber":287,"author":{"gitId":"daitenshionyan"},"content":"      \"minAge\": 5,","lastModifiedDate":"2023-03-09"},{"lineNumber":288,"author":{"gitId":"daitenshionyan"},"content":"      \"minSpacing\": 56,","lastModifiedDate":"2023-03-09"},{"lineNumber":289,"author":{"gitId":"daitenshionyan"},"content":"      \"historyReqs\": [","lastModifiedDate":"2023-03-09"},{"lineNumber":290,"author":{"gitId":"daitenshionyan"},"content":"        {","lastModifiedDate":"2023-03-09"},{"lineNumber":291,"author":{"gitId":"daitenshionyan"},"content":"          \"reqType\": \"NONE\",","lastModifiedDate":"2023-03-09"},{"lineNumber":292,"author":{"gitId":"daitenshionyan"},"content":"          \"reqSet\": [\"DOSE 1\"]","lastModifiedDate":"2023-03-09"},{"lineNumber":293,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":294,"author":{"gitId":"daitenshionyan"},"content":"      ],","lastModifiedDate":"2023-03-09"},{"lineNumber":295,"author":{"gitId":"daitenshionyan"},"content":"      \"allergyReqs\": [","lastModifiedDate":"2023-03-09"},{"lineNumber":296,"author":{"gitId":"daitenshionyan"},"content":"        {","lastModifiedDate":"2023-03-09"},{"lineNumber":297,"author":{"gitId":"daitenshionyan"},"content":"          \"reqType\": \"NONE\",","lastModifiedDate":"2023-03-09"},{"lineNumber":298,"author":{"gitId":"daitenshionyan"},"content":"          \"reqSet\": [","lastModifiedDate":"2023-03-09"},{"lineNumber":299,"author":{"gitId":"daitenshionyan"},"content":"            \"ALC-0315\",","lastModifiedDate":"2023-03-09"},{"lineNumber":300,"author":{"gitId":"daitenshionyan"},"content":"            \"ALC-0159\",","lastModifiedDate":"2023-03-09"},{"lineNumber":301,"author":{"gitId":"daitenshionyan"},"content":"            \"DSPC\",","lastModifiedDate":"2023-03-09"},{"lineNumber":302,"author":{"gitId":"daitenshionyan"},"content":"            \"Cholesterol\",","lastModifiedDate":"2023-03-09"},{"lineNumber":303,"author":{"gitId":"daitenshionyan"},"content":"            \"Sucrose\",","lastModifiedDate":"2023-03-09"},{"lineNumber":304,"author":{"gitId":"daitenshionyan"},"content":"            \"Phosphate\",","lastModifiedDate":"2023-03-09"},{"lineNumber":305,"author":{"gitId":"daitenshionyan"},"content":"            \"Tromethamine\",","lastModifiedDate":"2023-03-09"},{"lineNumber":306,"author":{"gitId":"daitenshionyan"},"content":"            \"Tromethamine hydrochloride\"","lastModifiedDate":"2023-03-09"},{"lineNumber":307,"author":{"gitId":"daitenshionyan"},"content":"          ]","lastModifiedDate":"2023-03-09"},{"lineNumber":308,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":309,"author":{"gitId":"daitenshionyan"},"content":"      ]","lastModifiedDate":"2023-03-09"},{"lineNumber":310,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":311,"author":{"gitId":"daitenshionyan"},"content":"  ]","lastModifiedDate":"2023-03-09"},{"lineNumber":312,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":313,"author":{"gitId":"daitenshionyan"},"content":"```","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"daitenshionyan":141,"slackernoob":2,"-":102,"francisyzy":68}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"francisyzy"},"content":"    content: \"VMS\";","lastModifiedDate":"2023-02-21"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"francisyzy":1}},{"path":"docs/_sass/minima/_layout.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * Site header","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" .site-header {","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  border-top: 5px solid $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  border-bottom: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  min-height: $spacing-unit * 1.865;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  line-height: $base-line-height * $base-font-size * 2.25;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  // Positioning context for the mobile navigation icon","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  position: relative;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":".site-title {","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  font-weight: 300;","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  float: left;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  @include media-query($on-palm) {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    padding-right: 45px;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u0026,","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    color: $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":".site-nav {","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  position: absolute;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  top: 9px;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  border-radius: 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  text-align: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  .nav-trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  .menu-icon {","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    width: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    height: 26px;","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    line-height: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    padding-top: 10px;","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003e svg path {","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      fill: $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    width: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    height: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    z-index: 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    cursor: pointer;","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  input ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  input:checked ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    padding-bottom: 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  .page-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    line-height: $base-line-height;","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    padding: 5px 10px;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    // Gaps between nav items, but not on the last one","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    \u0026:not(:last-child) {","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      margin-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    margin-left: 20px;","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-medium) {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    position: static;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    border: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    background-color: inherit;","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    .menu-icon {","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    input ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    .page-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      display: inline;","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      \u0026:not(:last-child) {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        margin-right: 20px;","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":" * Page content","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":".page-content {","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  padding: $spacing-unit 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  flex: 1 0 auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":".page-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  @include relative-font-size(2);","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":".post-list-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.75);","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":".post-list {","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  margin-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  list-style: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  \u003e li {","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":".post-meta {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":".post-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.5);","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Posts","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":".post-header {","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":".post-title,","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":".post-content h1 {","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  @include relative-font-size(2.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  line-height: 1.15;","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @include relative-font-size(2.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":".post-content {","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"  h1, h2, h3, h4 { margin-bottom: $spacing-unit }","lastModifiedDate":"2023-03-07"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"  h5, h6 {margin-bottom: 0}","lastModifiedDate":"2023-03-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  h1, h2, h3 { margin-top: $spacing-unit * 2 }","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  h4, h5, h6 { margin-top: $spacing-unit }","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  h2 {","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.75);","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"      @include relative-font-size(2);","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  h3 {","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.375);","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"      @include relative-font-size(1.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  h4 {","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.25);","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"daitenshionyan"},"content":"  h5, h6 {","lastModifiedDate":"2023-03-07"},{"lineNumber":204,"author":{"gitId":"daitenshionyan"},"content":"    @include relative-font-size(1.0);","lastModifiedDate":"2023-03-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":".social-media-list {","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"  margin: 0 auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  li {","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    float: left;","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    margin: 5px 10px 5px 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u0026:last-of-type { margin-right: 0 }","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    a {","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"      \u0026:hover { border-color: darken($brand-color-light, 10%) }","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":" * Pagination navbar","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":".pagination {","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  @extend .social-media-list;","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  li {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    a, div {","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      min-width: 41px;","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"      text-align: center;","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"      box-sizing: border-box;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    div {","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      border: 1px solid transparent;","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      \u0026.pager-edge {","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        color: darken($brand-color-light, 5%);","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        border: 1px dashed;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":" * Grid helpers","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"@media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  .one-half {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    width: calc(50% - (#{$spacing-unit} / 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"daitenshionyan":4,"-":257}},{"path":"docs/_sass/minima/custom-styles.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"// Placeholder to allow defining custom styles that override everything else.","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"// (Use `_sass/minima/custom-variables.scss` to override variable defaults)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"h2, h3, h4 {","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  color: #e46c0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"h5, h6 {","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"  color: black;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"h5 {","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"  font-weight: bold;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"h6 {","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"  text-decoration: underline;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"// Bootstrap style alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":".alert {","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  position: relative;","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  padding: $alert-padding-y $alert-padding-x;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  margin-bottom: $alert-margin-bottom;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  border: $alert-border-width solid transparent;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  border-radius : $alert-border-radius;","lastModifiedDate":"2022-12-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"// Headings for larger alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":".alert-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  // Specified to prevent conflicts of changing $headings-color","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  color: inherit;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"// Provide class for links that match alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":".alert-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  font-weight: $alert-link-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"// Generate contextual modifier classes for colorizing the alert.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"@each $color, $value in $theme-colors {","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  .alert-#{$color} {","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @include alert-variant(color-level($value, $alert-bg-level), color-level($value, $alert-border-level), color-level($value, $alert-color-level));","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"daitenshionyan":13,"-":33}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePatient(p)","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveVms(patientManager)","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":36,"francisyzy":2}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"Vms *-right-\u003e \"1\" UniquePatientList","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"Vms *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"UniqueTagList -[hidden]down- UniquePatientList","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"UniqueTagList -[hidden]down- UniquePatientList","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"UniquePatientList -right-\u003e Patient","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"Patient -up-\u003e \"*\" Tag","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"Patient *--\u003e Name","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"Patient *--\u003e Phone","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"Patient *--\u003e Email","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"Patient *--\u003e Address","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":11,"francisyzy":10}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"if () then ([command commits Vms])","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    :Save Vms to","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    patientManagerStateList;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":12,"francisyzy":3}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"participant \":VmsParser\" as VmsParser LOGIC_COLOR","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"LogicManager -\u003e VmsParser : parseCommand(\"delete 1\")","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"activate VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"VmsParser -\u003e DeleteCommandParser","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"DeleteCommandParser --\u003e VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"VmsParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"DeleteCommandParser --\u003e VmsParser : d","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"DeleteCommandParser -[hidden]-\u003e VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"VmsParser --\u003e LogicManager : d","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"deactivate VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"DeleteCommand -\u003e Model : deletePatient(1)","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":58,"francisyzy":11}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"Class VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"LogicManager -right-\u003e\"1\" VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"VmsParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"francisyzy":3}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyVms\" as ReadOnlyVms","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"Class Vms","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"Class UniquePatientList","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"Class Patient","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"Vms .up.|\u003e ReadOnlyVms","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"Model .left.\u003e ReadOnlyVms","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"ModelManager -left-\u003e \"1\" Vms","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"Vms *--\u003e \"1\" UniquePatientList","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"UniquePatientList --\u003e \"~* all\" Patient","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"Patient *--\u003e Name","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"Patient *--\u003e Phone","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"Patient *--\u003e Email","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"Patient *--\u003e Address","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"Patient *--\u003e \"*\" Tag","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"ModelManager --\u003e\"~* filtered\" Patient","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":35,"francisyzy":15}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"Class VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"HiddenOutside ..\u003e VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"VmsParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"VmsParser ..\u003e Command : returns \u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"-":34,"francisyzy":4}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"package \"Vms Storage\" #F4F6F6{","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nVmsStorage\" as VmsStorage","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"Class JsonVmsStorage","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"Class JsonSerializableVms","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"Class JsonAdaptedPatient","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"StorageManager -up-\u003e \"1\" VmsStorage","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"Storage -right-|\u003e VmsStorage","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"JsonVmsStorage .up.|\u003e VmsStorage","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"JsonVmsStorage ..\u003e JsonSerializableVms","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"JsonSerializableVms --\u003e \"*\" JsonAdaptedPatient","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"JsonAdaptedPatient --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":32,"francisyzy":11}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"Class PatientListPanel","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"Class PatientCard","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"MainWindow *-down-\u003e \"1\" PatientListPanel","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"PatientListPanel -down-\u003e \"*\" PatientCard","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"PatientListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"PatientCard --|\u003e UiPart","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"PatientCard ..\u003e Model","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"PatientListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":52,"francisyzy":8}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    class State1 as \"__ab0:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    class State2 as \"__ab1:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    class State3 as \"__ab2:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"francisyzy":3}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    class State1 as \"__ab0:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    class State2 as \"__ab1:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    class State3 as \"__ab2:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":19,"francisyzy":3}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    class State1 as \"__ab0:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    class State2 as \"__ab1:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    class State3 as \"__ab2:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"francisyzy":3}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    class State1 as \"__ab0:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    class State2 as \"__ab1:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    class State3 as \"__ab2:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"francisyzy":3}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    class State1 as \"__ab0:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    class State2 as \"__ab1:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    class State3 as \"__ab2:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"francisyzy":3}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    class State1 as \"__ab0:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    class State2 as \"__ab1:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    class State3 as \"__ab3:Vms__\"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":18,"francisyzy":3}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"participant \":VmsParser\" as VmsParser LOGIC_COLOR","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"participant \":VersionedVms\" as VersionedVms MODEL_COLOR","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"LogicManager -\u003e VmsParser : parseCommand(undo)","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"activate VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"VmsParser -\u003e UndoCommand","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"UndoCommand --\u003e VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"VmsParser --\u003e LogicManager : u","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"deactivate VmsParser","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"UndoCommand -\u003e Model : undoVms()","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"Model -\u003e VersionedVms : undo()","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"activate VersionedVms","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"VersionedVms -\u003e VersionedVms :resetData(ReadOnlyVms)","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"VersionedVms --\u003e Model :","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"deactivate VersionedVms","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":39,"francisyzy":14}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"Participant \":VmsParser\" as abp LOGIC_COLOR","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"ecp -\u003e ec ++: index, editPatientDescriptor","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"-":19,"francisyzy":2}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"title: Vaccination Management System","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103-F11-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103-F11-3/tp/actions)","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103-F11-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103-F11-3/tp)","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"\u003c!-- TODO update UI --\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"**Vaccination Management System (VMS) is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"* If you are interested in using VMS, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"* If you are interested about developing VMS, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":13,"francisyzy":7}},{"path":"docs/team/daitenshionyan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"layout: page","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"title: daitenshionyan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"### Project: Vaccination Management System","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"Vms - Level 3 is a desktop patient manager application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"daitenshionyan":11,"francisyzy":1}},{"path":"docs/team/francisyzy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"layout: page","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"title: Francis\u0027 Project Portfolio Page","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"### Project: VaccinationManagementSystem","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"Just the headings are enough. You can write to be added soon as placeholders for content.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"* **New Feature**: To be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"  * What it does: magna netus fames id nisl tempor commodo conubia luctus vivamus convallis sit elit tortor porta quis dui ac est feugiat","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"  * Justification: magna netus fames id nisl tempor commodo conubia luctus vivamus convallis sit elit tortor porta quis dui ac est feugiat","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"  * Highlights: magna netus fames id nisl tempor commodo conubia luctus vivamus convallis sit elit tortor porta quis dui ac est feugiat","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"* **Project management**:","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"  * Managed releases `v1.1` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"  * User Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"* **Community**:","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"* **Tools**:","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"francisyzy":42}},{"path":"docs/team/nuse0726844.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"layout: page","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"title: nusE0726844s\u0027 Project Portfolio Page","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"### Project: VaccinationManagementSystem","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"VaccinationManagementSystem - VMS is a desktop application used for managing vaccine appointments. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"Just the headings are enough. You can write to be added soon as placeholders for content.","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"* **New Feature**: To be added soon","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"  * What it does: magna netus fames id nisl tempor commodo conubia luctus vivamus convallis sit elit tortor porta quis dui ac est feugiat","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"  * Justification: magna netus fames id nisl tempor commodo conubia luctus vivamus convallis sit elit tortor porta quis dui ac est feugiat","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"  * Highlights: magna netus fames id nisl tempor commodo conubia luctus vivamus convallis sit elit tortor porta quis dui ac est feugiat","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"* **Project management**:","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"  * Managed releases `v1.1` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"  * User Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"* **Community**:","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"* **Tools**:","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"nusE0726844":44}},{"path":"docs/team/slackernoob.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"slackernoob"},"content":"title: slackernoob\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"### Project: Vms Level 3","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"Vms - Level 3 is a desktop patient manager application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"slackernoob":1,"-":43,"francisyzy":2}},{"path":"src/main/java/seedu/vms/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.LogsCenter;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.FileUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"daitenshionyan":3,"-":61}},{"path":"src/main/java/seedu/vms/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"daitenshionyan":1,"-":24}},{"path":"src/main/java/seedu/vms/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.concurrent.ScheduledThreadPoolExecutor;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Config;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.LogsCenter;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Version;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.ConfigUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.StringUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.Logic;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.LogicManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ModelManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.util.SampleDataUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.storage.JsonPatientManagerStorage;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.storage.PatientManagerStorage;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.StorageManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.UserPrefsStorage;","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.vaccination.JsonVaxTypeStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.vaccination.VaxTypeStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.ui.UiManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    private static final int FPS \u003d 30;","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    private final ScheduledThreadPoolExecutor executor \u003d new ScheduledThreadPoolExecutor(1);","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing PatientManager ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"        PatientManagerStorage patientManagerStorage \u003d new JsonPatientManagerStorage(","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"                userPrefs.getPatientManagerFilePath());","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeStorage vaxTypeStorage \u003d new JsonVaxTypeStorage();","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        storage \u003d new StorageManager(patientManagerStorage, vaxTypeStorage, userPrefsStorage);","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s patient manager and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"     * The data from the sample patient manager will be used instead if {@code storage}\u0027s patient manager is not found,","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"     * or an empty patient manager will be used instead if errors occur when reading {@code storage}\u0027s patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"        ReadOnlyPatientManager initialData;","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"            initialData \u003d storage.readPatientManager();","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty PatientManager\");","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"            initialData \u003d SampleDataUtil.getSamplePatientManager();","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager vaxTypeManager \u003d new VaxTypeManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"            vaxTypeManager \u003d storage.loadUserVaxTypes();","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IOException ioEx) {","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"            logger.warning(\"Unable to load vaccination types, default will be loaded, problem: \" + ioEx.getMessage());","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"            vaxTypeManager \u003d storage.loadDefaultVaxTypes();","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"        } catch (RuntimeException rte) {","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"            // not suppose to happen but initialize as empty","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"        return new ModelManager(initialData, vaxTypeManager, userPrefs);","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"            initializedConfig \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IOException ioEx) {","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"            logger.warning(\"Default config will be used due to: \" + ioEx.getMessage());","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"            initializedPrefs \u003d storage.readUserPrefs();","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"            logger.warning(\"Default user preference will be used due to: \" + e.getMessage());","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"francisyzy"},"content":"        logger.info(\"Starting PatientManager \" + MainApp.VERSION);","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"        startRefreshLoop();","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"    private void startRefreshLoop() {","lastModifiedDate":"2023-03-12"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"        executor.scheduleAtFixedRate(","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e Platform.runLater(() -\u003e ui.refresh()),","lastModifiedDate":"2023-03-12"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"                0,","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"                1000 / FPS,","lastModifiedDate":"2023-03-12"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"                TimeUnit.MILLISECONDS);","lastModifiedDate":"2023-03-12"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"daitenshionyan"},"content":"        executor.shutdown();","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":59,"-":126,"francisyzy":13}},{"path":"src/main/java/seedu/vms/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":1,"-":62}},{"path":"src/main/java/seedu/vms/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":1,"-":78}},{"path":"src/main/java/seedu/vms/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    private static final String LOG_FILE \u003d \"vms.log\";","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":1,"-":110,"francisyzy":1}},{"path":"src/main/java/seedu/vms/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX \u003d \"The patient index provided is invalid\";","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_PATIENTS_LISTED_OVERVIEW \u003d \"%1$d patients listed!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":1,"-":10,"francisyzy":2}},{"path":"src/main/java/seedu/vms/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":1,"-":115}},{"path":"src/main/java/seedu/vms/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core.index;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"daitenshionyan":1,"-":53}},{"path":"src/main/java/seedu/vms/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.exceptions;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":1,"-":10}},{"path":"src/main/java/seedu/vms/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.exceptions;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":1,"-":20}},{"path":"src/main/java/seedu/vms/commons/exceptions/LimitExceededException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.exceptions;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"/** Signals that a limit has been exceeded. */","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"public class LimitExceededException extends RuntimeException {","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code LimitExceededException} without a message or cause.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"    public LimitExceededException() {}","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code LimitExceededException} without a cause.","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"     * @param message - message of the exception.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public LimitExceededException(String message) {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"        super(message);","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code LimitExceededException} without a cause.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * @param cause - the cause of the exception.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    public LimitExceededException(Throwable cause) {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        super(cause);","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code LimitExceededException}.","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"     * @param message - the message of the exception.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"     * @param cause - the cause of the exception.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    public LimitExceededException(String message, Throwable cause) {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        super(message, cause);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daitenshionyan":41}},{"path":"src/main/java/seedu/vms/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.MainApp;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"daitenshionyan":2,"-":40}},{"path":"src/main/java/seedu/vms/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":1,"-":34}},{"path":"src/main/java/seedu/vms/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Config;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"     * Loads the specified config file.","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     * @param configFilePath - the path of the config file to load.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public static Config readConfig(Path configFilePath) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(configFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"        return JsonUtil.deserializeFromFile(configFilePath, Config.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * Saves the specified config instance to the specified file path.","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * @param config - the config instance to save.","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * @param configFilePath - the path to save the config file to.","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(config);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(configFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        FileUtil.createIfMissing(configFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        JsonUtil.serializeToFile(configFilePath, config);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"daitenshionyan":22,"-":15}},{"path":"src/main/java/seedu/vms/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import java.io.Reader;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private static final int BUFFER_SIZE \u003d 2097152; // 2MB","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FORMAT_RESOURCE_FILE_NOT_FOUND \u003d \"Could not find resource file: %s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the buffered reader of the specified file relative to the","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"     * application\u0027s resource folder.","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"     * @param pathString - the path to the file in the resource folder as a","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"     *      String.","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"     * @throws FileNotFoundException if the file could not be found.","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NullPointerException if {@param pathString} is {@code null}.","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"    public static BufferedReader getResourceFileReader(String pathString) throws FileNotFoundException {","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"        InputStream inStream \u003d FileUtil.class.getResourceAsStream(pathString);","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"        if (inStream \u003d\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"            throw new FileNotFoundException(","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"                    String.format(FORMAT_RESOURCE_FILE_NOT_FOUND, pathString));","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        Reader reader \u003d new InputStreamReader(inStream);","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"        return new BufferedReader(reader, BUFFER_SIZE);","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the buffered reader of the specified file.","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"     * @throws FileNotFoundException if the file cannot be found.","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NullPointerException if {@code path} is {@code null}.","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"    public static BufferedReader getFileReader(Path path) throws FileNotFoundException {","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(path);","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"        return new BufferedReader(new FileReader(path.toFile()), BUFFER_SIZE);","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the buffered writer to the specified file path.","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O exception occurs","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"     *      (see {@link #FileWriter(java.io.File)}).","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NullPointerException if {@code path} is {@code null}.","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"    public static BufferedWriter getFileWriter(Path path) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(path);","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"        return new BufferedWriter(new FileWriter(path.toFile()), BUFFER_SIZE);","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":59,"-":65}},{"path":"src/main/java/seedu/vms/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.core.JsonParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.databind.JsonMappingException;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FORMAT_INVALID_JSON_FILE \u003d \"File is not in a valid JSON format: %s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"     * Deserializes a JSON file in the resource folder to an object instance.","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     * @param \u003cT\u003e - the type of the object to deserialize to.","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * @param pathString - the path to the file to deserialize in the resource","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     *      folder as a String.","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     * @param valueType - the type of the object to deserialize to.","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NullPointerException if any parameter is {@code null}.","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    public static \u003cT\u003e T deserializeFromResource(String pathString, Class\u003cT\u003e valueType)","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"                throws IOException {","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        try (BufferedReader reader \u003d FileUtil.getResourceFileReader(pathString)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"            return objectMapper.readValue(reader, valueType);","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"     * Deserializes a JSON file to an object instance.","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"     * @param \u003cT\u003e - the type of the object to deserialize to.","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"     * @param path - path to the file to deserialize from.","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"     * @param valueType - the type of the object to deserialize to.","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O exception occurs.","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NullPointerException if any parameter is {@code null}.","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    public static \u003cT\u003e T deserializeFromFile(Path path, Class\u003cT\u003e valueType)","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"                throws IOException {","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        try (BufferedReader reader \u003d FileUtil.getFileReader(path)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"            return objectMapper.readValue(reader, valueType);","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        } catch (JsonParseException | JsonMappingException jsonEx) {","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"            throw new IOException(FORMAT_INVALID_JSON_FILE, jsonEx);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"     * Serializes the given object instance to the specified file.","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"     * @param path - path to serialize to.","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"     * @param instance - the object instance to serialize.","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NullPointerException if any parameter is {@code null}.","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    public static void serializeToFile(Path path, Object instance) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        try (BufferedWriter writer \u003d FileUtil.getFileWriter(path)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"            objectMapper.writerWithDefaultPrettyPrinter()","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"                    .writeValue(writer, instance);","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":59,"-":61}},{"path":"src/main/java/seedu/vms/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":2,"-":66}},{"path":"src/main/java/seedu/vms/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.CommandResult;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * Queues the command text for execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * @param commandText - the command text to queue.","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    void queue(String commandText);","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * Sets the action to be performed when a command completes its execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * @param onExecutionComplete - the {@code Consumer} to be called after a","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     *      command completes its execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    void setOnExecutionCompletion(Consumer\u003cList\u003cCommandResult\u003e\u003e onExecutionComplete);","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     * Returns the PatientManager.","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     * @see seedu.vms.model.Model#getPatientManager()","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    ReadOnlyPatientManager getPatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    /** Returns an unmodifiable view of the filtered list of patients */","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    ObservableMap\u003cInteger, IdData\u003cPatient\u003e\u003e getFilteredPatientMap();","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    /** Returns an unmodifiable view of the filtered map of vaccination types. */","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    ObservableMap\u003cString, VaxType\u003e getFilteredVaxTypeMap();","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"     * Returns the user prefs\u0027 patient manager file path.","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    Path getPatientManagerFilePath();","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"daitenshionyan":25,"-":29,"francisyzy":9}},{"path":"src/main/java/seedu/vms/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.concurrent.LinkedBlockingDeque;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.LogsCenter;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.CommandResult;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.VmsParser;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    private final VmsParser vmsParser;","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    private Consumer\u003cList\u003cCommandResult\u003e\u003e onExecutionComplete \u003d results -\u003e {};","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    private final LinkedBlockingDeque\u003cString\u003e commandQueue \u003d new LinkedBlockingDeque\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    private volatile boolean isExecuting \u003d false;","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        vmsParser \u003d new VmsParser();","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    public void queue(String commandText) {","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        commandQueue.add(commandText);","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        startNext();","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    private synchronized void startNext() {","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        if (isExecuting || commandQueue.isEmpty()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        isExecuting \u003d true;","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        String commandText \u003d commandQueue.poll();","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        new Thread(() -\u003e parseCommand(commandText)).start();","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    private void parseCommand(String commandText) {","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"            execute(vmsParser.parseCommand(commandText));","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        } catch (ParseException parseEx) {","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"            completeExecution(List.of(new CommandResult(","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"                    parseEx.getMessage(),","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"                    CommandResult.State.ERROR)));","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"    private void execute(Command command) {","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cCommandResult\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"            results.add(command.execute(model));","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"        } catch (CommandException ex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"            results.add(new CommandResult(ex.getMessage(), CommandResult.State.ERROR));","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"            completeExecution(results);","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"            storage.savePatientManager(model.getPatientManager());","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"            results.add(new CommandResult(FILE_OPS_ERROR_MESSAGE + ioe, CommandResult.State.WARNING));","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"            storage.saveVaxTypes(model.getVaxTypeManager());","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"            results.add(new CommandResult(FILE_OPS_ERROR_MESSAGE + ioe, CommandResult.State.WARNING));","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"        completeExecution(results, command.getFollowUp());","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"    private void completeExecution(List\u003cCommandResult\u003e results) {","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"        completeExecution(results, Optional.empty());","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"    private void completeExecution(List\u003cCommandResult\u003e results, Optional\u003cCommand\u003e followUp) {","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"        onExecutionComplete.accept(results);","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"        if (followUp.isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"            new Thread(() -\u003e execute(followUp.get())).start();","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"        isExecuting \u003d false;","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"        startNext();","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"    public void setOnExecutionCompletion(Consumer\u003cList\u003cCommandResult\u003e\u003e onExecutionComplete) {","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"        this.onExecutionComplete \u003d onExecutionComplete;","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":131,"author":{"gitId":"francisyzy"},"content":"    public ReadOnlyPatientManager getPatientManager() {","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"francisyzy"},"content":"        return model.getPatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":136,"author":{"gitId":"francisyzy"},"content":"    public ObservableMap\u003cInteger, IdData\u003cPatient\u003e\u003e getFilteredPatientMap() {","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"francisyzy"},"content":"        return model.getFilteredPatientList();","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableMap\u003cString, VaxType\u003e getFilteredVaxTypeMap() {","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"        return model.getFilteredVaxTypeMap();","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"francisyzy"},"content":"    public Path getPatientManagerFilePath() {","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"francisyzy"},"content":"        return model.getPatientManagerFilePath();","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"daitenshionyan":97,"-":53,"francisyzy":9}},{"path":"src/main/java/seedu/vms/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the follow up command to be executed after this if its execution","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * was successful. Returned result is wrapped in an {@code Optional}. If","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     * there are no follow up commands, {@code Optional.empty} is returned","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * instead.","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * @return the follow up command to be executed after this, wrapped in an","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code Optional}.","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public Optional\u003cCommand\u003e getFollowUp() {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.empty();","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":19,"-":17}},{"path":"src/main/java/seedu/vms/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    private final String message;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    private final State state;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code CommandResult} with {@code showHelp} and {@code exit}","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * set to their default value.","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    public CommandResult(String message, State state) {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        this(message, false, false, state);","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code CommandResult} with {@code state} set to","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     * {@link State#INFO}.","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    public CommandResult(String message, boolean showHelp, boolean exit) {","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        this(message, showHelp, exit, State.INFO);","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code CommandResult}.","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    public CommandResult(String message, boolean showHelp, boolean exit, State state) {","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        this.message \u003d requireNonNull(message);","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        this.state \u003d state;","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    public String getMessage() {","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        return message;","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    public State getState() {","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        return state;","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"        return message.equals(otherCommandResult.message)","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"                \u0026\u0026 state.equals(otherCommandResult.state)","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"        return Objects.hash(message, showHelp, exit);","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"     * Represents the state of a {@code CommandResult}.","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"    public static enum State {","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"        INFO, WARNING, ERROR","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":44,"-":64}},{"path":"src/main/java/seedu/vms/logic/commands/appointment/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.logic.commands.appointment;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.DELIMITER;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_PATIENT;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.CommandResult;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":" * Adds a patient to the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an appointment to the patient manager. \"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"            + DELIMITER + PREFIX_TIME + \" TIME \"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"            + DELIMITER + PREFIX_PATIENT + \" PATIENT ID \\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"            + \"Example: appointment \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"            + DELIMITER + PREFIX_TIME + \" 2024-01-01 \"","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"            + DELIMITER + PREFIX_PATIENT + \" A01234567X \";","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New appointment added: %1$s\";","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists\"","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"            + \" in the appointment manager\";","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"    private final Appointment toAdd;","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"     * Creates an AddCommand to add the specified {@code Patient}","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    public AddCommand(Appointment appointment) {","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        toAdd \u003d appointment;","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        model.addAppointment(toAdd);","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"nusE0726844":55,"francisyzy":2}},{"path":"src/main/java/seedu/vms/logic/commands/basic/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.basic;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.CommandResult;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"daitenshionyan":4,"-":17}},{"path":"src/main/java/seedu/vms/logic/commands/basic/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.basic;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.CommandResult;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":4,"-":19}},{"path":"src/main/java/seedu/vms/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.exceptions;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"daitenshionyan":1,"-":16}},{"path":"src/main/java/seedu/vms/logic/commands/patient/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.CommandResult;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":" * Adds a patient to the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a patient to the patient manager. \"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"            + PREFIX_DOB + \"DATE OF BIRTH \"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"            + PREFIX_BLOODTYPE + \"BLOOD TYPE \"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"            + \"(\" + PREFIX_ALLERGY + \"ALLERGY)...\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"             + PREFIX_VACCINATION + \"ALLERGY...\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"            + PREFIX_DOB + \"2001-03-19 \"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"            + PREFIX_BLOODTYPE + \"B+ \"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"            + PREFIX_ALLERGY + \"cat fur \"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"            + PREFIX_ALLERGY + \"pollen\"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"            + PREFIX_VACCINATION + \"covax\";","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New patient added: %1$s\";","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists in the patient manager\";","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    private final Patient toAdd;","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"     * Creates an AddCommand to add the specified {@code Patient}","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    public AddCommand(Patient patient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        toAdd \u003d patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        model.addPatient(toAdd);","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":7,"-":36,"francisyzy":25}},{"path":"src/main/java/seedu/vms/logic/commands/patient/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.CommandResult;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":" * Clears the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"        model.setPatientManager(new PatientManager());","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":4,"-":18,"francisyzy":3}},{"path":"src/main/java/seedu/vms/logic/commands/patient/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.CommandResult;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":" * Deletes a patient identified using it\u0027s displayed index from the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"            + \": Deletes the patient identified by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_DELETE_PATIENT_SUCCESS \u003d \"Deleted Patient: %1$s\";","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        Map\u003cInteger, IdData\u003cPatient\u003e\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        if (!lastShownList.containsKey(targetIndex.getZeroBased())) {","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        Patient patientToDelete \u003d lastShownList.get(targetIndex.getZeroBased()).getValue();","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        model.deletePatient(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete));","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":10,"-":37,"francisyzy":9}},{"path":"src/main/java/seedu/vms/logic/commands/patient/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.CollectionUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.CommandResult;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Allergy;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Vaccine;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":" * Edits the details of an existing patient in the bloodType book.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the patient identified \"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"            + \"by the index number used in the displayed patient list. \"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"            + \"[\" + PREFIX_DOB + \"Date of Birth] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"            + \"[\" + PREFIX_BLOODTYPE + \"BLOODTYPE] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"            + \"[\" + PREFIX_ALLERGY + \"ALLERGY]...\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"            + \"[\" + PREFIX_VACCINATION + \"VACCINE]...\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"            + PREFIX_DOB + \"2000-02-18\";","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_EDIT_PATIENT_SUCCESS \u003d \"Edited Patient: %1$s\";","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists in the patient manager.\";","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"    private final EditPatientDescriptor editPatientDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"     * @param index of the patient in the filtered patient list to edit","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"     * @param editPatientDescriptor details to edit the patient with","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"    public EditCommand(Index index, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(editPatientDescriptor);","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"        this.editPatientDescriptor \u003d new EditPatientDescriptor(editPatientDescriptor);","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"        Map\u003cInteger, IdData\u003cPatient\u003e\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        if (!lastShownList.containsKey(index.getZeroBased())) {","lastModifiedDate":"2023-02-21"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased()).getValue();","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"        Patient editedPatient \u003d createEditedPatient(patientToEdit, editPatientDescriptor);","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"        model.setPatient(index.getZeroBased(), editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient));","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"     * Creates and returns a {@code Patient} with the details of {@code patientToEdit}","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"     * edited with {@code editPatientDescriptor}.","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"    private static Patient createEditedPatient(Patient patientToEdit, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"        assert patientToEdit !\u003d null;","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"        Name updatedName \u003d editPatientDescriptor.getName().orElse(patientToEdit.getName());","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"        Phone updatedPhone \u003d editPatientDescriptor.getPhone().orElse(patientToEdit.getPhone());","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"        Dob updatedDob \u003d editPatientDescriptor.getDob().orElse(patientToEdit.getDob());","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"        BloodType updatedBloodType \u003d editPatientDescriptor.getBloodType().orElse(patientToEdit.getBloodType());","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"        Set\u003cAllergy\u003e updatedAllergies \u003d editPatientDescriptor.getAllergies().orElse(patientToEdit.getAllergy());","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"        Set\u003cVaccine\u003e updatedVaccines \u003d editPatientDescriptor.getVaccines().orElse(patientToEdit.getVaccine());","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"        return new Patient(updatedName, updatedPhone, updatedDob, updatedBloodType, updatedAllergies, updatedVaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"francisyzy"},"content":"                \u0026\u0026 editPatientDescriptor.equals(e.editPatientDescriptor);","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"francisyzy"},"content":"     * Stores the details to edit the patient with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"francisyzy"},"content":"     * corresponding field value of the patient.","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"francisyzy"},"content":"    public static class EditPatientDescriptor {","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"francisyzy"},"content":"        private Dob dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"        private BloodType bloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"francisyzy"},"content":"        private Set\u003cAllergy\u003e allergies;","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"francisyzy"},"content":"        private Set\u003cVaccine\u003e vaccines;","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"francisyzy"},"content":"        public EditPatientDescriptor() {}","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"francisyzy"},"content":"         * A defensive copy of {@code allergies} is used internally.","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"francisyzy"},"content":"        public EditPatientDescriptor(EditPatientDescriptor toCopy) {","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"francisyzy"},"content":"            setDob(toCopy.dob);","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"francisyzy"},"content":"            setBloodType(toCopy.bloodType);","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"francisyzy"},"content":"            setAllergies(toCopy.allergies);","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"francisyzy"},"content":"            setVaccines(toCopy.vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"francisyzy"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, dob, bloodType, allergies, vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"francisyzy"},"content":"        public void setDob(Dob dob) {","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"francisyzy"},"content":"            this.dob \u003d dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"francisyzy"},"content":"        public Optional\u003cDob\u003e getDob() {","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"francisyzy"},"content":"            return Optional.ofNullable(dob);","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"francisyzy"},"content":"        public void setBloodType(BloodType bloodType) {","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"francisyzy"},"content":"            this.bloodType \u003d bloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"francisyzy"},"content":"        public Optional\u003cBloodType\u003e getBloodType() {","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"francisyzy"},"content":"            return Optional.ofNullable(bloodType);","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"francisyzy"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"francisyzy"},"content":"         * Sets {@code allergies} to this object\u0027s {@code allergies}.","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"francisyzy"},"content":"         * A defensive copy of {@code allergies} is used internally.","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"francisyzy"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"francisyzy"},"content":"        public void setAllergies(Set\u003cAllergy\u003e allergies) {","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"francisyzy"},"content":"            this.allergies \u003d (allergies !\u003d null) ? new HashSet\u003c\u003e(allergies) : null;","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"francisyzy"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"francisyzy"},"content":"         * Returns an unmodifiable allergy set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-10"},{"lineNumber":202,"author":{"gitId":"francisyzy"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"francisyzy"},"content":"         * Returns {@code Optional#empty()} if {@code allergies} is null.","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"francisyzy"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"francisyzy"},"content":"        public Optional\u003cSet\u003cAllergy\u003e\u003e getAllergies() {","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"francisyzy"},"content":"            return (allergies !\u003d null) ? Optional.of(Collections.unmodifiableSet(allergies)) : Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"francisyzy"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"francisyzy"},"content":"         * Sets {@code vaccines} to this object\u0027s {@code vaccines}.","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"francisyzy"},"content":"         * A defensive copy of {@code vaccines} is used internally.","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"francisyzy"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"francisyzy"},"content":"        public void setVaccines(Set\u003cVaccine\u003e vaccines) {","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"francisyzy"},"content":"            this.vaccines \u003d (vaccines !\u003d null) ? new HashSet\u003c\u003e(vaccines) : null;","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":216,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":217,"author":{"gitId":"francisyzy"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"francisyzy"},"content":"         * Returns an unmodifiable vaccine set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-10"},{"lineNumber":219,"author":{"gitId":"francisyzy"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"francisyzy"},"content":"         * Returns {@code Optional#empty()} if {@code vaccines} is null.","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"francisyzy"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":222,"author":{"gitId":"francisyzy"},"content":"        public Optional\u003cSet\u003cVaccine\u003e\u003e getVaccines() {","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"francisyzy"},"content":"            return (vaccines !\u003d null) ? Optional.of(Collections.unmodifiableSet(vaccines)) : Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":224,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":225,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"francisyzy"},"content":"            if (!(other instanceof EditPatientDescriptor)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"francisyzy"},"content":"            EditPatientDescriptor e \u003d (EditPatientDescriptor) other;","lastModifiedDate":"2023-03-03"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":242,"author":{"gitId":"francisyzy"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2023-03-08"},{"lineNumber":243,"author":{"gitId":"francisyzy"},"content":"                    \u0026\u0026 getDob().equals(e.getDob())","lastModifiedDate":"2023-03-08"},{"lineNumber":244,"author":{"gitId":"francisyzy"},"content":"                    \u0026\u0026 getBloodType().equals(e.getBloodType())","lastModifiedDate":"2023-03-08"},{"lineNumber":245,"author":{"gitId":"francisyzy"},"content":"                    \u0026\u0026 getAllergies().equals(e.getAllergies())","lastModifiedDate":"2023-03-08"},{"lineNumber":246,"author":{"gitId":"francisyzy"},"content":"                    \u0026\u0026 getVaccines().equals(e.getVaccines());","lastModifiedDate":"2023-03-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"daitenshionyan":13,"-":116,"francisyzy":120}},{"path":"src/main/java/seedu/vms/logic/commands/patient/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.CommandResult;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":" * Finds and lists all patients in patient manager whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patients whose names contain any of \"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        model.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"                String.format(Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW, model.getFilteredPatientList().size()));","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"daitenshionyan":5,"-":34,"francisyzy":5}},{"path":"src/main/java/seedu/vms/logic/commands/patient/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.CommandResult;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":" * Lists all patients in the patient manager to the user.","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all patients\";","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":4,"-":18,"francisyzy":4}},{"path":"src/main/java/seedu/vms/logic/commands/vaccination/AddVaxTypeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.vaccination;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":" * Command to add a vaccination type.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"public class AddVaxTypeCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Vaccination type successfully added: %s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private final VaxTypeBuilder builder;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    public AddVaxTypeCommand(VaxTypeBuilder builder) {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        this.builder \u003d Objects.requireNonNull(builder);","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"            VaxType vaxType \u003d model.performVaxTypeAction(builder::create);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, vaxType.toString()));","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            throw new CommandException(ive.getMessage(), ive);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daitenshionyan":39}},{"path":"src/main/java/seedu/vms/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"daitenshionyan":1,"-":59}},{"path":"src/main/java/seedu/vms/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_MISSING_FLAG \u003d \"Argument flag missing\";","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    private static final String DELIMITER_PATTERN \u003d \"\\\\s*\" + CliSyntax.DELIMITER;","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * Parses an argument String to an {@link ArgumentMultimap}.","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * @throws ParseException if a flag name is blank.","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    public static ArgumentMultimap tokenize(String argString) throws ParseException {","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        argString \u003d argString.strip() + \" \";","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMap \u003d new ArgumentMultimap();","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        String[] args \u003d argString.split(DELIMITER_PATTERN);","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        // preamble","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        argMap.put(new Prefix(\"\"), args[0].strip());","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 1; i \u003c args.length; i++) {","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            addArgument(args[i].strip(), argMap);","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        return argMap;","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    private static void addArgument(String input, ArgumentMultimap argMap) throws ParseException {","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        String[] inputs \u003d input.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        String flagName \u003d inputs[0];","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        if (flagName.isBlank()) {","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(MESSAGE_MISSING_FLAG);","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        Prefix flag \u003d new Prefix(flagName);","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        String argValue \u003d \"\";","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        if (inputs.length \u003e 1) {","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"            argValue \u003d inputs[1];","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        argMap.put(flag, argValue);","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"daitenshionyan":28,"-":29}},{"path":"src/main/java/seedu/vms/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"    public static final String DELIMITER \u003d \"--\";","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n\");","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p\");","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    public static final Prefix PREFIX_DOB \u003d new Prefix(\"d\");","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    public static final Prefix PREFIX_BLOODTYPE \u003d new Prefix(\"b\");","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    public static final Prefix PREFIX_ALLERGY \u003d new Prefix(\"a\");","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    public static final Prefix PREFIX_VACCINATION \u003d new Prefix(\"v\");","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"t\");","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    public static final Prefix PREFIX_PATIENT \u003d new Prefix(\"p\");","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    /*","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     * Vaccination","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    public static final Prefix PREFIX_VAX_GROUPS \u003d new Prefix(\"g\");","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    public static final Prefix PREFIX_MIN_AGE \u003d new Prefix(\"lal\");","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    public static final Prefix PREFIX_MAX_AGE \u003d new Prefix(\"ual\");","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    public static final Prefix PREFIX_MIN_SPACING \u003d new Prefix(\"s\");","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public static final Prefix PREFIX_ALLERGY_REQ \u003d new Prefix(\"a\");","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    public static final Prefix PREFIX_HISTORY_REQ \u003d new Prefix(\"h\");","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"daitenshionyan":17,"-":9,"francisyzy":4,"nusE0726844":2}},{"path":"src/main/java/seedu/vms/logic/parser/FeatureParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.basic.HelpCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"/** A parser to parse the command of a feature. */","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"public abstract class FeatureParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public Command parse(String commandInput) throws ParseException {","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(commandInput.trim());","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        return parseCommand(commandWord, arguments);","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    protected abstract Command parseCommand(String commandWord, String argument) throws ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"daitenshionyan":32}},{"path":"src/main/java/seedu/vms/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"daitenshionyan":3,"-":13}},{"path":"src/main/java/seedu/vms/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.StringUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Allergy;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Vaccine;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"Date is of an invalid format\";","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_BLANK_ELEMENT \u003d \"Trailing or leading delimiters are not allowed\";","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    public static final String KEYWORD_EMPTY_LIST \u003d \"\u003cEMPTY\u003e\";","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    private static final String DEFAULT_DATE_REGEX \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}\";","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    private static final String FULL_DATE_REGEX \u003d \"\\\\d{4}-\\\\d{1,2}-\\\\d{1,2} \\\\d{4}\";","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    private static final String DATE_ONLY_REGEX \u003d \"\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}\";","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    private static final String FULL_DATE_PATTERN \u003d \"yyyy-M-d HHmm\";","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    private static final String DELIMITER_PART \u003d \"::\";","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    private static final String DELIMITER_LIST \u003d \",\";","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"     * Parses a {@code String dob} into an {@code Dob}.","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"     * @throws ParseException if the given {@code dob} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"    public static Dob parseDob(String dob) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(dob);","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"        String trimmedDob \u003d dob.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"        if (!Dob.isValidDob(trimmedDob)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"            throw new ParseException(Dob.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"        return new Dob(trimmedDob);","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"     * Parses a {@code String bloodType} into an {@code BloodType}.","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"     * @throws ParseException if the given {@code bloodType} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"    public static BloodType parseBloodType(String bloodType) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(bloodType);","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"        String trimmedBloodType \u003d bloodType.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"        if (!BloodType.isValidBloodType(trimmedBloodType)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"            throw new ParseException(BloodType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"francisyzy"},"content":"        return new BloodType(trimmedBloodType);","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"francisyzy"},"content":"     * Parses a {@code String allergy} into a {@code Allergy}.","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"francisyzy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"francisyzy"},"content":"     * @throws ParseException if the given {@code allergy} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"francisyzy"},"content":"    public static Allergy parseAllergy(String allergy) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(allergy);","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"francisyzy"},"content":"        String trimmedAllergy \u003d allergy.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"francisyzy"},"content":"        if (!Allergy.isValidAllergyName(trimmedAllergy)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"francisyzy"},"content":"            throw new ParseException(Allergy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"francisyzy"},"content":"        return new Allergy(trimmedAllergy);","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"francisyzy"},"content":"     * Parses {@code Collection\u003cString\u003e allergies} into a {@code Set\u003cAllergy\u003e}.","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"francisyzy"},"content":"    public static Set\u003cAllergy\u003e parseAllergies(Collection\u003cString\u003e allergies) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(allergies);","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"francisyzy"},"content":"        final Set\u003cAllergy\u003e allergySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"francisyzy"},"content":"        for (String allergyName : allergies) {","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"francisyzy"},"content":"            allergySet.add(parseAllergy(allergyName));","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"francisyzy"},"content":"        return allergySet;","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"francisyzy"},"content":"     * Parses a {@code String vaccine} into a {@code Vaccine}.","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"francisyzy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"francisyzy"},"content":"     * @throws ParseException if the given {@code vaccine} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"francisyzy"},"content":"    public static Vaccine parseVaccine(String vaccine) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(vaccine);","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"francisyzy"},"content":"        String trimmedVaccine \u003d vaccine.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"francisyzy"},"content":"        if (!Vaccine.isValidVaccineName(trimmedVaccine)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"francisyzy"},"content":"            throw new ParseException(Vaccine.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"francisyzy"},"content":"        return new Vaccine(trimmedVaccine);","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"francisyzy"},"content":"     * Parses {@code Collection\u003cString\u003e vaccines} into a {@code Set\u003cVaccine\u003e}.","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"francisyzy"},"content":"    public static Set\u003cVaccine\u003e parseVaccines(Collection\u003cString\u003e vaccines) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"francisyzy"},"content":"        final Set\u003cVaccine\u003e vaccineSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"francisyzy"},"content":"        for (String vaccineName : vaccines) {","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"francisyzy"},"content":"            vaccineSet.add(parseVaccine(vaccineName));","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"francisyzy"},"content":"        return vaccineSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"francisyzy"},"content":"     * Parses a String date to a {@code LocalDateTime}.","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"francisyzy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":177,"author":{"gitId":"francisyzy"},"content":"     * The following formats are supported:","lastModifiedDate":"2023-03-04"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"     * \u003cul\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"     * \u003cli\u003e{@code yyyy-MM-dd\u0027T\u0027hh:mm}","lastModifiedDate":"2023-02-27"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"     * \u003cli\u003e{@code yyyy-M-d hhmm}","lastModifiedDate":"2023-02-27"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":183,"author":{"gitId":"francisyzy"},"content":"     * @param dateString - the String date to parse.","lastModifiedDate":"2023-03-04"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"     * @return the parsed {@code LocalDateTime}.","lastModifiedDate":"2023-02-27"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"     * @throws ParseException if the given String cannot be parsed.","lastModifiedDate":"2023-02-27"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":187,"author":{"gitId":"francisyzy"},"content":"    public static LocalDateTime parseDate(String dateString) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-02-27"},{"lineNumber":189,"author":{"gitId":"francisyzy"},"content":"            return parseCustomDate(dateString);","lastModifiedDate":"2023-03-04"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":"        } catch (DateTimeParseException dateParseEx) {","lastModifiedDate":"2023-02-27"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(dateParseEx.getMessage());","lastModifiedDate":"2023-02-27"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":194,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":195,"author":{"gitId":"francisyzy"},"content":"    private static LocalDateTime parseCustomDate(String dateString) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":196,"author":{"gitId":"francisyzy"},"content":"        if (dateString.matches(DEFAULT_DATE_REGEX)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":197,"author":{"gitId":"daitenshionyan"},"content":"            // yyyy-MM-dd\u0027T\u0027hh:mm format","lastModifiedDate":"2023-02-27"},{"lineNumber":198,"author":{"gitId":"francisyzy"},"content":"            return LocalDateTime.parse(dateString);","lastModifiedDate":"2023-03-04"},{"lineNumber":199,"author":{"gitId":"francisyzy"},"content":"        } else if (dateString.matches(FULL_DATE_REGEX)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":200,"author":{"gitId":"daitenshionyan"},"content":"            // yyyy-MM-dd hhmm format","lastModifiedDate":"2023-02-27"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"            return LocalDateTime.parse(","lastModifiedDate":"2023-02-27"},{"lineNumber":202,"author":{"gitId":"francisyzy"},"content":"                    dateString,","lastModifiedDate":"2023-03-04"},{"lineNumber":203,"author":{"gitId":"francisyzy"},"content":"                    DateTimeFormatter.ofPattern(FULL_DATE_PATTERN));","lastModifiedDate":"2023-03-04"},{"lineNumber":204,"author":{"gitId":"francisyzy"},"content":"        } else if (dateString.matches(DATE_ONLY_REGEX)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":205,"author":{"gitId":"francisyzy"},"content":"            return LocalDateTime.parse(","lastModifiedDate":"2023-03-04"},{"lineNumber":206,"author":{"gitId":"francisyzy"},"content":"                    dateString + \" 0000\",","lastModifiedDate":"2023-03-04"},{"lineNumber":207,"author":{"gitId":"francisyzy"},"content":"                    DateTimeFormatter.ofPattern(FULL_DATE_PATTERN));","lastModifiedDate":"2023-03-04"},{"lineNumber":208,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":209,"author":{"gitId":"daitenshionyan"},"content":"        throw new ParseException(MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-02-27"},{"lineNumber":210,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":211,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":212,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":213,"author":{"gitId":"nusE0726844"},"content":"     * Parses a String id to a {@code String}.","lastModifiedDate":"2023-03-07"},{"lineNumber":214,"author":{"gitId":"nusE0726844"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":215,"author":{"gitId":"nusE0726844"},"content":"     * @param patientId - the String date to parse.","lastModifiedDate":"2023-03-07"},{"lineNumber":216,"author":{"gitId":"nusE0726844"},"content":"     * @return the parsed {@code String}.","lastModifiedDate":"2023-03-07"},{"lineNumber":217,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":218,"author":{"gitId":"nusE0726844"},"content":"    public static String parsePatient(String patientId) {","lastModifiedDate":"2023-03-07"},{"lineNumber":219,"author":{"gitId":"nusE0726844"},"content":"        return patientId;","lastModifiedDate":"2023-03-07"},{"lineNumber":220,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":221,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":222,"author":{"gitId":"daitenshionyan"},"content":"    /*","lastModifiedDate":"2023-03-09"},{"lineNumber":223,"author":{"gitId":"daitenshionyan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":224,"author":{"gitId":"daitenshionyan"},"content":"     * Vaccination","lastModifiedDate":"2023-03-09"},{"lineNumber":225,"author":{"gitId":"daitenshionyan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":226,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":227,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":228,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":229,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":230,"author":{"gitId":"daitenshionyan"},"content":"     * Parses a requirement.","lastModifiedDate":"2023-03-09"},{"lineNumber":231,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":232,"author":{"gitId":"daitenshionyan"},"content":"    public static Requirement parseReq(String reqString) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":233,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cString\u003e parts \u003d parseParts(reqString);","lastModifiedDate":"2023-03-09"},{"lineNumber":234,"author":{"gitId":"daitenshionyan"},"content":"        if (parts.size() !\u003d 2) {","lastModifiedDate":"2023-03-09"},{"lineNumber":235,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(\"Requirements require 2 and only 2 parts\");","lastModifiedDate":"2023-03-09"},{"lineNumber":236,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":237,"author":{"gitId":"daitenshionyan"},"content":"        Requirement.RequirementType reqType \u003d parseReqType(parts.get(0));","lastModifiedDate":"2023-03-09"},{"lineNumber":238,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cGroupName\u003e reqSet \u003d new HashSet\u003c\u003e(parseGroups(parts.get(1)));","lastModifiedDate":"2023-03-09"},{"lineNumber":239,"author":{"gitId":"daitenshionyan"},"content":"        if (!Requirement.isValidReqSet(reqSet)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":240,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(Requirement.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":241,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":242,"author":{"gitId":"daitenshionyan"},"content":"        return new Requirement(reqType, reqSet);","lastModifiedDate":"2023-03-09"},{"lineNumber":243,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":244,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":245,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":246,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":247,"author":{"gitId":"daitenshionyan"},"content":"     * Parses a requirement type.","lastModifiedDate":"2023-03-09"},{"lineNumber":248,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":249,"author":{"gitId":"daitenshionyan"},"content":"    public static Requirement.RequirementType parseReqType(String reqTypeString)","lastModifiedDate":"2023-03-09"},{"lineNumber":250,"author":{"gitId":"daitenshionyan"},"content":"                throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":251,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":252,"author":{"gitId":"daitenshionyan"},"content":"            return Requirement.RequirementType.valueOf(reqTypeString.toUpperCase());","lastModifiedDate":"2023-03-09"},{"lineNumber":253,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalArgumentException illArgEx) {","lastModifiedDate":"2023-03-09"},{"lineNumber":254,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(\"Unknown requirement type\", illArgEx);","lastModifiedDate":"2023-03-09"},{"lineNumber":255,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":256,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":257,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":258,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":259,"author":{"gitId":"daitenshionyan"},"content":"    /*","lastModifiedDate":"2023-03-09"},{"lineNumber":260,"author":{"gitId":"daitenshionyan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":261,"author":{"gitId":"daitenshionyan"},"content":"     * Basic","lastModifiedDate":"2023-03-09"},{"lineNumber":262,"author":{"gitId":"daitenshionyan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":263,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":264,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":265,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":266,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":267,"author":{"gitId":"daitenshionyan"},"content":"     * Parses an integer.","lastModifiedDate":"2023-03-09"},{"lineNumber":268,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":269,"author":{"gitId":"daitenshionyan"},"content":"    public static int parseInteger(String intString) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":270,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":271,"author":{"gitId":"daitenshionyan"},"content":"            return Integer.parseInt(intString);","lastModifiedDate":"2023-03-09"},{"lineNumber":272,"author":{"gitId":"daitenshionyan"},"content":"        } catch (NumberFormatException numEx) {","lastModifiedDate":"2023-03-09"},{"lineNumber":273,"author":{"gitId":"daitenshionyan"},"content":"            // TODO: make this nicer","lastModifiedDate":"2023-03-09"},{"lineNumber":274,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(\"Must be an integer between -2147483647 to 2147483647\");","lastModifiedDate":"2023-03-09"},{"lineNumber":275,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":276,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":277,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":278,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":279,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":280,"author":{"gitId":"daitenshionyan"},"content":"     * Parses the argument into parts according to {@link #DELIMITER_PART}","lastModifiedDate":"2023-03-09"},{"lineNumber":281,"author":{"gitId":"daitenshionyan"},"content":"     * delimiter pattern.","lastModifiedDate":"2023-03-09"},{"lineNumber":282,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":283,"author":{"gitId":"daitenshionyan"},"content":"    public static List\u003cString\u003e parseParts(String arg) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":284,"author":{"gitId":"daitenshionyan"},"content":"        return splitArgs(arg, DELIMITER_PART);","lastModifiedDate":"2023-03-09"},{"lineNumber":285,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":286,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":287,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":288,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":289,"author":{"gitId":"daitenshionyan"},"content":"     * Parses the argument into a list according to {@link #DELIMITER_LIST}","lastModifiedDate":"2023-03-09"},{"lineNumber":290,"author":{"gitId":"daitenshionyan"},"content":"     * delimiter pattern.","lastModifiedDate":"2023-03-09"},{"lineNumber":291,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":292,"author":{"gitId":"daitenshionyan"},"content":"    public static List\u003cString\u003e parseList(String arg) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":293,"author":{"gitId":"daitenshionyan"},"content":"        if (arg.strip().toUpperCase().equals(KEYWORD_EMPTY_LIST)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":294,"author":{"gitId":"daitenshionyan"},"content":"            return List.of();","lastModifiedDate":"2023-03-09"},{"lineNumber":295,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":296,"author":{"gitId":"daitenshionyan"},"content":"        return splitArgs(arg, DELIMITER_LIST);","lastModifiedDate":"2023-03-09"},{"lineNumber":297,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":298,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":299,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":300,"author":{"gitId":"daitenshionyan"},"content":"    private static List\u003cString\u003e splitArgs(String arg, String delimiter) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":301,"author":{"gitId":"daitenshionyan"},"content":"        arg \u003d \" \" + arg + \" \";","lastModifiedDate":"2023-03-09"},{"lineNumber":302,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cString\u003e rawArgs \u003d List.of(arg.split(delimiter));","lastModifiedDate":"2023-03-09"},{"lineNumber":303,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cString\u003e splitArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":304,"author":{"gitId":"daitenshionyan"},"content":"        for (String rawArg : rawArgs) {","lastModifiedDate":"2023-03-09"},{"lineNumber":305,"author":{"gitId":"daitenshionyan"},"content":"            if (rawArg.isBlank()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":306,"author":{"gitId":"daitenshionyan"},"content":"                throw new ParseException(MESSAGE_BLANK_ELEMENT);","lastModifiedDate":"2023-03-09"},{"lineNumber":307,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":308,"author":{"gitId":"daitenshionyan"},"content":"            splitArgs.add(rawArg.strip());","lastModifiedDate":"2023-03-09"},{"lineNumber":309,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":310,"author":{"gitId":"daitenshionyan"},"content":"        return splitArgs;","lastModifiedDate":"2023-03-09"},{"lineNumber":311,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":312,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":313,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":314,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":315,"author":{"gitId":"daitenshionyan"},"content":"     * Parses vaccination type names.","lastModifiedDate":"2023-03-08"},{"lineNumber":316,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":317,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - name to parse.","lastModifiedDate":"2023-03-08"},{"lineNumber":318,"author":{"gitId":"daitenshionyan"},"content":"     * @throws ParseException if the name cannot be parsed.","lastModifiedDate":"2023-03-08"},{"lineNumber":319,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":320,"author":{"gitId":"daitenshionyan"},"content":"    public static GroupName parseGroupName(String name) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":321,"author":{"gitId":"daitenshionyan"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-08"},{"lineNumber":322,"author":{"gitId":"daitenshionyan"},"content":"        if (!GroupName.isValidName(name)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":323,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(GroupName.MESSAGE_CONSTRAINT);","lastModifiedDate":"2023-03-09"},{"lineNumber":324,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":325,"author":{"gitId":"daitenshionyan"},"content":"        return new GroupName(name);","lastModifiedDate":"2023-03-09"},{"lineNumber":326,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":327,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":328,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":329,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":330,"author":{"gitId":"daitenshionyan"},"content":"     * Parses a String representing a list of groups.","lastModifiedDate":"2023-03-09"},{"lineNumber":331,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":332,"author":{"gitId":"daitenshionyan"},"content":"     * @throws ParseException if any of the groups cannot be parsed.","lastModifiedDate":"2023-03-09"},{"lineNumber":333,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":334,"author":{"gitId":"daitenshionyan"},"content":"    public static List\u003cGroupName\u003e parseGroups(String args) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":335,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cString\u003e grpStrings \u003d parseList(args);","lastModifiedDate":"2023-03-09"},{"lineNumber":336,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":337,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cGroupName\u003e grps \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":338,"author":{"gitId":"daitenshionyan"},"content":"        for (String grpString : grpStrings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":339,"author":{"gitId":"daitenshionyan"},"content":"            grps.add(parseGroupName(grpString));","lastModifiedDate":"2023-03-09"},{"lineNumber":340,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":341,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":342,"author":{"gitId":"daitenshionyan"},"content":"        return grps;","lastModifiedDate":"2023-03-09"},{"lineNumber":343,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"daitenshionyan":163,"-":56,"francisyzy":115,"nusE0726844":10}},{"path":"src/main/java/seedu/vms/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"daitenshionyan":1,"-":38}},{"path":"src/main/java/seedu/vms/logic/parser/VmsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.basic.HelpCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.appointment.AppointmentParser;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.basic.BasicParser;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.patient.PatientParser;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.vaccination.VaccinationParser;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"/** Parsers user input.  */","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"public class VmsParser {","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"            Pattern.compile(\"(?\u003cfeatureName\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private final BasicParser basicParser \u003d new BasicParser();","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private final PatientParser patientParser \u003d new PatientParser();","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"    private final AppointmentParser appointmentParser \u003d new AppointmentParser();","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private final VaccinationParser vaccinationParser \u003d new VaccinationParser();","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * @return the command based on the user input","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        final String featureName \u003d matcher.group(\"featureName\");","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        switch (featureName) {","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        case PatientParser.FEATURE_NAME:","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            return patientParser.parse(arguments);","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        case AppointmentParser.FEATURE_NAME:","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"            return appointmentParser.parse(arguments);","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        case VaccinationParser.FEATURE_NAME:","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"            return vaccinationParser.parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        default:","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"            return basicParser.parse(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"daitenshionyan":52,"nusE0726844":5}},{"path":"src/main/java/seedu/vms/logic/parser/appointment/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.logic.parser.appointment;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_PATIENT;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.appointment.AddCommand;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.Parser;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.Prefix;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TIME, PREFIX_PATIENT)","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"        LocalDateTime appointmentTime \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"        String patient \u003d ParserUtil.parsePatient(argMultimap.getValue(PREFIX_PATIENT).get());","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"        Appointment appointment \u003d new Appointment(appointmentTime, patient);","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"        return new AddCommand(appointment);","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"nusE0726844":53}},{"path":"src/main/java/seedu/vms/logic/parser/appointment/AppointmentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.logic.parser.appointment;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.commands.appointment.AddCommand;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.FeatureParser;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":" * Parses appointment feature commands.","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"public class AppointmentParser extends FeatureParser {","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    public static final String FEATURE_NAME \u003d \"appointment\";","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"    public Command parseCommand(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        default:","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"nusE0726844":30}},{"path":"src/main/java/seedu/vms/logic/parser/basic/BasicParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.basic;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.basic.ExitCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.basic.HelpCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.FeatureParser;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"/** Parser for base level commands. */","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"public class BasicParser extends FeatureParser {","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    public Command parseCommand(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        default:","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"daitenshionyan":26}},{"path":"src/main/java/seedu/vms/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.exceptions;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"daitenshionyan":2,"-":15}},{"path":"src/main/java/seedu/vms/logic/parser/patient/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.AddCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.Parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.Prefix;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Allergy;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Vaccine;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_DOB, PREFIX_BLOODTYPE)","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        Dob dateOfBirth \u003d ParserUtil.parseDob(argMultimap.getValue(PREFIX_DOB).get());","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        BloodType bloodType \u003d ParserUtil.parseBloodType(argMultimap.getValue(PREFIX_BLOODTYPE).get());","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        Set\u003cAllergy\u003e allergies \u003d ParserUtil.parseAllergies(argMultimap.getAllValues(PREFIX_ALLERGY));","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        Set\u003cVaccine\u003e vaccines \u003d ParserUtil.parseVaccines(argMultimap.getAllValues(PREFIX_VACCINATION));","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        Patient patient \u003d new Patient(name, phone, dateOfBirth, bloodType, allergies, vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        return new AddCommand(patient);","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"daitenshionyan":12,"-":37,"francisyzy":19}},{"path":"src/main/java/seedu/vms/logic/parser/patient/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.DeleteCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.Parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"daitenshionyan":7,"-":24}},{"path":"src/main/java/seedu/vms/logic/parser/patient/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.EditCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.Parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Allergy;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Vaccine;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"            editPatientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"            editPatientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        if (argMultimap.getValue(PREFIX_DOB).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"            editPatientDescriptor.setDob(ParserUtil.parseDob(argMultimap.getValue(PREFIX_DOB).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"        if (argMultimap.getValue(PREFIX_BLOODTYPE).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"            editPatientDescriptor.setBloodType(ParserUtil.parseBloodType(argMultimap.getValue(PREFIX_BLOODTYPE).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        parseAllergiesForEdit(argMultimap.getAllValues(PREFIX_ALLERGY)).ifPresent(editPatientDescriptor::setAllergies);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"        parseVaccinesForEdit(argMultimap.getAllValues(PREFIX_VACCINATION))","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"                .ifPresent(editPatientDescriptor::setVaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        if (!editPatientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"        return new EditCommand(index, editPatientDescriptor);","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"     * Parses {@code Collection\u003cString\u003e allergies} into a {@code Set\u003cAllergy\u003e} if {@code allergies} is non-empty.","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"     * If {@code allergies} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"     * {@code Set\u003cAllergy\u003e} containing zero allergies.","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"    private Optional\u003cSet\u003cAllergy\u003e\u003e parseAllergiesForEdit(Collection\u003cString\u003e allergies) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"        assert allergies !\u003d null;","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        if (allergies.isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"        Collection\u003cString\u003e allergySet \u003d allergies.size() \u003d\u003d 1 \u0026\u0026 allergies.contains(\"\") ? Collections.emptySet()","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"                : allergies;","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"        return Optional.of(ParserUtil.parseAllergies(allergySet));","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"     * Parses {@code Collection\u003cString\u003e vaccines} into a {@code Set\u003cVaccine\u003e} if {@code vaccines} is non-empty.","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"     * If {@code vaccines} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"     * {@code Set\u003cVaccine\u003e} containing zero vaccines.","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"    private Optional\u003cSet\u003cVaccine\u003e\u003e parseVaccinesForEdit(Collection\u003cString\u003e vaccines) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"        assert vaccines !\u003d null;","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"        if (vaccines.isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"        Collection\u003cString\u003e vaccineSet \u003d vaccines.size() \u003d\u003d 1 \u0026\u0026 vaccines.contains(\"\") ? Collections.emptySet()","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"                : vaccines;","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"        return Optional.of(ParserUtil.parseVaccines(vaccineSet));","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"daitenshionyan":12,"-":35,"francisyzy":60}},{"path":"src/main/java/seedu/vms/logic/parser/patient/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.FindCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.Parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"daitenshionyan":5,"-":28,"francisyzy":1}},{"path":"src/main/java/seedu/vms/logic/parser/patient/PatientParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.AddCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.ClearCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.DeleteCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.EditCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.FindCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.ListCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.FeatureParser;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":" * Parses patient feature commands.","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"public class PatientParser extends FeatureParser {","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    public static final String FEATURE_NAME \u003d \"patient\";","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    public Command parseCommand(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":16,"-":34}},{"path":"src/main/java/seedu/vms/logic/parser/vaccination/AddVaxTypeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.vaccination;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.vaccination.AddVaxTypeCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.Parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":" * Parser of vaccination type add command arguments.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"public class AddVaxTypeParser implements Parser\u003cAddVaxTypeCommand\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    // these names are meant to be they align so well","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FIELD_NAME_VAX_NAME \u003d \"Vaccination name\";","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FIELD_NAME_GRP_SET \u003d \"Group set\";","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FIELD_NAME_MIN_AGE \u003d \"Min age\";","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FIELD_NAME_MAX_AGE \u003d \"Max age\";","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FIELD_NAME_SPACING \u003d \"Spacing\";","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FIELD_NAME_ALLERGY \u003d \"Allergy requirements\";","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FIELD_NAME_HISTORY \u003d \"History requirements\";","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    public AddVaxTypeCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argsMap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeBuilder builder \u003d VaxTypeBuilder.of(mapName(argsMap.getPreamble()));","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        builder \u003d mapGroupSet(argsMap.getValue(CliSyntax.PREFIX_VAX_GROUPS))","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"                .map(builder::setGroups)","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(builder);","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        builder \u003d mapAge(argsMap.getValue(CliSyntax.PREFIX_MIN_AGE), FIELD_NAME_MIN_AGE)","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"                .map(builder::setMinAge)","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(builder);","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        builder \u003d mapAge(argsMap.getValue(CliSyntax.PREFIX_MAX_AGE), FIELD_NAME_MAX_AGE)","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"                .map(builder::setMaxAge)","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(builder);","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        builder \u003d mapInteger(argsMap.getValue(CliSyntax.PREFIX_MIN_SPACING), FIELD_NAME_SPACING)","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"                .map(builder::setMinSpacing)","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(builder);","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        builder \u003d mapReqList(argsMap.getAllValues(CliSyntax.PREFIX_ALLERGY_REQ), FIELD_NAME_ALLERGY)","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"                .map(builder::setAllergyReqs)","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(builder);","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        builder \u003d mapReqList(argsMap.getAllValues(CliSyntax.PREFIX_HISTORY_REQ), FIELD_NAME_HISTORY)","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"                .map(builder::setHistoryReqs)","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(builder);","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        return new AddVaxTypeCommand(builder);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    private GroupName mapName(String nameArg) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"            return ParserUtil.parseGroupName(nameArg);","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        } catch (ParseException parseEx) {","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(String.format(\"%s: %s\", FIELD_NAME_VAX_NAME, parseEx.getMessage()));","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    private Optional\u003cHashSet\u003cGroupName\u003e\u003e mapGroupSet(Optional\u003cString\u003e grpSetArg) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        if (!grpSetArg.isPresent()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"            return Optional.ofNullable(ParserUtil.parseGroups(grpSetArg.get()))","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"                    .map(HashSet::new);","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        } catch (ParseException parseEx) {","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(String.format(\"%s: %s\", FIELD_NAME_GRP_SET, parseEx.getMessage()));","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"    private Optional\u003cInteger\u003e mapInteger(Optional\u003cString\u003e intArg, String fieldName) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"        if (!intArg.isPresent()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"        int value;","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"            value \u003d ParserUtil.parseInteger(intArg.get());","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"            if (value \u003c 0) {","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"                throw new ParseException(\"Number must be positive\");","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        } catch (ParseException parseEx) {","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(String.format(\"%s: %s\", fieldName, parseEx.getMessage()));","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.ofNullable(ParserUtil.parseInteger(intArg.get()));","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"    private Optional\u003cAge\u003e mapAge(Optional\u003cString\u003e intArg, String fieldName) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"        return mapInteger(intArg, fieldName)","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"                .map(Age::new);","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"    private Optional\u003cList\u003cRequirement\u003e\u003e mapReqList(List\u003cString\u003e reqStrings, String fieldName)","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"                throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"        if (reqStrings.isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cRequirement\u003e reqs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"            for (String reqString : reqStrings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"                reqs.add(ParserUtil.parseReq(reqString));","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"        } catch (ParseException parseEx) {","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(String.format(\"%s: %s\", fieldName, parseEx.getMessage()));","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.ofNullable(reqs);","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daitenshionyan":126}},{"path":"src/main/java/seedu/vms/logic/parser/vaccination/VaccinationParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.vaccination;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.FeatureParser;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":" * Parser of vaccination feature commands.","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"public class VaccinationParser extends FeatureParser {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    public static final String FEATURE_NAME \u003d \"vaccination\";","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public Command parseCommand(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"        case AddVaxTypeParser.COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"            return new AddVaxTypeParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        default:","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daitenshionyan":27}},{"path":"src/main/java/seedu/vms/model/Age.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.AppUtil;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":" * Represents an age. Ensures that its value is between {@link #MIN_VALUE} and","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":" * {@link #MAX_VALUE} inclusive.","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"public class Age implements Comparable\u003cAge\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    public static final int MIN_VALUE \u003d 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    public static final int MAX_VALUE \u003d 200;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    public static final Age MIN_AGE \u003d new Age(MIN_VALUE);","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    public static final Age MAX_AGE \u003d new Age(MAX_VALUE);","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public static final String STRING_MIN \u003d \"MIN\";","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public static final String STRING_MAX \u003d \"MAX\";","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_CONSTRAINT \u003d \"Age must be a positive integer\";","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private final int value;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code Age}.","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * @param value - the value of the age.","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalArgumentException if {@code value \u003c 0}.","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    public Age(int value) {","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        AppUtil.checkArgument(isValid(value), MESSAGE_CONSTRAINT);","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        this.value \u003d getAgeValue(value);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    public static boolean isValid(int value) {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        return value \u003e\u003d 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    private static int getAgeValue(int value) {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        if (value \u003e\u003d MAX_VALUE) {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"            return MAX_VALUE;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        return value;","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    public int getValue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        return value;","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    public int compareTo(Age other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        return value - other.value;","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        if (value \u003d\u003d MIN_VALUE) {","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"            return STRING_MIN;","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        } else if (value \u003d\u003d MAX_VALUE) {","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"            return STRING_MAX;","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        return String.valueOf(value);","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        return other instanceof Age","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"                \u0026\u0026 value \u003d\u003d ((Age) other).value;","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        return value;","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"daitenshionyan":86}},{"path":"src/main/java/seedu/vms/model/FilteredIdDataMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.MapChangeListener;","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" * An encapsulation of an {@code ObservableMap} of ID - data pairs to provide","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" * a filtered view of a binded map.","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cT\u003e - the type of value being stored.","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"public class FilteredIdDataMap\u003cT\u003e {","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private final ObservableMap\u003cInteger, IdData\u003cT\u003e\u003e source;","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private final ObservableMap\u003cInteger, IdData\u003cT\u003e\u003e internalMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private final ObservableMap\u003cInteger, IdData\u003cT\u003e\u003e internalUnmodifiableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private Predicate\u003cT\u003e predicate \u003d input -\u003e true;","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code FilteredIdDataMap} that is binded to the given map.","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * @param source - the map to bind to.","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    public FilteredIdDataMap(ObservableMap\u003cInteger, IdData\u003cT\u003e\u003e source) {","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        this.source \u003d FXCollections.unmodifiableObservableMap(source);","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        internalMap \u003d FXCollections.observableHashMap();","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        internalMap.putAll(source);","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        internalUnmodifiableMap \u003d FXCollections.unmodifiableObservableMap(internalMap);","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        source.addListener(this::handleChange);","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    private void handleChange(MapChangeListener.Change\u003c? extends Integer, ? extends IdData\u003cT\u003e\u003e change) {","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        if (change.wasRemoved()) {","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"            internalMap.remove(change.getKey());","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        if (change.wasAdded() \u0026\u0026 predicate.test(change.getValueAdded().getValue())) {","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            internalMap.put(change.getKey(), change.getValueAdded());","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"     * Applies a filter.","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"     * @param predicate - the filter function.","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    public void filter(Predicate\u003cT\u003e predicate) {","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(predicate);","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        for (IdData\u003cT\u003e data : source.values()) {","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"            if (predicate.test(data.getValue())) {","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"                internalMap.put(data.getId(), data);","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"            } else {","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"                internalMap.remove(data.getId());","lastModifiedDate":"2023-02-21"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"     * Returns an unmodifiable map view of the filtered map.","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"     * @return an unmodifiable map view of the filtered map.","lastModifiedDate":"2023-02-21"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableMap\u003cInteger, IdData\u003cT\u003e\u003e asUnmodifiableObservableMap() {","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        return internalUnmodifiableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"daitenshionyan":76}},{"path":"src/main/java/seedu/vms/model/GroupName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.text.Collator;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.AppUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":" * Represents a group name. Ensures that the name is valid.","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"public class GroupName implements Comparable\u003cGroupName\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_CONSTRAINT \u003d \"Group name should not be blank, \"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"            + \"and should only contain alphanumeric characters including brackets and dashes\";","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}\\\\(\\\\)\\\\[\\\\]\\\\{\\\\}\\\\-_ ]{1,30}\";","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private final Collator collator;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private final String name;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code GroupName}.","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - name of the group.","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    public GroupName(String name) {","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(name);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        AppUtil.checkArgument(isValidName(name), MESSAGE_CONSTRAINT);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        this.name \u003d name.strip();","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        collator \u003d Collator.getInstance();","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        collator.setStrength(Collator.TERTIARY);","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    public static boolean isValidName(String name) {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        return name.strip().matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    public String getName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        return name;","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    public int compareTo(GroupName other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        return collator.compare(name, other.name);","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        return name;","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        return other instanceof GroupName","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"                \u0026\u0026 name.equals(((GroupName) other).name);","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"        return name.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daitenshionyan":72}},{"path":"src/main/java/seedu/vms/model/IdData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":" * Represents an association of an ID with a value.","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cT\u003e - the type of value stored.","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"public class IdData\u003cT\u003e implements Comparable\u003cIdData\u003cT\u003e\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"    private final boolean isActive;","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    private final int id;","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    private final T value;","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code IdData} with its active state set as {@code true}.","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     * @param id - the ID of this data.","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     * @param value - the value of this data.","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public IdData(int id, T value) {","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        this(true, id, value);","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an {@code IdData}.","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * @param isActive - if the data is active.","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * @param id - the ID of this data.","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     * @param value - the value of this data.","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    public IdData(boolean isActive, int id, T value) {","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        this.isActive \u003d isActive;","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * Returns if the data is active.","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     * @return {@code true} if the data is active and {@code false} otherwise.","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    public boolean isActive() {","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        return isActive;","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    public int getId() {","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        return id;","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    public T getValue() {","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        return value;","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    public int compareTo(IdData\u003cT\u003e other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        return id - other.id;","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-21"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"            return true;","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        if (!(other instanceof IdData)) {","lastModifiedDate":"2023-02-21"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"            return false;","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        IdData\u003c?\u003e o \u003d (IdData\u003c?\u003e) other;","lastModifiedDate":"2023-02-21"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        return this.isActive \u003d\u003d o.isActive \u0026\u0026 this.id \u003d\u003d o.id","lastModifiedDate":"2023-02-21"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"                \u0026\u0026 this.value.equals(o.value);","lastModifiedDate":"2023-02-21"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-21"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        // magic numbers from https://stackoverflow.com/a/113600","lastModifiedDate":"2023-02-21"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        int result \u003d 17;","lastModifiedDate":"2023-02-21"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"        result \u003d 37 * result + ((isActive) ? 1 : 0);","lastModifiedDate":"2023-02-21"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"        result \u003d 37 * result + id;","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        result \u003d 37 * value.hashCode();","lastModifiedDate":"2023-02-21"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        return result;","lastModifiedDate":"2023-02-21"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-21"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        return value.toString();","lastModifiedDate":"2023-02-21"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"daitenshionyan":98}},{"path":"src/main/java/seedu/vms/model/IdDataMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.LimitExceededException;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" * Represents a map to store ID - data value pairs.","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":" * \u003cp\u003eID of values are auto generated within the class.","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cT\u003e - type of data stored.","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"public class IdDataMap\u003cT\u003e {","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    public static final int DEFAULT_LIMIT \u003d 1000;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private static final int STARTING_INDEX \u003d 0;","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private final int limit;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    private final ObservableMap\u003cInteger, IdData\u003cT\u003e\u003e internalMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    private final ObservableMap\u003cInteger, IdData\u003cT\u003e\u003e internalUnmodifiableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    private int nextId \u003d STARTING_INDEX;","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    /** Constructs an empty {@code IdDataMap} that uses the default limit. */","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public IdDataMap() {","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        this(DEFAULT_LIMIT);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an empty {@code IdDataMap}.","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     * @param limit - the size limit of this data map.","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    public IdDataMap(int limit) {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        this.limit \u003d limit;","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        internalMap \u003d FXCollections.observableHashMap();","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        internalUnmodifiableMap \u003d FXCollections.unmodifiableObservableMap(internalMap);","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"     * Adds the value to the map.","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"     * @param value - the value to add.","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"     * @throws LimitExceededException if the number of data has reached its","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"     *      limit.","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    public void add(T value) throws LimitExceededException {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(value);","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        IdData\u003cT\u003e data \u003d new IdData\u003c\u003e(getNextId(), value);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        add(data);","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"     * Adds the data to the map. If there is already a mapping to the given","lastModifiedDate":"2023-02-21"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"     * data\u0027s ID, that ID associated value is replaced with the given.","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"     * @param data - the data to add.","lastModifiedDate":"2023-02-21"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    public void add(IdData\u003cT\u003e data) throws LimitExceededException {","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(data);","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        if (!isValidId(data.getId())) {","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"            throw new LimitExceededException();","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        internalMap.put(data.getId(), data);","lastModifiedDate":"2023-02-21"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        nextId \u003d Math.max(nextId, data.getId());","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"     * Sets the specified ID\u0027s value to the given value. If there is already a","lastModifiedDate":"2023-02-21"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"     * mapping to the given ID, that ID associated value is replaced with the","lastModifiedDate":"2023-02-21"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"     * given.","lastModifiedDate":"2023-02-21"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"     * @param id - the id to set.","lastModifiedDate":"2023-02-21"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"     * @param value - the value to set.","lastModifiedDate":"2023-02-21"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NoSuchElementException if the ID is not present.","lastModifiedDate":"2023-02-21"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"    public void set(int id, T value) {","lastModifiedDate":"2023-02-21"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"        if (!internalMap.containsKey(id)) {","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"            // TODO: this exception is unhandled by utilising methods.","lastModifiedDate":"2023-02-21"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"            throw new NoSuchElementException(String.format(\"ID [%d] not found\", id));","lastModifiedDate":"2023-02-21"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"        IdData\u003cT\u003e data \u003d new IdData\u003c\u003e(id, value);","lastModifiedDate":"2023-02-21"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"        internalMap.put(id, data);","lastModifiedDate":"2023-02-21"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"     * Removes the data associated to the specified ID.","lastModifiedDate":"2023-02-21"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"     * @param id - the ID of the data to remove.","lastModifiedDate":"2023-02-21"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NoSuchElementException if the ID is not present.","lastModifiedDate":"2023-02-21"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"    public IdData\u003cT\u003e remove(int id) {","lastModifiedDate":"2023-02-21"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"        return internalMap.remove(id);","lastModifiedDate":"2023-02-21"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"     * Returns if there is a mapping to the specified ID.","lastModifiedDate":"2023-02-21"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"     * @param id - the id to check.","lastModifiedDate":"2023-02-21"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"     * @return {@code true} if a mapping is present to the ID and {@code false}","lastModifiedDate":"2023-02-21"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"     *      otherwise.","lastModifiedDate":"2023-02-21"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"    public boolean contains(int id) {","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"        return internalMap.containsKey(id);","lastModifiedDate":"2023-02-21"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"     * Clears and sets the stored data to the given collection of datas.","lastModifiedDate":"2023-02-21"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"     * @param datas - the collection of data to set to.","lastModifiedDate":"2023-02-21"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"    public void setDatas(Collection\u003cIdData\u003cT\u003e\u003e datas) {","lastModifiedDate":"2023-02-21"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"        // TODO: Check for duplicate ID","lastModifiedDate":"2023-02-21"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"        internalMap.clear();","lastModifiedDate":"2023-02-21"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"        nextId \u003d STARTING_INDEX;","lastModifiedDate":"2023-02-21"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"        for (IdData\u003cT\u003e data : datas) {","lastModifiedDate":"2023-02-21"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"            add(data);","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"     * Clears and sets the stored value to the given collection of values.","lastModifiedDate":"2023-02-21"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"     * \u003cp\u003eThe ID is reseted as well.","lastModifiedDate":"2023-02-21"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"     * @param values - the collection of values to set to.","lastModifiedDate":"2023-02-21"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"    public void setValues(Collection\u003cT\u003e values) {","lastModifiedDate":"2023-02-21"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"        internalMap.clear();","lastModifiedDate":"2023-02-21"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"        nextId \u003d STARTING_INDEX;","lastModifiedDate":"2023-02-21"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"        for (T value : values) {","lastModifiedDate":"2023-02-21"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"            add(value);","lastModifiedDate":"2023-02-21"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"    public IdData\u003cT\u003e get(int id) {","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"        return internalMap.get(id);","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"     * Returns an unmodifiable map view of this data map.","lastModifiedDate":"2023-02-21"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"     * @return an unmodifiable map view of this data map.","lastModifiedDate":"2023-02-21"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableMap\u003cInteger, IdData\u003cT\u003e\u003e asUnmodifiableObservableMap() {","lastModifiedDate":"2023-02-21"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"        return internalUnmodifiableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"    private int getNextId() throws LimitExceededException {","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"        if (internalMap.size() \u003e\u003d limit) {","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"            throw new LimitExceededException();","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"        while (contains(nextId)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"            nextId++;","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"            if (!isValidId(nextId)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"                nextId \u003d 0;","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"        return nextId;","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"    private boolean isValidId(int id) {","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"        return 0 \u003c\u003d id \u0026\u0026 id \u003c limit;","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"daitenshionyan":184}},{"path":"src/main/java/seedu/vms/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeAction;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    Predicate\u003cPatient\u003e PREDICATE_SHOW_ALL_PATIENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"     * Returns the user prefs\u0027 patient manager file path.","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    Path getPatientManagerFilePath();","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"     * Sets the user prefs\u0027 patient manager file path.","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    void setPatientManagerFilePath(Path patientManagerFilePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"     * Replaces patient manager data with the data in {@code patientManager}.","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    void setPatientManager(ReadOnlyPatientManager patientManager);","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"    /** Returns the PatientManager */","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"    ReadOnlyPatientManager getPatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"    boolean hasPatient(int id);","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"     * Deletes the given patient.","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"     * The patient must exist in the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"    void deletePatient(int id);","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"     * Adds the given patient.","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"     * {@code patient} must not already exist in the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"    void addPatient(Patient patient);","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"     * Replaces the given patient {@code target} with {@code editedPatient}.","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"     * {@code target} must exist in the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"     * The patient identity of {@code editedPatient} must not be the same as","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"     * another existing patient in the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"    void setPatient(int id, Patient editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"    /** Returns an unmodifiable view of the filtered patient list */","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"    ObservableMap\u003cInteger, IdData\u003cPatient\u003e\u003e getFilteredPatientList();","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"    /** Returns an unmodifiable view of the filtered vaccination type map. */","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"    ObservableMap\u003cString, VaxType\u003e getFilteredVaxTypeMap();","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"     * Updates the filter of the filtered patient list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"    void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"nusE0726844"},"content":"     * Adds the given appointment.","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"nusE0726844"},"content":"     * {@code appointment} must not already exist in the appointment manager.","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"nusE0726844"},"content":"    void addAppointment(Appointment appointment);","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"    /** Returns the {@code VaxTypeManager} the model is using. */","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"    VaxTypeManager getVaxTypeManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"    /** Performs the specified action of the {@code VaxTypeManager} that the model is using. */","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"    VaxType performVaxTypeAction(VaxTypeAction action) throws IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"daitenshionyan":17,"-":58,"francisyzy":28,"nusE0726844":6}},{"path":"src/main/java/seedu/vms/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.LogsCenter;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.AppointmentManager;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeAction;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":" * Represents the in-memory model of the patient manager data.","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    private final PatientManager patientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    private final AppointmentManager appointmentManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    private final VaxTypeManager vaxTypeManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    private final FilteredIdDataMap\u003cPatient\u003e filteredPatientMap;","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     * Initializes a ModelManager with the given patientManager and userPrefs.","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    public ModelManager(ReadOnlyPatientManager patientManager, VaxTypeManager vaxTypeManager,","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"            ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        requireAllNonNull(patientManager, userPrefs);","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        logger.fine(\"Initializing with patient manager: \" + patientManager + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        this.patientManager \u003d new PatientManager(patientManager);","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        filteredPatientMap \u003d new FilteredIdDataMap\u003c\u003e(this.patientManager.getMapView());","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"        appointmentManager \u003d new AppointmentManager();","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        this.vaxTypeManager \u003d vaxTypeManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"     * Convenience constructor to construct a {@code ModelManager} with an","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"     * empty {@code VaxTypeManager}.","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"    public ModelManager(ReadOnlyPatientManager patientManager, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        this(patientManager, new VaxTypeManager(), userPrefs);","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        this(new PatientManager(), new VaxTypeManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"    public Path getPatientManagerFilePath() {","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"        return userPrefs.getPatientManagerFilePath();","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"    public void setPatientManagerFilePath(Path patientManagerFilePath) {","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(patientManagerFilePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"        userPrefs.setPatientManagerFilePath(patientManagerFilePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PatientManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"    public void setPatientManager(ReadOnlyPatientManager patientManager) {","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"        this.patientManager.resetData(patientManager);","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"    public ReadOnlyPatientManager getPatientManager() {","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"        return patientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"    public boolean hasPatient(int id) {","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"        return patientManager.contains(id);","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"    public void deletePatient(int id) {","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"        patientManager.remove(id);","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":123,"author":{"gitId":"francisyzy"},"content":"    public void addPatient(Patient patient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"francisyzy"},"content":"        patientManager.add(patient);","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"francisyzy"},"content":"        updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"francisyzy"},"content":"    public void setPatient(int id, Patient editedPatient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"francisyzy"},"content":"        requireAllNonNull(editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"francisyzy"},"content":"        patientManager.set(id, editedPatient);","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"nusE0726844"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointmentManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":138,"author":{"gitId":"nusE0726844"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-07"},{"lineNumber":139,"author":{"gitId":"nusE0726844"},"content":"        appointmentManager.add(appointment);","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":141,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d VaxTypeManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"    public VaxType performVaxTypeAction(VaxTypeAction action) throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"        return action.apply(vaxTypeManager);","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"francisyzy"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Patient List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":152,"author":{"gitId":"francisyzy"},"content":"     * Returns an unmodifiable view of the list of {@code Patient} backed by the internal list of","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"francisyzy"},"content":"     * {@code versionedPatientManager}","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":156,"author":{"gitId":"francisyzy"},"content":"    public ObservableMap\u003cInteger, IdData\u003cPatient\u003e\u003e getFilteredPatientList() {","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"francisyzy"},"content":"        return filteredPatientMap.asUnmodifiableObservableMap();","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"francisyzy"},"content":"    public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":163,"author":{"gitId":"francisyzy"},"content":"        filteredPatientMap.filter(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered VaxType Map Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableMap\u003cString, VaxType\u003e getFilteredVaxTypeMap() {","lastModifiedDate":"2023-03-04"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"        return vaxTypeManager.asUnmodifiableObservableMap();","lastModifiedDate":"2023-03-04"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeManager getVaxTypeManager() {","lastModifiedDate":"2023-03-06"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"        return vaxTypeManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Misc methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"francisyzy"},"content":"        return patientManager.equals(other.patientManager)","lastModifiedDate":"2023-03-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":196,"author":{"gitId":"francisyzy"},"content":"                \u0026\u0026 filteredPatientMap.asUnmodifiableObservableMap()","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"francisyzy"},"content":"                        .equals(other.filteredPatientMap.asUnmodifiableObservableMap());","lastModifiedDate":"2023-03-03"},{"lineNumber":198,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":199,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":200,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-21"},{"lineNumber":202,"author":{"gitId":"francisyzy"},"content":"        return filteredPatientMap.asUnmodifiableObservableMap().toString();","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":44,"-":103,"nusE0726844":11,"francisyzy":47}},{"path":"src/main/java/seedu/vms/model/ReadOnlyStorageModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":" * Represents an unmodifiable view of a storage model.","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cT\u003e - the type of values being stored.","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"public interface ReadOnlyStorageModel\u003cT\u003e {","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"     * Returns an unmodifiable map view of the storage.","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"     * @return an unmodifiable map view of the storage.","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableMap\u003cInteger, IdData\u003cT\u003e\u003e getMapView();","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"daitenshionyan":18}},{"path":"src/main/java/seedu/vms/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    Path getPatientManagerFilePath();","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"daitenshionyan":2,"-":13,"francisyzy":1}},{"path":"src/main/java/seedu/vms/model/StorageModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":" * Represents a storage model that manages and stores values that require an ID","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":" * identifier.","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" * @param \u003cT\u003e - the type of values being stored.","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"public abstract class StorageModel\u003cT\u003e implements ReadOnlyStorageModel\u003cT\u003e {","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    private final IdDataMap\u003cT\u003e dataMap \u003d new IdDataMap\u003c\u003e();","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    /** Constructs an empty {@code StorageModel}. */","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    public StorageModel() {}","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code StorageModel} with the same data mapping as the","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * reference given.","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * @param reference - the storage model to be copied.","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public StorageModel(ReadOnlyStorageModel\u003cT\u003e reference) {","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        this();","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        resetData(reference);","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d Data override methods","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     * Clears and sets the value contents of this storage model to the given","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     * collection of values.","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     * \u003cp\u003eIDs are resetted and the values are ID-ed according the their order","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     * in the collection given.","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     * @param values - the value contents to replace to.","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    public void setValues(Collection\u003cT\u003e values) {","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        dataMap.setValues(values);","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"     * Clears and resets the data contents of this storage model to match that","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"     * of the given storage model.","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"     * \u003cp\u003eThe IDs of the data in the given reference are preserved.","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"     * @param reference - the storage model to copy from.","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"    public void resetData(ReadOnlyStorageModel\u003cT\u003e reference) {","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        dataMap.setDatas(reference.getMapView().values());","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d Map methods","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"     * Returns if the specified ID has a mapped value.","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"     * @param id - the id to check.","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"     * @return {@code true} if there is a mapped value to the specified ID and","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code false} otherwise.","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    public boolean contains(int id) {","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        return dataMap.contains(id);","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"     * Adds the specified value to the storage.","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"     * @param value - the value to add.","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"    public void add(T value) {","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"        dataMap.add(value);","lastModifiedDate":"2023-02-22"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"     * Adds the specified data to the storage. If there is already a value","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"     * mapped to the ID of the specified data, that value is replaced with the","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"     * given.","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"     * @param data - the data to add.","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"    public void add(IdData\u003cT\u003e data) {","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        dataMap.add(data);","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"     * Sets the specified ID\u0027s value to the given value. If there is already a","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"     * mapping to the given ID, that ID associated value is replaced with the","lastModifiedDate":"2023-02-22"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"     * given.","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"     * @param id - the id to set.","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"     * @param value - the value to set to.","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NullPointerException if {@code value} is {@code null}.","lastModifiedDate":"2023-02-22"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"     * @throws java.util.NoSuchElementException if there are no mappings to the","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"     *      specified id.","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"    public void set(int id, T value) {","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(value);","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"        dataMap.set(id, value);","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"     * Removes the data associated with the specified ID.","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"     * @param id - the ID of the data to remove.","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"    public void remove(int id) {","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"        dataMap.remove(id);","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d ReadOnlyStorageModel overrides","lastModifiedDate":"2023-02-22"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableMap\u003cInteger, IdData\u003cT\u003e\u003e getMapView() {","lastModifiedDate":"2023-02-22"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"        return dataMap.asUnmodifiableObservableMap();","lastModifiedDate":"2023-02-22"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d Object class overrides","lastModifiedDate":"2023-02-22"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"    public String toString() {","lastModifiedDate":"2023-02-22"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"        // TODO: refine later","lastModifiedDate":"2023-02-22"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"        return dataMap.asUnmodifiableObservableMap().toString();","lastModifiedDate":"2023-02-22"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-22"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-22"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"            return true;","lastModifiedDate":"2023-02-22"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"        if (!(other instanceof StorageModel)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"            return false;","lastModifiedDate":"2023-02-22"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"        StorageModel\u003c?\u003e castedOther \u003d (StorageModel\u003c?\u003e) other;","lastModifiedDate":"2023-02-22"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"        return dataMap.asUnmodifiableObservableMap()","lastModifiedDate":"2023-02-22"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"                .equals(castedOther.dataMap.asUnmodifiableObservableMap());","lastModifiedDate":"2023-02-22"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-22"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"        return dataMap.hashCode();","lastModifiedDate":"2023-02-22"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"daitenshionyan":169}},{"path":"src/main/java/seedu/vms/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    private Path patientManagerFilePath \u003d Paths.get(\"data\" , \"patientmanager.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        setPatientManagerFilePath(newUserPrefs.getPatientManagerFilePath());","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    public Path getPatientManagerFilePath() {","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        return patientManagerFilePath;","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    public void setPatientManagerFilePath(Path patientManagerFilePath) {","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(patientManagerFilePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        this.patientManagerFilePath \u003d patientManagerFilePath;","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"                \u0026\u0026 patientManagerFilePath.equals(o.patientManagerFilePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"        return Objects.hash(guiSettings, patientManagerFilePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        sb.append(\"\\nLocal data file location : \" + patientManagerFilePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":2,"-":75,"francisyzy":10}},{"path":"src/main/java/seedu/vms/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.model.appointment;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import static seedu.vms.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":" * Represents an Appointment in the vaccine management system.","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"public class Appointment {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    private LocalDateTime appointmentTime;","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"    private final String patientId;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"    public Appointment(LocalDateTime appointmentTime, String patient) {","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"nusE0726844"},"content":"        requireAllNonNull(appointmentTime, patient);","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"nusE0726844"},"content":"        this.appointmentTime \u003d appointmentTime;","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"nusE0726844"},"content":"        this.patientId \u003d patient;","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"nusE0726844"},"content":"    public String getPatient() {","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"nusE0726844"},"content":"        return patientId;","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"nusE0726844"},"content":"    public LocalDateTime getAppointmentTime() {","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"nusE0726844"},"content":"        return appointmentTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"nusE0726844"},"content":"    public boolean setAppointmentTime(LocalDateTime appointmentTime) {","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"nusE0726844"},"content":"        requireAllNonNull(appointmentTime);","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"nusE0726844"},"content":"        this.appointmentTime \u003d appointmentTime;","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"nusE0726844"},"content":"        return true;","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"nusE0726844"},"content":"     * Returns true if both appointments have the same patient.","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"nusE0726844"},"content":"     * This defines a weaker notion of equality between two patients.","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"nusE0726844"},"content":"    public boolean isSamePatient(String otherPatientId) {","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"nusE0726844"},"content":"        if (otherPatientId \u003d\u003d patientId) {","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"nusE0726844"},"content":"            return true;","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"nusE0726844"},"content":"        return otherPatientId !\u003d null \u0026\u0026 otherPatientId.equals(patientId);","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"nusE0726844"},"content":"     * Returns true if both appointments have the same patient and data fields.","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"nusE0726844"},"content":"     * This defines a stronger notion of equality between two appointments.","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":55,"author":{"gitId":"nusE0726844"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"nusE0726844"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"nusE0726844"},"content":"            return true;","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"nusE0726844"},"content":"        if (!(other instanceof Appointment)) {","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"nusE0726844"},"content":"            return false;","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"nusE0726844"},"content":"        Appointment otherAppointment \u003d (Appointment) other;","lastModifiedDate":"2023-02-21"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"        return otherAppointment.getPatient().equals(getPatient())","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"nusE0726844"},"content":"                \u0026\u0026 otherAppointment.getAppointmentTime().equals(getAppointmentTime());","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":68,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"nusE0726844"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"nusE0726844"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-02-21"},{"lineNumber":72,"author":{"gitId":"nusE0726844"},"content":"        return Objects.hash(appointmentTime, patientId);","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"nusE0726844"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"nusE0726844"},"content":"    public String toString() {","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"nusE0726844"},"content":"        return patientId","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"nusE0726844"},"content":"                + \" has an appointment at \"","lastModifiedDate":"2023-02-21"},{"lineNumber":79,"author":{"gitId":"nusE0726844"},"content":"                + appointmentTime;","lastModifiedDate":"2023-02-21"},{"lineNumber":80,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"nusE0726844":80,"francisyzy":1}},{"path":"src/main/java/seedu/vms/model/appointment/AppointmentManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.model.appointment;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.StorageModel;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":" * Wraps all data at the patient-manager level","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":" * Duplicates are not allowed (by .isSameAppointment comparison)","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":"public class AppointmentManager extends StorageModel\u003cAppointment\u003e implements ReadOnlyAppointmentManager {","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":"    public AppointmentManager() {}","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"     * Creates an AppointmentManager using the Appointments in the {@code toBeCopied}","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"nusE0726844"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"nusE0726844"},"content":"    public AppointmentManager(ReadOnlyAppointmentManager toBeCopied) {","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"nusE0726844"},"content":"        super(toBeCopied);","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"nusE0726844"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nusE0726844":17,"francisyzy":1}},{"path":"src/main/java/seedu/vms/model/appointment/ReadOnlyAppointmentManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nusE0726844"},"content":"package seedu.vms.model.appointment;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.ReadOnlyStorageModel;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"nusE0726844"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"nusE0726844"},"content":" * A {@code ReadOnlyStorageModel} of {@code Appointment}.","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"nusE0726844"},"content":" *","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"nusE0726844"},"content":" * \u003cp\u003eInterface does not add any new methods but acts as a marker of a read","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nusE0726844"},"content":" * only appointment storage model.","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nusE0726844"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nusE0726844"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nusE0726844"},"content":"public interface ReadOnlyAppointmentManager extends ReadOnlyStorageModel\u003cAppointment\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nusE0726844"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nusE0726844":13}},{"path":"src/main/java/seedu/vms/model/patient/Allergy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" * Represents a Allergy in the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidAllergyName(String)}","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"public class Allergy {","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Allergy names should be alphanumeric\";","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    public final String allergyName;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     * Constructs a {@code Allergy}.","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     * @param allergyName A valid allergy name.","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    public Allergy(String allergyName) {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(allergyName);","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        checkArgument(isValidAllergyName(allergyName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        this.allergyName \u003d allergyName;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * Returns true if a given string is a valid allergy name.","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    public static boolean isValidAllergyName(String test) {","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"                || (other instanceof Allergy // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"                        \u0026\u0026 allergyName.equals(((Allergy) other).allergyName)); // state check","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        return allergyName.hashCode();","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        return \u0027(\u0027 + allergyName + \u0027)\u0027;","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"francisyzy":54}},{"path":"src/main/java/seedu/vms/model/patient/BloodType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" * Represents a Patient\u0027s bloodType in VMS.","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBloodType(String)}","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"public class BloodType {","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"     * Blood type enum to ensure only valid blood types are recorded.","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"     * It cannot be saved as \"O-\" as trailing symbols are not valid var names.","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    public enum BloodTypes {","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"        oMinus(\"O-\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"        oPlus(\"O+\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"        aMinus(\"A-\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        aPlus(\"A+\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        bMinus(\"B-\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        bPlus(\"B+\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"        abMinus(\"AB-\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        abPlus(\"AB+\");","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        private final String representation;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        BloodTypes(String representation) {","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"            this.representation \u003d representation;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        public String getRepresentation() {","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"            return representation;","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        /**","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"         * Turns a String into a enum type","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"         * @param representation of what the user will view blood type as.","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"         * @return Enum value of the matched string representation","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"         */","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        public static BloodTypes fromRepresentation(String representation) {","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            for (BloodTypes i : BloodTypes.values()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"                if (i.representation.equals(representation.toUpperCase())) {","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"                    return i;","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"                }","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"            throw new IllegalArgumentException(\"Bloodtype \" + BloodTypes.class.getCanonicalName()","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"                    + \" with representation \" + representation + \" found\");","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"BloodType can only be A+, A-, B+, B-, AB+, AB-, O+, O-\";","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    /*","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"     * The first character of the bloodType must not be a whitespace,","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"    public final BloodTypes value;","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"     * Constructs an {@code BloodType}.","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"     * @param bloodType A valid bloodType.","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"    public BloodType(String bloodType) {","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(bloodType);","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        checkArgument(isValidBloodType(bloodType), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        value \u003d BloodTypes.fromRepresentation(bloodType);","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"     * Returns true if a given string is a valid blood type.","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"    public static boolean isValidBloodType(String test) {","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"            BloodTypes.fromRepresentation(test);","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"            return false;","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        return true;","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"        return value.getRepresentation();","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"                || (other instanceof BloodType // instanceof handles nulls","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"                        \u0026\u0026 value.equals(((BloodType) other).value)); // state check","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"francisyzy":100}},{"path":"src/main/java/seedu/vms/model/patient/Dob.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static java.time.format.DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.ParserUtil.parseDate;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" * Represents a Patient\u0027s dob in the dob book.","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":" * It is represented as LocalDateTime with the time set to 0000.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDob(String)}","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"public class Dob {","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        \"Date of birth can take any date earlier than today, and it should not be blank\";","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_CONSTRAINTS2 \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"        \"Date oan today, and it should not be blank\";","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public final LocalDateTime value;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     * Constructs an {@code Dob}.","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * @param dob A valid date of birth.","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    public Dob(String dob) {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(dob);","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        checkArgument(isValidDob(dob), MESSAGE_CONSTRAINTS2);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"            value \u003d parseDate(dob);","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS2);","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"     * Constructs an {@code Dob}.","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"     * @param dob A valid date of birth.","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    public Dob(LocalDateTime dob) {","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(dob);","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        LocalDateTime cleanDob \u003d LocalDateTime.of(dob.getYear(), dob.getMonthValue(), dob.getDayOfMonth(), 0, 0);","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        checkArgument(isValidDob(cleanDob), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        value \u003d cleanDob;","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"     * Returns true if a given string is a valid date that is before than today","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    public static boolean isValidDob(String test) {","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        LocalDateTime testDate;","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"            testDate \u003d parseDate(test);","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"            return false;","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        return testDate.isBefore(LocalDateTime.now());","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"     * Returns true if a given string is a valid date that is before than today","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"    public static boolean isValidDob(LocalDateTime test) {","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"        return test.isBefore(LocalDateTime.now());","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"        return value.format(ISO_LOCAL_DATE);","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"                || (other instanceof Dob // instanceof handles nulls","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"                        \u0026\u0026 value.equals(((Dob) other).value)); // state check","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"francisyzy":90}},{"path":"src/main/java/seedu/vms/model/patient/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" * Represents a Patient\u0027s name in the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":1,"francisyzy":3,"-":55}},{"path":"src/main/java/seedu/vms/model/patient/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.StringUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" * Tests that a {@code Patient}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(patient.getName().fullName, keyword));","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"daitenshionyan":1,"francisyzy":5,"-":25}},{"path":"src/main/java/seedu/vms/model/patient/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":" * Represents a Patient in the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":" * Guarantees: details are present and not null,","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" * field values are validated,","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":" * immutable.","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"public class Patient {","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    private final Dob dateOfBirth;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    // Medical fields","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    private final BloodType bloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    private final Set\u003cAllergy\u003e allergies \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    private final Set\u003cVaccine\u003e vaccines \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    public Patient(Name name, Phone phone, Dob dob, BloodType bloodType, Set\u003cAllergy\u003e allergies,","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"            Set\u003cVaccine\u003e vaccines) {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        requireAllNonNull(name, phone, dob, bloodType, allergies, vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        this.dateOfBirth \u003d dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        this.bloodType \u003d bloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        this.allergies.addAll(allergies);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        this.vaccines.addAll(vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    public Dob getDob() {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        return dateOfBirth;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    public BloodType getBloodType() {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        return bloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"     * Returns an immutable allergies set,","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"     * which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"    public Set\u003cAllergy\u003e getAllergy() {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        return Collections.unmodifiableSet(allergies);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"     * Returns an immutable vaccine set,","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"     * which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"    public Set\u003cVaccine\u003e getVaccine() {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"        return Collections.unmodifiableSet(vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"     * Returns an immutable allergies set,","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"     * which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"    public Set\u003cString\u003e getAllergyAsString() {","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"        Set\u003cString\u003e allergyStrings \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        for (Allergy allergy : allergies) {","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"            allergyStrings.add(allergy.toString());","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"        return Collections.unmodifiableSet(allergyStrings);","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"     * Returns an immutable vaccine set,","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"     * which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"    public Set\u003cString\u003e getVaccineAsString() {","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"        Set\u003cString\u003e vaccineStrings \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"        for (Vaccine vaccine : vaccines) {","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"            vaccineStrings.add(vaccine.toString());","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"        return Collections.unmodifiableSet(vaccineStrings);","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"     * Returns true if both patients have the same name.","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"     * This defines a weaker notion of equality between two patients.","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"    public boolean isSamePatient(Patient otherPatient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"        if (otherPatient \u003d\u003d this) {","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"        return otherPatient !\u003d null","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"                \u0026\u0026 otherPatient.getName().equals(getName());","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"francisyzy"},"content":"     * Returns true if both patients have the same identity and data fields.","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"francisyzy"},"content":"     * This defines a stronger notion of equality between two patients.","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"francisyzy"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"francisyzy"},"content":"        Patient otherPatient \u003d (Patient) other;","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"francisyzy"},"content":"        return otherPatient.getName().equals(getName())","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"francisyzy"},"content":"                \u0026\u0026 otherPatient.getPhone().equals(getPhone())","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"francisyzy"},"content":"                \u0026\u0026 otherPatient.getDob().equals(getDob())","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"francisyzy"},"content":"                \u0026\u0026 otherPatient.getBloodType().equals(getBloodType())","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"                \u0026\u0026 otherPatient.getAllergy().equals(getAllergy())","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"francisyzy"},"content":"                \u0026\u0026 otherPatient.getVaccine().equals(getVaccine());","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"francisyzy"},"content":"        return Objects.hash(name,","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"francisyzy"},"content":"                phone,","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"francisyzy"},"content":"                dateOfBirth,","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"francisyzy"},"content":"                bloodType,","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"francisyzy"},"content":"                allergies,","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"francisyzy"},"content":"                vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"francisyzy"},"content":"                .append(\"; DateOfBirth: \")","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"francisyzy"},"content":"                .append(getDob())","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"francisyzy"},"content":"                .append(\"; BloodType: \")","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"francisyzy"},"content":"                .append(getBloodType());","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"francisyzy"},"content":"        Set\u003cAllergy\u003e allergySet \u003d getAllergy();","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"francisyzy"},"content":"        if (!allergySet.isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"francisyzy"},"content":"            builder.append(\"; Allergies: \");","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"francisyzy"},"content":"            allergySet.forEach(builder::append);","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"francisyzy"},"content":"        Set\u003cVaccine\u003e vaccineSet \u003d getVaccine();","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"francisyzy"},"content":"        if (!vaccineSet.isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"francisyzy"},"content":"            builder.append(\"; Vaccines: \");","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"francisyzy"},"content":"            vaccineSet.forEach(builder::append);","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":1,"francisyzy":111,"-":61}},{"path":"src/main/java/seedu/vms/model/patient/PatientManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.StorageModel;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":" * Wraps all data at the patient-manager level","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" * Duplicates are not allowed (by .isSamePatient comparison)","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"public class PatientManager extends StorageModel\u003cPatient\u003e implements ReadOnlyPatientManager {","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    public PatientManager() {}","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"     * Creates an PatientManager using the Patients in the {@code toBeCopied}","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    public PatientManager(ReadOnlyPatientManager toBeCopied) {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"        super(toBeCopied);","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"francisyzy":18}},{"path":"src/main/java/seedu/vms/model/patient/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" * Represents a Patient\u0027s phone number in the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"daitenshionyan":1,"francisyzy":2,"-":50}},{"path":"src/main/java/seedu/vms/model/patient/ReadOnlyPatientManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ReadOnlyStorageModel;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":" * A {@code ReadOnlyStorageModel} of {@code Patient}.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":" * \u003cp\u003eInterface does not add any new methods but acts as a marker of a read","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" * only patient storage model.","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public interface ReadOnlyPatientManager extends ReadOnlyStorageModel\u003cPatient\u003e {}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"daitenshionyan":3,"francisyzy":4,"-":4}},{"path":"src/main/java/seedu/vms/model/patient/Vaccine.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" * Represents a Vaccine in the patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidVaccineName(String)}","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"public class Vaccine {","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Vaccine names should be alphanumeric\";","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    public final String vaccineName;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     * Constructs a {@code Vaccine}.","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     * @param vaccineName A valid allergy name.","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    public Vaccine(String vaccineName) {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(vaccineName);","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        checkArgument(isValidVaccineName(vaccineName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        this.vaccineName \u003d vaccineName;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * Returns true if a given string is a valid allergy name.","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    public static boolean isValidVaccineName(String test) {","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"                || (other instanceof Vaccine // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"                        \u0026\u0026 vaccineName.equals(((Vaccine) other).vaccineName)); // state check","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        return vaccineName.hashCode();","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    public String toString() {","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        return \u0027(\u0027 + vaccineName + \u0027)\u0027;","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"francisyzy":54}},{"path":"src/main/java/seedu/vms/model/patient/exceptions/DuplicatePatientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient.exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":" * Signals that the operation will result in duplicate Patients (Patients are","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":" * considered duplicates if they have the same identity).","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"public class DuplicatePatientException extends RuntimeException {","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"    public DuplicatePatientException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"        super(\"Operation would result in duplicate patients\");","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"francisyzy":11}},{"path":"src/main/java/seedu/vms/model/patient/exceptions/PatientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient.exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":" * Signals that the operation is unable to find the specified patient.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"public class PatientNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"francisyzy":6}},{"path":"src/main/java/seedu/vms/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Allergy;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Vaccine;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":" * Contains utility methods for populating {@code PatientManager} with sample data.","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    public static Patient[] getSamplePatients() {","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"        return new Patient[] {","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"            new Patient(new Name(\"Alex Yeoh\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"                new Phone(\"87438807\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"                new Dob(\"1983-12-23\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"                new BloodType(\"A+\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"                getAllergySet(),","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"                getVaccineSet(\"Moderna\")),","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"            new Patient(new Name(\"Bernice Yu\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"                new Phone(\"99272758\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"                new Dob(\"2001-03-12\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"                new BloodType(\"B+\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"                getAllergySet(\"seafood\", \"gluten\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"                getVaccineSet()),","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"            new Patient(new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"                new Phone(\"93210283\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"                new Dob(\"1997-04-05\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"                new BloodType(\"B-\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"                getAllergySet(\"gluten\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"                getVaccineSet(\"chinavax\")),","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            new Patient(new Name(\"David Li\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"                new Phone(\"91031282\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"                new Dob(\"1999-07-12\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"                new BloodType(\"AB-\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"                getAllergySet(\"dustmite\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"                getVaccineSet()),","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"            new Patient(new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"                new Phone(\"92492021\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"                new Dob(\"1979-09-23\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"                new BloodType(\"AB+\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"                getAllergySet(\"cathair\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"                getVaccineSet(\"classmates\")),","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"            new Patient(new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"                new Phone(\"92624417\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"                new Dob(\"1995-05-29\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"                new BloodType(\"O+\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"                getAllergySet(),","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"                getVaccineSet())","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"    public static ReadOnlyPatientManager getSamplePatientManager() {","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        PatientManager sampleAb \u003d new PatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        for (Patient samplePatient : getSamplePatients()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"            sampleAb.add(samplePatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"     * Returns a allergy set containing the list of strings given.","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"    public static Set\u003cAllergy\u003e getAllergySet(String... strings) {","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"                .map(Allergy::new)","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"     * Returns a vaccine set containing the list of strings given.","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"    public static Set\u003cVaccine\u003e getVaccineSet(String... strings) {","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"                .map(Vaccine::new)","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"daitenshionyan":1,"-":17,"francisyzy":70}},{"path":"src/main/java/seedu/vms/model/vaccination/Requirement.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.BiPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.AppUtil;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"/** Represents a vaccination requirement. */","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class Requirement {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Requirement set cannot be empty\";","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private final RequirementType reqType;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private final HashSet\u003cGroupName\u003e reqSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code VaxRequirement}.","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * @param reqType - the requirement type.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * @param reqSet - the requirement set.","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NullPointerException if {@code reqType} is {@code null}.","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalArgumentException if {@code reqSet} is empty.","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public Requirement(RequirementType reqType, HashSet\u003cGroupName\u003e reqSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(reqType);","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(reqSet);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        AppUtil.checkArgument(isValidReqSet(reqSet), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        this.reqType \u003d reqType;","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        this.reqSet \u003d new HashSet\u003c\u003e(reqSet);","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    public static boolean isValidReqSet(HashSet\u003cGroupName\u003e reqSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        return !reqSet.isEmpty();","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     * Checks if the given set satisfies the requirements.","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     * @param grpSet - the group set to check for.","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    public boolean check(HashSet\u003cGroupName\u003e grpSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        return reqType.check(reqSet, grpSet);","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    public RequirementType getReqType() {","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        return reqType;","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    public HashSet\u003cGroupName\u003e getReqSet() {","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        return new HashSet\u003c\u003e(reqSet);","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"     * Returns a copy of this requirement. Changes to one will not affect","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"     * the other.","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"     * @return a copy of this requirement.","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    public Requirement copy() {","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"        return new Requirement(reqType, reqSet);","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"     * Returns a copy of the given list of {@code VaxRequirements}. Returned","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"     * list is immutable and changes to the original will not be reflected in","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"     * the copy.","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"     * @param reqs - the list of requirements to copy.","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"     * @return a copy of the specified list.","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NullPointerException if list given is {@code null}.","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    public static List\u003cRequirement\u003e copy(List\u003cRequirement\u003e reqs) {","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        return reqs.stream()","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"                .map(req -\u003e req.copy())","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"            return true;","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        if (!(other instanceof Requirement)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"            return false;","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"        Requirement casted \u003d (Requirement) other;","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"        return reqType \u003d\u003d casted.reqType \u0026\u0026 reqSet.equals(casted.reqSet);","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"        int result \u003d 17;","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"        result \u003d 37 * result + reqType.hashCode();","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"        result \u003d 37 * result + reqSet.hashCode();","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"        return result;","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"    /** Represents the type of a vaccination requirement. */","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"    public static enum RequirementType {","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"        /** Ensures all elements in the required set are present. */","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"        ALL(RequirementType::checkAll),","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"        /** Ensures that at least one element in the required set is present. */","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"        ANY(RequirementType::checkAny),","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"        /** Ensures that no elements in the required set are present. */","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"        NONE(RequirementType::checkNone);","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"        private final BiPredicate\u003cHashSet\u003cGroupName\u003e, HashSet\u003cGroupName\u003e\u003e checker;","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"        private RequirementType(BiPredicate\u003cHashSet\u003cGroupName\u003e, HashSet\u003cGroupName\u003e\u003e checker) {","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"            this.checker \u003d checker;","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"        private boolean check(HashSet\u003cGroupName\u003e reqSet, HashSet\u003cGroupName\u003e checkingSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"            return checker.test(reqSet, checkingSet);","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"        private static boolean checkAll(HashSet\u003cGroupName\u003e reqSet, HashSet\u003cGroupName\u003e checkingSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"            for (GroupName grp : reqSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"                if (!checkingSet.contains(grp)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"                    return false;","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"            return true;","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"        private static boolean checkAny(HashSet\u003cGroupName\u003e reqSet, HashSet\u003cGroupName\u003e checkingSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"            for (GroupName grp : reqSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"                if (checkingSet.contains(grp)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"                    return true;","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"            // reqSet is assumed to always NOT be empty","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"            return false;","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"        private static boolean checkNone(HashSet\u003cGroupName\u003e reqSet, HashSet\u003cGroupName\u003e checkingSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"            return !checkAny(reqSet, checkingSet);","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"daitenshionyan":167}},{"path":"src/main/java/seedu/vms/model/vaccination/VaxChecker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":" * A utility class to check if a patient meets the requirements to take a","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":" * vaccination.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"public class VaxChecker {","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     * Checks if the given attributes of a patient meets the requirements to","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * take the specified vaccination.","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * @param vaxType - the vaccination type to check.","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     * @param age - the age ot the patient.","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"     * @param records - the list of {@code VaxRecord} of the patient.","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * @param time - the time of the shot.","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * @return {@code true} if the patient meets the requirements and","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code false} otherwise.","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public static boolean check(VaxType vaxType,","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"                Age age, HashSet\u003cGroupName\u003e allergies, List\u003cVaxRecord\u003e records, LocalDateTime time) {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        boolean isWithinAge \u003d age.compareTo(vaxType.getMinAge()) * vaxType.getMaxAge().compareTo(age) \u003e\u003d 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        boolean isSpaced \u003d records.isEmpty();","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        if (!isSpaced) {","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"            isSpaced \u003d checkSpacing(vaxType, records, time);","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        boolean isAllergiesSatisfied \u003d checkReq(vaxType.getAllergyReqs(), allergies);","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        boolean isHistorySatisfied \u003d checkHistReq(vaxType.getHistoryReqs(), records);","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        return isWithinAge \u0026\u0026 isSpaced \u0026\u0026 isAllergiesSatisfied \u0026\u0026 isHistorySatisfied;","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    private static boolean checkSpacing(VaxType vaccination,","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"                List\u003cVaxRecord\u003e records, LocalDateTime time) {","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cVaxRecord\u003e recordsCopy \u003d new ArrayList\u003c\u003e(records);","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        recordsCopy.sort(Comparator.naturalOrder());","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime lastDoseTime \u003d recordsCopy.get(recordsCopy.size() - 1).getTimeTaken();","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        LocalDateTime earliestDoseTime \u003d lastDoseTime.plus(vaccination.getMinSpacing(), ChronoUnit.DAYS);","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        return earliestDoseTime.isBefore(time) || earliestDoseTime.isEqual(time);","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    private static boolean checkHistReq(List\u003cRequirement\u003e reqs, List\u003cVaxRecord\u003e records) {","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cHashSet\u003cGroupName\u003e\u003e grpSets \u003d getHistGrpSet(records);","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        ArrayDeque\u003cRequirement\u003e pendingReqs \u003d new ArrayDeque\u003c\u003e(reqs);","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        for (HashSet\u003cGroupName\u003e grpSet : grpSets) {","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"            ArrayDeque\u003cRequirement\u003e unsatisfiedReqs \u003d new ArrayDeque\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"            while (!pendingReqs.isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"                Requirement req \u003d pendingReqs.pop();","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"                if (!req.check(grpSet)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"                    unsatisfiedReqs.add(req);","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"            pendingReqs \u003d unsatisfiedReqs;","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"            if (pendingReqs.isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"                return true;","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        return false;","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"    private static List\u003cHashSet\u003cGroupName\u003e\u003e getHistGrpSet(List\u003cVaxRecord\u003e records) {","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cHashSet\u003cGroupName\u003e\u003e grpSets \u003d records.stream()","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"                .map(record -\u003e record.getVaccination().getGroups())","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        if (records.isEmpty()) {","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"            grpSets.add(new HashSet\u003c\u003e());","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        return grpSets;","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"    private static boolean checkReq(List\u003cRequirement\u003e reqs, HashSet\u003cGroupName\u003e set) {","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        for (Requirement req : reqs) {","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"            if (!req.check(set)) {","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"                return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"        return true;","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"daitenshionyan":92,"francisyzy":5}},{"path":"src/main/java/seedu/vms/model/vaccination/VaxRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"/** Represents a vaccination record of a patient. */","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"public class VaxRecord implements Comparable\u003cVaxRecord\u003e {","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"    private final VaxType vaccination;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"    private final LocalDateTime timeTaken;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code VaxRecord}.","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"     * @param vaccination - the type of vaccination taken.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     * @param timeTaken - the time the vaccination was taken.","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public VaxRecord(VaxType vaccination, LocalDateTime timeTaken) {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"        this.vaccination \u003d vaccination;","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"        this.timeTaken \u003d timeTaken;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    public VaxType getVaccination() {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        return vaccination;","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public LocalDateTime getTimeTaken() {","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        return timeTaken;","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    public int compareTo(VaxRecord other) {","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        int diff \u003d timeTaken.compareTo(other.timeTaken);","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        if (diff \u003d\u003d 0) {","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"            diff \u003d vaccination.getName().compareTo(other.vaccination.getName());","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        return diff;","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"daitenshionyan":41,"francisyzy":1}},{"path":"src/main/java/seedu/vms/model/vaccination/VaxRecordKey.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":" * Similar to {@link VaxRecord} however, only containing the key to the","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":" * {@link VaxType} instead of the instance.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"public class VaxRecordKey {","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    private final GroupName vaxKey;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private final LocalDateTime timeTaken;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code VaxRecordKey}.","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     * @param vaxKey - name of the vaccination.","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * @param timeTaken - the time the vaccination was taken.","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * @throws NullPointerException if any parameters are {@code null}.","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    public VaxRecordKey(GroupName vaxKey, LocalDateTime timeTaken) {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        this.vaxKey \u003d Objects.requireNonNull(vaxKey);","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        this.timeTaken \u003d Objects.requireNonNull(timeTaken);","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    public String getVaxTypeKey() {","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        return vaxKey.toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    public LocalDateTime getTimeTaken() {","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        return timeTaken;","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"            return true;","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        if (!(other instanceof VaxRecordKey)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"            return false;","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        VaxRecordKey casted \u003d (VaxRecordKey) other;","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        return vaxKey.equals(casted.vaxKey) \u0026\u0026 timeTaken.equals(casted.timeTaken);","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        return Objects.hash(vaxKey, timeTaken);","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"daitenshionyan":60}},{"path":"src/main/java/seedu/vms/model/vaccination/VaxType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.AppUtil;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" * Represents a vaccination type.","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"public class VaxType implements Comparable\u003cVaxType\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_AGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"            \"Minimum age must be lesser than or equals to maximum age\";","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public static final String MESSAGE_SPACING_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"            \"Spacing must be a positive integer\";","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public static final HashSet\u003cGroupName\u003e DEFAULT_GROUP_SET \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    public static final Age DEFAULT_MIN_AGE \u003d Age.MIN_AGE;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    public static final Age DEFAULT_MAX_AGE \u003d Age.MAX_AGE;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    public static final int DEFAULT_MIN_SPACING \u003d Integer.MAX_VALUE;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    public static final List\u003cRequirement\u003e DEFAULT_HISTORY_REQS \u003d List.of();","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    public static final List\u003cRequirement\u003e DEFAULT_ALLERGY_REQS \u003d List.of();","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    private final GroupName name;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    private final HashSet\u003cGroupName\u003e groups;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    private final Age minAge;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    private final Age maxAge;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    private final int minSpacing;","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    private final List\u003cRequirement\u003e historyReqs;","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    private final List\u003cRequirement\u003e allergyReqs;","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code VaxType}.","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalArgumentException if {@code minAge \u003e maxAge} or","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code minSpacing \u003c 0}.","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    public VaxType(GroupName name, HashSet\u003cGroupName\u003e groups,","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"                Age minAge, Age maxAge, int minSpacing,","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"                List\u003cRequirement\u003e allergyReqs, List\u003cRequirement\u003e historyReqs) {","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        AppUtil.checkArgument(isValidRange(minAge, maxAge), MESSAGE_AGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        AppUtil.checkArgument(isValidSpacing(minSpacing), MESSAGE_SPACING_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        this.groups \u003d groups;","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        this.minAge \u003d minAge;","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        this.maxAge \u003d maxAge;","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        this.minSpacing \u003d minSpacing;","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        this.allergyReqs \u003d allergyReqs;","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        this.historyReqs \u003d historyReqs;","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    public static boolean isValidRange(Age minAge, Age maxAge) {","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        return maxAge.compareTo(minAge) \u003e\u003d 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    public static boolean isValidSpacing(int minSpacing) {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        return minSpacing \u003e\u003d 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    public String getName() {","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        return name.getName();","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"    public GroupName getGroupName() {","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        return name;","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    public HashSet\u003cGroupName\u003e getGroups() {","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        return new HashSet\u003c\u003e(groups);","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    public Age getMinAge() {","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        return minAge;","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"    public Age getMaxAge() {","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        return maxAge;","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"    public int getMinSpacing() {","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"        return minSpacing;","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"    public List\u003cRequirement\u003e getHistoryReqs() {","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        return Requirement.copy(historyReqs);","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"    public List\u003cRequirement\u003e getAllergyReqs() {","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"        return Requirement.copy(allergyReqs);","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"    public int compareTo(VaxType other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"        return name.compareTo(other.name);","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"    public String toString() {","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"        return name.toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"        if (!(other instanceof VaxType)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"        VaxType casted \u003d (VaxType) other;","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"        return name.equals(casted.name) \u0026\u0026 groups.equals(casted.groups)","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"                \u0026\u0026 minAge.equals(casted.minAge) \u0026\u0026 maxAge.equals(casted.maxAge)","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"                \u0026\u0026 minSpacing \u003d\u003d casted.minSpacing","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"                \u0026\u0026 allergyReqs.equals(casted.allergyReqs)","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"                \u0026\u0026 historyReqs.equals(casted.historyReqs);","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"        return Objects.hash(name, groups, minAge, maxAge, minSpacing, allergyReqs, historyReqs);","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"daitenshionyan":142}},{"path":"src/main/java/seedu/vms/model/vaccination/VaxTypeAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":" * Similar to {@link java.util.function.Function} however functional method may","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":" * throw an exception.","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"@FunctionalInterface","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"public interface VaxTypeAction {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"     * Performs an action of the given {@code VaxTypeManager}.","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"     * @param manager - the manager to work on.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException illegal values are present.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public VaxType apply(VaxTypeManager manager) throws IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daitenshionyan":19}},{"path":"src/main/java/seedu/vms/model/vaccination/VaxTypeBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" * A factory class to create, rename or edit {@link VaxType} to its set","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" * {@link VaxTypeManager}.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"public class VaxTypeBuilder {","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private static final String MESSAGE_DUPLICATE_TYPE \u003d \"Vaccination type already exist\";","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private static final String MESSAGE_MISSING_TYPE \u003d \"Vaccination type does not exist\";","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private final GroupName refName;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private final GroupName name;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private final Optional\u003cHashSet\u003cGroupName\u003e\u003e setGrps;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private final Optional\u003cAge\u003e setMinAge;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private final Optional\u003cAge\u003e setMaxAge;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    private final Optional\u003cInteger\u003e setMinSpacing;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    private final Optional\u003cList\u003cRequirement\u003e\u003e setAllergyReqs;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    private final Optional\u003cList\u003cRequirement\u003e\u003e setHistoryReqs;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    private VaxTypeBuilder(GroupName refName, GroupName name, Optional\u003cHashSet\u003cGroupName\u003e\u003e setGrps,","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"                Optional\u003cAge\u003e setMinAge, Optional\u003cAge\u003e setMaxAge, Optional\u003cInteger\u003e setMinSpacing,","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"                Optional\u003cList\u003cRequirement\u003e\u003e setAllergyReqs, Optional\u003cList\u003cRequirement\u003e\u003e setHistoryReqs) {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        this.refName \u003d refName;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        this.setGrps \u003d setGrps.map(HashSet::new);","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        this.setMinAge \u003d setMinAge;","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        this.setMaxAge \u003d setMaxAge;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        this.setMinSpacing \u003d setMinSpacing;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        this.setAllergyReqs \u003d setAllergyReqs.map(Requirement::copy);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        this.setHistoryReqs \u003d setHistoryReqs.map(Requirement::copy);","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     * Factory method to create a {@code VaxTypeBuilder}.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     * @param refName - the name of the existing vaccination type to build","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"     *      from.","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - the name of the {@code VaxType} to create.","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    public static VaxTypeBuilder of(GroupName refName, GroupName name) {","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        return new VaxTypeBuilder(refName, name,","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"                Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"                Optional.empty(), Optional.empty(), Optional.empty());","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"     * Factory method to create a {@code VaxTypeBuilder} without a reference.","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - the name of the {@code VaxType} to create.","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    public static VaxTypeBuilder of(GroupName name) {","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        return VaxTypeBuilder.of(name, name);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeBuilder setName(GroupName name) {","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        return new VaxTypeBuilder(refName, name, setGrps,","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"                setMinAge, setMaxAge, setMinSpacing,","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"                setAllergyReqs, setHistoryReqs);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeBuilder setGroups(HashSet\u003cGroupName\u003e grps) {","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        return new VaxTypeBuilder(refName, name, Optional.ofNullable(grps),","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"                setMinAge, setMaxAge, setMinSpacing,","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"                setAllergyReqs, setHistoryReqs);","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeBuilder setMinAge(Age minAge) {","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        return new VaxTypeBuilder(refName, name, setGrps,","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"                Optional.ofNullable(minAge), setMaxAge, setMinSpacing,","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"                setAllergyReqs, setHistoryReqs);","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeBuilder setMaxAge(Age maxAge) {","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        return new VaxTypeBuilder(refName, name, setGrps,","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"                setMinAge, Optional.ofNullable(maxAge), setMinSpacing,","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"                setAllergyReqs, setHistoryReqs);","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeBuilder setMinSpacing(int minSpacing) {","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"        return new VaxTypeBuilder(refName, name, setGrps,","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"                setMinAge, setMaxAge, Optional.ofNullable(minSpacing),","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"                setAllergyReqs, setHistoryReqs);","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeBuilder setAllergyReqs(List\u003cRequirement\u003e allergyReqs) {","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"        return new VaxTypeBuilder(refName, name, setGrps,","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"                setMinAge, setMaxAge, setMinSpacing,","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"                Optional.ofNullable(allergyReqs), setHistoryReqs);","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeBuilder setHistoryReqs(List\u003cRequirement\u003e historyReqs) {","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"        return new VaxTypeBuilder(refName, name, setGrps,","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"                setMinAge, setMaxAge, setMinSpacing,","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"                setAllergyReqs, Optional.ofNullable(historyReqs));","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"     * Builds the vaccination type and adds it to the specified","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"     * {@code VaxTypeManager}.","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"     * @return the built {@code VaxType}.","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if the a vaccination type might be","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"     *      replaced.","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"    public VaxType create(VaxTypeManager manager) throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"        if (manager.contains(refName.toString()) || manager.contains(name.toString())) {","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"            throw new IllegalValueException(MESSAGE_DUPLICATE_TYPE);","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"        return build(manager);","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"     * Builds and updates the vaccination type in the specified","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"     * {@code VaxTypeManager}.","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"     * @return the built {@code VaxType}.","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if the reference vaccination is not","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"     *      present or if the vaccination type is being renamed to one that","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"     *      already exists.","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"    public VaxType update(VaxTypeManager manager) throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"        if (!manager.contains(refName.toString())","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"                    || (!refName.equals(name) \u0026\u0026 manager.contains(name.toString()))) {","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"            throw new IllegalValueException(MESSAGE_MISSING_TYPE);","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"        return build(manager);","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"    private VaxType build(VaxTypeManager manager) throws IllegalValueException {","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"        Optional\u003cVaxType\u003e refVaxType \u003d manager.remove(refName.toString());","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cGroupName\u003e grps \u003d setGrps.orElse(refVaxType","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"                .map(VaxType::getGroups)","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(VaxType.DEFAULT_GROUP_SET));","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"        Age minAge \u003d setMinAge.orElse(refVaxType","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"                .map(VaxType::getMinAge)","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(VaxType.DEFAULT_MIN_AGE));","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"        Age maxAge \u003d setMaxAge.orElse(refVaxType","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"                .map(VaxType::getMaxAge)","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(VaxType.DEFAULT_MAX_AGE));","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"        Integer minSpacing \u003d setMinSpacing.orElse(refVaxType","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"                .map(VaxType::getMinSpacing)","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(VaxType.DEFAULT_MIN_SPACING));","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cRequirement\u003e allergyReqs \u003d setAllergyReqs.orElse(refVaxType","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"                .map(VaxType::getAllergyReqs)","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(VaxType.DEFAULT_ALLERGY_REQS));","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cRequirement\u003e historyReqs \u003d setHistoryReqs.orElse(refVaxType","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"                .map(VaxType::getHistoryReqs)","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"                .orElse(VaxType.DEFAULT_HISTORY_REQS));","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"        if (!VaxType.isValidRange(minAge, maxAge)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"            throw new IllegalValueException(VaxType.MESSAGE_AGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"        VaxType vaxType \u003d new VaxType(name, grps, minAge, maxAge, minSpacing, allergyReqs, historyReqs);","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"        manager.add(vaxType);","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"        return vaxType;","lastModifiedDate":"2023-03-03"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"daitenshionyan":181}},{"path":"src/main/java/seedu/vms/model/vaccination/VaxTypeManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":" * A manager to handle {@code VaxType}.","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":" *","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" * \u003cp\u003eThe uniqueness of {@code VaxType} names are maintained.","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class VaxTypeManager {","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private final ObservableMap\u003cString, VaxType\u003e typeMap;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    private final ObservableMap\u003cString, VaxType\u003e unmodifiableTypeMap;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs an empty {@code VaxTypeManager}.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeManager() {","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        typeMap \u003d FXCollections.observableHashMap();","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        unmodifiableTypeMap \u003d FXCollections.unmodifiableObservableMap(typeMap);","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * Adds the specified {@code VaxType}. If there is another {@code VaxType}","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * with the same name as the specified, that {@code VaxType} is replaced.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * @param vaxType - the {@code VaxType} to add.","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    public void add(VaxType vaxType) {","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        typeMap.put(vaxType.getName(), vaxType);","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the {@code VaxType} mapped to the specified name, wrapped in an","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * {@code Optional}. If there are no mappings to the specified name,","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     * {@code Optional.empty} is returned instead.","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - the name of the {@code VaxType} to retrieve.","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     * @return the {@code VaxType} mapped to the specified name, wrapped in an","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code Optional}.","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    public Optional\u003cVaxType\u003e get(String name) {","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.ofNullable(typeMap.get(name));","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"     * Removes the {@code VaxType} with the specified name. The {@code VaxType}","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"     * removed is returned and wrapped in an {@code Optional}. If there are no","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"     * mappings, to the specified name, nothing is done and","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"     * {@code Optional.empty} is returned.","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - the name of the {@code VaxType} to remove.","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"     * @return the {@code VaxType} removed wrapped in an {@code Optional}.","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    public Optional\u003cVaxType\u003e remove(String name) {","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        return Optional.ofNullable(typeMap.remove(name));","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"     * Returns if this storage map contains a mapping to the specified name.","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"     * @return {@code true} if there is a {@code VaxType} mapped to the","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"     *      specified name and {@code false} otherwise.","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    public boolean contains(String name) {","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        return typeMap.containsKey(name);","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"     * Returns an unmodifiable map view of this storage.","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"     * @return an unmodifiable map view ot this storage.","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableMap\u003cString, VaxType\u003e asUnmodifiableObservableMap() {","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        return unmodifiableTypeMap;","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"daitenshionyan":86}},{"path":"src/main/java/seedu/vms/storage/JsonAdaptedAge.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":" * A JSON friendly representation of {@link Age}.","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"public class JsonAdaptedAge {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    public final Integer value;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code JsonAdaptedAge}.","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public JsonAdaptedAge(Integer value) {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * Converts an {@code Age} to a {@code JsonAdaptedAge}.","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * @param age - the age to convert.","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * @return the {@code JsonAdaptedAge} representation of the specified","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     *      {@code Age}.","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    public static JsonAdaptedAge fromModelType(Age age) {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        return new JsonAdaptedAge(age.getValue());","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    @JsonValue","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    public Integer getValue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        return value;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the {@code Age} that this {@code JsonAdaptedAge} represents.","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if the age cannot be converted.","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    public Age toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        if (!Age.isValid(value)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"            throw new IllegalValueException(Age.MESSAGE_CONSTRAINT);","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        return new Age(value);","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"daitenshionyan":55}},{"path":"src/main/java/seedu/vms/storage/JsonAdaptedAllergy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Allergy;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" * Jackson-friendly version of {@link Allergy}.","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"class JsonAdaptedAllergy {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    private final String allergyName;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     * Constructs a {@code JsonAdaptedAllergy} with the given {@code allergyName}.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    public JsonAdaptedAllergy(String allergyName) {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        this.allergyName \u003d allergyName;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     * Converts a given {@code Allergy} into this class for Jackson use.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    public JsonAdaptedAllergy(Allergy source) {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        allergyName \u003d source.allergyName;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    @JsonValue","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    public String getAllergyName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        return allergyName;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     * Converts this Jackson-friendly adapted allergy object into the model\u0027s {@code Allergy} object.","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted allergy.","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    public Allergy toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        if (!Allergy.isValidAllergyName(allergyName)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"            throw new IllegalValueException(Allergy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        return new Allergy(allergyName);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"francisyzy":48}},{"path":"src/main/java/seedu/vms/storage/JsonAdaptedGroupName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":" * A JSON friendly version of {@link GroupName}.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"public class JsonAdaptedGroupName {","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private final String name;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code JsonAdaptedGroupName}.","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    public JsonAdaptedGroupName(String name) {","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * Converts the model type {@code GroupName} to a","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     * {@code JsonAdaptedGroupName}.","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    public static JsonAdaptedGroupName fromModelType(GroupName grpName) {","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        return new JsonAdaptedGroupName(grpName.getName());","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * Converts a collection of {@code GroupName} to a list of","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     * {@code JsonAdaptedGroupName}.","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    public static List\u003cJsonAdaptedGroupName\u003e fromModelCollection(Collection\u003cGroupName\u003e grpNames) {","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        return grpNames.stream()","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"                .map(JsonAdaptedGroupName::fromModelType)","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    @JsonValue","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    public String getName() {","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        return name;","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the {@code GroupName} that this {@code JsonAdaptedGroupName}","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"     * represents.","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if the name is not value.","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    public GroupName toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        if (!GroupName.isValidName(name)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"            throw new IllegalValueException(GroupName.MESSAGE_CONSTRAINT);","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        return new GroupName(name);","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"     * Converts a collection of {@code JsonAdaptedGroupName} to the","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"     * {@code GroupName} that the represent.","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if any {@code JsonAdaptedGroupName} is not","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"     *      able to be converted.","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"    public static HashSet\u003cGroupName\u003e toModelSet(Collection\u003cJsonAdaptedGroupName\u003e reqSet)","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"                throws IllegalValueException {","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cGroupName\u003e modelReqSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"        for (JsonAdaptedGroupName req : reqSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"            modelReqSet.add(req.toModelType());","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        return modelReqSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"daitenshionyan":86}},{"path":"src/main/java/seedu/vms/storage/JsonAdaptedPatient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Allergy;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Vaccine;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":" * Jackson-friendly version of {@link Patient}.","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"class JsonAdaptedPatient {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Patient\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    private final String dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    private final String bloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    private final List\u003cJsonAdaptedAllergy\u003e allergies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    private final List\u003cJsonAdaptedVaccine\u003e vaccines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     * Constructs a {@code JsonAdaptedPatient} with the given patient details.","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    public JsonAdaptedPatient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"            @JsonProperty(\"dob\") String dob, @JsonProperty(\"bloodType\") String bloodType,","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            @JsonProperty(\"allergies\") List\u003cJsonAdaptedAllergy\u003e allergies,","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"            @JsonProperty(\"vaccines\") List\u003cJsonAdaptedVaccine\u003e vaccines) {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        this.dob \u003d dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        this.bloodType \u003d bloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        if (allergies !\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"            this.allergies.addAll(allergies);","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        if (vaccines !\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"            this.vaccines.addAll(vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"     * Converts a given {@code Patient} into this class for Jackson use.","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"    public JsonAdaptedPatient(Patient source) {","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"        dob \u003d source.getDob().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        bloodType \u003d source.getBloodType().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        allergies.addAll(source.getAllergy().stream()","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"                .map(JsonAdaptedAllergy::new)","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        vaccines.addAll(source.getVaccine().stream()","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"                .map(JsonAdaptedVaccine::new)","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"     * Converts this Jackson-friendly adapted patient object into the model\u0027s {@code Patient} object.","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted patient.","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"    public Patient toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"        final List\u003cAllergy\u003e patientAllergies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"        for (JsonAdaptedAllergy allergy : allergies) {","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"            patientAllergies.add(allergy.toModelType());","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"        final List\u003cVaccine\u003e patientVaccines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"        for (JsonAdaptedVaccine vaccine : vaccines) {","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"            patientVaccines.add(vaccine.toModelType());","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"        if (dob \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Dob.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"        if (!Dob.isValidDob(dob)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"            throw new IllegalValueException(Dob.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"        final Dob modelDob \u003d new Dob(dob);","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"        if (bloodType \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, BloodType.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"        if (!BloodType.isValidBloodType(bloodType)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"            throw new IllegalValueException(BloodType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"francisyzy"},"content":"        final BloodType modelBloodType \u003d new BloodType(bloodType);","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"        final Set\u003cAllergy\u003e modelAllergies \u003d new HashSet\u003c\u003e(patientAllergies);","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"        final Set\u003cVaccine\u003e modelVaccines \u003d new HashSet\u003c\u003e(patientVaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"francisyzy"},"content":"        return new Patient(modelName, modelPhone, modelDob, modelBloodType, modelAllergies, modelVaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"daitenshionyan":2,"-":53,"francisyzy":69}},{"path":"src/main/java/seedu/vms/storage/JsonAdaptedPatientData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":" * Jackson-friendly version of {@code IdData\u003cPatient\u003e}.","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"public class JsonAdaptedPatientData {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    private final boolean isActive;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    private final int id;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    private final JsonAdaptedPatient patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     * Constructs a {@code JsonAdaptedPatientData} with the given patient details.","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public JsonAdaptedPatientData(","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"            @JsonProperty(\"isActive\") boolean isActive,","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"            @JsonProperty(\"id\") int id,","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"            @JsonProperty(\"patient\") JsonAdaptedPatient patient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        this.isActive \u003d isActive;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"     * Converts a given {@code IdData\u003cPatient\u003e} into this class for Jackson use.","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    public JsonAdaptedPatientData(IdData\u003cPatient\u003e patientData) {","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        isActive \u003d patientData.isActive();","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        id \u003d patientData.getId();","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        patient \u003d new JsonAdaptedPatient(patientData.getValue());","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"     * Converts this Jackson-friendly adapted patient data object into the model\u0027s {@code IdData\u003cPatient\u003e} object.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted patient data.","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    public IdData\u003cPatient\u003e toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        return new IdData\u003c\u003e(isActive, id, patient.toModelType());","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"francisyzy":52}},{"path":"src/main/java/seedu/vms/storage/JsonAdaptedVaccine.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Vaccine;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" * Jackson-friendly version of {@link Vaccine}.","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"class JsonAdaptedVaccine {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    private final String vaccineName;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"     * Constructs a {@code JsonAdaptedVaccine} with the given {@code vaccineName}.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    public JsonAdaptedVaccine(String vaccineName) {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"        this.vaccineName \u003d vaccineName;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     * Converts a given {@code Vaccine} into this class for Jackson use.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    public JsonAdaptedVaccine(Vaccine source) {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        vaccineName \u003d source.vaccineName;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    @JsonValue","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    public String getVaccineName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        return vaccineName;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     * Converts this Jackson-friendly adapted vaccine object into the model\u0027s {@code Vaccine} object.","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted vaccine.","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    public Vaccine toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        if (!Vaccine.isValidVaccineName(vaccineName)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"            throw new IllegalValueException(Vaccine.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        return new Vaccine(vaccineName);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"francisyzy":48}},{"path":"src/main/java/seedu/vms/storage/JsonPatientManagerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.core.LogsCenter;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.util.FileUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.util.JsonUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":" * A class to access PatientManager data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"public class JsonPatientManagerStorage implements PatientManagerStorage {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPatientManagerStorage.class);","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    public JsonPatientManagerStorage(Path filePath) {","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    public Path getPatientManagerFilePath() {","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        return filePath;","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    public ReadOnlyPatientManager readPatientManager() throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        return readPatientManager(filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     * Similar to {@link #readPatientManager()}.","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    public ReadOnlyPatientManager readPatientManager(Path filePath) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"            return JsonUtil","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"                    .deserializeFromFile(filePath, JsonSerializablePatientManager.class)","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"                    .toModelType();","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"            throw new IOException(\"Illegal values present\", ive);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"    public void savePatientManager(ReadOnlyPatientManager patientManager) throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"        savePatientManager(patientManager, filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"     * Similar to {@link #savePatientManager(ReadOnlyPatientManager)}.","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"    public void savePatientManager(ReadOnlyPatientManager patientManager, Path filePath) throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(patientManager);","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        JsonUtil.serializeToFile(filePath, new JsonSerializablePatientManager(patientManager));","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"daitenshionyan":8,"francisyzy":67}},{"path":"src/main/java/seedu/vms/storage/JsonSerializablePatientManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.LimitExceededException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":" * An Immutable PatientManager that is serializable to JSON format.","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"@JsonRootName(value \u003d \"patientmanager\")","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"class JsonSerializablePatientManager {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public static final String DUPLICATE_ID \u003d \"Patients list contains duplicate ID(s).\";","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    private final List\u003cJsonAdaptedPatientData\u003e datas \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     * Constructs a {@code JsonSerializablePatientManager} with the given patients.","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    public JsonSerializablePatientManager(@JsonProperty(\"datas\") List\u003cJsonAdaptedPatientData\u003e datas) {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        this.datas.addAll(datas);","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"     * Converts a given {@code ReadOnlyPatientManager} into this class for Jackson use.","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializablePatientManager}.","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    public JsonSerializablePatientManager(ReadOnlyPatientManager source) {","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        datas.addAll(source.getMapView()","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"                .values()","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"                .stream()","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"                .map(JsonAdaptedPatientData::new)","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"     * Converts this patient manager into the model\u0027s {@code PatientManager} object.","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    public PatientManager toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        PatientManager patientManager \u003d new PatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        for (JsonAdaptedPatientData jsonAdaptedPatientData : datas) {","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"            IdData\u003cPatient\u003e patientData \u003d jsonAdaptedPatientData.toModelType();","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"            if (patientManager.contains(patientData.getId())) {","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"                throw new IllegalValueException(DUPLICATE_ID);","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"            try {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"                patientManager.add(patientData);","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"            } catch (LimitExceededException limitEx) {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"                // TODO: better message","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"                throw new IllegalValueException(\"ID limit reached\");","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        return patientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"daitenshionyan":15,"-":34,"francisyzy":22}},{"path":"src/main/java/seedu/vms/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.JsonUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public UserPrefs readUserPrefs() throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    public UserPrefs readUserPrefs(Path prefsFilePath) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(prefsFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        return JsonUtil.deserializeFromFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        Objects.requireNonNull(userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        JsonUtil.serializeToFile(filePath, userPrefs);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"daitenshionyan":12,"-":37}},{"path":"src/main/java/seedu/vms/storage/PatientManagerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" * Represents a storage for {@link seedu.vms.model.patient.PatientManager}.","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"public interface PatientManagerStorage {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    Path getPatientManagerFilePath();","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"     * Returns PatientManager data as a {@link ReadOnlyPatientManager}.","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    ReadOnlyPatientManager readPatientManager() throws IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"     * @see #getPatientManagerFilePath()","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    ReadOnlyPatientManager readPatientManager(Path filePath) throws IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     * Saves the given {@link ReadOnlyPatientManager} to the storage.","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     * @param patientManager cannot be null.","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    void savePatientManager(ReadOnlyPatientManager patientManager) throws IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"     * @see #savePatientManager(ReadOnlyPatientManager)","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    void savePatientManager(ReadOnlyPatientManager patientManager, Path filePath) throws IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"daitenshionyan":2,"francisyzy":42}},{"path":"src/main/java/seedu/vms/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.vaccination.VaxTypeStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"public interface Storage extends PatientManagerStorage, UserPrefsStorage, VaxTypeStorage {","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"daitenshionyan":2,"-":7,"francisyzy":1}},{"path":"src/main/java/seedu/vms/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.LogsCenter;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.vaccination.VaxTypeStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":" * Manages storage of PatientManager data in local storage.","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    private PatientManagerStorage patientManagerStorage;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private VaxTypeStorage vaxTypeStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     * Creates a {@code StorageManager} with the given {@code PatientManagerStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    public StorageManager(","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"            PatientManagerStorage patientManagerStorage,","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"            VaxTypeStorage vaxTypeStorage,","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"            UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        this.patientManagerStorage \u003d patientManagerStorage;","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        this.vaxTypeStorage \u003d vaxTypeStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    public UserPrefs readUserPrefs() throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PatientManager methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    public Path getPatientManagerFilePath() {","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        return patientManagerStorage.getPatientManagerFilePath();","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    public ReadOnlyPatientManager readPatientManager() throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        return readPatientManager(patientManagerStorage.getPatientManagerFilePath());","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    public ReadOnlyPatientManager readPatientManager(Path filePath)","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"            throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        return patientManagerStorage.readPatientManager(filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"    public void savePatientManager(ReadOnlyPatientManager patientManager) throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"        savePatientManager(patientManager, patientManagerStorage.getPatientManagerFilePath());","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"    public void savePatientManager(ReadOnlyPatientManager patientManager, Path filePath) throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        patientManagerStorage.savePatientManager(patientManager, filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Vax Type methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeManager loadDefaultVaxTypes() throws RuntimeException {","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"        logger.fine(\"Attempting to load default vaccination types\");","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        return vaxTypeStorage.loadDefaultVaxTypes();","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeManager loadUserVaxTypes() throws IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"        return vaxTypeStorage.loadUserVaxTypes();","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"    public void saveVaxTypes(VaxTypeManager manager) throws IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        vaxTypeStorage.saveVaxTypes(manager);","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":33,"-":53,"francisyzy":15}},{"path":"src/main/java/seedu/vms/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":" * Represents a storage for {@link seedu.vms.model.UserPrefs}.","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    UserPrefs readUserPrefs() throws IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * Saves the given {@link seedu.vms.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"daitenshionyan":7,"-":28}},{"path":"src/main/java/seedu/vms/storage/vaccination/JsonAdaptedVaxRequirement.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.vaccination;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.JsonAdaptedGroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"/** JSON friendly version of {@link Requirement} */","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class JsonAdaptedVaxRequirement {","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private final Requirement.RequirementType reqType;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    private final List\u003cJsonAdaptedGroupName\u003e reqSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    /** Constructs a {@code JsonAdaptedVaxRequirement}. */","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public JsonAdaptedVaxRequirement(","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"                @JsonProperty(\"reqType\") Requirement.RequirementType reqType,","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"                @JsonProperty(\"reqSet\") List\u003cJsonAdaptedGroupName\u003e reqSet) {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        this.reqType \u003d reqType;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        this.reqSet \u003d reqSet;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * Converts the specified {@code Requirement} to a","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     * {@code JsonAdaptedVaxRequirement}.","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    public static JsonAdaptedVaxRequirement fromModelType(Requirement req) {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        Requirement.RequirementType reqType \u003d req.getReqType();","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cJsonAdaptedGroupName\u003e reqSet \u003d JsonAdaptedGroupName.fromModelCollection(req.getReqSet());","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        return new JsonAdaptedVaxRequirement(reqType, reqSet);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * Converts this JSON friendly version to an {@link Requirement}","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     * instance.","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if reqType or grpSet field is of an illegal value.","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    public Requirement toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        if (reqType \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"            throw new IllegalValueException(\"Missing requirement type\");","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        if (reqSet \u003d\u003d null || reqSet.isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"            throw new IllegalValueException(\"Missing or empty group set\");","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        return new Requirement(reqType, JsonAdaptedGroupName.toModelSet(reqSet));","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"daitenshionyan":55}},{"path":"src/main/java/seedu/vms/storage/vaccination/JsonAdaptedVaxType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.vaccination;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.JsonAdaptedAge;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.JsonAdaptedGroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"/** A JSON friendly version of {@link VaxType}. */","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"public class JsonAdaptedVaxType {","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Vaccination type [%s] is missing\";","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private final JsonAdaptedGroupName name;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private final List\u003cJsonAdaptedGroupName\u003e groups;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    private final JsonAdaptedAge minAge;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    private final JsonAdaptedAge maxAge;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    private final Integer minSpacing;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    private final List\u003cJsonAdaptedVaxRequirement\u003e allergyReqs;","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    private final List\u003cJsonAdaptedVaxRequirement\u003e historyReqs;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    /** Constructs a {@code JsonAdaptedVaxType}. */","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    public JsonAdaptedVaxType(","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"                @JsonProperty(\"name\") JsonAdaptedGroupName name,","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"                @JsonProperty(\"groups\") List\u003cJsonAdaptedGroupName\u003e groups,","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"                @JsonProperty(\"minAge\") JsonAdaptedAge minAge,","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"                @JsonProperty(\"maxAge\") JsonAdaptedAge maxAge,","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"                @JsonProperty(\"minSpacing\") Integer minSpacing,","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"                @JsonProperty(\"allergyReqs\") List\u003cJsonAdaptedVaxRequirement\u003e allergyReqs,","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"                @JsonProperty(\"historyReqs\") List\u003cJsonAdaptedVaxRequirement\u003e historyReqs) {","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        this.groups \u003d groups;","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        this.minAge \u003d minAge;","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        this.maxAge \u003d maxAge;","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        this.minSpacing \u003d minSpacing;","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        this.allergyReqs \u003d allergyReqs;","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        this.historyReqs \u003d historyReqs;","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"     * Converts the specified {@code VaxType} to a","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"     * {@code JsonAdaptedVaxType}.","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    public static JsonAdaptedVaxType fromModelType(VaxType vaxType) {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        JsonAdaptedGroupName name \u003d JsonAdaptedGroupName.fromModelType(vaxType.getGroupName());","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cJsonAdaptedGroupName\u003e groups \u003d JsonAdaptedGroupName.fromModelCollection(vaxType.getGroups());","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        JsonAdaptedAge minAge \u003d JsonAdaptedAge.fromModelType(vaxType.getMinAge());","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        JsonAdaptedAge maxAge \u003d JsonAdaptedAge.fromModelType(vaxType.getMaxAge());","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        Integer minSpacing \u003d vaxType.getMinSpacing();","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cJsonAdaptedVaxRequirement\u003e allergyReqs \u003d convertToAdaptedReq(vaxType.getAllergyReqs());","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cJsonAdaptedVaxRequirement\u003e historyReqs \u003d convertToAdaptedReq(vaxType.getHistoryReqs());","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        return new JsonAdaptedVaxType(name, groups, minAge, maxAge, minSpacing, allergyReqs, historyReqs);","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    private static List\u003cJsonAdaptedVaxRequirement\u003e convertToAdaptedReq(List\u003cRequirement\u003e reqs) {","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"        return reqs.stream()","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"                .map(req -\u003e JsonAdaptedVaxRequirement.fromModelType(req))","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"     * Converts this JSON friendly version to an {@link VaxType} instance. The","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"     * type is added in to the vaccination type map in the process.","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if name field is missing.","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    public VaxType toModelType(VaxTypeManager manager) throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"NAME\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeBuilder builder \u003d VaxTypeBuilder.of(name.toModelType());","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        if (groups !\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"            builder \u003d builder.setGroups(JsonAdaptedGroupName.toModelSet(groups));","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"        if (minAge !\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"            builder \u003d builder.setMinAge(minAge.toModelType());","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        if (maxAge !\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"            builder \u003d builder.setMaxAge(maxAge.toModelType());","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"        if (minSpacing !\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"            builder \u003d builder.setMinSpacing(minSpacing);","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"        if (allergyReqs !\u003d null) {","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"            builder \u003d builder.setAllergyReqs(toReqList(allergyReqs));","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"        if (historyReqs !\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"            builder \u003d builder.setHistoryReqs(toReqList(historyReqs));","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"        return builder.create(manager);","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"    private List\u003cRequirement\u003e toReqList(List\u003cJsonAdaptedVaxRequirement\u003e adaptedList)","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"                throws IllegalValueException {","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cRequirement\u003e reqs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"        for (JsonAdaptedVaxRequirement adapted : adaptedList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"            reqs.add(adapted.toModelType());","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"        return reqs;","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"daitenshionyan":124}},{"path":"src/main/java/seedu/vms/storage/vaccination/JsonVaxTypeStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.vaccination;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.FileUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" * An {@link VaxTypeStorage} to handle read and write operations from and to","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" * JSON files containing {@link VaxTypeManager} data.","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"public class JsonVaxTypeStorage implements VaxTypeStorage {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    public static final Path USER_VAX_FILE_PATH \u003d Path.of(\"data\", \"vaxtype.json\");","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeManager loadUserVaxTypes() throws IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"            return VaxTypeLoader.load(USER_VAX_FILE_PATH);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalValueException illValEx) {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"            throw new IOException(illValEx.getMessage());","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeManager loadDefaultVaxTypes() throws RuntimeException {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            return VaxTypeLoader.load();","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        } catch (Throwable ex) {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            throw new RuntimeException(\"Unable to load defaults\", ex);","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    public void saveVaxTypes(VaxTypeManager manager) throws IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        FileUtil.createIfMissing(USER_VAX_FILE_PATH);","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeLoader.fromModelType(manager).write(USER_VAX_FILE_PATH);","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"daitenshionyan":44}},{"path":"src/main/java/seedu/vms/storage/vaccination/VaxTypeLoader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.vaccination;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.JsonUtil;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"/** A JSON file loader of {@code VaxType}. */","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"public class VaxTypeLoader {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private static final String JSON_FILE_PATH \u003d \"/data/vaxTypes.json\";","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private final List\u003cJsonAdaptedVaxType\u003e types;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    /** Constructs a {@code VaxTypeLoader}. */","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeLoader(@JsonProperty(\"types\") List\u003cJsonAdaptedVaxType\u003e types) {","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        this.types \u003d types;","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     * Converts the specified {@code VaxTypeManager} to a {@code VaxTypeLoader}.","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    public static VaxTypeLoader fromModelType(VaxTypeManager manager) {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cJsonAdaptedVaxType\u003e types \u003d manager","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"                .asUnmodifiableObservableMap()","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"                .values()","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"                .stream()","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"                .map(vaxType -\u003e JsonAdaptedVaxType.fromModelType(vaxType))","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        return new VaxTypeLoader(types);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     * Loads all the vaccination types contained in the vaccination type JSON","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     * file.","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if there are errors in the fields of the","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"     *      JSON file.","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    public static VaxTypeManager load() throws IllegalValueException, IOException {","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeLoader loader \u003d JsonUtil.deserializeFromResource(JSON_FILE_PATH, VaxTypeLoader.class);","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        return loader.toModelType();","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"     * Loads all the vaccination types contained in the specified JSON file.","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IllegalValueException if there are errors in the fields of the","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"     *      JSON file.","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    public static VaxTypeManager load(Path path) throws IllegalValueException, IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeLoader loader \u003d JsonUtil.deserializeFromFile(path, VaxTypeLoader.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        return loader.toModelType();","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    private VaxTypeManager toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager storage \u003d new VaxTypeManager();","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        for (JsonAdaptedVaxType adapted : types) {","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"            adapted.toModelType(storage);","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        return storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"     * Writes the data of this {@code VaxTypeLoader} to the specified file.","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOexception if an I/O error occurs.","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"    public void write(Path path) throws IOException {","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"        JsonUtil.serializeToFile(path, this);","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"daitenshionyan":88}},{"path":"src/main/java/seedu/vms/storage/vaccination/VaxTypeStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.vaccination;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":" * Represents the storage for {@link seedu.vms.model.vaccination.VaxTypeManager}.","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"public interface VaxTypeStorage {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"     * Loads the {@code VaxTypeManager} as defined by the user.","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeManager loadUserVaxTypes() throws IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     * Loads the {@code VaxTypeManager} as defined in the application","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * resources.","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * @throws RuntimeException if an error occurs.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeManager loadDefaultVaxTypes() throws RuntimeException;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * Saves the specified {@code VaxTypeManager} to hard disk.","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * @throws IOException if an I/O error occurs.","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    public void saveVaxTypes(VaxTypeManager manager) throws IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"daitenshionyan":35}},{"path":"src/main/java/seedu/vms/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private final Consumer\u003cString\u003e commandExecutor;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    public CommandBox(Consumer\u003cString\u003e commandExecutor) {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        commandExecutor.accept(commandText);","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"daitenshionyan":6,"-":38}},{"path":"src/main/java/seedu/vms/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.LogsCenter;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103-f11-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"daitenshionyan":2,"-":99,"francisyzy":1}},{"path":"src/main/java/seedu/vms/ui/ListViewPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import javafx.beans.property.ObjectProperty;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import javafx.beans.property.SimpleObjectProperty;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.MapChangeListener;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"/** An extension of {@link ListView} to display the values of a map. */","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"public class ListViewPanel\u003cT extends Comparable\u003cT\u003e\u003e extends ListView\u003cT\u003e implements Refreshable {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private final Function\u003cT, Node\u003e displayFunction;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private final ObjectProperty\u003cComparator\u003cT\u003e\u003e comparatorProperty \u003d","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"            new SimpleObjectProperty\u003c\u003e(Comparator.naturalOrder());","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private final ObjectProperty\u003cMapChangeListener.Change\u003c?, ? extends T\u003e\u003e changeProperty \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"            new SimpleObjectProperty\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code ListViewPanel}.","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     * @param dataMap - the map of data to display within this list view.","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"     * @param displayFunction - factory function to generate the graphical","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"     *      representation of the data.","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * @param \u003cT\u003e - the type of data being displayed.","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    public ListViewPanel(ObservableMap\u003c?, T\u003e dataMap, Function\u003cT, Node\u003e displayFunction) {","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        this.displayFunction \u003d displayFunction;","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        setCellFactory(listView -\u003e new DisplayCell());","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        dataMap.addListener(this::handleChange);","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        updateList(dataMap.values());","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     * Returns the comparator property of this list view panel.","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    public ObjectProperty\u003cComparator\u003cT\u003e\u003e comparatorProperty() {","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        return comparatorProperty;","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    private synchronized void handleChange(MapChangeListener.Change\u003c?, ? extends T\u003e change) {","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        changeProperty.set(change);","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    private synchronized void updateList(Collection\u003c? extends T\u003e updatedDatas) {","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        getItems().setAll(updatedDatas);","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        getItems().sort(comparatorProperty.get());","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    public void refresh() {","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        MapChangeListener.Change\u003c?, ? extends T\u003e change \u003d changeProperty.get();","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        if (change \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        updateList(change.getMap().values());","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        changeProperty.set(null);","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    private class DisplayCell extends ListCell\u003cT\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        protected void updateItem(T data, boolean empty) {","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"            super.updateItem(data, empty);","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"            if (empty || data \u003d\u003d null) {","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"                setText(null);","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"            } else {","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"                setGraphic(displayFunction.apply(data));","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"daitenshionyan":87}},{"path":"src/main/java/seedu/vms/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.LogsCenter;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.Logic;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.ui.vaccination.VaxTypeCard;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"public class MainWindow extends UiPart\u003cStage\u003e implements Refreshable {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    private ListViewPanel\u003cIdData\u003cPatient\u003e\u003e patientListPanel;","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    private ListViewPanel\u003cVaxType\u003e vaxTypeListPanel;","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private StackPane commandBoxPlaceholder;","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private MenuItem helpMenuItem;","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private StackPane patientListPanelPlaceholder;","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private StackPane vaxTypeListPanelPlaceholder;","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox resultDisplayPlaceholder;","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private StackPane statusbarPlaceholder;","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    public void refresh() {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        resultDisplay.refresh();","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        patientListPanel.refresh();","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        vaxTypeListPanel.refresh();","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"        patientListPanel \u003d new ListViewPanel\u003c\u003e(","lastModifiedDate":"2023-03-10"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"                logic.getFilteredPatientMap(),","lastModifiedDate":"2023-03-10"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"                idData -\u003e new PatientCard(idData.getValue(), idData.getId() + 1).getRoot());","lastModifiedDate":"2023-03-10"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"        patientListPanelPlaceholder.getChildren().add(patientListPanel);","lastModifiedDate":"2023-03-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"        vaxTypeListPanel \u003d new ListViewPanel\u003c\u003e(","lastModifiedDate":"2023-03-10"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"                logic.getFilteredVaxTypeMap(),","lastModifiedDate":"2023-03-10"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"                vaxType -\u003e new VaxTypeCard(vaxType).getRoot());","lastModifiedDate":"2023-03-10"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"        vaxTypeListPanelPlaceholder.getChildren().add(vaxTypeListPanel);","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"        Region resultDisplayRegion \u003d resultDisplay.getRoot();","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplayRegion);","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"        logic.setOnExecutionCompletion(resultDisplay::setFeedbackToUser);","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"francisyzy"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getPatientManagerFilePath());","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"        CommandBox commandBox \u003d new CommandBox(logic::queue);","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"daitenshionyan":40,"-":142,"francisyzy":1}},{"path":"src/main/java/seedu/vms/ui/PatientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" * An UI component that displays information of a {@code Patient}.","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"public class PatientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    private static final String FXML \u003d \"PatientListCard.fxml\";","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label idLabel;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label nameLabel;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label dobLabel;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label bloodTypeLabel;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox allergyBox;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox vaccineBox;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label phoneLabel;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     * Creates a {@code PatientCode} with the given {@code Patient} and index to display.","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    public PatientCard(Patient patient, int id) {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        idLabel.setText(String.format(\"#%d\", id));","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        nameLabel.setText(patient.getName().toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        dobLabel.setText(patient.getDob().toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        bloodTypeLabel.setText(patient.getBloodType().toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        allergyBox.getChildren().add(new TagFlowView(","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"                patient.getAllergyAsString(),","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"                TagFlowView.STYLE_CLASS_TAG_RED));","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        vaccineBox.getChildren().add(new TagFlowView(","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"                patient.getVaccineAsString(),","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"                TagFlowView.STYLE_CLASS_TAG_GREEN));","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        phoneLabel.setText(patient.getPhone().toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"daitenshionyan":20,"-":15,"francisyzy":6}},{"path":"src/main/java/seedu/vms/ui/Refreshable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"/** Represents a component that is refreshable. */","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"public interface Refreshable {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"    /** Refreshes the component. */","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"    public void refresh();","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"daitenshionyan":8}},{"path":"src/main/java/seedu/vms/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.concurrent.LinkedBlockingDeque;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.CommandResult;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e implements Refreshable {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private ScrollPane scrollPane;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox displayArea;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private LinkedBlockingDeque\u003cCommandResult\u003e messageQueue \u003d new LinkedBlockingDeque\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code ResultDisplay}.","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        scrollPane.viewportBoundsProperty().addListener((ob, o, n) -\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"            double width \u003d n.getWidth();","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            double height \u003d n.getHeight();","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            // force width of display area to be view port width","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"            displayArea.setMinWidth(width);","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"            displayArea.setPrefWidth(width);","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            displayArea.setMaxWidth(width);","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"            displayArea.setMinHeight(height);","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        });","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        displayArea.heightProperty().addListener((ob, o, n) -\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"            scrollPane.setVvalue(1D);","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        });","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    public void setFeedbackToUser(List\u003cCommandResult\u003e commandResult) {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        requireNonNull(commandResult);","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        messageQueue.addAll(commandResult);","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    public void refresh() {","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c messageQueue.size(); i++) {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"            displayMessage(messageQueue.poll());","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    private void displayMessage(CommandResult commandResult) {","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        displayArea.getChildren().add(new ResultMessageBox(commandResult).getRoot());","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"daitenshionyan":46,"-":19}},{"path":"src/main/java/seedu/vms/ui/ResultMessageBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.CommandResult;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"/** A GUI representation of a command message to the user. */","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"public class ResultMessageBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FXML_FILE \u003d \"ResultMessageBox.fxml\";","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    private static final String STYLE_CLASS_ERROR \u003d \"result-message-error-color\";","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    private static final String STYLE_CLASS_WARNING \u003d \"result-message-warning-color\";","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private static final String STYLE_CLASS_INFO \u003d \"result-message-info-color\";","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label stateLabel;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label messageLabel;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code ResultMessageBox}.","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    public ResultMessageBox(CommandResult result) {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        super(FXML_FILE);","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        stateLabel.setText(String.format(\"[%s]\", result.getState().toString()));","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        messageLabel.setText(result.getMessage());","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"        String colorStyleClass;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        switch (result.getState()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        case ERROR:","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            colorStyleClass \u003d STYLE_CLASS_ERROR;","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"            break;","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        case WARNING:","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            colorStyleClass \u003d STYLE_CLASS_WARNING;","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"            break;","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        default:","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            colorStyleClass \u003d STYLE_CLASS_INFO;","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"            break;","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        stateLabel.getStyleClass().add(colorStyleClass);","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        messageLabel.getStyleClass().add(colorStyleClass);","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"daitenshionyan":47}},{"path":"src/main/java/seedu/vms/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":1,"-":27}},{"path":"src/main/java/seedu/vms/ui/TagFlowView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":" * Graphical representation of a list of tags.","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class TagFlowView extends FlowPane {","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    public static final String STYLE_CLASS_TAG_FLOW_PANE \u003d \"tag-flow-pane\";","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    public static final String STYLE_CLASS_TAG_GREEN \u003d \"tag-color-green\";","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    public static final String STYLE_CLASS_TAG_RED \u003d \"tag-color-red\";","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    public static final String STYLE_CLASS_TAG_BLUE \u003d \"tag-color-blue\";","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private static final String STYLE_CLASS_TAG \u003d \"tag\";","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code TagFlowView} no additional style classes added to","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"     * its tags.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"     * @param tags - the tags to display.","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    public TagFlowView(Collection\u003cString\u003e tags) {","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        this(tags, List.of());","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    public TagFlowView(Collection\u003cString\u003e tags, String ... styleClasses) {","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        this(tags, List.of(styleClasses));","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code TagFlowView}.","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"     * @param tags - the tags to display.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"     * @param styleClasses - a list of additional style classes to add to the","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"     *      tags.","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    public TagFlowView(Collection\u003cString\u003e tags, Collection\u003cString\u003e styleClasses) {","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        getStyleClass().add(STYLE_CLASS_TAG_FLOW_PANE);","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        for (String tag : tags) {","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"            Label label \u003d formLabel(tag);","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"            label.getStyleClass().addAll(styleClasses);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"            getChildren().add(label);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    private Label formLabel(String text) {","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        Label label \u003d new Label(text);","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        label.setWrapText(true);","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        label.getStyleClass().add(STYLE_CLASS_TAG);","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        label.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        return label;","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"daitenshionyan":64}},{"path":"src/main/java/seedu/vms/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"public interface Ui extends Refreshable {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"daitenshionyan":2,"-":11}},{"path":"src/main/java/seedu/vms/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.MainApp;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.LogsCenter;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.StringUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.Logic;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/vms_icon_32.png\";","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    public void refresh() {","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        mainWindow.refresh();","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"daitenshionyan":10,"-":82,"francisyzy":1}},{"path":"src/main/java/seedu/vms/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.MainApp;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private final T root;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        root \u003d loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        this.root \u003d loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        return root;","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    private T loadFxmlFile(URL location, T root) {","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"            return fxmlLoader.load();","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"daitenshionyan":9,"-":80}},{"path":"src/main/java/seedu/vms/ui/vaccination/VaxTypeCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui.vaccination;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.ui.TagFlowView;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.ui.UiPart;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":" * Graphical representation of a vaccination type.","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"public class VaxTypeCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FXML_FILE \u003d \"VaxTypeCard.fxml\";","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label titleLabel;","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label ageRangeLabel;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private Label spacingLabel;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox groupBox;","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox allergyBox;","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    @FXML private VBox historyBox;","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"     * Constructs a {@code VaxTypeCard}.","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"     * @param vaxType - the vaccination type to display.","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeCard(VaxType vaxType) {","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        super(FXML_FILE);","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        titleLabel.setText(vaxType.getName());","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        ageRangeLabel.setText(String.format(\"%s ~ %s\",","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"                vaxType.getMinAge(),","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"                vaxType.getMaxAge()));","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        spacingLabel.setText(String.valueOf(vaxType.getMinSpacing()));","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        groupBox.getChildren().add(new TagFlowView(vaxType.getGroups()","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"                .stream()","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"                .map(GroupName::getName)","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList())));","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        addAllReq(allergyBox, vaxType.getAllergyReqs());","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        addAllReq(historyBox, vaxType.getHistoryReqs());","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    private void addAllReq(VBox box, List\u003cRequirement\u003e reqs) {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        for (Requirement req : reqs) {","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"            List\u003cString\u003e styleClasses \u003d List.of();","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"            switch (req.getReqType()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"            case ALL:","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"                styleClasses \u003d List.of(TagFlowView.STYLE_CLASS_TAG_BLUE);","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"            case ANY:","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"                styleClasses \u003d List.of(TagFlowView.STYLE_CLASS_TAG_GREEN);","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"            case NONE:","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"                styleClasses \u003d List.of(TagFlowView.STYLE_CLASS_TAG_RED);","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"            default:","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"                throw new AssertionError(String.format(\"Unrecognized requirement type\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"            box.getChildren().add(new TagFlowView(","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"                    req.getReqSet()","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"                            .stream()","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"                            .map(GroupName::getName)","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"                            .collect(Collectors.toList()),","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"                    styleClasses));","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"daitenshionyan":76}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":".root {","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"  /* Override of default modena css from https://gist.github.com/maxd/63691840fc372f22f470 */","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"  /* Arrangement follows above as well */","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background: #383838;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"  /* Inside boxes */","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"  -fx-control-inner-background: derive(-fx-base, 10%);","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"  /* For alternate rows */","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"  -fx-control-inner-background-alt: derive(-fx-control-inner-background, 3%);","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"  /* Text colors */","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"  -fx-dark-text-color: black;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"  -fx-mid-text-color: #333;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"  -fx-light-text-color: white;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"  /* Highlight fill color */","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"  -fx-accent: derive(-fx-base, -10%);","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"  /* Highlight flow for focus */","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"  -fx-focus-color: rgb(167, 138, 173);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"  -fx-faint-focus-color: rgba(167, 138, 173, 0.167);","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"  -fx-color: -fx-base;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"  -fx-hover-base: ladder(","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"      -fx-base,","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"      derive(-fx-base, -2%) 20%,","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"      derive(-fx-base, -5%) 35%,","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"      derive(-fx-base, -10%) 50%","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"  );","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-background-color: ladder(","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    -fx-background,","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    -fx-light-text-color 45%,","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    -fx-mid-text-color  46%,","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    -fx-mid-text-color  59%,","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    -fx-mid-text-color   60%","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"  );","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-inner-color: ladder(","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    -fx-control-inner-background,","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    -fx-light-text-color 45%,","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    -fx-mid-text-color  46%,","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    -fx-mid-text-color  59%,","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    -fx-dark-text-color   60%","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"  );","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"  -fx-box-border: derive(-fx-color,-15%);","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-box-border: derive(-fx-background, -15%);","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"  -fx-shadow-highlight-color: derive(-fx-color, -10%);","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"  -fx-outer-border: derive(-fx-color, -10%);","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"  -fx-inner-border: derive(-fx-color, -12%);","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"  -fx-inner-border-horizontal: -fx-inner-border;","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"  -fx-inner-border-bottomup: -fx-inner-border;","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"  -fx-body-color: -fx-color;","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"  -fx-body-color-bottomup: -fx-color;","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"  -fx-body-color-to-right: -fx-color;","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"  -fx-selection-bar: -fx-accent;","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"  -fx-selection-bar-non-focused: derive(-fx-accent, -20%);","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TEXT FIELD \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":".text-field {","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"  -fx-prompt-text-fill: gray;","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SCROLL BAR \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":".scroll-bar .track {","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: -fx-background;","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-insets: 1 1 1 0;","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"  -fx-border-color: transparent;","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":".scroll-bar .increment-button,","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":".scroll-bar .decrement-button,","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":".scroll-bar .increment-arrow,","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":".scroll-bar .decrement-arrow {","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"  -fx-shape: \" \";","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"  -fx-padding: 0 5 0 0;","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: derive(-fx-color, 50%);","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-radius: 5;","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"  -fx-padding: 5;","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d RESULT DISPLAY \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: -fx-control-inner-background;","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":".result-message-error-color {","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-fill: #d22121;","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":".result-message-warning-color {","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-fill: #cfc018;","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":".result-message-info-color {","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-fill: #d9d9d9;","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"/* \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Cards \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":".label.card-title {","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"  -fx-font-weight: bold;","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"  -fx-font-size: 16;","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-fill: rgb(224, 152, 19);","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":".card-id-holder {","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: rgb(224, 152, 19);","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-radius: 2;","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":".label.card-sub-title {","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"  -fx-font-weight: bold;","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"  -fx-font-size: 11;","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":".label.card-attribute-label {","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"    -fx-text-fill: #707070;","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"/* \u003d\u003d\u003d\u003d\u003d Tag related styles \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d */","lastModifiedDate":"2023-03-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":".tag-flow-pane {","lastModifiedDate":"2023-03-10"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"  -fx-hgap: 5;","lastModifiedDate":"2023-03-10"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"  -fx-vgap: 5;","lastModifiedDate":"2023-03-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":".label.tag {","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: #3e7b91;","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"  -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"  -fx-border-radius: 2;","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-radius: 2;","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"  -fx-font-size: 11;","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":".label.tag.tag-color-blue {","lastModifiedDate":"2023-03-10"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: #151790;","lastModifiedDate":"2023-03-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":".label.tag.tag-color-green {","lastModifiedDate":"2023-03-10"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: #119654;","lastModifiedDate":"2023-03-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":".label.tag.tag-color-red {","lastModifiedDate":"2023-03-10"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"  -fx-background-color: #901515;","lastModifiedDate":"2023-03-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daitenshionyan":107,"-":59}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"\u003cfx:root height\u003d\"650.0\" minHeight\u003d\"650.0\" minWidth\u003d\"860.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Vaccination Management System\" type\u003d\"javafx.stage.Stage\" width\u003d\"860.0\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    \u003cImage url\u003d\"@/images/vms_icon_32.png\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"            \u003cVBox fx:id\u003d\"resultDisplayPlaceholder\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"               \u003c/padding\u003e\u003c/VBox\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            \u003cHBox alignment\u003d\"TOP_CENTER\" spacing\u003d\"5.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"              \u003cVBox maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"                \u003cStackPane fx:id\u003d\"patientListPanelPlaceholder\" prefWidth\u003d\"410.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cVBox maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"                        \u003cStackPane fx:id\u003d\"vaxTypeListPanelPlaceholder\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"410.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"daitenshionyan":23,"-":42,"francisyzy":1}},{"path":"src/main/resources/view/PatientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"\u003cGridPane hgap\u003d\"5.0\" minHeight\u003d\"-Infinity\" vgap\u003d\"10.0\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    \u003cColumnConstraints hgrow\u003d\"NEVER\" prefWidth\u003d\"80.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    \u003cColumnConstraints halignment\u003d\"LEFT\" hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"  \u003crowConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"      \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    \u003cRowConstraints valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"      \u003cRowConstraints valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"      \u003cRowConstraints valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"      \u003cRowConstraints valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"  \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"      \u003cHBox prefWidth\u003d\"390.0\" spacing\u003d\"5.0\" GridPane.columnSpan\u003d\"2147483647\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"            \u003cVBox alignment\u003d\"CENTER\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"25.0\" styleClass\u003d\"card-id-holder\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cLabel fx:id\u003d\"idLabel\" styleClass\u003d\"card-sub-title\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            \u003cVBox minHeight\u003d\"25.0\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cLabel fx:id\u003d\"nameLabel\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"340.0\" styleClass\u003d\"card-title\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel styleClass\u003d\"card-attribute-label\" text\u003d\"DOB:\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel fx:id\u003d\"dobLabel\" styleClass\u003d\"card-value-label\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel styleClass\u003d\"card-attribute-label\" text\u003d\"Blood type:\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel fx:id\u003d\"bloodTypeLabel\" styleClass\u003d\"card-value-label\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel styleClass\u003d\"card-attribute-label\" text\u003d\"Allergies:\" GridPane.rowIndex\u003d\"3\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"      \u003cVBox fx:id\u003d\"allergyBox\" maxWidth\u003d\"305.0\" styleClass\u003d\"card-value-label\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"3\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel styleClass\u003d\"card-attribute-label\" text\u003d\"Phone:\" GridPane.rowIndex\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel fx:id\u003d\"phoneLabel\" styleClass\u003d\"card-value-label\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel styleClass\u003d\"card-attribute-label\" text\u003d\"Vaccines:\" GridPane.rowIndex\u003d\"4\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"      \u003cVBox fx:id\u003d\"vaccineBox\" maxWidth\u003d\"305.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"4\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"      \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":39,"-":14}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"\u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" prefHeight\u003d\"100.0\" styleClass\u003d\"result-display\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"   \u003ccontent\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"      \u003cVBox fx:id\u003d\"displayArea\" spacing\u003d\"5.0\" styleClass\u003d\"result-display\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/padding\u003e\u003c/VBox\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/content\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"daitenshionyan":11,"-":3}},{"path":"src/main/resources/view/ResultMessageBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"\u003cHBox maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"      \u003cHBox maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"70.0\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"            \u003cLabel fx:id\u003d\"stateLabel\" HBox.hgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"      \u003cHBox HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"            \u003cLabel fx:id\u003d\"messageLabel\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"daitenshionyan":20}},{"path":"src/main/resources/view/VaxTypeCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"\u003cGridPane hgap\u003d\"5.0\" minHeight\u003d\"-Infinity\" vgap\u003d\"10.0\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"   \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"      \u003cColumnConstraints halignment\u003d\"LEFT\" hgrow\u003d\"NEVER\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"80.0\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"      \u003cColumnConstraints halignment\u003d\"LEFT\" hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"   \u003crowConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"      \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"      \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"      \u003cRowConstraints valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"      \u003cRowConstraints valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"      \u003cRowConstraints valignment\u003d\"TOP\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel fx:id\u003d\"titleLabel\" maxWidth\u003d\"390.0\" minHeight\u003d\"-Infinity\" styleClass\u003d\"card-title\" wrapText\u003d\"true\" GridPane.columnSpan\u003d\"2147483647\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"      \u003cHBox maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"390.0\" spacing\u003d\"10.0\" GridPane.columnSpan\u003d\"2147483647\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"            \u003cHBox maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cLabel styleClass\u003d\"card-attribute-label\" text\u003d\"Age:\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cLabel fx:id\u003d\"ageRangeLabel\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"145.0\" styleClass\u003d\"card-value-label\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"            \u003cHBox maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cLabel styleClass\u003d\"card-attribute-label\" text\u003d\"Spacing:\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"                  \u003cLabel fx:id\u003d\"spacingLabel\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"145.0\" styleClass\u003d\"card-value-label\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel styleClass\u003d\"card-attribute-label\" text\u003d\"Group\" wrapText\u003d\"true\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel minHeight\u003d\"-Infinity\" styleClass\u003d\"card-attribute-label\" text\u003d\"Allergy requirements\" wrapText\u003d\"true\" GridPane.rowIndex\u003d\"3\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"      \u003cLabel minHeight\u003d\"-Infinity\" styleClass\u003d\"card-attribute-label\" text\u003d\"History requirements\" wrapText\u003d\"true\" GridPane.rowIndex\u003d\"4\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"      \u003cVBox fx:id\u003d\"groupBox\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"305.0\" spacing\u003d\"5.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"      \u003cVBox fx:id\u003d\"allergyBox\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"305.0\" spacing\u003d\"5.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"3\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"      \u003cVBox fx:id\u003d\"historyBox\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"305.0\" spacing\u003d\"5.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"4\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"      \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"daitenshionyan":51}},{"path":"src/test/java/seedu/vms/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"daitenshionyan":1,"-":57}},{"path":"src/test/java/seedu/vms/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"daitenshionyan":2,"-":26}},{"path":"src/test/java/seedu/vms/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":3,"-":133}},{"path":"src/test/java/seedu/vms/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.core.index;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        final Index fifthPatientIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        assertTrue(fifthPatientIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        assertTrue(fifthPatientIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        assertTrue(fifthPatientIndex.equals(fifthPatientIndex));","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        assertFalse(fifthPatientIndex.equals(null));","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        assertFalse(fifthPatientIndex.equals(5.0f));","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"        assertFalse(fifthPatientIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"daitenshionyan":3,"-":51,"francisyzy":7}},{"path":"src/test/java/seedu/vms/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"        assertNotNull(AppUtil.getImage(\"/images/vms_icon_32.png\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"daitenshionyan":3,"-":33,"francisyzy":1}},{"path":"src/test/java/seedu/vms/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"daitenshionyan":4,"-":105}},{"path":"src/test/java/seedu/vms/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Config;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    public void read_missingFile_emptyResult() {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class, () -\u003e read(\"NonExistentFile.json\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    public void read_fileInOrder_successfullyRead() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        Config actual \u003d read(\"TypicalConfig.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        Config actual \u003d read(\"EmptyConfig.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    private Config read(String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"    public void saveConfig_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"daitenshionyan":16,"-":97}},{"path":"src/test/java/seedu/vms/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":3,"-":21}},{"path":"src/test/java/seedu/vms/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private static final Path PATH_DATA_DIR \u003d Paths.get(\"src/test/data/JsonUtilTest\");","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private static final Path PATH_VALID_FILE \u003d PATH_DATA_DIR.resolve(\"ValidFile.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private static final Path PATH_INVALID_JSON_FORMAT \u003d PATH_DATA_DIR.resolve(\"InvalidJsonFormat.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private static final Path PATH_INVALID_JSON_MAPPING \u003d PATH_DATA_DIR.resolve(\"InvalidJsonMapping.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private static final Path PATH_NON_EXISTENT_FILE \u003d PATH_DATA_DIR.resolve(\"PathThatDoesNotExist.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    public void deserializeFromFile_validFile_objectCreated() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        StubObject deserialized \u003d deserializeFromFile(PATH_VALID_FILE);","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(new StubObject(), deserialized);","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    public void deserializeFromFile_invalidJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class, () -\u003e deserializeFromFile(PATH_INVALID_JSON_FORMAT));","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class, () -\u003e deserializeFromFile(PATH_INVALID_JSON_MAPPING));","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    public void deserializeFromFile_nonExistentFile_exceptionThrown() {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class, () -\u003e deserializeFromFile(PATH_NON_EXISTENT_FILE));","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    private StubObject deserializeFromFile(Path path) throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        return JsonUtil.deserializeFromFile(path, StubObject.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    private static class StubObject {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        private static final int DEFAULT_INT_PROPERTY \u003d 5;","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        private static final String DEFAULT_STRING_PROPERTY \u003d \"five\";","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        private final int intProperty;","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        private final String stringProperty;","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        @JsonCreator","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        public StubObject(","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"                    @JsonProperty(\"intProperty\") int intProperty,","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"                    @JsonProperty(\"stringProperty\") String stringProperty) {","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"            this.intProperty \u003d intProperty;","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"            this.stringProperty \u003d stringProperty;","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        public StubObject() {","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"            this(DEFAULT_INT_PROPERTY, DEFAULT_STRING_PROPERTY);","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"            if (this \u003d\u003d other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"                return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"            if (!(other instanceof StubObject)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"                return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"            StubObject casted \u003d (StubObject) other;","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"            return intProperty \u003d\u003d casted.intProperty","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"                    \u0026\u0026 stringProperty.equals(casted.stringProperty);","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":85,"-":7}},{"path":"src/test/java/seedu/vms/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.commons.util;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"daitenshionyan":3,"-":141}},{"path":"src/test/java/seedu/vms/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"daitenshionyan":2,"-":53}},{"path":"src/test/java/seedu/vms/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.DELIMITER;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_VACCINATION;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.EditCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    public static final String VALID_DOB_AMY \u003d \"1998-05-23\";","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    public static final String VALID_DOB_BOB \u003d \"2001-01-29\";","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    public static final String VALID_BLOODTYPE_AMY \u003d \"A+\";","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    public static final String VALID_BLOODTYPE_BOB \u003d \"B-\";","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"    public static final String VALID_ALLERGY_SEAFOOD \u003d \"seafood\";","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    public static final String VALID_ALLERGY_GLUTEN \u003d \"gluten\";","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    public static final String VALID_VACCINATION \u003d \"moderna\";","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + DELIMITER + PREFIX_NAME + \" \" + VALID_NAME_AMY;","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + DELIMITER + PREFIX_NAME + \" \" + VALID_NAME_BOB;","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + DELIMITER + PREFIX_PHONE + \" \" + VALID_PHONE_AMY;","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + DELIMITER + PREFIX_PHONE + \" \" + VALID_PHONE_BOB;","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"    public static final String DOB_DESC_AMY \u003d \" \" + DELIMITER + PREFIX_DOB + \" \" + VALID_DOB_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    public static final String DOB_DESC_BOB \u003d \" \" + DELIMITER + PREFIX_DOB + \" \" + VALID_DOB_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    public static final String BLOODTYPE_DESC_AMY \u003d \" \" + DELIMITER + PREFIX_BLOODTYPE + \" \" + VALID_BLOODTYPE_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    public static final String BLOODTYPE_DESC_BOB \u003d \" \" + DELIMITER + PREFIX_BLOODTYPE + \" \" + VALID_BLOODTYPE_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    public static final String ALLERGY_DESC_GLUTEN \u003d \" \" + DELIMITER + PREFIX_ALLERGY + \" \" + VALID_ALLERGY_GLUTEN;","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    public static final String ALLERGY_DESC_SEAFOOD \u003d \" \" + DELIMITER + PREFIX_ALLERGY + \" \" + VALID_ALLERGY_SEAFOOD;","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    public static final String VACCINATION_DESC_MODERNA \u003d \" \" + DELIMITER + PREFIX_VACCINATION + \" \"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"            + VALID_VACCINATION;","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + DELIMITER + PREFIX_NAME + \" \" + \"James\u0026\";","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + DELIMITER + PREFIX_PHONE + \" \" + \"911a\";","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    // Date in the future","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"    public static final String INVALID_DOB_DESC \u003d \" \" + DELIMITER + PREFIX_DOB + \" \" + \"2090-03-20\";","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"    // empty string not allowed for blood type","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"    public static final String INVALID_BLOODTYPE_DESC \u003d \" \" + DELIMITER + PREFIX_BLOODTYPE;","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"    // \u0027*\u0027 not allowed in allergy","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"    public static final String INVALID_ALLERGY_DESC \u003d \" \" + DELIMITER + PREFIX_ALLERGY + \" \" + \"seafood*\";","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"    // \u0027*\u0027 not allowed in vaccine","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"    public static final String INVALID_VACCINE_DESC \u003d \" \" + DELIMITER + PREFIX_VACCINATION + \" \" + \"moderna*\";","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"    public static final EditCommand.EditPatientDescriptor DESC_AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"    public static final EditCommand.EditPatientDescriptor DESC_BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"        DESC_AMY \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"                .withPhone(VALID_PHONE_AMY).withDob(VALID_DOB_AMY).withBloodType(VALID_BLOODTYPE_AMY)","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"                .withAllergies(VALID_ALLERGY_GLUTEN).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        DESC_BOB \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"                .withPhone(VALID_PHONE_BOB).withDob(VALID_DOB_BOB).withBloodType(VALID_BLOODTYPE_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"                .withAllergies(VALID_ALLERGY_SEAFOOD, VALID_ALLERGY_GLUTEN).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"     * - the patient manager, filtered patient list and selected patient in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"        PatientManager expectedPatientManager \u003d new PatientManager(actualModel.getPatientManager());","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"francisyzy"},"content":"        Map\u003cInteger, IdData\u003cPatient\u003e\u003e expectedFilteredList \u003d actualModel.getFilteredPatientList();","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":124,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedPatientManager, actualModel.getPatientManager());","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPatientList());","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"francisyzy"},"content":"     * Updates {@code model}\u0027s filtered list to show only the patient at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"francisyzy"},"content":"     * {@code model}\u0027s patient manager.","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"francisyzy"},"content":"    public static void showPatientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"francisyzy"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPatientList().size());","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"francisyzy"},"content":"        Patient patient \u003d model.getFilteredPatientList().get(targetIndex.getZeroBased()).getValue();","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"francisyzy"},"content":"        final String[] splitName \u003d patient.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"francisyzy"},"content":"        model.updateFilteredPatientList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"francisyzy"},"content":"        assertEquals(1, model.getFilteredPatientList().size());","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"daitenshionyan":19,"-":70,"francisyzy":53}},{"path":"src/test/java/seedu/vms/logic/commands/basic/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.basic;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.basic.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.CommandResult;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ModelManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"daitenshionyan":6,"-":15}},{"path":"src/test/java/seedu/vms/logic/commands/basic/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.basic;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.basic.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.CommandResult;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ModelManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"daitenshionyan":6,"-":15}},{"path":"src/test/java/seedu/vms/logic/commands/patient/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.getTypicalPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ModelManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.PatientBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        model \u003d new ModelManager(getTypicalPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    public void execute_newPatient_success() {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        Model expectedModel \u003d new ModelManager(model.getPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        expectedModel.addPatient(validPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        assertCommandSuccess(new AddCommand(validPatient), model,","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPatient), expectedModel);","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"daitenshionyan":5,"-":23,"francisyzy":10}},{"path":"src/test/java/seedu/vms/logic/commands/patient/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.CommandResult;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"nusE0726844"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeAction;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.PatientBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    public void constructor_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"    public void execute_patientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        ModelStubAcceptingPatientAdded modelStub \u003d new ModelStubAcceptingPatientAdded();","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        CommandResult commandResult \u003d new AddCommand(validPatient).execute(modelStub);","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPatient), commandResult.getMessage());","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        assertEquals(Arrays.asList(validPatient), modelStub.patientsAdded);","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        Patient alice \u003d new PatientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        Patient bob \u003d new PatientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"        public Path getPatientManagerFilePath() {","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"        public void setPatientManagerFilePath(Path patientManagerFilePath) {","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"        public void addPatient(Patient patient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"        public void setPatientManager(ReadOnlyPatientManager newData) {","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"        public ReadOnlyPatientManager getPatientManager() {","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"francisyzy"},"content":"        public void deletePatient(int id) {","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"francisyzy"},"content":"        public void setPatient(int id, Patient editedPatient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"        public ObservableMap\u003cInteger, IdData\u003cPatient\u003e\u003e getFilteredPatientList() {","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"francisyzy"},"content":"        public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"francisyzy"},"content":"        public boolean hasPatient(int id) {","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"nusE0726844"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":149,"author":{"gitId":"nusE0726844"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-07"},{"lineNumber":150,"author":{"gitId":"nusE0726844"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-07"},{"lineNumber":151,"author":{"gitId":"nusE0726844"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"        public ObservableMap\u003cString, VaxType\u003e getFilteredVaxTypeMap() {","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"        public VaxTypeManager getVaxTypeManager() {","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"        public VaxType performVaxTypeAction(VaxTypeAction action) throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"francisyzy"},"content":"     * A Model stub that always accept the patient being added.","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"francisyzy"},"content":"    private class ModelStubAcceptingPatientAdded extends ModelStub {","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"francisyzy"},"content":"        final ArrayList\u003cPatient\u003e patientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"francisyzy"},"content":"        public void addPatient(Patient patient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"francisyzy"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"francisyzy"},"content":"            patientsAdded.add(patient);","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"francisyzy"},"content":"        public ReadOnlyPatientManager getPatientManager() {","lastModifiedDate":"2023-03-11"},{"lineNumber":183,"author":{"gitId":"francisyzy"},"content":"            return new PatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"daitenshionyan":23,"-":128,"nusE0726844":5,"francisyzy":31}},{"path":"src/test/java/seedu/vms/logic/commands/patient/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.getTypicalPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ModelManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    public void execute_emptyPatientManager_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public void execute_nonEmptyPatientManager_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        Model model \u003d new ModelManager(getTypicalPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        expectedModel.setPatientManager(new PatientManager());","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"daitenshionyan":5,"-":20,"francisyzy":7}},{"path":"src/test/java/seedu/vms/logic/commands/patient/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.getTypicalPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ModelManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    private Model model \u003d new ModelManager(getTypicalPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        Patient patientToDelete \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased()).getValue();","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        expectedModel.deletePatient(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    @Test void execute_previouslyDeletedIndex_throwsCommandException() {","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        // Delete patient","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        Patient patientToDelete \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased()).getValue();","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        expectedModel.deletePatient(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        // Attempt to delete the same patient","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"        Patient patientToDelete \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased()).getValue();","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"        Model expectedModel \u003d new ModelManager(model.getPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"        expectedModel.deletePatient(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"        showNoPatient(expectedModel);","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"        // ensures that outOfBoundIndex is still in bounds of patient manager list","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPatientManager().getMapView().size());","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"    private void showNoPatient(Model model) {","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"francisyzy"},"content":"        model.updateFilteredPatientList(p -\u003e false);","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"francisyzy"},"content":"        assertTrue(model.getFilteredPatientList().isEmpty());","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"daitenshionyan":16,"-":69,"francisyzy":40}},{"path":"src/test/java/seedu/vms/logic/commands/patient/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_ALLERGY_GLUTEN;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.getTypicalPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ModelManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.PatientBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    private Model model \u003d new ModelManager(getTypicalPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        Patient editedPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(editedPatient).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PATIENT, descriptor);","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        Model expectedModel \u003d new ModelManager(new PatientManager(model.getPatientManager()), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        expectedModel.setPatient(INDEX_FIRST_PATIENT.getZeroBased(), editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        Index indexLastPatient \u003d Index.fromOneBased(model.getFilteredPatientList().size());","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        Patient lastPatient \u003d model.getFilteredPatientList().get(indexLastPatient.getZeroBased()).getValue();","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        PatientBuilder patientInList \u003d new PatientBuilder(lastPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        Patient editedPatient \u003d patientInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"                .withAllergies(VALID_ALLERGY_GLUTEN).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"                .withPhone(VALID_PHONE_BOB).withAllergies(VALID_ALLERGY_GLUTEN).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPatient, descriptor);","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        Model expectedModel \u003d new ModelManager(new PatientManager(model.getPatientManager()), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        expectedModel.setPatient(indexLastPatient.getZeroBased(), editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PATIENT, new EditPatientDescriptor());","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"        Patient editedPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased()).getValue();","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"        Model expectedModel \u003d new ModelManager(new PatientManager(model.getPatientManager()), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"        Patient patientInFilteredList \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased())","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"                .getValue();","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"        Patient editedPatient \u003d new PatientBuilder(patientInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"                new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"        Model expectedModel \u003d new ModelManager(new PatientManager(model.getPatientManager()), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"        expectedModel.setPatient(0, editedPatient);","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"    public void execute_invalidPatientIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"     * but smaller than size of patient manager","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"francisyzy"},"content":"    public void execute_invalidPatientIndexFilteredList_failure() {","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"francisyzy"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"        // ensures that outOfBoundIndex is still in bounds of patient manager list","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPatientManager().getMapView().size());","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"francisyzy"},"content":"                new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"francisyzy"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"francisyzy"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PATIENT, DESC_AMY);","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor copyDescriptor \u003d new EditPatientDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PATIENT, copyDescriptor);","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"francisyzy"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PATIENT, DESC_AMY)));","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"francisyzy"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PATIENT, DESC_BOB)));","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"daitenshionyan":12,"-":83,"francisyzy":58}},{"path":"src/test/java/seedu/vms/logic/commands/patient/EditPatientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_ALLERGY_SEAFOOD;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_BLOODTYPE_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"public class EditPatientDescriptorTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptorWithSameValues \u003d new EditPatientDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        // different bloodType -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withBloodType(VALID_BLOODTYPE_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        // different dob -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withDob(VALID_DOB_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        // different allergies -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withAllergies(VALID_ALLERGY_SEAFOOD).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"daitenshionyan":5,"-":38,"francisyzy":15}},{"path":"src/test/java/seedu/vms/logic/commands/patient/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.CARL;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.ELLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.FIONA;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.getTypicalPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ModelManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    private Model model \u003d new ModelManager(getTypicalPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    public void execute_zeroKeywords_noPatientFound() {","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PATIENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"        expectedModel.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        assertEquals(true, model.getFilteredPatientList().isEmpty());","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"    public void execute_multipleKeywords_multiplePatientsFound() {","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PATIENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"        expectedModel.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"        List\u003cPatient\u003e expectedPatients \u003d Arrays.asList(CARL, ELLE, FIONA);","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"        List\u003cPatient\u003e actualPatients \u003d model.getFilteredPatientList()","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"                .values()","lastModifiedDate":"2023-02-21"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"                .stream()","lastModifiedDate":"2023-02-21"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"                .map(data -\u003e data.getValue())","lastModifiedDate":"2023-02-21"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-02-21"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedPatients.size(), actualPatients.size());","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"        assertEquals(true, expectedPatients.containsAll(actualPatients));","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"daitenshionyan":11,"-":61,"francisyzy":21}},{"path":"src/test/java/seedu/vms/logic/commands/patient/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.getTypicalPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ModelManager;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        model \u003d new ModelManager(getTypicalPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        expectedModel \u003d new ModelManager(model.getPatientManager(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"daitenshionyan":5,"-":28,"francisyzy":6}},{"path":"src/test/java/seedu/vms/logic/commands/vaccination/AddVaxTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.vaccination;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.vaccination.AddVaxTypeParser;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.testutil.SampleVaxTypeData;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"public class AddVaxTypeTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private static final String INVALID_AGE_RANGE_CMD \u003d String.format(\"UNCHI --%s %d --%s %d\",","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_MIN_AGE.getPrefix(), 100,","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_MAX_AGE.getPrefix(), 99);","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    private static final String INVALID_AGE_CMD \u003d String.format(\"UNCHI --%s %d --%s %d\",","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_MIN_AGE.getPrefix(), -100,","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_MAX_AGE.getPrefix(), 99);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    private static final String INVALID_GROUP_CMD \u003d String.format(\"UNCHI --%s %s\",","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_VAX_GROUPS.getPrefix(),","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"            \"abc,\" + \"123,\" + \"unchi,\" + \"i am invalid ( ^)o(^ )b,\" + \"banana\");","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    private static final String INVALID_REQ_TYPE_CMD \u003d String.format(\"UNCHI --%s %s\",","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_ALLERGY_REQ.getPrefix(),","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"            \"rUbb15h::UNCHI\");","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    private static final String INVALID_REQ_CMD_EMPTY \u003d String.format(\"UNCHI --%s %s\",","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_ALLERGY_REQ.getPrefix(),","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            \"NONE::\" + ParserUtil.KEYWORD_EMPTY_LIST);","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    private static final String INVALID_REQ_CMD_SYNTAX \u003d String.format(\"UNCHI --%s %s\",","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_ALLERGY_REQ.getPrefix(),","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            \"NONE::UNCHI, i am invalid ( ^)o(^ )b, BANANA\");","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    private static final String INVALID_REQ_CMD_TOO_FEW_PARTS \u003d String.format(\"UNCHI --%s %s\",","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_ALLERGY_REQ.getPrefix(),","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"            \"NONE\");","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    private static final String INVALID_REQ_CMD_TOO_MANY_PARTS \u003d String.format(\"UNCHI --%s %s\",","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"            CliSyntax.PREFIX_ALLERGY_REQ.getPrefix(),","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"            \"NONE::UNCHI, BANANA::NONE::pear\");","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_validBasic() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        checkExecution(SampleVaxTypeData.CMD_NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_SPACING,","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_ALLERGY_REQS,","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS);","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_validPartial() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        checkExecution(SampleVaxTypeData.CMD_NAME_1 + SampleVaxTypeData.CMD_GROUPS_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_SPACING,","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_ALLERGY_REQS,","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS);","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        checkExecution(SampleVaxTypeData.CMD_NAME_1 + SampleVaxTypeData.CMD_MIN_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_SPACING,","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_ALLERGY_REQS,","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS);","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        checkExecution(SampleVaxTypeData.CMD_NAME_1 + SampleVaxTypeData.CMD_MIN_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_SPACING,","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_ALLERGY_REQS,","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS);","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"        checkExecution(SampleVaxTypeData.CMD_NAME_1 + SampleVaxTypeData.CMD_MAX_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_SPACING,","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_ALLERGY_REQS,","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS);","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"        checkExecution(SampleVaxTypeData.CMD_NAME_1 + SampleVaxTypeData.CMD_MIN_SPACING_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_SPACING_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_ALLERGY_REQS,","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS);","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"        checkExecution(SampleVaxTypeData.CMD_NAME_1 + SampleVaxTypeData.CMD_ALLERGY_REQS_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_SPACING,","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.ALLERGY_REQS_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS);","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"        checkExecution(SampleVaxTypeData.CMD_NAME_1 + SampleVaxTypeData.CMD_HISTORY_REQS_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_SPACING,","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_ALLERGY_REQS,","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_1);","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_validFull() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"        String command \u003d String.join(\" \",","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.CMD_NAME_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.CMD_ALLERGY_REQS_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.CMD_MIN_AGE_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.CMD_MIN_SPACING_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.CMD_HISTORY_REQS_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.CMD_MAX_AGE_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.CMD_GROUPS_REAL);","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"        checkExecution(command,","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_SPACING_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.ALLERGY_REQS_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_invalidName_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"        // empty","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(\"\", ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"        // blank","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(\" \", ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"        // illegal characters","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(\"( ^)o(^ )b \", ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"        // too long","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(\"\u003c15 characters\u003e\u003c15 characters\u003ea\", ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"        // duplicate","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeModelStub model \u003d new VaxTypeModelStub();","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"        new AddVaxTypeParser().parse(SampleVaxTypeData.CMD_NAME_1).execute(model);","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e new AddVaxTypeParser().parse(SampleVaxTypeData.CMD_NAME_1).execute(model));","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_invalidAgeRange_exceptionThrown() {","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"        // min \u003e max","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(INVALID_AGE_RANGE_CMD, CommandException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"        // age \u003c 0","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(INVALID_AGE_CMD, ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_invalidGroup_exceptionThrown() {","lastModifiedDate":"2023-03-09"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(INVALID_GROUP_CMD, ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"    public void execute_invalidReq_exceptionThrown() {","lastModifiedDate":"2023-03-09"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(INVALID_REQ_TYPE_CMD, ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(INVALID_REQ_CMD_EMPTY, ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(INVALID_REQ_CMD_SYNTAX, ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(INVALID_REQ_CMD_TOO_FEW_PARTS, ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"        checkExecutionEx(INVALID_REQ_CMD_TOO_MANY_PARTS, ParseException.class);","lastModifiedDate":"2023-03-09"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":189,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":"    private void checkExecution(String command, GroupName name, HashSet\u003cGroupName\u003e groups,","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"                Age minAge, Age maxAge, int minSpacing,","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"                List\u003cRequirement\u003e allergyReq, List\u003cRequirement\u003e historyReq) throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"        VaxType expected \u003d new VaxType(name, groups, minAge, maxAge, minSpacing, allergyReq, historyReq);","lastModifiedDate":"2023-03-09"},{"lineNumber":194,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":195,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeModelStub model \u003d new VaxTypeModelStub();","lastModifiedDate":"2023-03-09"},{"lineNumber":196,"author":{"gitId":"daitenshionyan"},"content":"        new AddVaxTypeParser().parse(command).execute(model);","lastModifiedDate":"2023-03-09"},{"lineNumber":197,"author":{"gitId":"daitenshionyan"},"content":"        VaxType actual \u003d model.manager.get(name.getName()).get();","lastModifiedDate":"2023-03-09"},{"lineNumber":198,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":199,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-03-09"},{"lineNumber":200,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":202,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":203,"author":{"gitId":"daitenshionyan"},"content":"    private \u003cT extends Throwable\u003e void checkExecutionEx(String command, Class\u003cT\u003e exception) {","lastModifiedDate":"2023-03-09"},{"lineNumber":204,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(exception, () -\u003e new AddVaxTypeParser().parse(command).execute(new VaxTypeModelStub()));","lastModifiedDate":"2023-03-09"},{"lineNumber":205,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":206,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"daitenshionyan":206}},{"path":"src/test/java/seedu/vms/logic/commands/vaccination/VaxTypeModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.commands.vaccination;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.IdData;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.appointment.Appointment;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeAction;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":" * Stub {@code Model} to test vaccination commands.","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"public class VaxTypeModelStub implements Model {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    public final VaxTypeManager manager \u003d new VaxTypeManager();","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027setUserPrefs\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027getUserPrefs\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027getGuiSettings\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027setGuiSettings\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"    public Path getPatientManagerFilePath() {","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027getPatientManagerFilePath\u0027\");","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    public void setPatientManagerFilePath(Path patientManagerFilePath) {","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027setPatientManagerFilePath\u0027\");","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"    public void setPatientManager(ReadOnlyPatientManager patientManager) {","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027setPatientManager\u0027\");","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"    public ReadOnlyPatientManager getPatientManager() {","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027getPatientManager\u0027\");","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    public boolean hasPatient(int id) {","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027hasPatient\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    public void deletePatient(int id) {","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027deletePatient\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"    public void addPatient(Patient patient) {","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027addPatient\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    public void setPatient(int id, Patient editedPatient) {","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027setPatient\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableMap\u003cInteger, IdData\u003cPatient\u003e\u003e getFilteredPatientList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027getFilteredPatientList\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"    public ObservableMap\u003cString, VaxType\u003e getFilteredVaxTypeMap() {","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027getFilteredVaxTypeMap\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"    public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027updateFilteredPatientList\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"    public VaxTypeManager getVaxTypeManager() {","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027getVaxTypeManager\u0027\");","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"    public VaxType performVaxTypeAction(VaxTypeAction action) throws IllegalValueException {","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"        return action.apply(manager);","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-10"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"        // TODO Auto-generated method stub","lastModifiedDate":"2023-03-10"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"        throw new UnsupportedOperationException(\"Unimplemented method \u0027addAppointment\u0027\");","lastModifiedDate":"2023-03-10"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"daitenshionyan":109,"francisyzy":9}},{"path":"src/test/java/seedu/vms/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"        String arg \u003d \"\";","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMap \u003d tokenizeSuccess(arg);","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"        assertPreambleEmpty(argMap);","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    public void tokenize_noFlags_allTakenAsPreamble() {","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        String arg \u003d \"   ruBb15h aNd m0re rubbish (o w o;)  \";","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMap \u003d tokenizeSuccess(arg);","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        assertPreamblePresent(argMap, arg.strip());","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    public void tokenize_oneArgumentWithPreamble() {","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        String arg \u003d \"   PREAMBLE!! --flag argument value \";","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMap \u003d tokenizeSuccess(arg);","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        assertPreamblePresent(argMap, \"PREAMBLE!!\");","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentPresent(argMap, new Prefix(\"flag\"), \"argument value\");","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    public void tokenize_oneArgumentWithoutPreamble() {","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        String arg \u003d \"--flag argument value \";","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMap \u003d tokenizeSuccess(arg);","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        assertPreambleEmpty(argMap);","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentPresent(argMap, new Prefix(\"flag\"), \"argument value\");","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        String arg \u003d \"--flag-1 value 1 --flag-2 value2 --flag-3\";","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMap \u003d tokenizeSuccess(arg);","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        assertPreambleEmpty(argMap);","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentPresent(argMap, new Prefix(\"flag-1\"), \"value 1\");","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentPresent(argMap, new Prefix(\"flag-2\"), \"value2\");","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentPresent(argMap, new Prefix(\"flag-3\"), \"\");","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentAbsent(argMap, new Prefix(\"flag-4\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        String arg \u003d \"--flag-1 value 1 --flag-1 value2 --flag-1\";","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMap \u003d tokenizeSuccess(arg);","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        assertPreambleEmpty(argMap);","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentPresent(argMap, new Prefix(\"flag-1\"), \"value 1\", \"value2\", \"\");","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentAbsent(argMap, new Prefix(\"flag-2\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"    public void tokenize_multipleArgumentsAlienSpacing() {","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        String arg \u003d \"gomi--flag-1 value 1--    flag-1         value 2       --flag-1--flag-2\";","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMap \u003d tokenizeSuccess(arg);","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        assertPreamblePresent(argMap, \"gomi\");","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentPresent(argMap, new Prefix(\"flag-1\"), \"value 1\", \"value 2\", \"\");","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentPresent(argMap, new Prefix(\"flag-2\"), \"\");","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        assertArgumentAbsent(argMap, new Prefix(\"flag-3\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    public void tokenize_blankFlag_exceptionThrown() {","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        String arg \u003d \"gomi--flag-1 value 1--flag-1         value 2       --flag-1--\";","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"            ArgumentTokenizer.tokenize(arg);","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"            fail(\"Exception not thrown\");","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        } catch (ParseException parseEx) {","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception thrown","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"    private ArgumentMultimap tokenizeSuccess(String args) {","lastModifiedDate":"2023-03-02"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"        ArgumentMultimap argMap \u003d new ArgumentMultimap();","lastModifiedDate":"2023-03-02"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-02"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"            argMap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2023-03-02"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"        } catch (Throwable ex) {","lastModifiedDate":"2023-03-02"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"            fail(ex);","lastModifiedDate":"2023-03-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-19"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"        return argMap;","lastModifiedDate":"2023-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"daitenshionyan":103,"-":49}},{"path":"src/test/java/seedu/vms/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"daitenshionyan":3,"-":36}},{"path":"src/test/java/seedu/vms/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Allergy;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Vaccine;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_DOB \u003d \" \";","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_BLOODTYPE \u003d \"example.com\";","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_ALLERGY \u003d \"#potato\";","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_VACCINE \u003d \"#ameravax\";","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    private static final String VALID_DOB \u003d \"2001-02-23\";","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"    private static final String VALID_BLOODTYPE \u003d \"A+\";","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    private static final String VALID_ALLERGY_1 \u003d \"seafood\";","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    private static final String VALID_ALLERGY_2 \u003d \"gluten\";","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"    private static final String VALID_VACCINE_1 \u003d \"moderna\";","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    private static final String VALID_VACCINE_2 \u003d \"chinavax\";","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    private static final LocalDateTime EXPECTED_DATE \u003d LocalDateTime.of(2023, 3, 5, 4, 55);","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    private static final LocalDateTime EXPECTED_DATE_ONLY \u003d LocalDateTime.of(2023, 3, 5, 0, 0);","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"    private static final String VALID_DEFAULT_DATE \u003d \"2023-03-05T04:55\";","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    private static final String VALID_FULL_DATE \u003d \"2023-03-05 0455\";","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"    private static final String VALID_DATE_ONLY \u003d \"2023-03-05\";","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    private static final String INVALID_DATE_RUBBISH \u003d \"RuBbisH\";","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_DATE_MIN_OUT \u003d \"2023-03-05T04:99\";","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_DATE_HRS_OUT \u003d \"2023-03-05T99:55\";","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_DATE_DAY_OUT \u003d \"2023-03-99T04:55\";","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_DATE_MTH_OUT \u003d \"2023-99-99T04:55\";","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_DATE_ONLY_MTH_OUT \u003d \"2023-99-99\";","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cString\u003e EXPECTED_PARSED_LIST \u003d List.of(\"UNCHI\", \"BANANA\", \"APPLE\");","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cString\u003e VALID_LIST_SYNTAXES \u003d List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"            \"UNCHI, BANANA, APPLE\",","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"            \"UNCHI,BANANA,APPLE\",","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"            \" UNCHI ,     BANANA,     APPLE     \");","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cString\u003e VALID_PART_SYNTAXES \u003d List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"            \"UNCHI:: BANANA:: APPLE\",","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"            \"UNCHI::BANANA::APPLE\",","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"            \" UNCHI ::     BANANA::     APPLE     \");","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cString\u003e INVALID_LIST_SYNTAXES \u003d List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"            \"\",","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"            \",\",","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"            \", UNCHI\",","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"            \"UNCHI,\",","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"            \",,\",","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"            \",UNCHI,BANANA,\");","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cString\u003e INVALID_PART_SYNTAXES \u003d List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"            \"\",","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"            \"::\",","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"            \":: UNCHI\",","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"            \"UNCHI::\",","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"            \"::::\",","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"            \"::UNCHI,BANANA::\");","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX,","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"                () -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"        assertEquals(INDEX_FIRST_PATIENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"        assertEquals(INDEX_FIRST_PATIENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"francisyzy"},"content":"    public void parseDob_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDob((String) null));","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"francisyzy"},"content":"    public void parseDob_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDob(INVALID_DOB));","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"francisyzy"},"content":"    public void parseDob_validValueWithoutWhitespace_returnsDob() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"francisyzy"},"content":"        Dob expectedDob \u003d new Dob(VALID_DOB);","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedDob, ParserUtil.parseDob(VALID_DOB));","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"francisyzy"},"content":"    public void parseDob_validValueWithWhitespace_returnsTrimmedDob() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"francisyzy"},"content":"        String dobWithWhitespace \u003d WHITESPACE + VALID_DOB + WHITESPACE;","lastModifiedDate":"2023-03-10"},{"lineNumber":171,"author":{"gitId":"francisyzy"},"content":"        Dob expectedDob \u003d new Dob(VALID_DOB);","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedDob, ParserUtil.parseDob(dobWithWhitespace));","lastModifiedDate":"2023-03-10"},{"lineNumber":173,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"francisyzy"},"content":"    public void parseBloodType_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseBloodType((String) null));","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"francisyzy"},"content":"    public void parseBloodType_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBloodType(INVALID_BLOODTYPE));","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"francisyzy"},"content":"    public void parseBloodType_validValueWithoutWhitespace_returnsBloodType() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"francisyzy"},"content":"        BloodType expectedBloodType \u003d new BloodType(VALID_BLOODTYPE);","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedBloodType, ParserUtil.parseBloodType(VALID_BLOODTYPE));","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"francisyzy"},"content":"    public void parseBloodType_validValueWithWhitespace_returnsTrimmedBloodType() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"francisyzy"},"content":"        String bloodTypeWithWhitespace \u003d WHITESPACE + VALID_BLOODTYPE + WHITESPACE;","lastModifiedDate":"2023-03-10"},{"lineNumber":194,"author":{"gitId":"francisyzy"},"content":"        BloodType expectedBloodType \u003d new BloodType(VALID_BLOODTYPE);","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedBloodType, ParserUtil.parseBloodType(bloodTypeWithWhitespace));","lastModifiedDate":"2023-03-10"},{"lineNumber":196,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"francisyzy"},"content":"    public void parseAllergy_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAllergy(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"francisyzy"},"content":"    public void parseAllergy_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAllergy(INVALID_ALLERGY));","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"francisyzy"},"content":"    public void parseAllergy_validValueWithoutWhitespace_returnsAllergy() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"francisyzy"},"content":"        Allergy expectedAllergy \u003d new Allergy(VALID_ALLERGY_1);","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedAllergy, ParserUtil.parseAllergy(VALID_ALLERGY_1));","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"francisyzy"},"content":"    public void parseAllergy_validValueWithWhitespace_returnsTrimmedAllergy() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":216,"author":{"gitId":"francisyzy"},"content":"        String allergyWithWhitespace \u003d WHITESPACE + VALID_ALLERGY_1 + WHITESPACE;","lastModifiedDate":"2023-03-10"},{"lineNumber":217,"author":{"gitId":"francisyzy"},"content":"        Allergy expectedAllergy \u003d new Allergy(VALID_ALLERGY_1);","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedAllergy, ParserUtil.parseAllergy(allergyWithWhitespace));","lastModifiedDate":"2023-03-10"},{"lineNumber":219,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":222,"author":{"gitId":"francisyzy"},"content":"    public void parseAllergies_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAllergies(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":224,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":225,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":226,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":227,"author":{"gitId":"francisyzy"},"content":"    public void parseAllergies_collectionWithInvalidAllergies_throwsParseException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"francisyzy"},"content":"                () -\u003e ParserUtil.parseAllergies(Arrays.asList(VALID_ALLERGY_1, INVALID_ALLERGY)));","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":231,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":232,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"francisyzy"},"content":"    public void parseAllergies_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":234,"author":{"gitId":"francisyzy"},"content":"        assertTrue(ParserUtil.parseAllergies(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-03-08"},{"lineNumber":235,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"francisyzy"},"content":"    public void parseAllergies_collectionWithValidAllergies_returnsAllergySet() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":239,"author":{"gitId":"francisyzy"},"content":"        Set\u003cAllergy\u003e actualAllergySet \u003d ParserUtil.parseAllergies(Arrays.asList(VALID_ALLERGY_1, VALID_ALLERGY_2));","lastModifiedDate":"2023-03-08"},{"lineNumber":240,"author":{"gitId":"francisyzy"},"content":"        Set\u003cAllergy\u003e expectedAllergySet \u003d new HashSet\u003cAllergy\u003e(","lastModifiedDate":"2023-03-08"},{"lineNumber":241,"author":{"gitId":"francisyzy"},"content":"                Arrays.asList(new Allergy(VALID_ALLERGY_1), new Allergy(VALID_ALLERGY_2)));","lastModifiedDate":"2023-03-08"},{"lineNumber":242,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":243,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedAllergySet, actualAllergySet);","lastModifiedDate":"2023-03-08"},{"lineNumber":244,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":245,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":246,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":247,"author":{"gitId":"francisyzy"},"content":"    public void parseVaccine_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":248,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseVaccine(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":249,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":250,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":251,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":252,"author":{"gitId":"francisyzy"},"content":"    public void parseVaccine_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":253,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseVaccine(INVALID_VACCINE));","lastModifiedDate":"2023-03-08"},{"lineNumber":254,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":255,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":256,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":257,"author":{"gitId":"francisyzy"},"content":"    public void parseVaccine_validValueWithoutWhitespace_returnsVaccine() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":258,"author":{"gitId":"francisyzy"},"content":"        Vaccine expectedVaccine \u003d new Vaccine(VALID_VACCINE_1);","lastModifiedDate":"2023-03-08"},{"lineNumber":259,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedVaccine, ParserUtil.parseVaccine(VALID_VACCINE_1));","lastModifiedDate":"2023-03-08"},{"lineNumber":260,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":261,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":262,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":263,"author":{"gitId":"francisyzy"},"content":"    public void parseVaccine_validValueWithWhitespace_returnsTrimmedVaccine() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":264,"author":{"gitId":"francisyzy"},"content":"        String vaccineWithWhitespace \u003d WHITESPACE + VALID_VACCINE_1 + WHITESPACE;","lastModifiedDate":"2023-03-10"},{"lineNumber":265,"author":{"gitId":"francisyzy"},"content":"        Vaccine expectedVaccine \u003d new Vaccine(VALID_VACCINE_1);","lastModifiedDate":"2023-03-08"},{"lineNumber":266,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedVaccine, ParserUtil.parseVaccine(vaccineWithWhitespace));","lastModifiedDate":"2023-03-10"},{"lineNumber":267,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":268,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":269,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":270,"author":{"gitId":"francisyzy"},"content":"    public void parseVaccines_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":271,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseVaccines(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":272,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":273,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":274,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":275,"author":{"gitId":"francisyzy"},"content":"    public void parseVaccines_collectionWithInvalidVaccines_throwsParseException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":276,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-03-08"},{"lineNumber":277,"author":{"gitId":"francisyzy"},"content":"                () -\u003e ParserUtil.parseVaccines(Arrays.asList(VALID_VACCINE_1, INVALID_VACCINE)));","lastModifiedDate":"2023-03-08"},{"lineNumber":278,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":279,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":280,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":281,"author":{"gitId":"francisyzy"},"content":"    public void parseVaccines_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":282,"author":{"gitId":"francisyzy"},"content":"        assertTrue(ParserUtil.parseVaccines(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-03-08"},{"lineNumber":283,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":284,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":285,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":286,"author":{"gitId":"francisyzy"},"content":"    public void parseVaccines_collectionWithValidVaccines_returnsVaccineSet() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":287,"author":{"gitId":"francisyzy"},"content":"        Set\u003cVaccine\u003e actualVaccineSet \u003d ParserUtil.parseVaccines(Arrays.asList(VALID_VACCINE_1, VALID_VACCINE_2));","lastModifiedDate":"2023-03-08"},{"lineNumber":288,"author":{"gitId":"francisyzy"},"content":"        Set\u003cVaccine\u003e expectedVaccineSet \u003d new HashSet\u003cVaccine\u003e(","lastModifiedDate":"2023-03-08"},{"lineNumber":289,"author":{"gitId":"francisyzy"},"content":"                Arrays.asList(new Vaccine(VALID_VACCINE_1), new Vaccine(VALID_VACCINE_2)));","lastModifiedDate":"2023-03-08"},{"lineNumber":290,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":291,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedVaccineSet, actualVaccineSet);","lastModifiedDate":"2023-03-08"},{"lineNumber":292,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":293,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":294,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":295,"author":{"gitId":"francisyzy"},"content":"    public void parseDate_validDefaultDate_returnDate() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":296,"author":{"gitId":"francisyzy"},"content":"        LocalDateTime actualDate \u003d ParserUtil.parseDate(VALID_DEFAULT_DATE);","lastModifiedDate":"2023-03-04"},{"lineNumber":297,"author":{"gitId":"francisyzy"},"content":"        assertEquals(EXPECTED_DATE, actualDate);","lastModifiedDate":"2023-03-04"},{"lineNumber":298,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":299,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":300,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":301,"author":{"gitId":"francisyzy"},"content":"    public void parseDate_validFullDate_returnDate() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":302,"author":{"gitId":"francisyzy"},"content":"        assertEquals(EXPECTED_DATE, ParserUtil.parseDate(VALID_FULL_DATE));","lastModifiedDate":"2023-03-04"},{"lineNumber":303,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":304,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":305,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":306,"author":{"gitId":"francisyzy"},"content":"    public void parseDate_validDateOnly_returnDate() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":307,"author":{"gitId":"francisyzy"},"content":"        assertEquals(EXPECTED_DATE_ONLY, ParserUtil.parseDate(VALID_DATE_ONLY));","lastModifiedDate":"2023-03-04"},{"lineNumber":308,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":309,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":310,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":311,"author":{"gitId":"francisyzy"},"content":"    public void parseDate_rubbishDate_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":312,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE_RUBBISH));","lastModifiedDate":"2023-03-04"},{"lineNumber":313,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":314,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":315,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":316,"author":{"gitId":"francisyzy"},"content":"    public void parseDate_minutesOutOfRange_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":317,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE_MIN_OUT));","lastModifiedDate":"2023-03-04"},{"lineNumber":318,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":319,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":320,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":321,"author":{"gitId":"francisyzy"},"content":"    public void parseDate_hoursOutOfRange_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":322,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE_HRS_OUT));","lastModifiedDate":"2023-03-04"},{"lineNumber":323,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":324,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":325,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":326,"author":{"gitId":"daitenshionyan"},"content":"    public void parseDate_dayOutOfRange_throwsParseException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":327,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE_DAY_OUT));","lastModifiedDate":"2023-02-27"},{"lineNumber":328,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":329,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":330,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":331,"author":{"gitId":"daitenshionyan"},"content":"    public void parseDate_monthOutOfRange_throwsParseException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":332,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE_MTH_OUT));","lastModifiedDate":"2023-02-27"},{"lineNumber":333,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":334,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":335,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":336,"author":{"gitId":"francisyzy"},"content":"    public void parseDateOnly_monthOutOfRange_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":337,"author":{"gitId":"francisyzy"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE_ONLY_MTH_OUT));","lastModifiedDate":"2023-03-04"},{"lineNumber":338,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":339,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":340,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":341,"author":{"gitId":"daitenshionyan"},"content":"    public void parseList_validList_listParsed() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":342,"author":{"gitId":"daitenshionyan"},"content":"        for (String listString : VALID_LIST_SYNTAXES) {","lastModifiedDate":"2023-03-09"},{"lineNumber":343,"author":{"gitId":"daitenshionyan"},"content":"            assertEquals(EXPECTED_PARSED_LIST, ParserUtil.parseList(listString));","lastModifiedDate":"2023-03-09"},{"lineNumber":344,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":345,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":346,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":347,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":348,"author":{"gitId":"daitenshionyan"},"content":"    public void parseParts_validParts_partsParsed() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":349,"author":{"gitId":"daitenshionyan"},"content":"        for (String partString : VALID_PART_SYNTAXES) {","lastModifiedDate":"2023-03-09"},{"lineNumber":350,"author":{"gitId":"daitenshionyan"},"content":"            assertEquals(EXPECTED_PARSED_LIST, ParserUtil.parseParts(partString));","lastModifiedDate":"2023-03-09"},{"lineNumber":351,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":352,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":353,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":354,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":355,"author":{"gitId":"daitenshionyan"},"content":"    public void parseList_invalidList_exceptionThrown() {","lastModifiedDate":"2023-03-09"},{"lineNumber":356,"author":{"gitId":"daitenshionyan"},"content":"        for (String syntax : INVALID_LIST_SYNTAXES) {","lastModifiedDate":"2023-03-09"},{"lineNumber":357,"author":{"gitId":"daitenshionyan"},"content":"            assertThrows(ParseException.class, () -\u003e ParserUtil.parseList(syntax));","lastModifiedDate":"2023-03-09"},{"lineNumber":358,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":359,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":360,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":361,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":362,"author":{"gitId":"daitenshionyan"},"content":"    public void parseParts_invalidParts_exceptionThrown() {","lastModifiedDate":"2023-03-09"},{"lineNumber":363,"author":{"gitId":"daitenshionyan"},"content":"        for (String syntax : INVALID_PART_SYNTAXES) {","lastModifiedDate":"2023-03-09"},{"lineNumber":364,"author":{"gitId":"daitenshionyan"},"content":"            assertThrows(ParseException.class, () -\u003e ParserUtil.parseParts(syntax));","lastModifiedDate":"2023-03-09"},{"lineNumber":365,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":366,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":367,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":368,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":369,"author":{"gitId":"daitenshionyan"},"content":"    public void parseInteger_valid_integerParsed() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":370,"author":{"gitId":"daitenshionyan"},"content":"        // small","lastModifiedDate":"2023-03-09"},{"lineNumber":371,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(-2147483648, ParserUtil.parseInteger(\"-2147483648\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":372,"author":{"gitId":"daitenshionyan"},"content":"        // big","lastModifiedDate":"2023-03-09"},{"lineNumber":373,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(2147483647, ParserUtil.parseInteger(\"2147483647\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":374,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":375,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":376,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":377,"author":{"gitId":"daitenshionyan"},"content":"    public void parseInteger_invalid_exceptionThrown() {","lastModifiedDate":"2023-03-09"},{"lineNumber":378,"author":{"gitId":"daitenshionyan"},"content":"        // too small","lastModifiedDate":"2023-03-09"},{"lineNumber":379,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInteger(\"-2147483649\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":380,"author":{"gitId":"daitenshionyan"},"content":"        // too big","lastModifiedDate":"2023-03-09"},{"lineNumber":381,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInteger(\"2147483648\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":382,"author":{"gitId":"daitenshionyan"},"content":"        // empty","lastModifiedDate":"2023-03-09"},{"lineNumber":383,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInteger(\"\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":384,"author":{"gitId":"daitenshionyan"},"content":"        // blank","lastModifiedDate":"2023-03-09"},{"lineNumber":385,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInteger(\" \"));","lastModifiedDate":"2023-03-09"},{"lineNumber":386,"author":{"gitId":"daitenshionyan"},"content":"        // not a number","lastModifiedDate":"2023-03-09"},{"lineNumber":387,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInteger(\"hanya??\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":388,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":389,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"daitenshionyan":105,"-":79,"francisyzy":205}},{"path":"src/test/java/seedu/vms/logic/parser/basic/BasicParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.basic;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.basic.ExitCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.basic.HelpCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"public class BasicParserTest {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"    private final BasicParser parser \u003d new BasicParser();","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(parser.parse(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(parser.parse(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(parser.parse(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(parser.parse(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"daitenshionyan":26}},{"path":"src/test/java/seedu/vms/logic/parser/patient/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.ALLERGY_DESC_GLUTEN;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.ALLERGY_DESC_SEAFOOD;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.BLOODTYPE_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.BLOODTYPE_DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.DOB_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.DOB_DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_ALLERGY_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_BLOODTYPE_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_DOB_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_ALLERGY_GLUTEN;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_ALLERGY_SEAFOOD;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_BLOODTYPE_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.AMY;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.AddCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Allergy;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.PatientBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        Patient expectedPatient \u003d new PatientBuilder(BOB).withAllergies(VALID_ALLERGY_GLUTEN).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"                + BLOODTYPE_DESC_BOB + ALLERGY_DESC_GLUTEN, new AddCommand(expectedPatient));","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"                + BLOODTYPE_DESC_BOB + ALLERGY_DESC_GLUTEN, new AddCommand(expectedPatient));","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"                + BLOODTYPE_DESC_BOB + ALLERGY_DESC_GLUTEN, new AddCommand(expectedPatient));","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"        // multiple dobs - last dob accepted","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + DOB_DESC_AMY + DOB_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"                + BLOODTYPE_DESC_BOB + ALLERGY_DESC_GLUTEN, new AddCommand(expectedPatient));","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"        // multiple bloodtypees - last bloodtype accepted","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + DOB_DESC_BOB + BLOODTYPE_DESC_AMY","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"                + BLOODTYPE_DESC_BOB + ALLERGY_DESC_GLUTEN, new AddCommand(expectedPatient));","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        // multiple allergy - all accepted","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"        Patient expectedPatientMultipleAllergies \u003d new PatientBuilder(BOB)","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"                .withAllergies(VALID_ALLERGY_GLUTEN, VALID_ALLERGY_SEAFOOD)","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + DOB_DESC_BOB + BLOODTYPE_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"                + ALLERGY_DESC_SEAFOOD + ALLERGY_DESC_GLUTEN,","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"                new AddCommand(expectedPatientMultipleAllergies));","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        // zero allergy","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"        Patient expectedPatient \u003d new PatientBuilder(AMY).withAllergies().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + DOB_DESC_AMY + BLOODTYPE_DESC_AMY,","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"                new AddCommand(expectedPatient));","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + DOB_DESC_BOB + BLOODTYPE_DESC_BOB,","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + DOB_DESC_BOB + BLOODTYPE_DESC_BOB,","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"        // missing dob prefix","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_BLOODTYPE_BOB + BLOODTYPE_DESC_BOB,","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"        // missing bloodtype prefix","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + DOB_DESC_BOB + VALID_BLOODTYPE_BOB,","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_BLOODTYPE_BOB + VALID_BLOODTYPE_BOB,","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + DOB_DESC_BOB + BLOODTYPE_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"                + ALLERGY_DESC_SEAFOOD + ALLERGY_DESC_GLUTEN, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + DOB_DESC_BOB + BLOODTYPE_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"                + ALLERGY_DESC_SEAFOOD + ALLERGY_DESC_GLUTEN, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"francisyzy"},"content":"        // invalid dob","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_DOB_DESC + BLOODTYPE_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"francisyzy"},"content":"                + ALLERGY_DESC_SEAFOOD + ALLERGY_DESC_GLUTEN, Dob.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"francisyzy"},"content":"        // invalid bloodtype","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + DOB_DESC_BOB + INVALID_BLOODTYPE_DESC","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"francisyzy"},"content":"                + ALLERGY_DESC_SEAFOOD + ALLERGY_DESC_GLUTEN, BloodType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"francisyzy"},"content":"        // invalid allergy","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + DOB_DESC_BOB + BLOODTYPE_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"francisyzy"},"content":"                + INVALID_ALLERGY_DESC + VALID_ALLERGY_GLUTEN, Allergy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + DOB_DESC_BOB + INVALID_BLOODTYPE_DESC,","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"francisyzy"},"content":"                + BLOODTYPE_DESC_BOB + ALLERGY_DESC_SEAFOOD + ALLERGY_DESC_GLUTEN,","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"daitenshionyan":16,"francisyzy":68,"-":58}},{"path":"src/test/java/seedu/vms/logic/parser/patient/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.DeleteCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PATIENT));","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"daitenshionyan":5,"-":25,"francisyzy":2}},{"path":"src/test/java/seedu/vms/logic/parser/patient/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.ALLERGY_DESC_GLUTEN;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.ALLERGY_DESC_SEAFOOD;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.BLOODTYPE_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.BLOODTYPE_DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.DOB_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.DOB_DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_ALLERGY_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_BLOODTYPE_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_DOB_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.INVALID_VACCINE_DESC;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_ALLERGY_GLUTEN;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_ALLERGY_SEAFOOD;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_BLOODTYPE_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_BLOODTYPE_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_DOB_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.DELIMITER;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.parser.CliSyntax.PREFIX_ALLERGY;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_THIRD_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.EditCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Allergy;","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Vaccine;","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    private static final String ALLERGY_EMPTY \u003d \" \" + DELIMITER + PREFIX_ALLERGY + \" \";","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"            EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DOB_DESC, Dob.MESSAGE_CONSTRAINTS); // invalid dob","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_BLOODTYPE_DESC, BloodType.MESSAGE_CONSTRAINTS); // invalid allergy","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ALLERGY_DESC, Allergy.MESSAGE_CONSTRAINTS); // invalid allergy","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_VACCINE_DESC, Vaccine.MESSAGE_CONSTRAINTS); // invalid vaccine","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"        // invalid phone followed by valid dob","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + DOB_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"        // while parsing {@code PREFIX_ALLERGY} alone will reset the allergies of the {@code Patient} being edited,","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"        // parsing it together with a valid allergy results in error","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + ALLERGY_DESC_GLUTEN + ALLERGY_DESC_SEAFOOD + ALLERGY_EMPTY,","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"                Allergy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + ALLERGY_DESC_GLUTEN + ALLERGY_EMPTY + ALLERGY_DESC_SEAFOOD,","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"                Allergy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + ALLERGY_EMPTY + ALLERGY_DESC_GLUTEN + ALLERGY_DESC_SEAFOOD,","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"                Allergy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_DOB_DESC + VALID_BLOODTYPE_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"francisyzy"},"content":"        Index targetIndex \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + ALLERGY_DESC_SEAFOOD","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"francisyzy"},"content":"                + DOB_DESC_AMY + BLOODTYPE_DESC_AMY + NAME_DESC_AMY + ALLERGY_DESC_GLUTEN;","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"francisyzy"},"content":"                .withPhone(VALID_PHONE_BOB).withDob(VALID_DOB_AMY).withBloodType(VALID_BLOODTYPE_AMY)","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"francisyzy"},"content":"                .withAllergies(VALID_ALLERGY_SEAFOOD, VALID_ALLERGY_GLUTEN).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"francisyzy"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"francisyzy"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + DOB_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"francisyzy"},"content":"                .withDob(VALID_DOB_AMY).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"francisyzy"},"content":"        Index targetIndex \u003d INDEX_THIRD_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"francisyzy"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"francisyzy"},"content":"        // dob","lastModifiedDate":"2023-03-10"},{"lineNumber":157,"author":{"gitId":"francisyzy"},"content":"        userInput \u003d targetIndex.getOneBased() + DOB_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"francisyzy"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withDob(VALID_DOB_AMY).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"francisyzy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"francisyzy"},"content":"        // bloodType","lastModifiedDate":"2023-03-10"},{"lineNumber":163,"author":{"gitId":"francisyzy"},"content":"        userInput \u003d targetIndex.getOneBased() + BLOODTYPE_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"francisyzy"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withBloodType(VALID_BLOODTYPE_AMY).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"francisyzy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"francisyzy"},"content":"        // allergies","lastModifiedDate":"2023-03-10"},{"lineNumber":169,"author":{"gitId":"francisyzy"},"content":"        userInput \u003d targetIndex.getOneBased() + ALLERGY_DESC_GLUTEN;","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"francisyzy"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withAllergies(VALID_ALLERGY_GLUTEN).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"francisyzy"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":177,"author":{"gitId":"francisyzy"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"francisyzy"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + BLOODTYPE_DESC_AMY + DOB_DESC_AMY","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"francisyzy"},"content":"                + ALLERGY_DESC_GLUTEN + PHONE_DESC_AMY + BLOODTYPE_DESC_AMY + DOB_DESC_AMY + ALLERGY_DESC_GLUTEN","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"francisyzy"},"content":"                + PHONE_DESC_BOB + BLOODTYPE_DESC_BOB + DOB_DESC_BOB + ALLERGY_DESC_SEAFOOD;","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"francisyzy"},"content":"                .withDob(VALID_DOB_BOB).withBloodType(VALID_BLOODTYPE_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"francisyzy"},"content":"                .withAllergies(VALID_ALLERGY_GLUTEN, VALID_ALLERGY_SEAFOOD)","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"francisyzy"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":196,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"francisyzy"},"content":"        userInput \u003d targetIndex.getOneBased() + DOB_DESC_BOB + INVALID_PHONE_DESC + BLOODTYPE_DESC_BOB","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":203,"author":{"gitId":"francisyzy"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB).withDob(VALID_DOB_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"francisyzy"},"content":"                .withBloodType(VALID_BLOODTYPE_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"francisyzy"},"content":"    public void parse_resetAllergies_success() {","lastModifiedDate":"2023-03-10"},{"lineNumber":211,"author":{"gitId":"francisyzy"},"content":"        Index targetIndex \u003d INDEX_THIRD_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"francisyzy"},"content":"        String userInput \u003d targetIndex.getOneBased() + ALLERGY_EMPTY;","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withAllergies().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"francisyzy"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":216,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":217,"author":{"gitId":"francisyzy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"daitenshionyan":14,"-":103,"francisyzy":102}},{"path":"src/test/java/seedu/vms/logic/parser/patient/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.FindCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"daitenshionyan":5,"-":28,"francisyzy":1}},{"path":"src/test/java/seedu/vms/logic/parser/patient/PatientParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.logic.parser.patient;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.basic.HelpCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.AddCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.ClearCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.DeleteCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.EditCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.FindCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.ListCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.PatientBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.PatientUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"public class PatientParserTest {","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    private final PatientParser parser \u003d new PatientParser();","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        AddCommand command \u003d (AddCommand) parser.parse(PatientUtil.getAddCommand(patient));","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        assertEquals(new AddCommand(patient), command);","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(parser.parse(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(parser.parse(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parse(","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PATIENT.getOneBased());","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PATIENT), command);","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(patient).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        EditCommand command \u003d (EditCommand) parser.parse(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"                + INDEX_FIRST_PATIENT.getOneBased() + \" \" + PatientUtil.getEditPatientDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PATIENT, descriptor), command);","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        FindCommand command \u003d (FindCommand) parser.parse(","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(parser.parse(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(parser.parse(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"            -\u003e parser.parse(\"\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parse(\"unknownCommand\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"daitenshionyan":23,"-":49,"francisyzy":16}},{"path":"src/test/java/seedu/vms/model/AgeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"public class AgeTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"    private static final Age TEST \u003d Age.MAX_AGE;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    private static final Age EQS \u003d new Age(Age.MAX_VALUE);","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private static final Age OFF_LIMIT \u003d new Age(Age.MAX_VALUE + 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    private static final Age LESS \u003d new Age(Age.MAX_VALUE - 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    public void getValue() {","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(Age.MIN_VALUE, Age.MIN_AGE.getValue());","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(Age.MAX_VALUE, Age.MAX_AGE.getValue());","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(Age.MAX_VALUE, OFF_LIMIT.getValue());","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    public void compareToTest() {","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(TEST.compareTo(EQS) \u003d\u003d 0);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(TEST.compareTo(LESS) \u003e 0);","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(LESS.compareTo(TEST) \u003c 0);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(TEST.compareTo(OFF_LIMIT) \u003d\u003d 0);","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(String.valueOf(Age.MIN_VALUE + 1), new Age(Age.MIN_VALUE + 1).toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(String.valueOf(Age.MAX_VALUE - 1), new Age(Age.MAX_VALUE - 1).toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(Age.STRING_MIN, new Age(Age.MIN_VALUE).toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(Age.STRING_MAX, new Age(Age.MAX_VALUE).toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(Age.STRING_MAX, OFF_LIMIT.toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(TEST.equals(TEST));","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(TEST.equals(EQS));","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(TEST.equals(OFF_LIMIT));","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(TEST.equals(LESS));","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(TEST.equals(5));","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cAge\u003e ageSet \u003d new HashSet\u003c\u003e(List.of(TEST, EQS, OFF_LIMIT, LESS));","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(ageSet.size() \u003d\u003d 2);","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(ageSet.contains(OFF_LIMIT));","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    public void isValid() {","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(Age.isValid(Age.MIN_VALUE - 1));","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(Age.isValid(Age.MAX_VALUE + 1));","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"daitenshionyan":69}},{"path":"src/test/java/seedu/vms/model/GroupNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"public class GroupNameTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cString\u003e INVALID_LIST \u003d List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"        \"\",","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"        \" \",","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"        \"a\\n\\ra\",","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"        \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"        \"abc:\",","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"        \"( ^)o(^ )b\");","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private static final String SAMPLE_NAME \u003d \"UNCHI\";","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cGroupName\u003e LIST_TO_SORT \u003d List.of(","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"a\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"A\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"B\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"b\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"bBB\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"bBb\"));","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cGroupName\u003e EXPECTED_SORTED_LIST \u003d List.of(","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"a\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"A\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"b\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"B\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"bBb\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"bBB\"));","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    public void isValidName_valid_true() {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(GroupName.isValidName(","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            \"   120 - []{}()- Pks niUw LK () k    \"));","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(GroupName.isValidName(\"a\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    public void isValidName_invalid_false() {","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        for (String invalid : INVALID_LIST) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"            assertFalse(GroupName.isValidName(invalid), invalid);","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        GroupName testing \u003d new GroupName(SAMPLE_NAME);","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        GroupName eqs \u003d new GroupName(SAMPLE_NAME + \" \");","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        GroupName diff \u003d new GroupName(SAMPLE_NAME + \"a\");","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        Integer unrelated \u003d Integer.valueOf(0);","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(testing.equals(testing));","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(testing.equals(eqs));","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(testing.equals(diff));","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(testing.equals(unrelated));","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    public void compareToTest() {","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cGroupName\u003e toSort \u003d new ArrayList\u003c\u003e(LIST_TO_SORT);","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        toSort.sort(Comparator.naturalOrder());","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(EXPECTED_SORTED_LIST, toSort);","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"daitenshionyan":76}},{"path":"src/test/java/seedu/vms/model/IdDataMapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.LimitExceededException;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"public class IdDataMapTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private static final int TESTING_LIMIT \u003d 10;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cInteger\u003e RANDOM_VALUES \u003d List.of(5, 6, 0, 7, 8, 9, 1, 3, 4, 2);","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private IdDataMap\u003cInteger\u003e idMap;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    public void initializeIdMap() {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        idMap \u003d new IdDataMap\u003c\u003e(TESTING_LIMIT);","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    public void add_valueWithinLimit_valueAdded() {","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"            idMap.add(i);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            assertTrue(idMap.contains(i));","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    public void add_valueOverLimit_exceptionThrown() {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"            idMap.add(i);","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(LimitExceededException.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e idMap.add(TESTING_LIMIT));","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    public void add_dataWithinLimit_valueAdded() {","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"            idMap.add(new IdData\u003c\u003e(true, i, i));","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"            assertTrue(idMap.contains(i));","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    public void add_dataOverLimit_exceptionThrown() {","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(LimitExceededException.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e idMap.add(new IdData\u003c\u003e(true, -1, -1)));","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(LimitExceededException.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e idMap.add(new IdData\u003c\u003e(true, TESTING_LIMIT, TESTING_LIMIT)));","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"    public void add_mixedUnordered() {","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"        /* 0 */ idMap.add(new IdData\u003c\u003e(true, RANDOM_VALUES.get(0), RANDOM_VALUES.get(0)));","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        /* 1 */ idMap.add(RANDOM_VALUES.get(1));","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"        /* 2 */ idMap.add(new IdData\u003c\u003e(true, RANDOM_VALUES.get(2), RANDOM_VALUES.get(2)));","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        /* 3 */ idMap.add(RANDOM_VALUES.get(3));","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        /* 4 */ idMap.add(RANDOM_VALUES.get(4));","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        /* 5 */ idMap.add(RANDOM_VALUES.get(5));","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        /* 6 */ idMap.add(RANDOM_VALUES.get(6));","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        /* 7 */ idMap.add(new IdData\u003c\u003e(true, RANDOM_VALUES.get(7), RANDOM_VALUES.get(7)));","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"        /* 8 */ idMap.add(RANDOM_VALUES.get(8));","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        /* 9 */ idMap.add(RANDOM_VALUES.get(9));","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"            assertEquals(i, idMap.get(i).getValue());","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"        // limit","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(LimitExceededException.class,","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e idMap.add(new IdData\u003c\u003e(true, TESTING_LIMIT, TESTING_LIMIT)));","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"    public void setValues_withinLimit_valuesAdded() {","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cInteger\u003e values \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"            values.add(i);","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"        idMap.setValues(values);","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"            assertEquals(i, idMap.get(i).getValue());","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"    public void setValues_overLimit_exceptionThrown() {","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cInteger\u003e values \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT + 1; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"            values.add(i);","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(LimitExceededException.class, () -\u003e idMap.setValues(values));","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"    public void setDatas_withinLimit_valuesAdded() {","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cIdData\u003cInteger\u003e\u003e datas \u003d formRandDataList();","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"        idMap.setDatas(datas);","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"            assertEquals(i, idMap.get(i).getValue());","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"    public void setDatas_overLimit_exceptionThrown() {","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cInteger\u003e idValues \u003d List.of(-1, TESTING_LIMIT);","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"        for (Integer id : idValues) {","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"            for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"                ArrayList\u003cIdData\u003cInteger\u003e\u003e datas \u003d formRandDataList();","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"                datas.remove(i);","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"                datas.add(i, new IdData\u003c\u003e(true, id, id));","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"                assertThrows(LimitExceededException.class, () -\u003e idMap.setDatas(datas));","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"    public void set() {","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"        int initial \u003d 0;","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"        int change \u003d 1;","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"        idMap.add(initial);","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"        idMap.set(0, change);","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(change, idMap.get(0).getValue());","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(NoSuchElementException.class, () -\u003e idMap.set(1, change));","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"    private ArrayList\u003cIdData\u003cInteger\u003e\u003e formRandDataList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cIdData\u003cInteger\u003e\u003e datas \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 0; i \u003c TESTING_LIMIT; i++) {","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"            datas.add(new IdData\u003cInteger\u003e(true, RANDOM_VALUES.get(i), RANDOM_VALUES.get(i)));","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"        return datas;","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"daitenshionyan":159}},{"path":"src/test/java/seedu/vms/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.PatientManagerBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        assertEquals(new PatientManager(), new PatientManager(modelManager.getPatientManager()));","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        userPrefs.setPatientManagerFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        userPrefs.setPatientManagerFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"    public void setPatientManagerFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPatientManagerFilePath(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"    public void setPatientManagerFilePath_validPath_setsPatientManagerFilePath() {","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"        modelManager.setPatientManagerFilePath(path);","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"        assertEquals(path, modelManager.getPatientManagerFilePath());","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"    public void getFilteredPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPatientList().put(0, null));","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        PatientManager patientManager \u003d new PatientManagerBuilder().withPatient(ALICE).withPatient(BENSON).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"        PatientManager differentPatientManager \u003d new PatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"        modelManager \u003d new ModelManager(patientManager, userPrefs);","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(patientManager, userPrefs);","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"        // different patientManager -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentPatientManager, userPrefs)));","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"        modelManager.updateFilteredPatientList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"        assertFalse(modelManager.equals(new ModelManager(patientManager, userPrefs)));","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"        modelManager.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"        differentUserPrefs.setPatientManagerFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"        assertFalse(modelManager.equals(new ModelManager(patientManager, differentUserPrefs)));","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"daitenshionyan":3,"-":87,"francisyzy":27}},{"path":"src/test/java/seedu/vms/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    public void setPatientManagerFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setPatientManagerFilePath(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"daitenshionyan":3,"-":17,"francisyzy":2}},{"path":"src/test/java/seedu/vms/model/patient/AllergyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"public class AllergyTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Allergy(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    public void constructor_invalidAllergyName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"        String invalidAllergyName \u003d \"\";","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Allergy(invalidAllergyName));","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    public void isValidAllergyName() {","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        // null allergy name","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e Allergy.isValidAllergyName(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        // valid","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        assertTrue(Allergy.isValidAllergyName(\"test\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        // invalid","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        assertFalse(Allergy.isValidAllergyName(\"%1\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"francisyzy":34}},{"path":"src/test/java/seedu/vms/model/patient/BloodTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"public class BloodTypeTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new BloodType(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    public void constructor_invalidBloodType_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"        String invalidBloodType \u003d \"\";","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BloodType(invalidBloodType));","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    public void isValidBloodType() {","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        // invalid blood types","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        assertFalse(BloodType.isValidBloodType(\"\")); // empty string","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        assertFalse(BloodType.isValidBloodType(\" \")); // spaces only","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        assertFalse(BloodType.isValidBloodType(\"B\")); // Random","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        assertFalse(BloodType.isValidBloodType(\"C\")); // Random","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        assertFalse(BloodType.isValidBloodType(\"A\")); // Random","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        assertFalse(BloodType.isValidBloodType(\"A++\")); // Random","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        // valid blood types","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        assertTrue(BloodType.isValidBloodType(\"A-\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        assertTrue(BloodType.isValidBloodType(\"A+\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        assertTrue(BloodType.isValidBloodType(\"B-\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        assertTrue(BloodType.isValidBloodType(\"B+\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        assertTrue(BloodType.isValidBloodType(\"AB-\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        assertTrue(BloodType.isValidBloodType(\"AB+\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        assertTrue(BloodType.isValidBloodType(\"O-\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        assertTrue(BloodType.isValidBloodType(\"O+\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"francisyzy":42}},{"path":"src/test/java/seedu/vms/model/patient/DobTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static java.time.format.DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"public class DobTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    public void constructor_invalidDob_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        String invalidDob \u003d \"\";","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Dob(invalidDob));","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public void isValidDob() {","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        // invalid dobs","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"        assertFalse(Dob.isValidDob(\"\")); // empty string","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        assertFalse(Dob.isValidDob(\" \")); // spaces only","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        assertFalse(Dob.isValidDob(LocalDateTime.now().plusDays(1))); // future dob","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        assertFalse(Dob.isValidDob(\"2020-22-01\")); // Invalid format","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        // valid dobs","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        assertTrue(Dob.isValidDob(LocalDateTime.now().minusDays(1))); // yesterday dob","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"        assertTrue(Dob.isValidDob(\"2020-02-29\")); // Leap","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"        assertTrue(Dob.isValidDob(\"1903-05-29\")); // Very old person","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        assertTrue(Dob.isValidDob(\"2000-01-01\")); // Y2k","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    public void constructor_validDobString() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        final String expected \u003d \"2020-03-19\";","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expected, new Dob(expected).toString());","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    public void constructor_validDobLocalDateTime() {","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"        LocalDateTime expected \u003d LocalDateTime.now().minusDays(1);","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        String expectedString \u003d expected.format(ISO_LOCAL_DATE);","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        assertEquals(expectedString, new Dob(expected).toString());","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    public void isEqualsDob() throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"        LocalDateTime expected \u003d LocalDateTime.now().minusDays(1);","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        String expectedString \u003d expected.format(ISO_LOCAL_DATE);","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        Dob equalOne \u003d new Dob(expected);","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        Dob equalTwo \u003d new Dob(expected);","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"        Dob equalThree \u003d new Dob(expectedString);","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        Dob notEqual \u003d new Dob(\"2020-03-23\");","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        // Equal Dobs","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        assertTrue(equalOne.equals(equalTwo));","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        assertTrue(equalOne.equals(equalThree));","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        // Not Equal Dobs","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        assertFalse(notEqual.equals(equalOne));","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        assertFalse(notEqual.equals(equalThree));","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        assertFalse(equalOne.equals(notEqual));","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"        assertFalse(equalThree.equals(notEqual));","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"francisyzy":72}},{"path":"src/test/java/seedu/vms/model/patient/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.PatientBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"        // Keywords match phone, bloodType and DOB, but does not match name","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"2001-02-24\", \"A+\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"                .withDob(\"2001-02-24\").withBloodType(\"A+\").build()));","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"francisyzy":13,"-":62}},{"path":"src/test/java/seedu/vms/model/patient/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"daitenshionyan":1,"francisyzy":1,"-":38}},{"path":"src/test/java/seedu/vms/model/patient/PatientManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.getTypicalPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class PatientManagerTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    private final PatientManager patientManager \u003d new PatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    public void constructor() {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"        Map\u003c?, ?\u003e map \u003d patientManager.getMapView();","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"        assertEquals(true, map.isEmpty());","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e patientManager.resetData(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    public void resetData_withValidReadOnlyPatientManager_replacesData() {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        PatientManager newData \u003d getTypicalPatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        patientManager.resetData(newData);","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        assertEquals(newData, patientManager);","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    public void getPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e getTypicalPatientManager().getMapView().remove(0));","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"francisyzy":38}},{"path":"src/test/java/seedu/vms/model/patient/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_ALLERGY_GLUTEN;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_BLOODTYPE_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.BOB;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.PatientBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"public class PatientTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e patient.getAllergy().remove(0));","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    public void isSamePatient() {","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        assertTrue(ALICE.isSamePatient(ALICE));","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        assertFalse(ALICE.isSamePatient(null));","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).withDob(VALID_DOB_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"                .withBloodType(VALID_BLOODTYPE_BOB).withAllergies(VALID_ALLERGY_GLUTEN).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        assertTrue(ALICE.isSamePatient(editedAlice));","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        assertFalse(ALICE.isSamePatient(editedAlice));","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"        Patient editedBob \u003d new PatientBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"        assertFalse(BOB.isSamePatient(editedBob));","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        editedBob \u003d new PatientBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        assertFalse(BOB.isSamePatient(editedBob));","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        Patient aliceCopy \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"        // different dob -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withDob(VALID_DOB_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"        // different bloodType -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withBloodType(VALID_BLOODTYPE_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"        // different allergies -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withAllergies(VALID_ALLERGY_GLUTEN).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"daitenshionyan":2,"francisyzy":37,"-":52}},{"path":"src/test/java/seedu/vms/model/patient/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"daitenshionyan":1,"francisyzy":1,"-":38}},{"path":"src/test/java/seedu/vms/model/patient/VaccineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.model.patient;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"public class VaccineTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Vaccine(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    public void constructor_invalidVaccineName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"        String invalidVaccineName \u003d \"\";","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Vaccine(invalidVaccineName));","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    public void isValidVaccineName() {","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"        // null vaccine name","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e Vaccine.isValidVaccineName(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        // valid","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        assertTrue(Vaccine.isValidVaccineName(\"test\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"        // invalid","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        assertFalse(Vaccine.isValidVaccineName(\"%1\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"francisyzy":34}},{"path":"src/test/java/seedu/vms/model/vaccination/RequirementTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement.RequirementType;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"public class RequirementTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e SET_1_A \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi1\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e SET_1_B \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"banana1\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e SET_3_A \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi1\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi2\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi3\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e SET_3_B \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"banana1\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"banana2\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"banana3\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e SET_3_C \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi1\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi2\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"banana1\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e SET_4_A \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi1\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi2\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi3\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"unchi4\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    public void construction_nullReqType_exceptionThrown() {","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            new Requirement(null, SET_1_A);","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        } catch (NullPointerException nullEx) {","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception thrown","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        fail(\"Exception not thrown\");","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"    public void construction_invalidReqSet_exceptionThrown() {","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        // empty requirement set","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"            new Requirement(RequirementType.ALL, new HashSet\u003c\u003e());","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalArgumentException nullEx) {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception thrown","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        fail(\"Exception not thrown\");","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        // null requirement set","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"            new Requirement(RequirementType.ALL, null);","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        } catch (NullPointerException nullEx) {","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception thrown","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        fail(\"Exception not thrown\");","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    public void check_all() {","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 0 | Req multiple | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ALL, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"                .check(new HashSet\u003c\u003e()),","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 0 | Req multiple | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req 1 | All matching","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ALL, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req 1 | All matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req 1 | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ALL, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_B),","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req 1 | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req Multiple | S \u003c R","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ALL, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req Multiple | S \u003c R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req Multiple | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ALL, SET_3_B)","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req Multiple | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req 1 | S \u003e R","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ALL, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample Multiple | Req 1 | S \u003e R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req 1 | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ALL, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_B),","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req 1 | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"        // Sample multiple | Req multiple | All matching","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ALL, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample multiple | Req multiple | All matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"        // Sample multiple | Req multiple | Some matching","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ALL, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_C),","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample multiple | Req multiple | Some matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"        // Sample multiple | Req multiple | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ALL, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_B),","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample multiple | Req multiple | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req Multiple | S \u003c R","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ALL, SET_4_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample Multiple | Req Multiple | S \u003c R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req Multiple | S \u003e R","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ALL, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_4_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample Multiple | Req Multiple | S \u003c R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"    public void check_any() {","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 0 | Req multiple | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ANY, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"                .check(new HashSet\u003c\u003e()),","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 0 | Req multiple | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req 1 | All matching","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ANY, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req 1 | All matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req 1 | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ANY, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_B),","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req 1 | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req Multiple | S \u003c R","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ANY, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req Multiple | S \u003c R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req Multiple | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ANY, SET_3_B)","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req Multiple | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req 1 | S \u003e R","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ANY, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample Multiple | Req 1 | S \u003e R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req 1 | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ANY, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_B),","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req 1 | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"        // Sample multiple | Req multiple | All matching","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ANY, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample multiple | Req multiple | All matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"        // Sample multiple | Req multiple | Some matching","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ANY, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_C),","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample multiple | Req multiple | Some matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"        // Sample multiple | Req multiple | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.ANY, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_B),","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample multiple | Req multiple | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req Multiple | S \u003c R","lastModifiedDate":"2023-03-03"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ANY, SET_4_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample Multiple | Req Multiple | S \u003c R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req Multiple | S \u003e R","lastModifiedDate":"2023-03-03"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.ANY, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_4_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample Multiple | Req Multiple | S \u003c R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":189,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"    public void check_none() {","lastModifiedDate":"2023-03-03"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 0 | Req multiple | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.NONE, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":194,"author":{"gitId":"daitenshionyan"},"content":"                .check(new HashSet\u003c\u003e()),","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 0 | Req multiple | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":196,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req 1 | All matching","lastModifiedDate":"2023-03-03"},{"lineNumber":198,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.NONE, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":199,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":200,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req 1 | All matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req 1 | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":202,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.NONE, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_B),","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req 1 | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":205,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":206,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req Multiple | S \u003c R","lastModifiedDate":"2023-03-03"},{"lineNumber":207,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.NONE, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":208,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":209,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req Multiple | S \u003c R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":210,"author":{"gitId":"daitenshionyan"},"content":"        // Sample 1 | Req Multiple | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":211,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.NONE, SET_3_B)","lastModifiedDate":"2023-03-03"},{"lineNumber":212,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_1_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":213,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req Multiple | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":214,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":215,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req 1 | S \u003e R","lastModifiedDate":"2023-03-03"},{"lineNumber":216,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.NONE, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":217,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":218,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample Multiple | Req 1 | S \u003e R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":219,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req 1 | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":220,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.NONE, SET_1_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":221,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_B),","lastModifiedDate":"2023-03-03"},{"lineNumber":222,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample 1 | Req 1 | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":224,"author":{"gitId":"daitenshionyan"},"content":"        // Sample multiple | Req multiple | All matching","lastModifiedDate":"2023-03-03"},{"lineNumber":225,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.NONE, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":226,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":227,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample multiple | Req multiple | All matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"daitenshionyan"},"content":"        // Sample multiple | Req multiple | Some matching","lastModifiedDate":"2023-03-03"},{"lineNumber":229,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.NONE, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":230,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_C),","lastModifiedDate":"2023-03-03"},{"lineNumber":231,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample multiple | Req multiple | Some matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":232,"author":{"gitId":"daitenshionyan"},"content":"        // Sample multiple | Req multiple | None matching","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(new Requirement(RequirementType.NONE, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":234,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_B),","lastModifiedDate":"2023-03-03"},{"lineNumber":235,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample multiple | Req multiple | None matching\");","lastModifiedDate":"2023-03-03"},{"lineNumber":236,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req Multiple | S \u003c R","lastModifiedDate":"2023-03-03"},{"lineNumber":237,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.NONE, SET_4_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":238,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_3_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":239,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample Multiple | Req Multiple | S \u003c R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":240,"author":{"gitId":"daitenshionyan"},"content":"        // Sample Multiple | Req Multiple | S \u003e R","lastModifiedDate":"2023-03-03"},{"lineNumber":241,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(new Requirement(RequirementType.NONE, SET_3_A)","lastModifiedDate":"2023-03-03"},{"lineNumber":242,"author":{"gitId":"daitenshionyan"},"content":"                .check(SET_4_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":243,"author":{"gitId":"daitenshionyan"},"content":"                \"Sample Multiple | Req Multiple | S \u003c R\");","lastModifiedDate":"2023-03-03"},{"lineNumber":244,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":245,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":246,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":247,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":248,"author":{"gitId":"daitenshionyan"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-03-03"},{"lineNumber":249,"author":{"gitId":"daitenshionyan"},"content":"        Requirement req1 \u003d new Requirement(RequirementType.ALL, SET_1_A);","lastModifiedDate":"2023-03-03"},{"lineNumber":250,"author":{"gitId":"daitenshionyan"},"content":"        Requirement req1a \u003d new Requirement(RequirementType.ALL, SET_1_A);","lastModifiedDate":"2023-03-03"},{"lineNumber":251,"author":{"gitId":"daitenshionyan"},"content":"        Requirement req2 \u003d new Requirement(RequirementType.ANY, SET_1_A);","lastModifiedDate":"2023-03-03"},{"lineNumber":252,"author":{"gitId":"daitenshionyan"},"content":"        Requirement req3 \u003d new Requirement(RequirementType.ALL, SET_1_B);","lastModifiedDate":"2023-03-03"},{"lineNumber":253,"author":{"gitId":"daitenshionyan"},"content":"        Integer unrelated \u003d Integer.valueOf(0);","lastModifiedDate":"2023-03-03"},{"lineNumber":254,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":255,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(req1.equals(req1), \"Same instance\");","lastModifiedDate":"2023-03-03"},{"lineNumber":256,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(req1.equals(req1a), \"Same but different instance\");","lastModifiedDate":"2023-03-03"},{"lineNumber":257,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(req1.equals(req2), \"Different type\");","lastModifiedDate":"2023-03-03"},{"lineNumber":258,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(req1.equals(req3), \"Different sets\");","lastModifiedDate":"2023-03-03"},{"lineNumber":259,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(req1.equals(unrelated), \"Unrelated\");","lastModifiedDate":"2023-03-03"},{"lineNumber":260,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":261,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":262,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":263,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":264,"author":{"gitId":"daitenshionyan"},"content":"    public void copy_single() {","lastModifiedDate":"2023-03-03"},{"lineNumber":265,"author":{"gitId":"daitenshionyan"},"content":"        Requirement req \u003d new Requirement(RequirementType.ALL, SET_1_A);","lastModifiedDate":"2023-03-03"},{"lineNumber":266,"author":{"gitId":"daitenshionyan"},"content":"        Requirement copy \u003d req.copy();","lastModifiedDate":"2023-03-03"},{"lineNumber":267,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":268,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(req, copy);","lastModifiedDate":"2023-03-03"},{"lineNumber":269,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":270,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":271,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":272,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":273,"author":{"gitId":"daitenshionyan"},"content":"    public void copy_list() {","lastModifiedDate":"2023-03-03"},{"lineNumber":274,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cRequirement\u003e refReqs \u003d List.of(new Requirement(RequirementType.ALL, SET_1_A));","lastModifiedDate":"2023-03-03"},{"lineNumber":275,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cRequirement\u003e reqs \u003d new ArrayList\u003c\u003e(refReqs);","lastModifiedDate":"2023-03-03"},{"lineNumber":276,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cRequirement\u003e copyReqs \u003d Requirement.copy(reqs);","lastModifiedDate":"2023-03-03"},{"lineNumber":277,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":278,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(refReqs, copyReqs);","lastModifiedDate":"2023-03-03"},{"lineNumber":279,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":280,"author":{"gitId":"daitenshionyan"},"content":"        // immutability","lastModifiedDate":"2023-03-03"},{"lineNumber":281,"author":{"gitId":"daitenshionyan"},"content":"        reqs.remove(0);","lastModifiedDate":"2023-03-03"},{"lineNumber":282,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(refReqs, copyReqs);","lastModifiedDate":"2023-03-03"},{"lineNumber":283,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":284,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":285,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":286,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":287,"author":{"gitId":"daitenshionyan"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2023-03-03"},{"lineNumber":288,"author":{"gitId":"daitenshionyan"},"content":"        Requirement req1 \u003d new Requirement(RequirementType.ALL, SET_1_A);","lastModifiedDate":"2023-03-03"},{"lineNumber":289,"author":{"gitId":"daitenshionyan"},"content":"        Requirement req2 \u003d new Requirement(RequirementType.ALL, SET_1_A);","lastModifiedDate":"2023-03-03"},{"lineNumber":290,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":291,"author":{"gitId":"daitenshionyan"},"content":"        // assume equals to work from above","lastModifiedDate":"2023-03-03"},{"lineNumber":292,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cRequirement\u003e reqs \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":293,"author":{"gitId":"daitenshionyan"},"content":"        reqs.add(req1);","lastModifiedDate":"2023-03-03"},{"lineNumber":294,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(reqs.contains(req2));","lastModifiedDate":"2023-03-03"},{"lineNumber":295,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":296,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":297,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":298,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":299,"author":{"gitId":"daitenshionyan"},"content":"    public void getReqSetTest() {","lastModifiedDate":"2023-03-03"},{"lineNumber":300,"author":{"gitId":"daitenshionyan"},"content":"        Requirement req \u003d new Requirement(RequirementType.ALL, SET_1_A);","lastModifiedDate":"2023-03-03"},{"lineNumber":301,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":302,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(SET_1_A, req.getReqSet());","lastModifiedDate":"2023-03-03"},{"lineNumber":303,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":304,"author":{"gitId":"daitenshionyan"},"content":"        // immutability","lastModifiedDate":"2023-03-03"},{"lineNumber":305,"author":{"gitId":"daitenshionyan"},"content":"        req.getReqSet().addAll(SET_1_B);","lastModifiedDate":"2023-03-03"},{"lineNumber":306,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(SET_1_A, req.getReqSet());","lastModifiedDate":"2023-03-03"},{"lineNumber":307,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":308,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"daitenshionyan":308}},{"path":"src/test/java/seedu/vms/model/vaccination/VaxCheckerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement.RequirementType;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"public class VaxCheckerTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private static final Age MIN_AGE \u003d new Age(5);","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private static final Age MAX_AGE \u003d new Age(35);","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private static final int MIN_SPACING \u003d 445;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e GRP_NONE \u003d new HashSet\u003c\u003e(List.of());","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e GRP_ONE_A_1 \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"UNCHI1\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e GRP_ONE_A_2 \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"UNCHI2\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e GRP_ONE_B \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"BANANA1\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    private static final HashSet\u003cGroupName\u003e GRP_TWO_A \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"UNCHI1\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"UNCHI2\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    private static final LocalDateTime TIME_1_VALID \u003d LocalDateTime.of(2023, 3, 5, 4, 55);","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    private static final LocalDateTime TIME_2_VALID \u003d TIME_1_VALID.plusDays(MIN_SPACING);","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    private static final LocalDateTime TIME_3_VALID \u003d TIME_2_VALID.plusDays(MIN_SPACING);","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_NONE \u003d new VaxType(new GroupName(\"TYPE_1\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"            GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            MIN_SPACING,","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"            List.of(),","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"            List.of());","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_ONE_A_1 \u003d new VaxType(new GroupName(\"TYPE_1_A_2\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"            GRP_ONE_A_1,","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"            MIN_SPACING,","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"            List.of(),","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"            List.of(new Requirement(RequirementType.NONE, GRP_ONE_A_1)));","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_ONE_A_2 \u003d new VaxType(new GroupName(\"TYPE_1_A_2\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"            GRP_ONE_A_2,","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"            MIN_SPACING,","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"            List.of(),","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"            List.of());","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_ONE_B \u003d new VaxType(new GroupName(\"TYPE_1_B\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"            GRP_ONE_B,","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"            MIN_SPACING,","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"            List.of(),","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"            List.of());","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_TWO_A \u003d new VaxType(new GroupName(\"TYPE_TWO_A\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"            GRP_TWO_A,","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"            MIN_SPACING,","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"            List.of(),","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"            List.of());","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_ONE_A_REQ \u003d new VaxType(new GroupName(\"TYPE_ONE_A_REQ\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"            GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"            MIN_SPACING,","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"            List.of(),","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"            List.of(new Requirement(RequirementType.ALL, GRP_ONE_A_1)));","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_TWO_A_REQ \u003d new VaxType(new GroupName(\"TYPE_ONE_A_REQ\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"            GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"            MIN_SPACING,","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"            List.of(),","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"            List.of(new Requirement(RequirementType.ALL, GRP_TWO_A)));","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_TWO_A_SUB \u003d new VaxType(new GroupName(\"TYPE_TWO_A_SUB\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"            GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"            MIN_SPACING,","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"            List.of(),","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"            List.of(new Requirement(RequirementType.ANY, GRP_TWO_A)));","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_COMBI_REQ \u003d new VaxType(new GroupName(\"TYPE_TWO_A_SUB\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"            GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"            MIN_SPACING,","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"            List.of(new Requirement(RequirementType.NONE, GRP_TWO_A)),","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"            List.of(new Requirement(RequirementType.ALL, GRP_TWO_A),","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"                    new Requirement(RequirementType.ANY, GRP_ONE_B)));","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cVaxRecord\u003e RECORDS_NONE_1 \u003d List.of();","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cVaxRecord\u003e RECORDS_NONE_2 \u003d List.of(","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"            new VaxRecord(TYPE_NONE, TIME_1_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cVaxRecord\u003e RECORDS_ONE_A_2 \u003d List.of(","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"            new VaxRecord(TYPE_ONE_A_1, TIME_1_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cVaxRecord\u003e RECORDS_ONE_B_2 \u003d List.of(","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"            new VaxRecord(TYPE_ONE_B, TIME_1_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cVaxRecord\u003e RECORDS_SEP_A \u003d List.of(","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"            new VaxRecord(TYPE_ONE_A_2, TIME_2_VALID),","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"            new VaxRecord(TYPE_ONE_A_1, TIME_1_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cVaxRecord\u003e RECORDS_TWO_A \u003d List.of(","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"            new VaxRecord(TYPE_TWO_A, TIME_1_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cVaxRecord\u003e RECORDS_COMBI \u003d List.of(","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"            new VaxRecord(TYPE_ONE_B, TIME_1_VALID),","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"            new VaxRecord(TYPE_TWO_A, TIME_2_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"    public void check_age() {","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"        // Min age","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_NONE_1,","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"                TIME_1_VALID),","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"                \"Min age\");","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"        // Max age","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"                MAX_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_NONE_1,","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"                TIME_1_VALID),","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"                \"Max age\");","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"        // Min age - 1","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"                new Age(MIN_AGE.getValue() - 1),","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_NONE_1,","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"                TIME_1_VALID),","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"                \"Min age - 1\");","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"        // Max age + 1","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"                new Age(MAX_AGE.getValue() + 1),","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_NONE_1,","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"                TIME_1_VALID),","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"                \"Max age - 1\");","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"    public void check_spacing() {","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"        // Min spacing","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_NONE_2,","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"                TIME_2_VALID),","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"                \"Min spacing\");","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"        // Min spacing + 1","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_NONE_2,","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"                TIME_2_VALID.plusSeconds(1)),","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"                \"Min spacing + 1\");","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"        // Min spacing - 1","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_NONE_2,","lastModifiedDate":"2023-03-03"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"                TIME_2_VALID.minusSeconds(1)),","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"                \"Min spacing - 1\");","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"    public void check_historyNoReq() {","lastModifiedDate":"2023-03-03"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"        // Vax no req | Rec 1 group","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":189,"author":{"gitId":"daitenshionyan"},"content":"            TYPE_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"            GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"            RECORDS_ONE_A_2,","lastModifiedDate":"2023-03-03"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"            TIME_2_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":194,"author":{"gitId":"daitenshionyan"},"content":"        // Vax one negative req | Rec 1 group | Matching","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":196,"author":{"gitId":"daitenshionyan"},"content":"            TYPE_ONE_A_1,","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":198,"author":{"gitId":"daitenshionyan"},"content":"            GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":199,"author":{"gitId":"daitenshionyan"},"content":"            RECORDS_ONE_A_2,","lastModifiedDate":"2023-03-03"},{"lineNumber":200,"author":{"gitId":"daitenshionyan"},"content":"            TIME_2_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":201,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":202,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":205,"author":{"gitId":"daitenshionyan"},"content":"    public void check_historyOneReq() {","lastModifiedDate":"2023-03-03"},{"lineNumber":206,"author":{"gitId":"daitenshionyan"},"content":"        // Vax one non-sub req | Rec 1 group | Matching","lastModifiedDate":"2023-03-03"},{"lineNumber":207,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":208,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_ONE_A_REQ,","lastModifiedDate":"2023-03-03"},{"lineNumber":209,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":210,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":211,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_ONE_A_2,","lastModifiedDate":"2023-03-03"},{"lineNumber":212,"author":{"gitId":"daitenshionyan"},"content":"                TIME_2_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":213,"author":{"gitId":"daitenshionyan"},"content":"        // Vax one non-sub req | Rec 1 group | Not matching","lastModifiedDate":"2023-03-03"},{"lineNumber":214,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":215,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_ONE_A_REQ,","lastModifiedDate":"2023-03-03"},{"lineNumber":216,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":217,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":218,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_ONE_B_2,","lastModifiedDate":"2023-03-03"},{"lineNumber":219,"author":{"gitId":"daitenshionyan"},"content":"                TIME_2_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":220,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":221,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":222,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":224,"author":{"gitId":"daitenshionyan"},"content":"    public void check_historyTwoNonSubReq() {","lastModifiedDate":"2023-03-03"},{"lineNumber":225,"author":{"gitId":"daitenshionyan"},"content":"        // Vax two non-sub req | Rec 1 group | Some matching","lastModifiedDate":"2023-03-03"},{"lineNumber":226,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":227,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_TWO_A_REQ,","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":229,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":230,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_ONE_A_2,","lastModifiedDate":"2023-03-03"},{"lineNumber":231,"author":{"gitId":"daitenshionyan"},"content":"                TIME_2_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":232,"author":{"gitId":"daitenshionyan"},"content":"        // Vax two non-sub req | Rec 2 separate group | Matching","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":234,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_TWO_A_REQ,","lastModifiedDate":"2023-03-03"},{"lineNumber":235,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":236,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":237,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_SEP_A,","lastModifiedDate":"2023-03-03"},{"lineNumber":238,"author":{"gitId":"daitenshionyan"},"content":"                TIME_3_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":239,"author":{"gitId":"daitenshionyan"},"content":"        // Vax two non-sub req | Rec 2 groups 1 set | Matching","lastModifiedDate":"2023-03-03"},{"lineNumber":240,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":241,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_TWO_A_REQ,","lastModifiedDate":"2023-03-03"},{"lineNumber":242,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":243,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":244,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_TWO_A,","lastModifiedDate":"2023-03-03"},{"lineNumber":245,"author":{"gitId":"daitenshionyan"},"content":"                TIME_3_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":246,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":247,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":248,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":249,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":250,"author":{"gitId":"daitenshionyan"},"content":"    public void check_historyTwoSub() {","lastModifiedDate":"2023-03-03"},{"lineNumber":251,"author":{"gitId":"daitenshionyan"},"content":"        // Vax two sub | Rec 1 group | Some matching","lastModifiedDate":"2023-03-03"},{"lineNumber":252,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":253,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_TWO_A_SUB,","lastModifiedDate":"2023-03-03"},{"lineNumber":254,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":255,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":256,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_ONE_A_2,","lastModifiedDate":"2023-03-03"},{"lineNumber":257,"author":{"gitId":"daitenshionyan"},"content":"                TIME_2_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":258,"author":{"gitId":"daitenshionyan"},"content":"        // Vax two sub | Rec 2 separate group | Matching","lastModifiedDate":"2023-03-03"},{"lineNumber":259,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":260,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_TWO_A_SUB,","lastModifiedDate":"2023-03-03"},{"lineNumber":261,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":262,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":263,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_SEP_A,","lastModifiedDate":"2023-03-03"},{"lineNumber":264,"author":{"gitId":"daitenshionyan"},"content":"                TIME_3_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":265,"author":{"gitId":"daitenshionyan"},"content":"        // Vax two sub | Rec 2 groups 1 set | Matching","lastModifiedDate":"2023-03-03"},{"lineNumber":266,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":267,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_TWO_A_SUB,","lastModifiedDate":"2023-03-03"},{"lineNumber":268,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":269,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":270,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_TWO_A,","lastModifiedDate":"2023-03-03"},{"lineNumber":271,"author":{"gitId":"daitenshionyan"},"content":"                TIME_3_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":272,"author":{"gitId":"daitenshionyan"},"content":"        // Vax two sub | Rec 1 group | Not matching","lastModifiedDate":"2023-03-03"},{"lineNumber":273,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":274,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_TWO_A_SUB,","lastModifiedDate":"2023-03-03"},{"lineNumber":275,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":276,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":277,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_ONE_B_2,","lastModifiedDate":"2023-03-03"},{"lineNumber":278,"author":{"gitId":"daitenshionyan"},"content":"                TIME_3_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":279,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":280,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":281,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":282,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":283,"author":{"gitId":"daitenshionyan"},"content":"    public void check_historyCombiReq() {","lastModifiedDate":"2023-03-03"},{"lineNumber":284,"author":{"gitId":"daitenshionyan"},"content":"        // Vax combi | Rec 1 group | Some matching","lastModifiedDate":"2023-03-03"},{"lineNumber":285,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":286,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_COMBI_REQ,","lastModifiedDate":"2023-03-03"},{"lineNumber":287,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":288,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":289,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_ONE_B_2,","lastModifiedDate":"2023-03-03"},{"lineNumber":290,"author":{"gitId":"daitenshionyan"},"content":"                TIME_3_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":291,"author":{"gitId":"daitenshionyan"},"content":"        // Vax combi | Rec 2 group sets | Matching","lastModifiedDate":"2023-03-03"},{"lineNumber":292,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":293,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_COMBI_REQ,","lastModifiedDate":"2023-03-03"},{"lineNumber":294,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":295,"author":{"gitId":"daitenshionyan"},"content":"                GRP_NONE,","lastModifiedDate":"2023-03-03"},{"lineNumber":296,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_COMBI,","lastModifiedDate":"2023-03-03"},{"lineNumber":297,"author":{"gitId":"daitenshionyan"},"content":"                TIME_3_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":298,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":299,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":300,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":301,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":302,"author":{"gitId":"daitenshionyan"},"content":"    public void check_allergy() {","lastModifiedDate":"2023-03-03"},{"lineNumber":303,"author":{"gitId":"daitenshionyan"},"content":"        // Vax two | Allergy one | Some matching","lastModifiedDate":"2023-03-03"},{"lineNumber":304,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":305,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_COMBI_REQ,","lastModifiedDate":"2023-03-03"},{"lineNumber":306,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":307,"author":{"gitId":"daitenshionyan"},"content":"                GRP_ONE_A_2,","lastModifiedDate":"2023-03-03"},{"lineNumber":308,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_COMBI,","lastModifiedDate":"2023-03-03"},{"lineNumber":309,"author":{"gitId":"daitenshionyan"},"content":"                TIME_3_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":310,"author":{"gitId":"daitenshionyan"},"content":"        // Vax two | Allergy one | No matching","lastModifiedDate":"2023-03-03"},{"lineNumber":311,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(VaxChecker.check(","lastModifiedDate":"2023-03-03"},{"lineNumber":312,"author":{"gitId":"daitenshionyan"},"content":"                TYPE_COMBI_REQ,","lastModifiedDate":"2023-03-03"},{"lineNumber":313,"author":{"gitId":"daitenshionyan"},"content":"                MIN_AGE,","lastModifiedDate":"2023-03-03"},{"lineNumber":314,"author":{"gitId":"daitenshionyan"},"content":"                GRP_ONE_B,","lastModifiedDate":"2023-03-03"},{"lineNumber":315,"author":{"gitId":"daitenshionyan"},"content":"                RECORDS_COMBI,","lastModifiedDate":"2023-03-03"},{"lineNumber":316,"author":{"gitId":"daitenshionyan"},"content":"                TIME_3_VALID));","lastModifiedDate":"2023-03-03"},{"lineNumber":317,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":318,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"daitenshionyan":318}},{"path":"src/test/java/seedu/vms/model/vaccination/VaxRecordKeyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"public class VaxRecordKeyTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    private static final GroupName SAMPLE_NAME \u003d new GroupName(\"UNCHI\");","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private static final LocalDateTime SAMPLE_TIME \u003d LocalDateTime.now();","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxRecordKey SAMPLE_RECORD \u003d new VaxRecordKey(SAMPLE_NAME, SAMPLE_TIME);","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    public void constructor_nullParam_exceptionThrown() {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(NullPointerException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e new VaxRecordKey(null, LocalDateTime.now()));","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(NullPointerException.class,","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"                () -\u003e new VaxRecordKey(SAMPLE_NAME, null));","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    public void getVaccination() {","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(SAMPLE_NAME.toString(), SAMPLE_RECORD.getVaxTypeKey());","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    public void getTimeTaken() {","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(SAMPLE_TIME, SAMPLE_RECORD.getTimeTaken());","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    public void equals() {","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"        Object eqs \u003d new VaxRecordKey(SAMPLE_NAME, SAMPLE_TIME);","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        Object diff1 \u003d new VaxRecordKey(SAMPLE_NAME, LocalDateTime.MIN);","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        Object diff2 \u003d new VaxRecordKey(new GroupName(\"BANANA\"), SAMPLE_TIME);","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"        Object unrelated \u003d Integer.valueOf(445);","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(SAMPLE_RECORD.equals(SAMPLE_RECORD));","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(SAMPLE_RECORD.equals(eqs));","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(SAMPLE_RECORD.equals(diff1));","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(SAMPLE_RECORD.equals(diff2));","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(SAMPLE_RECORD.equals(unrelated));","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    public void hashingTest() {","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        VaxRecordKey rec1 \u003d SAMPLE_RECORD;","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        VaxRecordKey recEq \u003d new VaxRecordKey(SAMPLE_NAME, SAMPLE_TIME);","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"        VaxRecordKey recDiff \u003d new VaxRecordKey(new GroupName(\"BANANA\"), SAMPLE_TIME);","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cVaxRecordKey\u003e recSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        recSet.add(rec1);","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(recSet.contains(recEq));","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(recSet.contains(recDiff));","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"daitenshionyan":69}},{"path":"src/test/java/seedu/vms/model/vaccination/VaxRecordTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.testutil.SampleVaxTypeData;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class VaxRecordTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    private static final List\u003cVaxRecord\u003e CORRECT_REC_ORDER \u003d List.of(","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"            new VaxRecord(SampleVaxTypeData.TYPE_REAL, LocalDateTime.MIN),","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"            new VaxRecord(SampleVaxTypeData.TYPE_1, LocalDateTime.MIN),","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"            new VaxRecord(SampleVaxTypeData.TYPE_REAL, LocalDateTime.MAX));","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    public void compareToTest() {","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"        ArrayList\u003cVaxRecord\u003e sortedRec \u003d new ArrayList\u003c\u003e(CORRECT_REC_ORDER);","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        // compareTo will sort in a way that it thinks is correct","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        // if what it thinks is wrong, sortedRec will change.","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        sortedRec.sort(Comparator.naturalOrder());","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(CORRECT_REC_ORDER, sortedRec);","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"daitenshionyan":29}},{"path":"src/test/java/seedu/vms/model/vaccination/VaxTestingUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"/** Testing utility class for vaccinations. */","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"public class VaxTestingUtil {","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"     * Asserts if the given vaccination type is of the expected state.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"     * @param vaxType - the {@code VaxType} to check.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"     * @param name - the expected name.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"     * @param groups - the expected groups.","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"     * @param minAge - the expected min age.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"     * @param maxAge - the expected max age.","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"     * @param minSpacing - the expected min spacing.","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"     * @param historyReqs - the expected history requirements.","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"     * @param allergyReqs - the expected allergy requirements.","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    public static void assertVaxType(VaxType vaxType,","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"            GroupName name, HashSet\u003cGroupName\u003e groups, Age minAge, Age maxAge, int minSpacing,","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"            List\u003cRequirement\u003e historyReqs, List\u003cRequirement\u003e allergyReqs) {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(name, vaxType.getGroupName(), \"Name\");","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(groups, vaxType.getGroups(), \"Groups\");","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(minAge, vaxType.getMinAge(), \"Min age\");","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(maxAge, vaxType.getMaxAge(), \"Max age\");","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(minSpacing, vaxType.getMinSpacing(), \"Min spacing\");","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(historyReqs, vaxType.getHistoryReqs(), \"History requirements\");","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(allergyReqs, vaxType.getAllergyReqs(), \"Allergy requirements\");","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"daitenshionyan":37}},{"path":"src/test/java/seedu/vms/model/vaccination/VaxTypeManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import javafx.collections.ObservableMap;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.testutil.SampleVaxTypeData;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"public class VaxTypeManagerTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"    private static final VaxType TYPE_1 \u003d new VaxType(","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.GROUPS_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.MIN_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.MAX_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.MIN_SPACING_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.ALLERGY_REQS_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"            SampleVaxTypeData.HISTORY_REQS_1);","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    public void asUnmodifiableObservableMapTest() {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager storage \u003d new VaxTypeManager();","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"        ObservableMap\u003cString, VaxType\u003e mapView \u003d storage.asUnmodifiableObservableMap();","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"        // addition link","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"        storage.add(TYPE_1);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(mapView.containsKey(TYPE_1.getName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(TYPE_1, mapView.get(TYPE_1.getName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        // deletion link","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        storage.remove(TYPE_1.getName());","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(mapView.containsKey(TYPE_1.getName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(null, mapView.get(TYPE_1.getName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"        // immutability","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"            mapView.put(TYPE_1.getName(), TYPE_1);","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"        } catch (UnsupportedOperationException unsupEx) {","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"        fail(\"Exception not thrown\");","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    public void containsCheck() {","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager storage \u003d new VaxTypeManager();","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(storage.contains(TYPE_1.getName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"        storage.add(TYPE_1);","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(storage.contains(TYPE_1.getName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        storage.remove(TYPE_1.getName());","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(storage.contains(TYPE_1.getName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"    public void getTest() {","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager storage \u003d new VaxTypeManager();","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(storage.get(TYPE_1.getName()).isPresent());","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        storage.add(TYPE_1);","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(TYPE_1, storage.get(TYPE_1.getName()).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"        storage.remove(TYPE_1.getName());","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(storage.get(TYPE_1.getName()).isPresent());","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"daitenshionyan":74}},{"path":"src/test/java/seedu/vms/model/vaccination/VaxTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.model.vaccination;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.testutil.SampleVaxTypeData;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"public class VaxTypeTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"    private static final Age INVALID_MIN_AGE \u003d new Age(100);","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private static final Age INVALID_MAX_AGE \u003d new Age(99);","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private static final int INVALID_MIN_SPACING \u003d -5;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    public void constructor_invalidAge_throwsException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new VaxType(","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"                INVALID_MIN_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"                INVALID_MAX_AGE,","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_SPACING_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.ALLERGY_REQS_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_1));","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    public void constructor_invalidMinSpacing_throwsException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new VaxType(","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"                INVALID_MIN_SPACING,","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.ALLERGY_REQS_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_1));","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    public void compareToTest() {","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        // test already done in GroupName so this test is to check if","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"        // the comparator is correctly set","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        VaxType t1 \u003d new VaxType(","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"                new GroupName(\"aZ\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_SPACING,","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_ALLERGY_REQS,","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS);","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"        VaxType t2 \u003d new VaxType(","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"                new GroupName(\"Aa\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_SPACING,","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_ALLERGY_REQS,","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS);","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(t1.compareTo(t2) \u003e 0);","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"        VaxType testing \u003d new VaxType(","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_SPACING_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.ALLERGY_REQS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cVaxType\u003e vaxTypes \u003d permutateVaxType();","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(testing.equals(testing));","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(testing.equals(vaxTypes.get(0)));","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"        for (int i \u003d 1; i \u003c vaxTypes.size(); i++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"            assertFalse(testing.equals(vaxTypes.get(i)));","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"        assertFalse(testing.equals(Integer.valueOf(0)));","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"        List\u003cVaxType\u003e vaxTypes \u003d permutateVaxType();","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"        HashSet\u003cVaxType\u003e vaxTypeSet \u003d new HashSet\u003c\u003e(vaxTypes);","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"        vaxTypeSet.addAll(vaxTypes);","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(vaxTypeSet.size() \u003d\u003d vaxTypes.size());","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"    private List\u003cVaxType\u003e permutateVaxType() {","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"        VaxType t1 \u003d new VaxType(","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_SPACING_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.ALLERGY_REQS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"        VaxType t2 \u003d new VaxType(","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_1,","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_SPACING_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.ALLERGY_REQS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"        VaxType t3 \u003d new VaxType(","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_1,","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_SPACING_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.ALLERGY_REQS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"        VaxType t4 \u003d new VaxType(","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_1,","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_SPACING_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.ALLERGY_REQS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"        VaxType t5 \u003d new VaxType(","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_1,","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_SPACING_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.ALLERGY_REQS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"        VaxType t6 \u003d new VaxType(","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_SPACING_1,","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.ALLERGY_REQS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"        VaxType t7 \u003d new VaxType(","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_SPACING_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.ALLERGY_REQS_1,","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"        VaxType t8 \u003d new VaxType(","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_SPACING_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.ALLERGY_REQS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_1);","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"        return List.of(t1, t2, t3, t4, t5, t6, t7, t8);","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"daitenshionyan":171}},{"path":"src/test/java/seedu/vms/storage/JsonAdaptedPatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.storage.JsonAdaptedPatient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"public class JsonAdaptedPatientTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_DOB \u003d \"123-03-23\";","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    private static final String INVALID_ALLERGY \u003d \"#friend\";","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    private static final String VALID_DOB \u003d BENSON.getDob().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    private static final String VALID_BLOODTYPE \u003d BENSON.getBloodType().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    private static final List\u003cJsonAdaptedAllergy\u003e VALID_ALLERGIES \u003d BENSON.getAllergy().stream()","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"            .map(JsonAdaptedAllergy::new)","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"    private static final List\u003cJsonAdaptedVaccine\u003e VALID_VACCINES \u003d BENSON.getVaccine().stream()","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"            .map(JsonAdaptedVaccine::new)","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    public void toModelType_validPatientDetails_returnsPatient() throws Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(BENSON);","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        assertEquals(BENSON, patient.toModelType());","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(INVALID_NAME, VALID_PHONE, VALID_DOB, VALID_BLOODTYPE,","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"                VALID_ALLERGIES, VALID_VACCINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(null, VALID_PHONE, VALID_DOB, VALID_BLOODTYPE,","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"                VALID_ALLERGIES, VALID_VACCINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, INVALID_PHONE, VALID_DOB, VALID_BLOODTYPE,","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"                VALID_ALLERGIES, VALID_VACCINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, null, VALID_DOB, VALID_BLOODTYPE,","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"                VALID_ALLERGIES, VALID_VACCINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"    public void toModelType_invalidDob_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, INVALID_DOB, VALID_BLOODTYPE,","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"                VALID_ALLERGIES, VALID_VACCINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d Dob.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"    public void toModelType_nullDob_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, null, VALID_BLOODTYPE,","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"                VALID_ALLERGIES, VALID_VACCINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Dob.class.getSimpleName());","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"    public void toModelType_invalidBloodType_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_DOB, INVALID_ADDRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"                VALID_ALLERGIES, VALID_VACCINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d BloodType.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"    public void toModelType_nullBloodType_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_DOB, null, VALID_ALLERGIES,","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"                VALID_VACCINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, BloodType.class.getSimpleName());","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"    public void toModelType_invalidAllergies_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"        List\u003cJsonAdaptedAllergy\u003e invalidAllergies \u003d new ArrayList\u003c\u003e(VALID_ALLERGIES);","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"        invalidAllergies.add(new JsonAdaptedAllergy(INVALID_ALLERGY));","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_DOB, VALID_BLOODTYPE,","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"                invalidAllergies, VALID_VACCINES);","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, patient::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"daitenshionyan":3,"-":55,"francisyzy":59}},{"path":"src/test/java/seedu/vms/storage/JsonPatientManagerStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.HOON;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.IDA;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.getTypicalPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"public class JsonPatientManagerStorageTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonPatientManagerStorageTest\");","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    @TempDir","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    public void readPatientManager_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e readPatientManager(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    private ReadOnlyPatientManager readPatientManager(String filePath) throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"        return new JsonPatientManagerStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"                .readPatientManager(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"                : null;","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class, () -\u003e readPatientManager(\"NonExistentFile.json\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class, () -\u003e readPatientManager(\"notJsonFormatPatientManager.json\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    public void readPatientManager_invalidPatientPatientManager_throwDataConversionException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class, () -\u003e readPatientManager(\"invalidPatientPatientManager.json\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"    public void readPatientManager_invalidAndValidPatientPatientManager_throwDataConversionException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class,","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"                () -\u003e readPatientManager(\"invalidAndValidPatientPatientManager.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"    public void readAndSavePatientManager_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        Path filePath \u003d testFolder.resolve(\"TempPatientManager.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"        PatientManager original \u003d getTypicalPatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        JsonPatientManagerStorage jsonPatientManagerStorage \u003d new JsonPatientManagerStorage(filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        jsonPatientManagerStorage.savePatientManager(original, filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"        ReadOnlyPatientManager readBack \u003d jsonPatientManagerStorage.readPatientManager(filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"        assertEquals(original, new PatientManager(readBack));","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"        original.add(HOON);","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"        original.remove(0);","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"        jsonPatientManagerStorage.savePatientManager(original, filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"        readBack \u003d jsonPatientManagerStorage.readPatientManager(filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"        assertEquals(original, new PatientManager(readBack));","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"        original.add(IDA);","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"        jsonPatientManagerStorage.savePatientManager(original); // file path not specified","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"        readBack \u003d jsonPatientManagerStorage.readPatientManager(); // file path not specified","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"        assertEquals(original, new PatientManager(readBack));","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"    public void savePatientManager_nullPatientManager_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePatientManager(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"     * Saves {@code patientManager} at the specified {@code filePath}.","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"    private void savePatientManager(ReadOnlyPatientManager patientManager, String filePath) {","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"            new JsonPatientManagerStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"                    .savePatientManager(patientManager, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"    public void savePatientManager_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePatientManager(new PatientManager(), null));","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"daitenshionyan":8,"francisyzy":101}},{"path":"src/test/java/seedu/vms/storage/JsonSerializablePatientManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.util.JsonUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.testutil.TypicalPatients;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"public class JsonSerializablePatientManagerTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializablePatientManagerTest\");","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    private static final Path TYPICAL_PATIENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPatientsPatientManager.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    private static final Path INVALID_PATIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPatientPatientManager.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    private static final Path DUPLICATE_PATIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePatientPatientManager.json\");","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public void toModelType_typicalPatientsFile_success() throws Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"        JsonSerializablePatientManager dataFromFile \u003d JsonUtil.deserializeFromFile(TYPICAL_PATIENTS_FILE,","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"                JsonSerializablePatientManager.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        PatientManager patientManagerFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        PatientManager typicalPatientsPatientManager \u003d TypicalPatients.getTypicalPatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        assertEquals(patientManagerFromFile, typicalPatientsPatientManager);","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    public void toModelType_invalidPatientFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        JsonSerializablePatientManager dataFromFile \u003d JsonUtil.deserializeFromFile(INVALID_PATIENT_FILE,","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"                JsonSerializablePatientManager.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    public void toModelType_duplicateId_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"        JsonSerializablePatientManager dataFromFile \u003d JsonUtil.deserializeFromFile(DUPLICATE_PATIENT_FILE,","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"                JsonSerializablePatientManager.class);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"        assertThrows(IllegalValueException.class, JsonSerializablePatientManager.DUPLICATE_ID,","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"daitenshionyan":11,"-":23,"francisyzy":13}},{"path":"src/test/java/seedu/vms/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"    private UserPrefs readUserPrefs(String userPrefsFileInTestDataFolder) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class, () -\u003e readUserPrefs(\"NonExistentFile.json\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"        assertThrows(IOException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\");","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"        userPrefs.setPatientManagerFilePath(Paths.get(\"patientmanager.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"    public void saveUserPrefs_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"daitenshionyan":17,"-":102,"francisyzy":1}},{"path":"src/test/java/seedu/vms/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.testutil.TypicalPatients.getTypicalPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.GuiSettings;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.UserPrefs;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.ReadOnlyPatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.storage.vaccination.JsonVaxTypeStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.testutil.SampleVaxTypeData;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        JsonPatientManagerStorage patientManagerStorage \u003d new JsonPatientManagerStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"        JsonVaxTypeStorage vaxTypeStorage \u003d new JsonVaxTypeStorage();","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        storageManager \u003d new StorageManager(patientManagerStorage, vaxTypeStorage, userPrefsStorage);","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs();","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"    public void patientManagerReadSave() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"         * {@link JsonPatientManagerStorage} class.","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonPatientManagerStorageTest} class.","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        PatientManager original \u003d getTypicalPatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        storageManager.savePatientManager(original);","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        ReadOnlyPatientManager retrieved \u003d storageManager.readPatientManager();","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"        assertEquals(original, new PatientManager(retrieved));","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"    public void getPatientManagerFilePath() {","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"        assertNotNull(storageManager.getPatientManagerFilePath());","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"    public void loadDefaultVaxTypes() {","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"        /*","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"         * This is an integration test to verify that VaxTypeManager has been integrated properly.","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"         */","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        Optional\u003cVaxType\u003e data \u003d storageManager","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"                .loadDefaultVaxTypes()","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"                .get(SampleVaxTypeData.NAME_REAL.getName());","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(data.isPresent());","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":22,"-":50,"francisyzy":13}},{"path":"src/test/java/seedu/vms/storage/vaccination/VaxTypeLoaderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.storage.vaccination;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTestingUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxTypeManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.testutil.SampleVaxTypeData;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"public class VaxTypeLoaderTest {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    private static final String TEST_FOLDER_PATH \u003d \"src/test/data/JsonVaxTypeTest/\";","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_DEFAULT_VALUES \u003d \"DefaultTypeValues.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    private static final GroupName DEFAULT_NAME \u003d new GroupName(\"UNCHI\");","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"    private static final Age UNCHI_MAX_AGE \u003d new Age(100);","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_MISSING_NAME \u003d \"MissingName.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_EMPTY_REQ \u003d \"EmptyReqSet.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_MISSING_REQ \u003d \"MissingReqSet.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_MISSING_REQ_TYPE \u003d \"MissingReqType.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_NON_STRING_IN_REQ \u003d \"NonStringInReqSet.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_UNKNOWN_REQ_TYPE \u003d \"UnknownReqType.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_NON_JSON_FORMAT \u003d \"NonJsonFormat.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_VALID_MULTIPLE \u003d \"ValidMultipleTypes.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"    private static final String FILE_EMPTY \u003d \"ZeroTypes.json\";","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"    private static final String TEST_SAVE_FILE \u003d \"VAX_TYPE_TEST_FILE.json\";","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"    @TempDir","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"    public void load_resource() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager storage \u003d VaxTypeLoader.load();","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"        VaxType vaxType \u003d storage.get(SampleVaxTypeData.NAME_REAL.getName()).get();","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"        VaxTestingUtil.assertVaxType(vaxType,","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_SPACING_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.ALLERGY_REQS_REAL);","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"    public void load_fileDefaultValues() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager storage \u003d VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_DEFAULT_VALUES));","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"        VaxType vaxType \u003d storage.get(DEFAULT_NAME.getName()).get();","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"        VaxTestingUtil.assertVaxType(vaxType,","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"                DEFAULT_NAME,","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MAX_AGE,","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_SPACING,","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS,","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_ALLERGY_REQS);","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    public void load_multipleTypes() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager storage \u003d VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_VALID_MULTIPLE));","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"        VaxType vaxType \u003d storage.get(DEFAULT_NAME.getName()).get();","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"        VaxTestingUtil.assertVaxType(vaxType,","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"                DEFAULT_NAME,","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_GROUP_SET,","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_AGE,","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"                UNCHI_MAX_AGE,","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_MIN_SPACING,","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_HISTORY_REQS,","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"                VaxType.DEFAULT_ALLERGY_REQS);","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"        vaxType \u003d storage.get(SampleVaxTypeData.NAME_REAL.getName()).get();","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"        VaxTestingUtil.assertVaxType(vaxType,","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.NAME_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.GROUPS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MAX_AGE_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.MIN_SPACING_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.HISTORY_REQS_REAL,","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"daitenshionyan"},"content":"                SampleVaxTypeData.ALLERGY_REQS_REAL);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"daitenshionyan"},"content":"    public void load_emptyList() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager storage \u003d VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_EMPTY));","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"daitenshionyan"},"content":"        assertTrue(storage.asUnmodifiableObservableMap().isEmpty());","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"daitenshionyan"},"content":"    void load_fileMissingName_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"daitenshionyan"},"content":"            VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_MISSING_NAME));","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalValueException illValEx) {","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"daitenshionyan"},"content":"    void load_emptyReq_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"daitenshionyan"},"content":"            VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_EMPTY_REQ));","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalValueException illValEx) {","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"daitenshionyan"},"content":"    void load_missingReq_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"daitenshionyan"},"content":"            VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_MISSING_REQ));","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalValueException illValEx) {","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"daitenshionyan"},"content":"    void load_missingReqType_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"daitenshionyan"},"content":"            VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_MISSING_REQ_TYPE));","lastModifiedDate":"2023-03-12"},{"lineNumber":144,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IllegalValueException illValEx) {","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-04"},{"lineNumber":147,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":149,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":150,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":151,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"daitenshionyan"},"content":"    void load_nonStringInReqList_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"daitenshionyan"},"content":"            VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_NON_STRING_IN_REQ));","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IOException ioEx) {","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-04"},{"lineNumber":158,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":159,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":160,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":161,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":162,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":163,"author":{"gitId":"daitenshionyan"},"content":"    void load_unknownReqType_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":164,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":165,"author":{"gitId":"daitenshionyan"},"content":"            VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_UNKNOWN_REQ_TYPE));","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IOException ioEx) {","lastModifiedDate":"2023-03-04"},{"lineNumber":167,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception","lastModifiedDate":"2023-03-04"},{"lineNumber":168,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-04"},{"lineNumber":169,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":170,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":171,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":172,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":173,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":174,"author":{"gitId":"daitenshionyan"},"content":"    void load_nonJsonFormat_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":175,"author":{"gitId":"daitenshionyan"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":176,"author":{"gitId":"daitenshionyan"},"content":"            VaxTypeLoader.load(Paths.get(TEST_FOLDER_PATH + FILE_NON_JSON_FORMAT));","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"daitenshionyan"},"content":"        } catch (IOException ioEx) {","lastModifiedDate":"2023-03-04"},{"lineNumber":178,"author":{"gitId":"daitenshionyan"},"content":"            // expected exception","lastModifiedDate":"2023-03-04"},{"lineNumber":179,"author":{"gitId":"daitenshionyan"},"content":"            return;","lastModifiedDate":"2023-03-04"},{"lineNumber":180,"author":{"gitId":"daitenshionyan"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":181,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":182,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":183,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":184,"author":{"gitId":"daitenshionyan"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"daitenshionyan"},"content":"    public void write() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":186,"author":{"gitId":"daitenshionyan"},"content":"        // empty manager","lastModifiedDate":"2023-03-06"},{"lineNumber":187,"author":{"gitId":"daitenshionyan"},"content":"        testSaveMethod(new VaxTypeManager());","lastModifiedDate":"2023-03-06"},{"lineNumber":188,"author":{"gitId":"daitenshionyan"},"content":"        // filled manager","lastModifiedDate":"2023-03-06"},{"lineNumber":189,"author":{"gitId":"daitenshionyan"},"content":"        // assuming default loading works","lastModifiedDate":"2023-03-06"},{"lineNumber":190,"author":{"gitId":"daitenshionyan"},"content":"        testSaveMethod(VaxTypeLoader.load());","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"daitenshionyan"},"content":"    private void testSaveMethod(VaxTypeManager manager) throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"daitenshionyan"},"content":"        Path saveFile \u003d testFolder.resolve(TEST_SAVE_FILE);","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeLoader.fromModelType(manager).write(saveFile);","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"daitenshionyan"},"content":"        VaxTypeManager loaded \u003d VaxTypeLoader.load(saveFile);","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"daitenshionyan"},"content":"        assertEquals(manager.asUnmodifiableObservableMap(), loaded.asUnmodifiableObservableMap());","lastModifiedDate":"2023-03-06"},{"lineNumber":199,"author":{"gitId":"daitenshionyan"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":200,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"daitenshionyan":200}},{"path":"src/test/java/seedu/vms/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"daitenshionyan":1,"-":33}},{"path":"src/test/java/seedu/vms/testutil/EditPatientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Allergy;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Vaccine;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":" * A utility class to help with building EditPatientDescriptor objects.","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"public class EditPatientDescriptorBuilder {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    private EditPatientDescriptor descriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptorBuilder() {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"        descriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptorBuilder(EditPatientDescriptor descriptor) {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"        this.descriptor \u003d new EditPatientDescriptor(descriptor);","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     * Returns an {@code EditPatientDescriptor} with fields containing {@code patient}\u0027s details","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptorBuilder(Patient patient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        descriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        descriptor.setName(patient.getName());","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        descriptor.setPhone(patient.getPhone());","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        descriptor.setDob(patient.getDob());","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        descriptor.setBloodType(patient.getBloodType());","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        descriptor.setAllergies(patient.getAllergy());","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"        descriptor.setVaccines(patient.getVaccine());","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code Name} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code Phone} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code Dob} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptorBuilder withDob(String dateOfBirth) {","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"        descriptor.setDob(new Dob(dateOfBirth));","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code BloodType} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptorBuilder withBloodType(String bloodType) {","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"        descriptor.setBloodType(new BloodType(bloodType));","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"     * Parses the {@code allergies} into a {@code Set\u003cAllergy\u003e} and set it to the {@code EditPatientDescriptor}","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"     * that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptorBuilder withAllergies(String... allergies) {","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"        Set\u003cAllergy\u003e allergySet \u003d Stream.of(allergies).map(Allergy::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"        descriptor.setAllergies(allergySet);","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"     * Parses the {@code vaccines} into a {@code Set\u003cVaccine\u003e} and set it to the {@code EditPatientDescriptor}","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"     * that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptorBuilder withVaccines(String... vaccines) {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"        Set\u003cVaccine\u003e vaccineSet \u003d Stream.of(vaccines).map(Vaccine::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"        descriptor.setVaccines(vaccineSet);","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"    public EditPatientDescriptor build() {","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"        return descriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"francisyzy":102}},{"path":"src/test/java/seedu/vms/testutil/PatientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Allergy;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.BloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Dob;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Name;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Vaccine;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":" * A utility class to help with building Patient objects.","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"public class PatientBuilder {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"    public static final String DEFAULT_DOB \u003d \"1998-05-22\";","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    public static final String DEFAULT_BLOODTYPE \u003d \"A-\";","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"    private Name name;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    private Phone phone;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"    private Dob dateOfBirth;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"    private BloodType bloodType;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    private Set\u003cAllergy\u003e allergies \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"    private Set\u003cVaccine\u003e vaccines \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"     * Creates a {@code PatientBuilder} with the default details.","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"    public PatientBuilder() {","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        dateOfBirth \u003d new Dob(DEFAULT_DOB);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        bloodType \u003d new BloodType(DEFAULT_BLOODTYPE);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"        allergies \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        vaccines \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"     * Initializes the PatientBuilder with the data of {@code patientToCopy}.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"    public PatientBuilder(Patient patientToCopy) {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"        name \u003d patientToCopy.getName();","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"        phone \u003d patientToCopy.getPhone();","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"        dateOfBirth \u003d patientToCopy.getDob();","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"        bloodType \u003d patientToCopy.getBloodType();","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"        allergies \u003d new HashSet\u003c\u003e(patientToCopy.getAllergy());","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        vaccines \u003d new HashSet\u003c\u003e(patientToCopy.getVaccine());","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code Name} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"    public PatientBuilder withName(String name) {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"     * Parses the {@code allergies} into a {@code Set\u003cAllergy\u003e} and set it to the {@code Patient} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"    public PatientBuilder withAllergies(String... allergies) {","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"        this.allergies \u003d SampleDataUtil.getAllergySet(allergies);","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"     * Parses the {@code vaccines} into a {@code Set\u003cVaccine\u003e} and set it to the {@code Patient} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"francisyzy"},"content":"    public PatientBuilder withVaccines(String... vaccines) {","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"        this.vaccines \u003d SampleDataUtil.getVaccineSet(vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code BloodType} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"    public PatientBuilder withBloodType(String bloodType) {","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"        this.bloodType \u003d new BloodType(bloodType);","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code Phone} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"    public PatientBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"     * Sets the {@code Dob} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"    public PatientBuilder withDob(String dateOfBirth) {","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"        this.dateOfBirth \u003d new Dob(dateOfBirth);","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"francisyzy"},"content":"    public Patient build() {","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"        return new Patient(name, phone, dateOfBirth, bloodType, allergies, vaccines);","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"francisyzy":108}},{"path":"src/test/java/seedu/vms/testutil/PatientManagerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"francisyzy"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"francisyzy"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":" *     {@code PatientManager pm \u003d new PatientManagerBuilder().withPatient(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"public class PatientManagerBuilder {","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":"    private PatientManager patientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"    public PatientManagerBuilder() {","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"        patientManager \u003d new PatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"francisyzy"},"content":"    public PatientManagerBuilder(PatientManager patientManager) {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"        this.patientManager \u003d patientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"francisyzy"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     * Adds a new {@code Patient} to the {@code PatientManager} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    public PatientManagerBuilder withPatient(Patient patient) {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        patientManager.add(patient);","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    public PatientManager build() {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"        return patientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"francisyzy":34}},{"path":"src/test/java/seedu/vms/testutil/PatientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.commands.patient.AddCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.logic.commands.patient.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Allergy;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Vaccine;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"francisyzy"},"content":" * A utility class for Patient.","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"francisyzy"},"content":"public class PatientUtil {","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"    private static final String PREFIX_BLOODTYPE \u003d CliSyntax.DELIMITER + CliSyntax.PREFIX_BLOODTYPE + \" \";","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"    private static final String PREFIX_DOB \u003d CliSyntax.DELIMITER + CliSyntax.PREFIX_DOB + \" \";","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"    private static final String PREFIX_NAME \u003d CliSyntax.DELIMITER + CliSyntax.PREFIX_NAME + \" \";","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"    private static final String PREFIX_PHONE \u003d CliSyntax.DELIMITER + CliSyntax.PREFIX_PHONE + \" \";","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":"    private static final String PREFIX_ALLERGY \u003d CliSyntax.DELIMITER + CliSyntax.PREFIX_ALLERGY + \" \";","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"francisyzy"},"content":"    private static final String PREFIX_VACCINATION \u003d CliSyntax.DELIMITER + CliSyntax.PREFIX_VACCINATION + \" \";","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"     * Returns an add command string for adding the {@code patient}.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"francisyzy"},"content":"    public static String getAddCommand(Patient patient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPatientDetails(patient);","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"     * Returns the part of command string for the given {@code patient}\u0027s details.","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"    public static String getPatientDetails(Patient patient) {","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"        sb.append(PREFIX_NAME + patient.getName().fullName + \" \");","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"        sb.append(PREFIX_PHONE + patient.getPhone().value + \" \");","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"        sb.append(PREFIX_DOB + patient.getDob().value + \" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"        sb.append(PREFIX_BLOODTYPE + patient.getBloodType().toString() + \" \");","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        patient.getAllergy().stream().forEach(","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"                s -\u003e sb.append(PREFIX_ALLERGY + s.toString() + \" \"));","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"        patient.getVaccine().stream().forEach(","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"                s -\u003e sb.append(PREFIX_VACCINATION + s.toString() + \" \"));","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"     * Returns the part of command string for the given {@code EditPatientDescriptor}\u0027s details.","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"    public static String getEditPatientDescriptorDetails(EditPatientDescriptor descriptor) {","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        descriptor.getDob().ifPresent(dob -\u003e sb.append(PREFIX_DOB).append(dob.value).append(\" \"));","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"        descriptor.getBloodType()","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"                .ifPresent(bloodType -\u003e sb.append(PREFIX_BLOODTYPE).append(bloodType.toString()).append(\" \"));","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"        if (descriptor.getAllergies().isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"            Set\u003cAllergy\u003e allergies \u003d descriptor.getAllergies().get();","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"            if (allergies.isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"                sb.append(PREFIX_ALLERGY);","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"            } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"                allergies.forEach(s -\u003e sb.append(PREFIX_ALLERGY).append(s.toString()).append(\" \"));","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"        if (descriptor.getVaccines().isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"            Set\u003cVaccine\u003e vaccines \u003d descriptor.getVaccines().get();","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"            if (vaccines.isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"                sb.append(PREFIX_VACCINATION);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"            } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"                vaccines.forEach(s -\u003e sb.append(PREFIX_VACCINATION).append(s.toString()).append(\" \"));","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"daitenshionyan":5,"-":23,"francisyzy":46}},{"path":"src/test/java/seedu/vms/testutil/SampleVaxTypeData.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"daitenshionyan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Age;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.GroupName;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.Requirement.RequirementType;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.vaccination.VaxType;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"daitenshionyan"},"content":"/** Utility class to store sample vaccination type data for tests. */","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"public class SampleVaxTypeData {","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"daitenshionyan"},"content":"    public static final GroupName NAME_REAL \u003d new GroupName(\"Dose 1 (Pfizer)\");","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"daitenshionyan"},"content":"    public static final HashSet\u003cGroupName\u003e GROUPS_REAL \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"DOSE 1\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"Pfizer\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"Vaccination\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"daitenshionyan"},"content":"    public static final Age MIN_AGE_REAL \u003d new Age(5);","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"daitenshionyan"},"content":"    public static final Age MAX_AGE_REAL \u003d Age.MAX_AGE;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"daitenshionyan"},"content":"    public static final int MIN_SPACING_REAL \u003d 56;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"daitenshionyan"},"content":"    public static final List\u003cRequirement\u003e HISTORY_REQS_REAL \u003d List.of(","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"daitenshionyan"},"content":"            new Requirement(RequirementType.NONE, new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"DOSE 1\")))));","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"daitenshionyan"},"content":"    public static final List\u003cRequirement\u003e ALLERGY_REQS_REAL \u003d List.of(","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"daitenshionyan"},"content":"            new Requirement(RequirementType.NONE, new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"ALC-0315\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"ALC-0159\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"DSPC\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"Cholesterol\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"Sucrose\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"Phosphate\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"Tromethamine\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"Tromethamine hydrochloride\")))));","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"daitenshionyan"},"content":"    public static final VaxType TYPE_REAL \u003d new VaxType(","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"daitenshionyan"},"content":"            NAME_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"daitenshionyan"},"content":"            GROUPS_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"daitenshionyan"},"content":"            MIN_SPACING_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"daitenshionyan"},"content":"            ALLERGY_REQS_REAL,","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"daitenshionyan"},"content":"            HISTORY_REQS_REAL);","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CMD_NAME_REAL \u003d \"Dose 1 (Pfizer)\";","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CMD_GROUPS_REAL \u003d \"--\" + CliSyntax.PREFIX_VAX_GROUPS.getPrefix() + \" \"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"daitenshionyan"},"content":"            + \"DOSE 1,\"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"daitenshionyan"},"content":"            + \"Pfizer,\"","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"daitenshionyan"},"content":"            + \"Vaccination\";","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CMD_MIN_AGE_REAL \u003d \"--\" + CliSyntax.PREFIX_MIN_AGE.getPrefix() + \" 5\";","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CMD_MAX_AGE_REAL \u003d \"\";","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CMD_MIN_SPACING_REAL \u003d \"--\" + CliSyntax.PREFIX_MIN_SPACING.getPrefix() + \" 56\";","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CMD_ALLERGY_REQS_REAL \u003d \"--\" + CliSyntax.PREFIX_ALLERGY_REQ.getPrefix() + \" none::\"","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"daitenshionyan"},"content":"            + \"ALC-0315,\"","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"daitenshionyan"},"content":"            + \"ALC-0159,\"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"daitenshionyan"},"content":"            + \"DSPC,\"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"daitenshionyan"},"content":"            + \"Cholesterol,\"","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"daitenshionyan"},"content":"            + \"Sucrose,\"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"daitenshionyan"},"content":"            + \"Phosphate,\"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"daitenshionyan"},"content":"            + \"Tromethamine,\"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"daitenshionyan"},"content":"            + \"Tromethamine hydrochloride\";","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CMD_HISTORY_REQS_REAL \u003d \"--\" + CliSyntax.PREFIX_HISTORY_REQ.getPrefix()","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"daitenshionyan"},"content":"            + \" none::DOSE 1\";","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"daitenshionyan"},"content":"    public static final GroupName NAME_1 \u003d new GroupName(\"UNCHI\");","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"daitenshionyan"},"content":"    public static final HashSet\u003cGroupName\u003e GROUPS_1 \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"daitenshionyan"},"content":"            new GroupName(\"UNCHI\")));","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"daitenshionyan"},"content":"    public static final Age MIN_AGE_1 \u003d new Age(35);","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"daitenshionyan"},"content":"    public static final Age MAX_AGE_1 \u003d new Age(45);","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"daitenshionyan"},"content":"    public static final int MIN_SPACING_1 \u003d 3545;","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"daitenshionyan"},"content":"    public static final List\u003cRequirement\u003e HISTORY_REQS_1 \u003d List.of(","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"daitenshionyan"},"content":"            new Requirement(RequirementType.NONE, new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"UNCHI\")))));","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"daitenshionyan"},"content":"    public static final List\u003cRequirement\u003e ALLERGY_REQS_1 \u003d List.of(","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"daitenshionyan"},"content":"            new Requirement(RequirementType.NONE, new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"daitenshionyan"},"content":"                    new GroupName(\"UNCHI\")))));","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"daitenshionyan"},"content":"    public static final VaxType TYPE_1 \u003d new VaxType(","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"daitenshionyan"},"content":"            NAME_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"daitenshionyan"},"content":"            GROUPS_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"daitenshionyan"},"content":"            MIN_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"daitenshionyan"},"content":"            MAX_AGE_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"daitenshionyan"},"content":"            MIN_SPACING_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"daitenshionyan"},"content":"            ALLERGY_REQS_1,","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"daitenshionyan"},"content":"            HISTORY_REQS_1);","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CMD_NAME_1 \u003d \"UNCHI\";","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CMD_GROUPS_1 \u003d \"--\" + CliSyntax.PREFIX_VAX_GROUPS.getPrefix() + \" UNCHI\";","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CMD_MIN_AGE_1 \u003d \"--\" + CliSyntax.PREFIX_MIN_AGE.getPrefix() + \" 35\";","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CMD_MAX_AGE_1 \u003d \"--\" + CliSyntax.PREFIX_MAX_AGE.getPrefix() + \" 45\";","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CMD_MIN_SPACING_1 \u003d \"--\" + CliSyntax.PREFIX_MIN_SPACING.getPrefix() + \" 3545\";","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CMD_ALLERGY_REQS_1 \u003d \"--\" + CliSyntax.PREFIX_ALLERGY_REQ.getPrefix() + \" none::UNCHI\";","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"daitenshionyan"},"content":"    public static final String CMD_HISTORY_REQS_1 \u003d \"--\" + CliSyntax.PREFIX_HISTORY_REQ.getPrefix() + \" none::UNCHI\";","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"daitenshionyan"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"daitenshionyan"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"daitenshionyan":93}},{"path":"src/test/java/seedu/vms/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":1,"-":71}},{"path":"src/test/java/seedu/vms/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.model.Model;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"     * Returns the middle index of the patient in the {@code model}\u0027s patient list.","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"        return Index.fromOneBased(model.getFilteredPatientList().size() / 2);","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"     * Returns the last index of the patient in the {@code model}\u0027s patient list.","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"        return Index.fromOneBased(model.getFilteredPatientList().size());","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"     * Returns the patient in the {@code model}\u0027s patient list at {@code index}.","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"    public static Patient getPatient(Model model, Index index) {","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"        return model.getFilteredPatientList().get(index.getZeroBased()).getValue();","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"daitenshionyan":3,"-":44,"francisyzy":8}},{"path":"src/test/java/seedu/vms/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.commons.core.index.Index;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"francisyzy"},"content":"    public static final Index INDEX_FIRST_PATIENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"francisyzy"},"content":"    public static final Index INDEX_SECOND_PATIENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"francisyzy"},"content":"    public static final Index INDEX_THIRD_PATIENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"daitenshionyan":2,"-":7,"francisyzy":3}},{"path":"src/test/java/seedu/vms/testutil/TypicalPatients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.testutil;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_BLOODTYPE_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_BLOODTYPE_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_DOB_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"francisyzy"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"francisyzy"},"content":"import seedu.vms.model.patient.PatientManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"francisyzy"},"content":" * A utility class containing a list of {@code Patient} objects to be used in tests.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"francisyzy"},"content":"public class TypicalPatients {","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"francisyzy"},"content":"    public static final Patient ALICE \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"francisyzy"},"content":"            .withName(\"Alice Pauline\")","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"francisyzy"},"content":"            .withDob(\"2020-07-09\")","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(\"A+\")","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"francisyzy"},"content":"            .withAllergies(\"seafood\", \"gluten\")","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"francisyzy"},"content":"    public static final Patient BENSON \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"francisyzy"},"content":"            .withName(\"Benson Meier\")","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"francisyzy"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"francisyzy"},"content":"            .withDob(\"2011-10-11\")","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(\"A-\")","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"francisyzy"},"content":"            .withAllergies(\"seafood\")","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"francisyzy"},"content":"    public static final Patient CARL \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"francisyzy"},"content":"            .withName(\"Carl Kurz\")","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"francisyzy"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"francisyzy"},"content":"            .withDob(\"1999-12-30\")","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(\"B+\")","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"francisyzy"},"content":"            .withAllergies(\"seafood\", \"gluten\")","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"francisyzy"},"content":"            .withVaccines(\"Moderna\", \"Pfizer\")","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"francisyzy"},"content":"    public static final Patient DANIEL \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"francisyzy"},"content":"            .withName(\"Daniel Meier\")","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"francisyzy"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"francisyzy"},"content":"            .withDob(\"1994-02-27\")","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(\"B-\")","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"francisyzy"},"content":"            .withAllergies(\"seafood\")","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"francisyzy"},"content":"            .withVaccines(\"Moderna\")","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"francisyzy"},"content":"    public static final Patient ELLE \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"francisyzy"},"content":"            .withName(\"Elle Meyer\")","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"francisyzy"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"francisyzy"},"content":"            .withDob(\"1989-09-19\")","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(\"AB+\")","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"francisyzy"},"content":"            .withVaccines(\"Moderna\", \"Pfizer\")","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"francisyzy"},"content":"    public static final Patient FIONA \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"francisyzy"},"content":"            .withName(\"Fiona Kunz\")","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"francisyzy"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"francisyzy"},"content":"            .withDob(\"1988-04-30\")","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(\"AB-\")","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"francisyzy"},"content":"            .withVaccines(\"Moderna\")","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"francisyzy"},"content":"    public static final Patient GEORGE \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"francisyzy"},"content":"            .withName(\"George Best\")","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"francisyzy"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"francisyzy"},"content":"            .withDob(\"1981-09-20\")","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(\"O+\")","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":76,"author":{"gitId":"francisyzy"},"content":"    public static final Patient HOON \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"francisyzy"},"content":"            .withName(\"Hoon Meier\")","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"francisyzy"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"francisyzy"},"content":"            .withDob(\"1991-02-20\")","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(\"O-\")","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"francisyzy"},"content":"    public static final Patient IDA \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"francisyzy"},"content":"            .withName(\"Ida Mueller\")","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"francisyzy"},"content":"            .withPhone(\"8482131\")","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"francisyzy"},"content":"            .withDob(\"1995-03-23\")","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(\"A+\")","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":89,"author":{"gitId":"francisyzy"},"content":"    // Manually added - Patient\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"francisyzy"},"content":"    public static final Patient AMY \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"francisyzy"},"content":"            .withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"francisyzy"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"francisyzy"},"content":"            .withDob(VALID_DOB_AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(VALID_BLOODTYPE_AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"francisyzy"},"content":"            .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"francisyzy"},"content":"    public static final Patient BOB \u003d new PatientBuilder()","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"francisyzy"},"content":"            .withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"francisyzy"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"francisyzy"},"content":"            .withDob(VALID_DOB_BOB)","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"francisyzy"},"content":"            .withBloodType(VALID_BLOODTYPE_BOB)","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":105,"author":{"gitId":"francisyzy"},"content":"    private TypicalPatients() {} // prevents instantiation","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"francisyzy"},"content":"     * Returns an {@code PatientManager} with all the typical patients.","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"francisyzy"},"content":"    public static PatientManager getTypicalPatientManager() {","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"francisyzy"},"content":"        PatientManager pm \u003d new PatientManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"francisyzy"},"content":"        for (Patient patient : getTypicalPatients()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"francisyzy"},"content":"            pm.add(patient);","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":115,"author":{"gitId":"francisyzy"},"content":"        return pm;","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":118,"author":{"gitId":"francisyzy"},"content":"    public static List\u003cPatient\u003e getTypicalPatients() {","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"daitenshionyan":5,"-":27,"francisyzy":89}},{"path":"src/test/java/seedu/vms/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"daitenshionyan":1,"-":34}},{"path":"src/test/java/seedu/vms/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"daitenshionyan"},"content":"package seedu.vms.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"daitenshionyan"},"content":"import static seedu.vms.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"daitenshionyan"},"content":"import seedu.vms.MainApp;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"daitenshionyan":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"\u003c?import seedu.vms.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"daitenshionyan":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"daitenshionyan"},"content":"\u003cfx:root type\u003d\"seedu.vms.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"daitenshionyan":1,"-":5}}]
