[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103-W17-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103-W17-2/tp/actions)","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"* This is a team project by 5 students, entitled Dengue Hotspot Tracker, targeted towards NEA personnel or","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"members within the government.\u003cbr\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"  Usages:","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"  * to keep track of dengue hotspots","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"  * to view dengue cases","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":"  * to export the case list to an external database","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":"* Example commands:","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"sumhungyee"},"content":"  * find \u003ckeyword\u003e: finds a case profile by provided keyword, and displays cases whose names contain the keyword","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"  * add n/NAME p/POSTAL_CODE d/DATE a/AGE","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"  * delete 3 (index)","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"* The project is built on an ongoing software project for a desktop application (called _denguetracker_)","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"used for managing contact details, named `Dengue Hotspot Tracker` (`DHT` for short).","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"```","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"This project is based on the DengueHotspotTracker-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"```","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"markusyeo":12,"sumhungyee":7,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"mainClassName \u003d \u0027seedu.dengue.Main\u0027","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"markusyeo"},"content":"    implementation group: \u0027com.opencsv\u0027, name: \u0027opencsv\u0027, version: \u00275.5.2\u0027","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"markusyeo"},"content":"    archiveFileName \u003d \u0027denguetracker.jar\u0027","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"sumhungyee"},"content":"run {","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"sumhungyee"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"sumhungyee"},"content":"checkstyle {","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"sumhungyee"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"sumhungyee"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"markusyeo":4,"sumhungyee":7,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"### Markus Yeo","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"\u003cimg src\u003d\"images/markusyeo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"[[github](https://github.com/markusyeo)]","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"[[portfolio](team/markusyeo.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"* Role: Developer","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"* Responsibilities: Data","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"### Sum Hung Yee","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"\u003cimg src\u003d\"images/sumhungyee.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"[[github](http://github.com/sumhungyee)]","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"[[portfolio](team/sumhungyee.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"### Aeron Toh","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"\u003cimg src\u003d\"images/tohtoroo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"[[github](http://github.com/Tohtoroo)]","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"[[portfolio](team/tohtoroo.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"### Valerie Tan","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"markusyeo"},"content":"\u003cimg src\u003d\"images/valerietanhx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"markusyeo"},"content":"[[github](http://github.com/valerietanhx)]","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"markusyeo"},"content":"[[portfolio](team/valerietanhx.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"markusyeo"},"content":"### Samuel Murugasu","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"markusyeo"},"content":"\u003cimg src\u003d\"images/axmszr.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"markusyeo"},"content":"[[github](http://github.com/axmszr)]","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"markusyeo"},"content":"[[portfolio](team/axmszr.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"markusyeo":20,"axmszr":2,"-":36}},{"path":"docs/Configuration.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-06-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Configuration guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"Certain properties of the application can be controlled (e.g user preferences file location, logging level)","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"through the configuration file (default: `config.json`).","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"markusyeo":2,"-":5}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2023-01-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your tests.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"However, because Codecov is known to run into intermittent problems (e.g., report upload fails) due to issues on the Codecov service side, the CI is configured to pass even if the Codecov task failed. Therefore, developers are advised to check the code coverage levels periodically and take corrective actions if the coverage level falls below desired levels.","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"To enable Codecov for forks of this project, follow the steps given in [this se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"markusyeo"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/ay2223s2-cs2103-w17-2/tp/tree/master/src/main/java/seedu/age/MainApp.java).","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"markusyeo":1,"-":78}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S2-CS2103-W17-2/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103-W17-2/tp/tree/master/src/main/java/seedu/age/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103-W17-2/tp/tree/master/src/main/java/seedu/age/MainApp.java). It is responsible for,","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"markusyeo"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103-W17-2/tp/tree/master/src/main/java/seedu/age/ui/Ui.java)","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"markusyeo"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S2-CS2103-W17-2/tp/tree/master/src/main/java/seedu/age/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103-W17-2/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"markusyeo"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103-W17-2/tp/tree/master/src/main/java/seedu/age/logic/Logic.java)","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"markusyeo"},"content":"1. When `Logic` is called upon to execute a command, it uses the `DengueHotspotTrackerParser` class to parse the user command.","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"markusyeo"},"content":"* When called upon to parse a user command, the `DengueHotspotTrackerParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `DengueHotspotTrackerParser` returns back as a `Command` object.","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"markusyeo"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103-W17-2/tp/tree/master/src/main/java/seedu/age/model/Model.java)","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"markusyeo"},"content":"* stores the Dengue Hotspot Tracker data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"axmszr"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Variant` list in the `DengueHotspotTracker`, which `Person` references. This allows `DengueHotspotTracker` to only require one `Variant` object per unique dengue variant, instead of each `Person` needing their own `Variant` objects.\u003cbr\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"markusyeo"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103-W17-2/tp/tree/master/src/main/java/seedu/age/storage/Storage.java)","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"markusyeo"},"content":"* can save both Dengue Hotspot Tracker data and user preference data in csv format, and read them back into corresponding objects.","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"markusyeo"},"content":"* inherits from both `DengueHotspotTrackerStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"markusyeo"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedDengueHotspotTracker`. It extends `DengueHotspotTracker` with an undo/redo history, stored internally as an `dengueHotspotTrackerStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-03-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"markusyeo"},"content":"* `VersionedDengueHotspotTracker#commit()` — Saves the current Dengue Hotspot Tracker state in its history.","lastModifiedDate":"2023-03-04"},{"lineNumber":164,"author":{"gitId":"markusyeo"},"content":"* `VersionedDengueHotspotTracker#undo()` — Restores the previous Dengue Hotspot Tracker state from its history.","lastModifiedDate":"2023-03-04"},{"lineNumber":165,"author":{"gitId":"markusyeo"},"content":"* `VersionedDengueHotspotTracker#redo()` — Restores a previously undone Dengue Hotspot Tracker state from its history.","lastModifiedDate":"2023-03-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"markusyeo"},"content":"These operations are exposed in the `Model` interface as `Model#commitDengueHotspotTracker()`, `Model#undoDengueHotspotTracker()` and `Model#redoDengueHotspotTracker()` respectively.","lastModifiedDate":"2023-03-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"markusyeo"},"content":"Step 1. The user launches the application for the first time. The `VersionedDengueHotspotTracker` will be initialized with the initial Dengue Hotspot Tracker state, and the `currentStatePointer` pointing to that single Dengue Hotspot Tracker state.","lastModifiedDate":"2023-03-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"markusyeo"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the Dengue Hotspot Tracker. The `delete` command calls `Model#commitDengueHotspotTracker()`, causing the modified state of the Dengue Hotspot Tracker after the `delete 5` command executes to be saved in the `dengueHotspotTrackerStateList`, and the `currentStatePointer` is shifted to the newly inserted Dengue Hotspot Tracker state.","lastModifiedDate":"2023-03-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"sumhungyee"},"content":"Step 3. The user executes `add n/David d/2000 31 Jan...` to add a new person. The `add` command also calls `Model#commitDengueHotspotTracker()`, causing another modified Dengue Hotspot Tracker state to be saved into the `dengueHotspotTrackerStateList`.","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"markusyeo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitDengueHotspotTracker()`, so the Dengue Hotspot Tracker state will not be saved into the `dengueHotspotTrackerStateList`.","lastModifiedDate":"2023-03-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"markusyeo"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoDengueHotspotTracker()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous Dengue Hotspot Tracker state, and restores the Dengue Hotspot Tracker to that state.","lastModifiedDate":"2023-03-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"markusyeo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial DengueHotspotTracker state, then there are no previous DengueHotspotTracker states to restore. The `undo` command uses `Model#canUndoDengueHotspotTracker()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-03-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"markusyeo"},"content":"The `redo` command does the opposite — it calls `Model#redoDengueHotspotTracker()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the Dengue Hotspot Tracker to that state.","lastModifiedDate":"2023-03-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"markusyeo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `dengueHotspotTrackerStateList.size() - 1`, pointing to the latest Dengue Hotspot Tracker state, then there are no undone DengueHotspotTracker states to restore. The `redo` command uses `Model#canRedoDengueHotspotTracker()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-03-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"markusyeo"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the Dengue Hotspot Tracker, such as `list`, will usually not call `Model#commitDengueHotspotTracker()`, `Model#undoDengueHotspotTracker()` or `Model#redoDengueHotspotTracker()`. Thus, the `dengueHotspotTrackerStateList` remains unchanged.","lastModifiedDate":"2023-03-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"markusyeo"},"content":"Step 6. The user executes `clear`, which calls `Model#commitDengueHotspotTracker()`. Since the `currentStatePointer` is not pointing at the end of the `dengueHotspotTrackerStateList`, all Dengue Hotspot Tracker states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-03-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"markusyeo"},"content":"* **Alternative 1 (current choice):** Saves the entire dengue case list.","lastModifiedDate":"2023-03-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"Tohtoroo"},"content":"### \\[Proposed\\] Prefix find Feature","lastModifiedDate":"2023-03-23"},{"lineNumber":243,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":244,"author":{"gitId":"Tohtoroo"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":245,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":246,"author":{"gitId":"Tohtoroo"},"content":"The proposed Prefix find feature mechanism is primarily facilitated by the `DengueHotspotTrackerParser#parseCommand()`,","lastModifiedDate":"2023-03-23"},{"lineNumber":247,"author":{"gitId":"Tohtoroo"},"content":"`FindCommandParser#parse()`, `ArgumentTokenizer#Tokenize()`, `ArgumentMultimap#getValue()`, and `FindCommand#execute()`","lastModifiedDate":"2023-03-23"},{"lineNumber":248,"author":{"gitId":"Tohtoroo"},"content":" methods.","lastModifiedDate":"2023-03-23"},{"lineNumber":249,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":250,"author":{"gitId":"Tohtoroo"},"content":"Given below is an example usage scenario and how the Prefix find mechanism behaves at each step.","lastModifiedDate":"2023-03-23"},{"lineNumber":251,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":252,"author":{"gitId":"Tohtoroo"},"content":"Step 1. The user launches the application.","lastModifiedDate":"2023-03-23"},{"lineNumber":253,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":254,"author":{"gitId":"sumhungyee"},"content":"Step 2. The user executes the `find a/ 13 n/ Thomas p/ 612` command to filter the list of cases which contain a dengue","lastModifiedDate":"2023-03-23"},{"lineNumber":255,"author":{"gitId":"Tohtoroo"},"content":" case associated with the name Thomas, who is of the age 13 and has a postal code beginning with 612.","lastModifiedDate":"2023-03-23"},{"lineNumber":256,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":257,"author":{"gitId":"Tohtoroo"},"content":"Step 3. `DengueHotspotTrackerParser#parseCommand()` parses the command and, detecting the `find` command word,","lastModifiedDate":"2023-03-23"},{"lineNumber":258,"author":{"gitId":"sumhungyee"},"content":" passes the argument `a/ 13 n/ Thomas p/ 612` to the `FindCommandParser`.","lastModifiedDate":"2023-03-23"},{"lineNumber":259,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":260,"author":{"gitId":"Tohtoroo"},"content":"Step 4. `FindCommandParser#parse()` will call on `ArgumentTokenizer#Tokenize()` and subsequently gets the values of","lastModifiedDate":"2023-03-23"},{"lineNumber":261,"author":{"gitId":"Tohtoroo"},"content":" each individual Prefix using `ArgumentMultimap#getValue()`.","lastModifiedDate":"2023-03-23"},{"lineNumber":262,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":263,"author":{"gitId":"Tohtoroo"},"content":"Step 5. `FindCommand#execute()` will get the most updated list of filtered Persons based on the values given from","lastModifiedDate":"2023-03-23"},{"lineNumber":264,"author":{"gitId":"Tohtoroo"},"content":"`ArgumentMultimap#getValue()` and shows it on the User Interface.","lastModifiedDate":"2023-03-23"},{"lineNumber":265,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":266,"author":{"gitId":"Tohtoroo"},"content":"The following sequence diagram summarises what happens when a user executes a Prefix find operation:","lastModifiedDate":"2023-03-23"},{"lineNumber":267,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":268,"author":{"gitId":"Tohtoroo"},"content":"![PrefixFindSequenceDiagram](images/PrefixFindSequenceDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":269,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":270,"author":{"gitId":"Tohtoroo"},"content":"The following activity diagram summarises what happens when a user executes a Prefix find operation:","lastModifiedDate":"2023-03-23"},{"lineNumber":271,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":272,"author":{"gitId":"Tohtoroo"},"content":"![PrefixFindActivityDiagram](images/PrefixFindActivityDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":273,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":274,"author":{"gitId":"Tohtoroo"},"content":"#### Design Considerations","lastModifiedDate":"2023-03-23"},{"lineNumber":275,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":276,"author":{"gitId":"Tohtoroo"},"content":"**Aspect: How Prefix find handle input that does not make sense (Numerics in names, non-existent postal codes","lastModifiedDate":"2023-03-23"},{"lineNumber":277,"author":{"gitId":"Tohtoroo"},"content":"or age past 200)**","lastModifiedDate":"2023-03-23"},{"lineNumber":278,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":279,"author":{"gitId":"Tohtoroo"},"content":"* **Alternative 1 (current choice):** Accepts the user input and executes the find command as per usual.","lastModifiedDate":"2023-03-23"},{"lineNumber":280,"author":{"gitId":"Tohtoroo"},"content":"  * Pros: Allows for user freedom in cases that there may be people with Numerics in names, and the underlying code","lastModifiedDate":"2023-03-23"},{"lineNumber":281,"author":{"gitId":"Tohtoroo"},"content":"would not have to change if new postal codes were to be implemented.","lastModifiedDate":"2023-03-23"},{"lineNumber":282,"author":{"gitId":"Tohtoroo"},"content":"  * Cons: In the case of the input being erroneous, there is no indication that the for the user that it may be due to","lastModifiedDate":"2023-03-23"},{"lineNumber":283,"author":{"gitId":"Tohtoroo"},"content":"what they keyed in.","lastModifiedDate":"2023-03-23"},{"lineNumber":284,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":285,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":286,"author":{"gitId":"Tohtoroo"},"content":"* **Alternative 2:** Displays a message indicating that the input may be erroneous for each of the available prefix.","lastModifiedDate":"2023-03-23"},{"lineNumber":287,"author":{"gitId":"Tohtoroo"},"content":"  * Pros: In the case of the input being erroneous, there would be an indication that the for the user that their input","lastModifiedDate":"2023-03-23"},{"lineNumber":288,"author":{"gitId":"Tohtoroo"},"content":"may be unintended.","lastModifiedDate":"2023-03-23"},{"lineNumber":289,"author":{"gitId":"Tohtoroo"},"content":"  * Cons: Less flexibility and requires changes to the code base if new postal codes are added.","lastModifiedDate":"2023-03-23"},{"lineNumber":290,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":291,"author":{"gitId":"valerietanhx"},"content":"### \\[Proposed\\] Multi-index delete feature","lastModifiedDate":"2023-03-23"},{"lineNumber":292,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":293,"author":{"gitId":"valerietanhx"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":294,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":295,"author":{"gitId":"valerietanhx"},"content":"The proposed multi-index delete mechanism is primarily facilitated by the `DengueHotspotTrackerParser#parseCommand()`, `DeleteCommandParser#parse()`, and `DeleteCommand#execute()` methods.","lastModifiedDate":"2023-03-23"},{"lineNumber":296,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":297,"author":{"gitId":"valerietanhx"},"content":"Given below is an example usage scenario and how the multi-index delete mechanism behaves at each step.","lastModifiedDate":"2023-03-23"},{"lineNumber":298,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":299,"author":{"gitId":"valerietanhx"},"content":"Step 1. The user launches the application and uses the `find` command to filter the list of cases. The `ModelManager`’s `FilteredList\u003cPerson\u003e` is updated.","lastModifiedDate":"2023-03-23"},{"lineNumber":300,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":301,"author":{"gitId":"valerietanhx"},"content":"Step 2. The user executes the `delete 1 3` command to delete the first and third persons in the filtered list currently being shown. `DengueHotspotTrackerParser#parseCommand()` parses the command and, detecting the `delete` command word, passes the argument `1 3` to the `DeleteCommandParser`.","lastModifiedDate":"2023-03-23"},{"lineNumber":302,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":303,"author":{"gitId":"valerietanhx"},"content":"Step 3. `DeleteCommandParser#parse()` is called. A list of valid indexes `List\u003cIndex\u003e` is returned, and a `DeleteCommand` is constructed, taking in this list of indexes as an attribute.","lastModifiedDate":"2023-03-23"},{"lineNumber":304,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":305,"author":{"gitId":"valerietanhx"},"content":"Step 4. `DeleteCommand#execute()` will get the most updated list of filtered persons and loop through the list of indexes to delete their associated cases using `Model#deletePerson()`. Users will be notified with a message upon successful deletion of all relevant persons.","lastModifiedDate":"2023-03-23"},{"lineNumber":306,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":307,"author":{"gitId":"valerietanhx"},"content":"The following sequence diagram shows how the multi-index delete operation works:","lastModifiedDate":"2023-03-23"},{"lineNumber":308,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":309,"author":{"gitId":"valerietanhx"},"content":"![DeleteMultiIndexSequenceDiagram](images/DeleteMultiIndexSequenceDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":310,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":311,"author":{"gitId":"valerietanhx"},"content":"The following activity diagram summarises what happens when a user executes a multi-index delete command:","lastModifiedDate":"2023-03-23"},{"lineNumber":312,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":313,"author":{"gitId":"valerietanhx"},"content":"![DeleteMultiIndexActivityDiagram](images/DeleteMultiIndexActivityDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":314,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":315,"author":{"gitId":"valerietanhx"},"content":"#### Design Considerations","lastModifiedDate":"2023-03-23"},{"lineNumber":316,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":317,"author":{"gitId":"valerietanhx"},"content":"**Aspect: How multi-index delete indicates successful execution:**","lastModifiedDate":"2023-03-23"},{"lineNumber":318,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":319,"author":{"gitId":"valerietanhx"},"content":"* **Alternative 1 (current choice):** Display a message indicating that a number of cases were successfully deleted, the number of cases corresponding to the size of the list of indexes.","lastModifiedDate":"2023-03-23"},{"lineNumber":320,"author":{"gitId":"valerietanhx"},"content":"    * Pros: Short and succinct, without taking up too much space on the GUI.","lastModifiedDate":"2023-03-23"},{"lineNumber":321,"author":{"gitId":"valerietanhx"},"content":"    * Cons: Does not show exactly which cases were deleted.","lastModifiedDate":"2023-03-23"},{"lineNumber":322,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":323,"author":{"gitId":"valerietanhx"},"content":"* **Alternative 2:** Display a message indicating successful deletion for each individual deleted case, along with the details of the deleted case.","lastModifiedDate":"2023-03-23"},{"lineNumber":324,"author":{"gitId":"valerietanhx"},"content":"    * Pros: Shows exactly which cases were deleted for easy validation.","lastModifiedDate":"2023-03-23"},{"lineNumber":325,"author":{"gitId":"valerietanhx"},"content":"    * Cons: Unnecessarily lengthy; may take up too much space if many cases were deleted at once.","lastModifiedDate":"2023-03-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":332,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":333,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":334,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":335,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"valerietanhx"},"content":"* NEA personnel in charge of delegating personnel to dengue hotspots in order to mitigate the spread of dengue via pest control","lastModifiedDate":"2023-03-04"},{"lineNumber":346,"author":{"gitId":"valerietanhx"},"content":"* has some mastery over using a computer","lastModifiedDate":"2023-03-04"},{"lineNumber":347,"author":{"gitId":"valerietanhx"},"content":"* prefers typing to other means of input","lastModifiedDate":"2023-03-04"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"valerietanhx"},"content":"**Value proposition**: Inefficient allocation of pest control resources will cost excess time and money. This app will help optimise resources by tracking dengue cases, classifying them by neighbourhood, and identifying clusters.","lastModifiedDate":"2023-03-04"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"| Priority | As a …​  | I want to …​                                                             | So that I can…​                                                      |","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"markusyeo"},"content":"| -------- |----------|--------------------------------------------------------------------------|----------------------------------------------------------------------|","lastModifiedDate":"2023-03-23"},{"lineNumber":357,"author":{"gitId":"valerietanhx"},"content":"| `* * *`  | new user | easily view a help page                                                  | know how to use the app                                              |","lastModifiedDate":"2023-03-04"},{"lineNumber":358,"author":{"gitId":"valerietanhx"},"content":"| `* * *`  | user     | add a new dengue case                                                    | keep track of the dengue cases in Singapore                          |","lastModifiedDate":"2023-03-04"},{"lineNumber":359,"author":{"gitId":"valerietanhx"},"content":"| `* * *`  | user     | delete cases from the dengue case list by case ID                        | remove entries that I no longer need                                 |","lastModifiedDate":"2023-03-04"},{"lineNumber":360,"author":{"gitId":"valerietanhx"},"content":"| `* * *`  | user     | find dengue cases whose postal codes start with any of the input numbers | locate details of cases without having to go through the entire list |","lastModifiedDate":"2023-03-04"},{"lineNumber":361,"author":{"gitId":"markusyeo"},"content":"| `* *`    | user     | export the data from the dengue case list from a database in a csv file  | analyse them outside of the app              |","lastModifiedDate":"2023-03-23"},{"lineNumber":362,"author":{"gitId":"valerietanhx"},"content":"| `*`      | new user | clear all entries                                                        | start over with an empty data set                                               |","lastModifiedDate":"2023-03-04"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"markusyeo"},"content":"(For all use cases below, the **System** is the `DengueHotspotTracker` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-04"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"markusyeo"},"content":"2.  DengueHotspotTracker shows a list of persons","lastModifiedDate":"2023-03-04"},{"lineNumber":376,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"markusyeo"},"content":"4.  DengueHotspotTracker deletes the person","lastModifiedDate":"2023-03-04"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"markusyeo"},"content":"    * 3a1. DengueHotspotTracker shows an error message.","lastModifiedDate":"2023-03-04"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"valerietanhx"},"content":"2.  Should be able to hold up to 1000 dengue cases without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-04"},{"lineNumber":399,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"markusyeo"},"content":"1. _{ more test cases … }_","lastModifiedDate":"2023-03-04"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Tohtoroo":48,"markusyeo":34,"axmszr":1,"valerietanhx":44,"sumhungyee":4,"-":327}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"   1. Run the `seedu.dengue.Main` and try a few commands.","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"markusyeo"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [DengueHotspotTracker’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"markusyeo":2,"-":53}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"   e.g. `seedu.dengue.commons.StringUtilTest`","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"   e.g. `seedu.dengue.storage.StorageManagerTest`","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"   e.g. `seedu.dengue.logic.LogicManagerTest`","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"markusyeo":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"DengueHotspotTracker (DHT) is a **desktop app for managing Dengue Cases, optimized for**","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"**use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"Interface (GUI). If you can type fast, AB3 can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"2. Download the latest `dht.jar` from [here](https://github.com/AY2223S2-CS2103-W17-2/tp/releases).","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your DengueHotspotTracker.","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar dht.jar` command to run","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"the application.\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"open the help window.\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"   * `list` : Lists all cases.","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"   * `add n/John Tan p/543299 d/2023-02-13 a/20` : Adds a case named `John Tan` to the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"   * `delete 3` : Deletes the 3rd case shown in the current list.","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"   * `clear` : Deletes all cases.","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"markusyeo"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"  e.g `n/NAME [v/VARIANT]` can be used as `n/John Doe v/DENV1` or as `n/John Doe`.","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Tohtoroo"},"content":"* Items in curly brackets are features that are currently work in progress. \u003cbr\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"valerietanhx"},"content":"  e.g `{t/TAG}` means that tagging someone has not yet been implemented, but is planned to be a feature.","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"  e.g. `[v/VARIANT]…​` can be used as ` ` (i.e. 0 times), `v/DENV1`, `v/DENV1 v/DENV2` etc.","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"sumhungyee"},"content":"  e.g. if the command specifies `n/NAME p/POSTAL_CODE`, `p/POSTAL_CODE n/NAME` is also acceptable.","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":68,"author":{"gitId":"sumhungyee"},"content":"  e.g. if you specify `p/123414 p/567878`, only `p/567878` will be taken.","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":73,"author":{"gitId":"sumhungyee"},"content":"* For postal codes, the user may choose to enter a sequence of 6 digits, or the letter `\"S\"` or `\"s\"` followed by the sequence of 6 digits.","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"markusyeo"},"content":"### Adding a case: `add`","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"valerietanhx"},"content":"Adds a dengue patient to the dengue hotspot tracker.","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"axmszr"},"content":"Format: `add n/PATIENT_NAME p/POSTAL_CODE d/DATE a/AGE [v/DENGUE_VARIANT]…​`","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"axmszr"},"content":"* `add n/John Tan p/543299 d/2023-02-13 a/20 v/DENV1`","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"sumhungyee"},"content":"* `add n/Desiree Lim p/519999 d/2023-02-13 a/18`","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"markusyeo"},"content":"### Listing all cases : `list`","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"markusyeo"},"content":"Shows a list of all cases in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"markusyeo"},"content":"### Editing a case : `edit`","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"markusyeo"},"content":"Edits an existing case in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"axmszr"},"content":"Format: `edit INDEX [n/NAME] [p/POSTAL] [d/DATE] [a/AGE] [v/DENGUE_VARIANT]…​`","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"markusyeo"},"content":"* Edits the case at the specified `INDEX`. The index refers to the index number shown in the displayed case list.","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"markusyeo"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"axmszr"},"content":"* When editing dengue variants, all existing variants of the case will be removed i.e adding of variants is not cumulative.","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"axmszr"},"content":"* You can remove all the case’s dengue variants by typing `v/` without","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"axmszr"},"content":"    specifying any variants after it.","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"markusyeo"},"content":"* `edit 1 p/912345 d/2001-01-01` Edits the postal code and date of the 1st case to be `S912345` and `2001-01-01`","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"markusyeo"},"content":"respectively.","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"axmszr"},"content":"* `edit 2 n/Betsy Crower v/` Edits the name of the 2nd case to be `Betsy Crower` and clears all tagged dengue variants.","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"markusyeo"},"content":"### Locating cases by name: `find`","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"markusyeo"},"content":"Finds cases whose names contain any of the given keywords.","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"axmszr"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]` or {`find PARTIAL_POSTAL_CODE filter DENGUE_VARIANT`}","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"sumhungyee"},"content":"* The name and postal codes are searched.","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"sumhungyee"},"content":"  * For names, partial words will be matched e.g. `Han` will match `Hans` and `Abrahan`","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"sumhungyee"},"content":"  * For postal codes, the beginning of the postal code will be matched e.g. `10` will match `S101234` but not `S123410`","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"sumhungyee"},"content":"  * For postal codes, the user may choose to include an `\"S\"` or `\"s\"\"` character or not e.g.","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"sumhungyee"},"content":"    * `S10` will match `S101234`","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"sumhungyee"},"content":"    * `s10` will also match `S101234`","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"markusyeo"},"content":"  e.g. `Han Bo 101` will return `Abrahans Gruber`, `Boeing Yang` and all cases whose postal codes begin with `101`.","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"sumhungyee"},"content":"* `find Boe` returns `Boeing` and `Wong Boe`","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"sumhungyee"},"content":"* `find alex david 101` returns `Alexander Peterson`, `Allison Tan` (postal code), `Davidson Li`\u003cbr\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"sumhungyee"},"content":"  ![result for \u0027find alex david 101\u0027](..%2F..%2F..%2FDownloads%2Fimage%20%281%29.png)","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"markusyeo"},"content":"### Deleting a case : `delete`","lastModifiedDate":"2023-03-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"markusyeo"},"content":"Deletes the specified case from the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"markusyeo"},"content":"* Deletes the case at the specified `INDEX`.","lastModifiedDate":"2023-03-07"},{"lineNumber":150,"author":{"gitId":"markusyeo"},"content":"* The index refers to the index number shown in the displayed case list.","lastModifiedDate":"2023-03-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"markusyeo"},"content":"* `list` followed by `delete 2` deletes the 2nd case in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-07"},{"lineNumber":155,"author":{"gitId":"markusyeo"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st case in the results of the `find` command.","lastModifiedDate":"2023-03-07"},{"lineNumber":156,"author":{"gitId":"markusyeo"},"content":"* `find s666` followed by `delete 4` deletes the 4th case in the results of the `find` command.","lastModifiedDate":"2023-03-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"markusyeo"},"content":"Clears all entries from the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"markusyeo"},"content":"DengueHotspotTracker data are saved in the hard disk automatically after any command that changes","lastModifiedDate":"2023-03-07"},{"lineNumber":173,"author":{"gitId":"markusyeo"},"content":"the data. There is no need to save manually.","lastModifiedDate":"2023-03-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":177,"author":{"gitId":"markusyeo"},"content":"DengueHotspotTracker data are saved as a JSON file `[JAR file location]/data/denguehotspottracker.json`. Advanced users","lastModifiedDate":"2023-03-07"},{"lineNumber":178,"author":{"gitId":"markusyeo"},"content":"are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-03-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":181,"author":{"gitId":"markusyeo"},"content":"If your changes to the data file makes its format invalid, DengueHotspotTracker will discard all data and start with an","lastModifiedDate":"2023-03-07"},{"lineNumber":182,"author":{"gitId":"markusyeo"},"content":"empty data file at the next run.","lastModifiedDate":"2023-03-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"markusyeo"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2023-03-07"},{"lineNumber":195,"author":{"gitId":"markusyeo"},"content":"the data of your previous DengueHotspotTracker home folder.","lastModifiedDate":"2023-03-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"markusyeo"},"content":"| Action     | Format, Examples                                                                                                               |","lastModifiedDate":"2023-03-07"},{"lineNumber":202,"author":{"gitId":"axmszr"},"content":"|------------|--------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"axmszr"},"content":"| **Add**    | `add n/NAME p/POSTAL_CODE d/DATE a/AGE [v/DENGUE_VARIANT]…​` \u003cbr\u003e e.g., `add n/James Ho p/S222244 d/2000-11-11 a/123, v/DENV1` |","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"markusyeo"},"content":"| **Clear**  | `clear`                                                                                                                        |","lastModifiedDate":"2023-03-07"},{"lineNumber":205,"author":{"gitId":"markusyeo"},"content":"| **Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                            |","lastModifiedDate":"2023-03-07"},{"lineNumber":206,"author":{"gitId":"axmszr"},"content":"| **Edit**   | `edit INDEX [n/NAME] [p/POSTAL_CODE] [d/DATE] [a/AGE] [v/DENGUE_VARIANT]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee d/2001-11-11`         |","lastModifiedDate":"2023-03-23"},{"lineNumber":207,"author":{"gitId":"markusyeo"},"content":"| **Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                     |","lastModifiedDate":"2023-03-07"},{"lineNumber":208,"author":{"gitId":"markusyeo"},"content":"| **List**   | `list`                                                                                                                         |","lastModifiedDate":"2023-03-07"},{"lineNumber":209,"author":{"gitId":"markusyeo"},"content":"| **Help**   | `help`                                                                                                                         |","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Tohtoroo":1,"markusyeo":46,"axmszr":13,"valerietanhx":4,"sumhungyee":14,"-":131}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"valerietanhx"},"content":"    content: \"Dengue Hotspot Tracker\";","lastModifiedDate":"2023-02-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"valerietanhx":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveDengueHotspotTracker(dengueHotspotTracker)","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"markusyeo":1,"-":37}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"DengueHotspotTracker *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"DengueHotspotTracker *-right-\u003e \"1\" UniqueVariantList","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"UniqueVariantList -[hidden]down- UniquePersonList","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"UniqueVariantList -[hidden]down- UniquePersonList","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"UniqueVariantList -right-\u003e \"*\" Variant","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"Person -up-\u003e \"*\" Variant","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"Person *--\u003e Postal","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"Person *--\u003e Date","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"markusyeo":1,"axmszr":5,"sumhungyee":2,"-":13}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"if () then ([command commits DengueHotspotTracker])","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"    :Save DengueHotspotTracker to","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"    dengueHotspotTrackerStateList;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"markusyeo":3,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"participant \":DengueHotspotTrackerParser\" as DengueHotspotTrackerParser LOGIC_COLOR","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"LogicManager -\u003e DengueHotspotTrackerParser : parseCommand(\"delete 1\")","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"activate DengueHotspotTrackerParser","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"DengueHotspotTrackerParser -\u003e DeleteCommandParser","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"DeleteCommandParser --\u003e DengueHotspotTrackerParser","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"DengueHotspotTrackerParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"DeleteCommandParser --\u003e DengueHotspotTrackerParser : d","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"markusyeo"},"content":"DeleteCommandParser -[hidden]-\u003e DengueHotspotTrackerParser","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"markusyeo"},"content":"DengueHotspotTrackerParser --\u003e LogicManager : d","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"markusyeo"},"content":"deactivate DengueHotspotTrackerParser","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"markusyeo":10,"-":59}},{"path":"docs/diagrams/HYActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sumhungyee"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"sumhungyee"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":"start","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":":ParseUtil.parseDate(string);","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"if () then ([string is null])","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"    :throw exception;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":"    stop","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"else ([else])","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":"    :trim date;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":"    if () then ([isValidDate])","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":"        :return new date;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"sumhungyee"},"content":"        stop","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"sumhungyee"},"content":"    else ([else])","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"sumhungyee"},"content":"        :throw parseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"sumhungyee"},"content":"        stop","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"sumhungyee"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"sumhungyee":17}},{"path":"docs/diagrams/HYSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"sumhungyee"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"sumhungyee"},"content":"!include StyleHY.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":"hide footbox","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParserUtil\" as PU COL4","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":"-\u003e PU : .parseDate(\"20000101\")","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":"activate PU","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"sumhungyee"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nDate\" as DATE COL2","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"sumhungyee"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nLocalDate\" as LD COL5","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"sumhungyee"},"content":"PU -\u003e DATE : isValidDate(\\n\"20000101\")","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"sumhungyee"},"content":"activate DATE COL2","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"DATE -\u003e DATE : produceValidationFormat(\"20000101\")","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"sumhungyee"},"content":"activate DATE COL2","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"sumhungyee"},"content":"DATE --\u003e DATE : yyyyMMdd","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"sumhungyee"},"content":"deactivate DATE COL2","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"DATE -\u003e LD : parse(test, yyyyMMdd)","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"sumhungyee"},"content":"activate DATE COL2","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"sumhungyee"},"content":"activate LD COL5","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"LD --\u003e DATE","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"sumhungyee"},"content":"deactivate DATE","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"sumhungyee"},"content":"deactivate LD","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"sumhungyee"},"content":"DATE --\u003e PU : true","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"sumhungyee"},"content":"deactivate DATE COL2","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"sumhungyee"},"content":"create \":Date\" as D COL1","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"sumhungyee"},"content":"PU -\u003e D","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"sumhungyee"},"content":"activate D COL1","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"sumhungyee"},"content":"D -\u003e DATE : isValidDate(\"20000101\")","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"sumhungyee"},"content":"activate DATE COL2","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"sumhungyee"},"content":"DATE -\u003e DATE : produceValidationFormat(\"20000101\")","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"sumhungyee"},"content":"activate DATE COL2","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"sumhungyee"},"content":"DATE --\u003e DATE : yyyyMMdd","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"sumhungyee"},"content":"deactivate DATE COL2","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"sumhungyee"},"content":"DATE -\u003e LD : parse(test, yyyyMMdd)","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"sumhungyee"},"content":"activate DATE COL2","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"sumhungyee"},"content":"activate LD COL5","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"sumhungyee"},"content":"LD --\u003e DATE","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"sumhungyee"},"content":"deactivate DATE","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"sumhungyee"},"content":"deactivate LD","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"sumhungyee"},"content":"DATE --\u003e D : true","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"sumhungyee"},"content":"deactivate DATE","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"sumhungyee"},"content":"D -\u003e DATE : produceValidationFormat(\"20000101\")","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"sumhungyee"},"content":"activate DATE COL2","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"sumhungyee"},"content":"DATE --\u003e D : yyyyMMdd","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"sumhungyee"},"content":"deactivate DATE","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"sumhungyee"},"content":"D -\u003e LD : parse(\"20000101\", yyyyMMdd)","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"sumhungyee"},"content":"activate LD COL5","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"sumhungyee"},"content":"LD --\u003e D : LocalDate 2000-01-01","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"sumhungyee"},"content":"deactivate LD","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"sumhungyee"},"content":"D -\u003e LD : toString()","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"sumhungyee"},"content":"activate LD COL5","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"sumhungyee"},"content":"LD --\u003e D : \"2000-01-01\"","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"sumhungyee"},"content":"deactivate LD","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"sumhungyee"},"content":"deactivate DATE COL2","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"sumhungyee"},"content":"D --\u003e PU","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"sumhungyee"},"content":"deactivate D COL1","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"sumhungyee"},"content":"\u003c-- PU","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"sumhungyee"},"content":"deactivate PU","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"sumhungyee"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"sumhungyee":80}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"Class DengueHotspotTrackerParser","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"LogicManager -right-\u003e\"1\" DengueHotspotTrackerParser","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"DengueHotspotTrackerParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"markusyeo":3,"-":43}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyDengueHotspotTracker\" as ReadOnlyDengueHotspotTracker","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"Class DengueHotspotTracker","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"Class Date","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"sumhungyee"},"content":"Class Postal","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"Class Variant","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"DengueHotspotTracker .up.|\u003e ReadOnlyDengueHotspotTracker","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"Model .left.\u003e ReadOnlyDengueHotspotTracker","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"ModelManager -left-\u003e \"1\" DengueHotspotTracker","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"DengueHotspotTracker *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"sumhungyee"},"content":"Person *--\u003e Postal","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"sumhungyee"},"content":"Person *--\u003e Date","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"Person *--\u003e \"*\" Variant","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"sumhungyee"},"content":"Name -[hidden]right-\u003e Postal","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"sumhungyee"},"content":"Postal -[hidden]right-\u003e Address","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"sumhungyee"},"content":"Address -[hidden]right-\u003e Date","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"markusyeo":6,"axmszr":2,"sumhungyee":7,"-":35}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"Class DengueHotspotTrackerParser","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"HiddenOutside ..\u003e DengueHotspotTrackerParser","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"DengueHotspotTrackerParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"DengueHotspotTrackerParser ..\u003e Command : returns \u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"markusyeo":4,"-":34}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"Class CsvUserPrefsStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"package \"DengueHotspotTracker Storage\" #F4F6F6{","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nDengueHotspotTrackerStorage\" as DengueHotspotTrackerStorage","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"Class CsvDengueHotspotTrackerStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"Class CsvSerializableDengueHotspotTracker","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"Class CsvAdaptedPerson","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"Class CsvAdaptedVariant","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"StorageManager -up-\u003e \"1\" DengueHotspotTrackerStorage","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"Storage -right-|\u003e DengueHotspotTrackerStorage","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"CsvUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"CsvDengueHotspotTrackerStorage .up.|\u003e DengueHotspotTrackerStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"CsvDengueHotspotTrackerStorage ..\u003e CsvSerializableDengueHotspotTracker","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"CsvSerializableDengueHotspotTracker --\u003e \"*\" CsvAdaptedPerson","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"markusyeo"},"content":"CsvAdaptedPerson --\u003e \"*\" CsvAdaptedVariant","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"markusyeo":14,"-":29}},{"path":"docs/diagrams/StyleHY.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sumhungyee"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":"!define COL1 #FFF55F","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":"!define COL2 #7777DB","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"!define COL3 #5252CE","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"!define COL4 #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":"!define COL5 #03F2B4","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"sumhungyee":10}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"    class State1 as \"__ab0:DengueHotspotTracker__\"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"    class State2 as \"__ab1:DengueHotspotTracker__\"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"    class State3 as \"__ab2:DengueHotspotTracker__\"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"markusyeo":3,"-":17}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"    class State1 as \"__ab0:DengueHotspotTracker__\"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"    class State2 as \"__ab1:DengueHotspotTracker__\"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"    class State3 as \"__ab2:DengueHotspotTracker__\"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"markusyeo":3,"-":19}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"    class State1 as \"__ab0:DengueHotspotTracker__\"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"    class State2 as \"__ab1:DengueHotspotTracker__\"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"    class State3 as \"__ab2:DengueHotspotTracker__\"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"markusyeo":3,"-":17}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"    class State1 as \"__ab0:DengueHotspotTracker__\"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"    class State2 as \"__ab1:DengueHotspotTracker__\"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"    class State3 as \"__ab2:DengueHotspotTracker__\"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"markusyeo":3,"-":17}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"    class State1 as \"__ab0:DengueHotspotTracker__\"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"    class State2 as \"__ab1:DengueHotspotTracker__\"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"    class State3 as \"__ab2:DengueHotspotTracker__\"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"markusyeo":3,"-":17}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"    class State1 as \"__ab0:DengueHotspotTracker__\"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"    class State2 as \"__ab1:DengueHotspotTracker__\"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"    class State3 as \"__ab3:DengueHotspotTracker__\"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"markusyeo":3,"-":18}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"participant \":DengueHotspotTrackerParser\" as DengueHotspotTrackerParser LOGIC_COLOR","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"participant \":VersionedDengueHotspotTracker\" as VersionedDengueHotspotTracker MODEL_COLOR","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"LogicManager -\u003e DengueHotspotTrackerParser : parseCommand(undo)","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"activate DengueHotspotTrackerParser","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"DengueHotspotTrackerParser -\u003e UndoCommand","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"UndoCommand --\u003e DengueHotspotTrackerParser","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"DengueHotspotTrackerParser --\u003e LogicManager : u","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"deactivate DengueHotspotTrackerParser","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"UndoCommand -\u003e Model : undoDengueHotspotTracker()","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"Model -\u003e VersionedDengueHotspotTracker : undo()","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"activate VersionedDengueHotspotTracker","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"VersionedDengueHotspotTracker -\u003e VersionedDengueHotspotTracker :resetData(ReadOnlyDengueHotspotTracker)","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"VersionedDengueHotspotTracker --\u003e Model :","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"markusyeo"},"content":"deactivate VersionedDengueHotspotTracker","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"markusyeo":14,"-":39}},{"path":"docs/diagrams/dgplantuml/PrefixFindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"start","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":":User requests to find a person called Thomas of age 14;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"if () then ([name and age exists])","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"    :Finds cases associated with said name and age;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"    :Displays how many cases was found with name and age;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"    stop","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"else ([else])","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"    :Displays an empty case list;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"    stop","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"endif","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Tohtoroo":16}},{"path":"docs/diagrams/dgplantuml/PrefixFindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"participant \":DengueHotspotTrackerParser\" as DengueHotspotTrackerParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"participant \"f:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"sumhungyee"},"content":"[-\u003e LogicManager : execute(\"find n/ Aeron\")","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"activate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"LogicManager -\u003e DengueHotspotTrackerParser : parseCommand(\"find n/ Aeron\")","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"activate DengueHotspotTrackerParser","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"create FindCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"DengueHotspotTrackerParser -\u003e FindCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"activate FindCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"FindCommandParser --\u003e DengueHotspotTrackerParser","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"deactivate FindCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"sumhungyee"},"content":"DengueHotspotTrackerParser -\u003e FindCommandParser : parse(\"n/ Aeron\")","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"activate FindCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"create FindCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"FindCommandParser -\u003e FindCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"activate FindCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"FindCommand --\u003e FindCommandParser : f","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"deactivate FindCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"FindCommandParser --\u003e DengueHotspotTrackerParser : f","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"deactivate FindCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"FindCommandParser -[hidden]-\u003e DengueHotspotTrackerParser","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"destroy FindCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"DengueHotspotTrackerParser --\u003e LogicManager : f","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"deactivate DengueHotspotTrackerParser","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"LogicManager -\u003e FindCommand : execute()","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"activate FindCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(Predicate)","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Tohtoroo"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Tohtoroo"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"Tohtoroo"},"content":"create CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"Tohtoroo"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"Tohtoroo"},"content":"activate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"Tohtoroo"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"Tohtoroo"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"Tohtoroo"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"Tohtoroo"},"content":"deactivate FindCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"Tohtoroo"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"Tohtoroo"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"Tohtoroo"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Tohtoroo":66,"sumhungyee":3}},{"path":"docs/diagrams/dgplantuml/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"/\u0027","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":" \u0027/","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"skinparam Shadowing false","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"skinparam Class {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"    BorderThickness 1","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"    FontName Arial","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"skinparam Actor {","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"    Color USER_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"    FontName Arial","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Tohtoroo"},"content":"skinparam Sequence {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Tohtoroo"},"content":"    MessageAlign center","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"Tohtoroo"},"content":"    BoxFontSize 15","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"Tohtoroo"},"content":"    BoxPadding 0","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"Tohtoroo"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"Tohtoroo"},"content":"    FontName Arial","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"Tohtoroo"},"content":"skinparam Participant {","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"Tohtoroo"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"Tohtoroo"},"content":"    Padding 20","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"Tohtoroo"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"Tohtoroo"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"Tohtoroo"},"content":"skinparam Shadowing false","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"Tohtoroo"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"Tohtoroo"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"Tohtoroo"},"content":"hide footbox","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"Tohtoroo"},"content":"hide members","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"Tohtoroo"},"content":"hide circle","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Tohtoroo":75}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"Participant \":DengueHotspotTrackerParser\" as abp LOGIC_COLOR","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"ecp -\u003e ec ++: index, editPersonDescriptor","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"markusyeo":1,"-":20}},{"path":"docs/images/DeleteMultiIndexActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"start","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":":User requests to delete multiple indexes;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":":Check validity of each index;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"if () then ([all indexes valid])","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"    :Delete cases associated with each index;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"    :Display success message;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"    stop","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"else ([else])","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"    :Throw exception;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"    stop","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"endif","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"valerietanhx":17}},{"path":"docs/images/DeleteMultiIndexSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"hide footbox","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"!define LOGIC_COLOR_T1 #7777DB","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"!define LOGIC_COLOR_T2 #5252CE","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"!define MODEL_COLOR #C43333","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"!define MODEL_COLOR_T1 #DB7777","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"participant \":DengueHotspotTrackerParser\" as DengueHotspotTrackerParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"participant \":DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"[-\u003e LogicManager : execute(\"delete 1 3\")","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"activate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"LogicManager -\u003e DengueHotspotTrackerParser : parseCommand(\"delete 1 3\")","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"activate DengueHotspotTrackerParser","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"create DeleteCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"DengueHotspotTrackerParser -\u003e DeleteCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"activate DeleteCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"DeleteCommandParser --\u003e DengueHotspotTrackerParser","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"DengueHotspotTrackerParser -\u003e DeleteCommandParser : parse(\"1 3\")","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"activate DeleteCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"create DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"activate DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"DeleteCommand --\u003e DeleteCommandParser : List\u003cIndex\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"valerietanhx"},"content":"deactivate DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"valerietanhx"},"content":"DeleteCommandParser --\u003e DengueHotspotTrackerParser : List\u003cIndex\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"valerietanhx"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"valerietanhx"},"content":"DengueHotspotTrackerParser --\u003e LogicManager : List\u003cIndex\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"valerietanhx"},"content":"deactivate DengueHotspotTrackerParser","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"valerietanhx"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"valerietanhx"},"content":"activate DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"valerietanhx"},"content":"loop size of List\u003cIndex\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"valerietanhx"},"content":"DeleteCommand -\u003e Model : deletePerson(index)","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"valerietanhx"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"valerietanhx"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"valerietanhx"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"valerietanhx"},"content":"end","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"valerietanhx"},"content":"create CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"valerietanhx"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"valerietanhx"},"content":"activate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"valerietanhx"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"valerietanhx"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"valerietanhx"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"valerietanhx"},"content":"deactivate DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"valerietanhx"},"content":"LogicManager --\u003e[","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"valerietanhx"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"valerietanhx"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"valerietanhx":77}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"title: Dengue Hotspot Tracker","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"[![CI Status](https://github.com/ay2223s2-cs2103-w17-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103-W17-2/tp/actions)","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103-W17-2/tp/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103-W17-2/tp)","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"**DengueHotspotTracker is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"* If you are interested in using DengueHotspotTracker, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"* If you are interested about developing DengueHotspotTracker, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"markusyeo":6,"-":13}},{"path":"docs/team/axmszr.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"title: Samuel Murugasu\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"### Project: Dengue Hotspot Tracker","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"Dengue Hotspot Tracker -","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"* **Code contributed:** to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"* **Enhancements implemented:**","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"  * to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"* **Contributions to the UG:**","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"  * to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"* **Contributions to the DG:**","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"  * to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"* **Contributions to the team-based tasks:**","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"  * to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"* **Review/mentoring contributions:**","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"  * to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"* **Contributions beyond the project team:**","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"  * to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"Code contributed: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003daxmszr)","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"axmszr":36,"markusyeo":2}},{"path":"docs/team/markusyeo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"title: Markus Yeo\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"### Project: Dengue Hotspot Tracker","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"Dengue Hotspot Tracker -","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"* **Code contributed:** to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"* **Enhancements implemented:**","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"    * to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"* **Contributions to the UG:**","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"    * to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"* **Contributions to the DG:**","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"    * to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"* **Contributions to the team-based tasks:**","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"    * to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"* **Review/mentoring contributions:**","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"    * to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"* **Contributions beyond the project team:**","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"    * to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"Code contributed: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dmarkusyeo)","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"markusyeo":38}},{"path":"docs/team/sumhungyee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sumhungyee"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"sumhungyee"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"sumhungyee"},"content":"title: Sum Hung Yee\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"### Project: Dengue Hotspot Tracker","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":"Dengue Hotspot Tracker -","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":"Given below are my technical contributions to the project:","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":" - Refactored classes within the parser package to suit the project\u0027s needs.","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":"    - Postal Codes are now considered.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"Code contributed: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dsumhungyee)","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"markusyeo":1,"sumhungyee":13}},{"path":"docs/team/tohtoroo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"title: Aeron Toh\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"### Project: Dengue Hotspot Tracker","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"Dengue Hotspot Tracker -","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"* **Code contributed:** to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"* **Enhancements implemented:**","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"    * to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"* **Contributions to the UG:**","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"    * to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"* **Contributions to the DG:**","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"    * to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"* **Contributions to the team-based tasks:**","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"    * to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"* **Review/mentoring contributions:**","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"    * to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"* **Contributions beyond the project team:**","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"    * to be added soon","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"Code contributed: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dtohtoroo)","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Tohtoroo":36,"markusyeo":2}},{"path":"docs/team/valerietanhx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"title: Valerie Tan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"### Project: Dengue Hotspot Tracker","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"Dengue Hotspot Tracker -","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"Code contributed: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dvalerietanhx\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"valerietanhx":12}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"This command allows users of the DengueHotspotTracker application to add optional remarks to people in their Dengue Hotspot Tracker and edit it if required. The command should have the following format:","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/age/logic/command` directory.","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":" * Changes the remark of an existing person in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"markusyeo"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `DengueHotspotTrackerParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"markusyeo"},"content":"You can refer to the changes in this [diff](https://github.com/ay2223s2-cs2103-w17-2/tp/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"markusyeo"},"content":"Your code should look something like [this](https://github.com/ay2223s2-cs2103-w17-2/tp/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"markusyeo"},"content":"Create a `RemarkCommandParser` class in the `seedu.dengue.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"markusyeo"},"content":":information_source: Don’t forget to update `DengueHotspotTrackerParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-03-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"markusyeo"},"content":"[here](https://github.com/ay2223s2-cs2103-w17-2/tp/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2023-03-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"markusyeo"},"content":"Create a new `Remark` in `seedu.dengue.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-03-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"markusyeo"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/ay2223s2-cs2103-w17-2/tp/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2023-03-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"markusyeo"},"content":"Simply add the following to [`seedu.dengue.ui.PersonCard`](https://github.com/ay2223s2-cs2103-w17-2/tp/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-03-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"markusyeo"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/ay2223s2-cs2103-w17-2/tp/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2023-03-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"markusyeo"},"content":"Refer to [this commit](https://github.com/ay2223s2-cs2103-w17-2/tp/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2023-03-04"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"markusyeo"},"content":"DengueHotspotTracker stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2023-03-04"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"markusyeo"},"content":":exclamation: You must delete DengueHotspotTracker’s storage file located at `/data/denguehotspottracker.json` before running it! Not doing so will cause DengueHotspotTracker to default to an empty Dengue Hotspot Tracker!","lastModifiedDate":"2023-03-04"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"markusyeo"},"content":"Check out [this commit](https://github.com/ay2223s2-cs2103-w17-2/tp/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2023-03-04"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"markusyeo"},"content":"Just add [this one line of code!](https://github.com/ay2223s2-cs2103-w17-2/tp/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2023-03-04"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"sumhungyee"},"content":"                personToEdit.getName(), personToEdit.getPostal(), personToEdit.getDate(),","lastModifiedDate":"2023-03-05"},{"lineNumber":349,"author":{"gitId":"axmszr"},"content":"                personToEdit.getAge(), remark, personToEdit.getVariants());","lastModifiedDate":"2023-03-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"markusyeo"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/ay2223s2-cs2103-w17-2/tp/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2023-03-04"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"markusyeo"},"content":"You should end up with a test that looks something like [this](https://github.com/ay2223s2-cs2103-w17-2/tp/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2023-03-04"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"markusyeo"},"content":"This concludes the tutorial for adding a new `Command` to DengueHotspotTracker.","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"markusyeo":24,"axmszr":1,"sumhungyee":1,"-":375}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `age` field from `Person` class.","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `age` field can be done similarly.","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"The `age` field in `Person` is actually an instance of the `seedu.dengue.model.person.Age` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAge()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"markusyeo"},"content":"1. Safe delete the field `age` in `EditPersonDescriptor`.","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"1. Remove the usages of `age` and select `Do refactor` when you are done.","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"markusyeo"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `age` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"markusyeo"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `age` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"markusyeo"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$age` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"markusyeo"},"content":"![$age](../images/remove/$age.png)","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"markusyeo"},"content":"private Label age;","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"markusyeo"},"content":"\u003cLabel fx:id\u003d\"age\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$age\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"markusyeo"},"content":"\u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"markusyeo"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `age` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"markusyeo"},"content":"**`invalidPersonDengueHotspotTracker.json`:**","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"markusyeo"},"content":"    \"date\": \"hans@example.com\",","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"markusyeo"},"content":"    \"age\": \"4th street\"","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"markusyeo"},"content":"You can go through each individual `json` file and manually remove the `age` field.","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"markusyeo":18,"-":94}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"markusyeo"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.dengue.logic.Logic`.","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"A quick look at the `seedu.dengue.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"markusyeo"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/DATE] [a/AGE] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"markusyeo"},"content":"        Command command \u003d dengueHotspotTrackerParser.parseCommand(commandText);","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"markusyeo"},"content":"            storage.saveDengueHotspotTracker(model.getDengueHotspotTracker());","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"markusyeo"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `DengueHotspotTrackerParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"markusyeo"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveDengueHotspotTracker(model.getDengueHotspotTracker())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-03-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"markusyeo"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonDengueHotspotTracker#saveDengueHotspotTracker()` method which calls the `CsvSerializableDengueHotspotTracker` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2023-03-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"markusyeo"},"content":"    **`CsvSerializableDengueHotspotTracker` constructor:**","lastModifiedDate":"2023-03-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"markusyeo"},"content":"     * Converts a given {@code ReadOnlyDengueHotspotTracker} into this class for Jackson use.","lastModifiedDate":"2023-03-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"markusyeo"},"content":"     * {@code CsvSerializableDengueHotspotTracker}.","lastModifiedDate":"2023-03-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"markusyeo"},"content":"    public CsvSerializableDengueHotspotTracker(ReadOnlyDengueHotspotTracker source) {","lastModifiedDate":"2023-03-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"markusyeo"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `CsvSerializableDengueHotspotTracker`.","lastModifiedDate":"2023-03-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"markusyeo"},"content":"    3.  Save the Dengue Hotspot Tracker in the CSV format instead","lastModifiedDate":"2023-03-04"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"markusyeo"},"content":"    6.  Add a new entity to the Dengue Hotspot Tracker","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"markusyeo":15,"-":286}},{"path":"src/main/java/seedu/dengue/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.LogsCenter;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.util.FileUtil;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"markusyeo":3,"-":61}},{"path":"src/main/java/seedu/dengue/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"     * @param args Arguments supplied to the application for launch.","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":26,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"markusyeo":1,"sumhungyee":5,"-":24}},{"path":"src/main/java/seedu/dengue/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.Config;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.LogsCenter;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.Version;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.util.StringUtil;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.Logic;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.LogicManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.DengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ModelManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ReadOnlyDengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.UserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.storage.CsvDengueHotspotStorage;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.storage.DengueHotspotStorage;","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.storage.Storage;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.storage.StorageManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.ui.Ui;","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.ui.UiManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing DengueHotspotTracker ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"markusyeo"},"content":"        DengueHotspotStorage dengueHotspotStorage \u003d new CsvDengueHotspotStorage(userPrefs","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"markusyeo"},"content":"                .getDengueHotspotTrackerFilePath());","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"markusyeo"},"content":"        storage \u003d new StorageManager(dengueHotspotStorage, userPrefsStorage);","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"markusyeo"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s Dengue Hotspot Tracker and {@code userPrefs}.","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"markusyeo"},"content":"     * The data from the sample Dengue Hotspot Tracker will be used instead if {@code storage}\u0027s Dengue Hotspot Tracker","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"markusyeo"},"content":"     *  is not found, or an empty Dengue Hotspot Tracker will be used instead if errors occur when reading","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"markusyeo"},"content":"     *  {@code storage}\u0027s Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":79,"author":{"gitId":"markusyeo"},"content":"        Optional\u003cReadOnlyDengueHotspotTracker\u003e dengueHotspotTrackerOptional;","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"markusyeo"},"content":"        ReadOnlyDengueHotspotTracker initialData;","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"markusyeo"},"content":"            dengueHotspotTrackerOptional \u003d storage.readDengueHotspotTracker();","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"markusyeo"},"content":"            if (!dengueHotspotTrackerOptional.isPresent()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"markusyeo"},"content":"                logger.info(\"Data file not found. Will be starting with a sample DengueHotspotTracker\");","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"markusyeo"},"content":"            initialData \u003d dengueHotspotTrackerOptional.orElseGet(SampleDataUtil::getSampleDengueHotspotTracker);","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"markusyeo"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty DengueHotspotTracker\");","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"markusyeo"},"content":"            initialData \u003d new DengueHotspotTracker();","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":91,"author":{"gitId":"markusyeo"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty DengueHotspotTracker\");","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"markusyeo"},"content":"            initialData \u003d new DengueHotspotTracker();","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"markusyeo"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty DengueHotspotTracker\");","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"markusyeo"},"content":"        logger.info(\"Starting DengueHotspotTracker \" + MainApp.VERSION);","lastModifiedDate":"2023-03-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"sumhungyee"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Program ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-02-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markusyeo":44,"sumhungyee":1,"-":140}},{"path":"src/main/java/seedu/dengue/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markusyeo":1,"-":62}},{"path":"src/main/java/seedu/dengue/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markusyeo":1,"-":78}},{"path":"src/main/java/seedu/dengue/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"    private static final String LOG_FILE \u003d \"denguehotspottracker.log\";","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markusyeo":2,"-":110}},{"path":"src/main/java/seedu/dengue/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command!\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"            + \"Valid commands: add, list, edit, find, delete, clear, overview, help, exit\";","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format!\\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"    public static final String MESSAGE_INVALID_POSTAL \u003d \"Invalid postal code!\";","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"    public static final String MESSAGE_INVALID_RANGE \u003d \"Invalid range!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is too big!\";","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markusyeo":1,"axmszr":1,"valerietanhx":4,"-":10}},{"path":"src/main/java/seedu/dengue/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markusyeo":1,"-":115}},{"path":"src/main/java/seedu/dengue/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.core.index;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"markusyeo":1,"-":53}},{"path":"src/main/java/seedu/dengue/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.exceptions;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markusyeo":1,"-":10}},{"path":"src/main/java/seedu/dengue/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.exceptions;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markusyeo":1,"-":20}},{"path":"src/main/java/seedu/dengue/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.util;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.MainApp;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"markusyeo":2,"-":40}},{"path":"src/main/java/seedu/dengue/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.util;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markusyeo":1,"-":34}},{"path":"src/main/java/seedu/dengue/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.util;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.Config;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"markusyeo":3,"-":20}},{"path":"src/main/java/seedu/dengue/commons/util/CsvUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.util;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import java.io.Reader;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import java.io.Writer;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.CSVWriter;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.bean.ColumnPositionMappingStrategy;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.bean.CsvToBean;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.bean.CsvToBeanBuilder;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.bean.StatefulBeanToCsv;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.bean.StatefulBeanToCsvBuilder;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvDataTypeMismatchException;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvRequiredFieldEmptyException;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.LogsCenter;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":" * Converts a Java object instance to CSV and vice versa","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"public class CsvUtil {","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CsvUtil.class);","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"     * Returns the List of T from the given csv file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"     * If any values are missing from the file, it will throw an error, as long as the file is a valid csv file.","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"markusyeo"},"content":"     * @param classOfObjectToDeserialize Csv file has to correspond to the class of T given.","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"markusyeo"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"markusyeo"},"content":"    public static \u003cT\u003e Optional\u003cList\u003cT\u003e\u003e readCsvFile(","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"markusyeo"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"markusyeo"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"markusyeo"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"markusyeo"},"content":"            logger.info(\"Csv file \" + filePath + \" not found\");","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"markusyeo"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"markusyeo"},"content":"        List\u003cT\u003e csvFile;","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"markusyeo"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"markusyeo"},"content":"            csvFile \u003d readFromCsvFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"markusyeo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"markusyeo"},"content":"            logger.warning(\"Error reading from Csv file \" + filePath + \": \" + e);","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"markusyeo"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"markusyeo"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"markusyeo"},"content":"            logger.warning(e.getMessage());","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"markusyeo"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"markusyeo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"markusyeo"},"content":"        return Optional.of(csvFile);","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"markusyeo"},"content":"     * Saves the Csv object to the specified file.","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"markusyeo"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"markusyeo"},"content":"     * @param data takes in a List of String arrays for the data","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"markusyeo"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"markusyeo"},"content":"     * @param header takes in the String array for the data header","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"markusyeo"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"markusyeo"},"content":"    public static \u003cT\u003e void saveCsvFile(List\u003cString[]\u003e data, Path filePath, String[] header)","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"markusyeo"},"content":"            throws IOException, CsvRequiredFieldEmptyException, CsvDataTypeMismatchException {","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"markusyeo"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"markusyeo"},"content":"        requireNonNull(data);","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"markusyeo"},"content":"        writeToCsvFile(filePath, header, data);","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"markusyeo"},"content":"     * Creates a new CSV reader with the specified input reader and target class.","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"markusyeo"},"content":"     * @param r the input reader for the CSV data","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"markusyeo"},"content":"     * @param instanceClass the target class for the CSV data","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"markusyeo"},"content":"     * @return a CsvToBean object configured to read CSV data from the specified reader","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"markusyeo"},"content":"    public static \u003cT\u003e CsvToBean\u003cT\u003e createCsvReader(Reader r, Class\u003cT\u003e instanceClass) {","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"markusyeo"},"content":"        CsvToBean csvToBean \u003d new CsvToBeanBuilder(r)","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"markusyeo"},"content":"                .withType(instanceClass)","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"markusyeo"},"content":"                .withSeparator(\u0027,\u0027)","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"markusyeo"},"content":"                .withQuoteChar(CSVWriter.DEFAULT_QUOTE_CHARACTER)","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"markusyeo"},"content":"                .withIgnoreLeadingWhiteSpace(true)","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"markusyeo"},"content":"                .withIgnoreEmptyLine(true)","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"markusyeo"},"content":"                .build();","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"markusyeo"},"content":"        return csvToBean;","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"markusyeo"},"content":"     * Creates a new CSV writer with the specified output writer and mapping strategy.","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"markusyeo"},"content":"     * @param wr the output writer for the CSV data","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"markusyeo"},"content":"     * @param ms the mapping strategy for the CSV data","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"markusyeo"},"content":"     * @return StatefulBeanToCsv object configured to write CSV data to the specified writer","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"markusyeo"},"content":"    public static \u003cT\u003e StatefulBeanToCsv\u003cT\u003e createCsvWriter(Writer wr, ColumnPositionMappingStrategy\u003cT\u003e ms) {","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"markusyeo"},"content":"        StatefulBeanToCsv csvWriter \u003d new StatefulBeanToCsvBuilder(wr)","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"markusyeo"},"content":"                .withMappingStrategy(ms)","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"markusyeo"},"content":"                .withSeparator(\u0027,\u0027)","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"markusyeo"},"content":"                .build();","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"markusyeo"},"content":"        return csvWriter;","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"markusyeo"},"content":"     * Assumes Csv file exists","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"markusyeo"},"content":"    public static Reader readFile(Path file) throws FileNotFoundException {","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"markusyeo"},"content":"        return new BufferedReader(new FileReader(file.toString()));","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"markusyeo"},"content":"     * Assumes Csv file exists","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"markusyeo"},"content":"    public static \u003cT\u003e List\u003cT\u003e readFromCsvFile(Path file, Class\u003cT\u003e instanceClass)","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"markusyeo"},"content":"            throws IOException, DataConversionException {","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"markusyeo"},"content":"        Reader reader \u003d readFile(file);","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"markusyeo"},"content":"        CsvToBean\u003cT\u003e csvReader \u003d createCsvReader(reader, instanceClass);","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"markusyeo"},"content":"        List\u003cT\u003e parsed \u003d csvReader.parse();","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"markusyeo"},"content":"        if (parsed.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"markusyeo"},"content":"            throw new DataConversionException(new Exception(\"Data is empty!\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"markusyeo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"markusyeo"},"content":"        reader.close();","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"markusyeo"},"content":"        return parsed;","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"markusyeo"},"content":"     * Writes the specified data to a CSV file at the given path using the provided header row.","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"markusyeo"},"content":"     * @param file the path to the CSV file to write to","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"markusyeo"},"content":"     * @param header the header row to include in the CSV file","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"markusyeo"},"content":"     * @param data the data to write to the CSV file","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"markusyeo"},"content":"     * @throws IOException if an I/O error occurs while writing to the CSV file","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"markusyeo"},"content":"     * @throws CsvDataTypeMismatchException if the data provided is of the wrong type for a CSV field","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"markusyeo"},"content":"     * @throws CsvRequiredFieldEmptyException if a required CSV field is empty","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"markusyeo"},"content":"    public static void writeToCsvFile(Path file, String[] header, List\u003cString[]\u003e data)","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"markusyeo"},"content":"            throws IOException, CsvDataTypeMismatchException, CsvRequiredFieldEmptyException {","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"markusyeo"},"content":"        FileUtil.createIfMissing(file);","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"markusyeo"},"content":"        FileWriter writer \u003d new FileWriter(file.toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"markusyeo"},"content":"        char sp \u003d \u0027,\u0027;","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"markusyeo"},"content":"        char qc \u003d CSVWriter.DEFAULT_QUOTE_CHARACTER;","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"markusyeo"},"content":"        String le \u003d CSVWriter.DEFAULT_LINE_END;","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"markusyeo"},"content":"        char ec \u003d \u0027\\\\\u0027;","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"markusyeo"},"content":"        CSVWriter csvWriter \u003d new CSVWriter(writer, sp, qc, ec, le);","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"markusyeo"},"content":"        csvWriter.writeNext(header);","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"markusyeo"},"content":"        csvWriter.writeAll(data);","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"markusyeo"},"content":"        csvWriter.close();","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"markusyeo"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"markusyeo":159}},{"path":"src/main/java/seedu/dengue/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.util;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markusyeo":1,"-":82}},{"path":"src/main/java/seedu/dengue/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.util;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.LogsCenter;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markusyeo":3,"-":138}},{"path":"src/main/java/seedu/dengue/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.util;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\")","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"                .length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"sumhungyee"},"content":"     * Returns true if the {@code sentence} contains the {@code substring}.","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"sumhungyee"},"content":"     * Ignores case, and a full word match is not required.","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"sumhungyee"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"sumhungyee"},"content":"     * @param substring cannot be null","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"sumhungyee"},"content":"    public static boolean containsSubstringIgnoreCase(String sentence, String substring) {","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"sumhungyee"},"content":"        Pattern pattern \u003d Pattern.compile(substring, Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"sumhungyee"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"sumhungyee"},"content":"        requireNonNull(substring);","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"sumhungyee"},"content":"        String preppedString \u003d substring.trim();","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"sumhungyee"},"content":"        checkArgument(!preppedString.isEmpty(), \"String parameter cannot be empty\");","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Tohtoroo"},"content":"        checkArgument(preppedString","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Tohtoroo"},"content":"                .split(\"\\\\s+\").length \u003d\u003d 1, \"String parameter should be a single character\");","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"sumhungyee"},"content":"        String[] wordsInPreppedSentence \u003d sentence.split(\"\\\\s+\");","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"sumhungyee"},"content":"        return Arrays.stream(wordsInPreppedSentence).anyMatch(w -\u003e pattern.matcher(w).find());","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Tohtoroo"},"content":"     * Returns true if the {@code sentence} contains the {@code substring} substring can be more than one word.","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"Tohtoroo"},"content":"     * Ignores case, and a full word match is not required.","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Tohtoroo"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"Tohtoroo"},"content":"     * @param substring cannot be null","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Tohtoroo"},"content":"    public static boolean containsSubstringWithLengthMoreThanOneIgnoreCase(String sentence, String substring) {","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Tohtoroo"},"content":"        Pattern pattern \u003d Pattern.compile(substring, Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Tohtoroo"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Tohtoroo"},"content":"        requireNonNull(substring);","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Tohtoroo"},"content":"        String preppedString \u003d substring.trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"Tohtoroo"},"content":"        checkArgument(!preppedString.isEmpty(), \"String parameter cannot be empty\");","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Tohtoroo"},"content":"        Predicate\u003cString\u003e asPredicate \u003d pattern.asPredicate();","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Tohtoroo"},"content":"        return asPredicate.test(sentence);","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Tohtoroo":21,"markusyeo":2,"sumhungyee":22,"-":65}},{"path":"src/main/java/seedu/dengue/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.GuiSettings;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.CommandResult;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ReadOnlyDengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.overview.Overview;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"     * Returns the DengueHotspotTracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"     * @see seedu.dengue.model.Model#getDengueHotspotTracker()","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"    ReadOnlyDengueHotspotTracker getDengueHotspotTracker();","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"     * Returns the user prefs\u0027 Dengue Hotspot Tracker file path.","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"    Path getDengueHotspotTrackerFilePath();","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"     * Returns the overview of the model.","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"    Overview getOverview();","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"markusyeo":11,"axmszr":7,"-":38}},{"path":"src/main/java/seedu/dengue/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.GuiSettings;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.LogsCenter;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.Command;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.CommandResult;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.DengueHotspotTrackerParser;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ReadOnlyDengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.overview.Overview;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.storage.Storage;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"    private final DengueHotspotTrackerParser dengueHotspotTrackerParser;","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"        dengueHotspotTrackerParser \u003d new DengueHotspotTrackerParser();","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"markusyeo"},"content":"        Command command \u003d dengueHotspotTrackerParser.parseCommand(commandText);","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"markusyeo"},"content":"            storage.saveDengueHotspotTracker(model.getDengueHotspotTracker());","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"markusyeo"},"content":"    public ReadOnlyDengueHotspotTracker getDengueHotspotTracker() {","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"markusyeo"},"content":"        return model.getDengueHotspotTracker();","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"markusyeo"},"content":"    public Path getDengueHotspotTrackerFilePath() {","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"markusyeo"},"content":"        return model.getDengueHotspotTrackerFilePath();","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"axmszr"},"content":"    public Overview getOverview() {","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"axmszr"},"content":"        return model.getOverview();","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"markusyeo":20,"axmszr":6,"-":61}},{"path":"src/main/java/seedu/dengue/logic/analyst/AgeAnalyst.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package seedu.dengue.logic.analyst;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":" * An {@code Analyst} that groups {@code Person} instances by {@code Age}.","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"public class AgeAnalyst extends Analyst {","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"    private static final int NUM_AGE_GROUPS \u003d 20; // Number of age groups, 0-9 to 190-199","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"    private static final int AGE_BIN_SIZE \u003d 10;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    private final int total;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    private final ArrayList\u003cDataBin\u003e bins;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"     * Constructs an {@code AgeAnalyst} instance with the given list of {@code Person}s.","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"     * @param personList The list of {Person} instances to analyze.","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"    public AgeAnalyst(List\u003cPerson\u003e personList) {","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"        List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e(personList);","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"        this.total \u003d persons.size();","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"        this.bins \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"        IntStream.iterate(0, i -\u003e i + 1).limit(NUM_AGE_GROUPS)","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"                        .forEach(i -\u003e bins.add(new DataBin(","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"                                String.format(\"%d - %d\",","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"                                        i * AGE_BIN_SIZE, (i + 1) * AGE_BIN_SIZE - 1))));","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"        persons.forEach(person -\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"            int decade \u003d Integer.parseInt(person.getAge().value) / AGE_BIN_SIZE;","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"            bins.get(decade).addPerson(person);","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"        });","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"    public int getTotal() {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"        return this.total;","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"    List\u003cDataBin\u003e getBins() {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"        return this.bins;","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"            return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"        if (!(obj instanceof AgeAnalyst)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"            return false;","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"        AgeAnalyst other \u003d (AgeAnalyst) obj;","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"        return this.bins.equals(other.bins)","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"                \u0026\u0026 (this.total \u003d\u003d other.total);","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"axmszr":64}},{"path":"src/main/java/seedu/dengue/logic/analyst/Analyst.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package seedu.dengue.logic.analyst;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":" * The API of the data analyzer.","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"public abstract class Analyst {","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"     * Returns the total number of {@code Person} data points.","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"     * @return The total number of data points.","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    public abstract int getTotal();","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"     * Returns a list of all the {@code DataBin} instances involved.","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"     * @return The list of relevant data bins.","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"    abstract List\u003cDataBin\u003e getBins();","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"     * Returns a list of non-empty {@code DataBin} instances involved.","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"     * This does not modify the original list.","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"     * @return The list of non-empty data bins.","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"    private List\u003cDataBin\u003e cullEmptyBins() {","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"        return getBins().stream()","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"                .filter(bin -\u003e !bin.isEmpty())","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"     * Returns a list of non-empty {@code DataBin} instances involved,","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"     * in descending order.","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"     * This does not modify the original list.","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"     * @return A list of non-empty data bins, in descending order.","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"    public List\u003cDataBin\u003e getSortedBins() {","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"        return cullEmptyBins().stream()","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"                .sorted(Comparator.reverseOrder())","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"axmszr":49}},{"path":"src/main/java/seedu/dengue/logic/analyst/DataBin.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package seedu.dengue.logic.analyst;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":" * Simulates the bins of a histogram.","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":" * This is meant to streamline the process of bulk data analysis.","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":" *","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":" * @see Analyst","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"public class DataBin implements Comparable\u003cDataBin\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"    private final String binName;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    private int binSize;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"     * Constructs a {@code DataBin} with the given name.","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"     * @param binName Name of the data bin.","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"    public DataBin(String binName) {","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"        this.binName \u003d binName;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"        this.binSize \u003d 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"     * Adds the {@code person} to the data bin.","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"        this.binSize +\u003d 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"     * Returns the name of the data bin.","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"     * @return The name of the data bin.","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"    public String getName() {","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"        return this.binName;","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"     * Returns the size of the data bin.","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"     * @return The size of the data bin.","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"    public int getSize() {","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"        return this.binSize;","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"     * Returns {@code true} if there is no {@code Person} counted in the data bin.","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"     * @return {@code true} if the data bin has is empty.","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"        return getSize() \u003d\u003d 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"axmszr"},"content":"            return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"        if (!(other instanceof DataBin)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"axmszr"},"content":"            return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"axmszr"},"content":"        return compareTo((DataBin) other) \u003d\u003d 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"axmszr"},"content":"    public int compareTo(DataBin other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"axmszr"},"content":"        return getSize() - other.getSize();","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"axmszr"},"content":"    public String toString() {","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"axmszr"},"content":"        return String.format(\"Bin \u0027%s\u0027: %s\",","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"axmszr"},"content":"                getName(), getSize());","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"axmszr":85}},{"path":"src/main/java/seedu/dengue/logic/analyst/PostalAnalyst.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package seedu.dengue.logic.analyst;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import java.util.EnumMap;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.person.Location;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.person.PostalLocationMapping;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":" * An {@code Analyst} that groups {@code Person} instances by {@code Postal}, i.e. neighbourhood/location.","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"public class PostalAnalyst extends Analyst {","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    private final int total;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    private final EnumMap\u003cLocation, DataBin\u003e bins;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"     * Constructs a {@code PostalAnalyst} instance with the given list of {@code Person}s.","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"     * @param personList The list of {Person} instances to analyze.","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"    public PostalAnalyst(List\u003cPerson\u003e personList) {","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"        List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e(personList);","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"        this.total \u003d persons.size();","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"        this.bins \u003d new EnumMap\u003c\u003e(Location.class);","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"        Arrays.stream(Location.values())","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"                .forEach(location -\u003e bins.put(location, new DataBin(location.toString())));","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"        persons.forEach(person -\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"            Location location \u003d PostalLocationMapping.getLocation(person.getPostal());","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"            bins.get(location).addPerson(person);","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"        });","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"    public int getTotal() {","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"        return this.total;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"    List\u003cDataBin\u003e getBins() {","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"        return new ArrayList\u003c\u003e(this.bins.values());","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"            return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"        if (!(obj instanceof PostalAnalyst)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"            return false;","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"        PostalAnalyst other \u003d (PostalAnalyst) obj;","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"        return this.bins.equals(other.bins)","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"                \u0026\u0026 (this.total \u003d\u003d other.total);","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"axmszr":62}},{"path":"src/main/java/seedu/dengue/logic/analyst/VariantAnalyst.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package seedu.dengue.logic.analyst;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import java.util.EnumMap;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.variant.DengueVariant;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":" * An {@code Analyst} that groups {@code Person} instances by {@code Variant}.","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":" * Note that the same {@code Person} may be counted under multiple groups.","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"public class VariantAnalyst extends Analyst {","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    private final int total;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    private final EnumMap\u003cDengueVariant, DataBin\u003e bins;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"     * Constructs a {@code VariantAnalyst} instance with the given list of {@code Person}s.","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"     * @param personList The list of {Person} instances to analyze.","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"    public VariantAnalyst(List\u003cPerson\u003e personList) {","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"        List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e(personList);","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"        this.total \u003d persons.size();","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"        this.bins \u003d new EnumMap\u003c\u003e(DengueVariant.class);","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"        Arrays.stream(DengueVariant.values())","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"                .forEach(variantName -\u003e bins.put(variantName, new DataBin(variantName.toString())));","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"        persons.forEach(person -\u003e person.getVariants()","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"                .forEach(variant -\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"                    DengueVariant variantName \u003d variant.variantName;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"                    bins.get(variantName).addPerson(person);","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"                }));","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"    public int getTotal() {","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"        return this.total;","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"    List\u003cDataBin\u003e getBins() {","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"        return new ArrayList\u003c\u003e(this.bins.values());","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"            return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"        if (!(obj instanceof VariantAnalyst)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"            return false;","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"        VariantAnalyst other \u003d (VariantAnalyst) obj;","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"        return this.bins.equals(other.bins)","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"                \u0026\u0026 (this.total \u003d\u003d other.total);","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"axmszr":63}},{"path":"src/main/java/seedu/dengue/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_POSTAL;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_VARIANT;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":" * Adds a person to the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the Dengue Hotspot Tracker. \"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"            + PREFIX_POSTAL + \"POSTAL \"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"            + PREFIX_AGE + \"AGE \"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"            + \"[\" + PREFIX_VARIANT + \"VARIANT]...\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"            + PREFIX_POSTAL + \"611321 \"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"sumhungyee"},"content":"            + PREFIX_DATE + \"2001-10-10 \"","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"            + PREFIX_AGE + \"48 \"","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"            + PREFIX_VARIANT + \"DENV1 \";","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the Dengue Hotspot Tracker\";","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markusyeo":15,"axmszr":3,"sumhungyee":2,"-":46}},{"path":"src/main/java/seedu/dengue/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":" * Clears all persons in the current displayed list of the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%1$s persons cleared!\";","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"        List\u003cPerson\u003e referenceCopy \u003d new ArrayList\u003c\u003e(lastShownList);","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"        List\u003cPerson\u003e fullList \u003d model","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"sumhungyee"},"content":"                .getDengueHotspotTracker()","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"sumhungyee"},"content":"                .getPersonList();","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"sumhungyee"},"content":"        List\u003cPerson\u003e remainingPersons \u003d fullList","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"sumhungyee"},"content":"                .stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"sumhungyee"},"content":"                .filter(p -\u003e !referenceCopy.contains(p))","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"sumhungyee"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"        int listSize \u003d lastShownList.size();","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"sumhungyee"},"content":"        model.setPersons(remainingPersons);","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, listSize));","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markusyeo":2,"valerietanhx":9,"sumhungyee":12,"-":15}},{"path":"src/main/java/seedu/dengue/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markusyeo":3,"-":17}},{"path":"src/main/java/seedu/dengue/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markusyeo":1,"-":70}},{"path":"src/main/java/seedu/dengue/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_ENDDATE;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_STARTDATE;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.Messages;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.index.Index;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.predicate.PersonContainsDatePredicate;","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.predicate.RangeContainsPersonPredicate;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.range.Range;","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":" * Deletes a person identified using its displayed index from the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"            + \"Parameters: any number of INDEXes (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"            + \"[\" + PREFIX_DATE + \"DATE]...\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"            + \"[\" + PREFIX_STARTDATE + \"STARTDATE]...\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"            + \"[\" + PREFIX_ENDDATE + \"ENDDATE]...\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"            + PREFIX_DATE + \"2001-10-10\"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"            + \"Indexes cannot occur with dates, and a single date cannot occur with a start or end date.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"    public static final String MESSAGE_DELETE_INDEX_SUCCESS \u003d \"%1$s cases deleted\";","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"    public static final String MESSAGE_DELETE_DATE_SUCCESS \u003d \"%1$s cases from %2$s deleted\";","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"    public static final String MESSAGE_DELETE_RANGE_SUCCESS \u003d \"%1$s cases from %2$s to %3$s deleted\";","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"valerietanhx"},"content":"    private final Optional\u003cList\u003cIndex\u003e\u003e targetIndexes;","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"    private final Optional\u003cDate\u003e date;","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"valerietanhx"},"content":"    private final Optional\u003cRange\u003cDate\u003e\u003e range;","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"valerietanhx"},"content":"    // possibly separate into three different commands? index, date, range","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"valerietanhx"},"content":"     * Deletes the person at the targets {@code targetIndexes} in the Dengue Hotspot Tracker","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"valerietanhx"},"content":"     * @param targetIndexes","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"valerietanhx"},"content":"    public DeleteCommand(List\u003cIndex\u003e targetIndexes) {","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"valerietanhx"},"content":"        this.targetIndexes \u003d Optional.of(targetIndexes);","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"valerietanhx"},"content":"        this.date \u003d Optional.empty();","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"valerietanhx"},"content":"        this.range \u003d Optional.empty();","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"valerietanhx"},"content":"    // for test cases to be happy, to delete","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Tohtoroo"},"content":"     * Deletes the person at the target {@code targetIndex} in the Dengue Hotspot Tracker","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Tohtoroo"},"content":"     * @param targetIndex","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"valerietanhx"},"content":"        this.targetIndexes \u003d Optional.of(List.\u003cIndex\u003eof(targetIndex));","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"valerietanhx"},"content":"        this.date \u003d Optional.empty();","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"valerietanhx"},"content":"        this.range \u003d Optional.empty();","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"Tohtoroo"},"content":"     * Deletes people at the target {@code date} in the Dengue Hotspot Tracker","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"Tohtoroo"},"content":"     * @param date","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"valerietanhx"},"content":"    public DeleteCommand(Date date) {","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"valerietanhx"},"content":"        this.targetIndexes \u003d Optional.empty();","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"valerietanhx"},"content":"        this.date \u003d Optional.of(date);","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"valerietanhx"},"content":"        this.range \u003d Optional.empty();","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"Tohtoroo"},"content":"     * Deletes people within the {@code range} dates in the Dengue Hotspot Tracker","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"Tohtoroo"},"content":"     * @param range","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"valerietanhx"},"content":"    public DeleteCommand(Range\u003cDate\u003e range) {","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"valerietanhx"},"content":"        this.targetIndexes \u003d Optional.empty();","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"valerietanhx"},"content":"        this.date \u003d Optional.empty();","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"valerietanhx"},"content":"        this.range \u003d Optional.of(range);","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"valerietanhx"},"content":"        assert !(targetIndexes.isPresent() \u0026 date.isPresent());","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"valerietanhx"},"content":"        assert !(date.isPresent() \u0026 range.isPresent());","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"valerietanhx"},"content":"        assert !(targetIndexes.isPresent() \u0026 range.isPresent());","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"valerietanhx"},"content":"        if (targetIndexes.isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"valerietanhx"},"content":"            return executeIndexes(model, lastShownList);","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"valerietanhx"},"content":"        } else if (date.isPresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"valerietanhx"},"content":"            return executeDate(model, lastShownList);","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"valerietanhx"},"content":"        } else {","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"valerietanhx"},"content":"            return executeRange(model, lastShownList);","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"valerietanhx"},"content":"    private CommandResult executeIndexes(Model model, List\u003cPerson\u003e lastShownList) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"valerietanhx"},"content":"        assert targetIndexes.isPresent();","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"valerietanhx"},"content":"        List\u003cIndex\u003e indexes \u003d targetIndexes.get();","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"valerietanhx"},"content":"        for (Index idx : indexes) {","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"valerietanhx"},"content":"            if (idx.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"valerietanhx"},"content":"        List\u003cPerson\u003e referenceCopy \u003d new ArrayList\u003c\u003e(lastShownList);","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"valerietanhx"},"content":"        List\u003cPerson\u003e toDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"valerietanhx"},"content":"        for (Index idx : indexes) {","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"valerietanhx"},"content":"            Person personToDelete \u003d referenceCopy.get(idx.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"valerietanhx"},"content":"            toDelete.add(personToDelete);","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"valerietanhx"},"content":"        deleteAll(model, toDelete);","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"valerietanhx"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_INDEX_SUCCESS, indexes.size()));","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":134,"author":{"gitId":"Tohtoroo"},"content":"    private CommandResult executeDate(Model model, List\u003cPerson\u003e lastShownList) {","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"valerietanhx"},"content":"        assert date.isPresent();","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"valerietanhx"},"content":"        List\u003cPerson\u003e referenceCopy \u003d new ArrayList\u003c\u003e(lastShownList);","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"Tohtoroo"},"content":"        PersonContainsDatePredicate predicate \u003d new PersonContainsDatePredicate(date);","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"valerietanhx"},"content":"        List\u003cPerson\u003e toDelete \u003d getPersonsToDelete(referenceCopy, predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"valerietanhx"},"content":"        deleteAll(model, toDelete);","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"valerietanhx"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_DATE_SUCCESS, toDelete.size(), date.get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"Tohtoroo"},"content":"    private CommandResult executeRange(Model model, List\u003cPerson\u003e lastShownList) {","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"valerietanhx"},"content":"        assert range.isPresent();","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"valerietanhx"},"content":"        List\u003cPerson\u003e referenceCopy \u003d new ArrayList\u003c\u003e(lastShownList);","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"valerietanhx"},"content":"        RangeContainsPersonPredicate predicate \u003d new RangeContainsPersonPredicate(range.get());","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"valerietanhx"},"content":"        List\u003cPerson\u003e toDelete \u003d getPersonsToDelete(referenceCopy, predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"valerietanhx"},"content":"        deleteAll(model, toDelete);","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"valerietanhx"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_RANGE_SUCCESS,","lastModifiedDate":"2023-03-25"},{"lineNumber":154,"author":{"gitId":"valerietanhx"},"content":"                toDelete.size(), range.get().getStart(), range.get().getEnd()));","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"valerietanhx"},"content":"    private List\u003cPerson\u003e getPersonsToDelete(List\u003cPerson\u003e reference, Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"valerietanhx"},"content":"        List\u003cPerson\u003e toDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"valerietanhx"},"content":"        for (Person person : reference) {","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"valerietanhx"},"content":"            if (predicate.test(person)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"valerietanhx"},"content":"                toDelete.add(person);","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"valerietanhx"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"valerietanhx"},"content":"        return toDelete;","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"valerietanhx"},"content":"    private static void deleteAll(Model model, List\u003cPerson\u003e toDelete) {","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"valerietanhx"},"content":"        List\u003cPerson\u003e fullList \u003d model","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"valerietanhx"},"content":"                .getDengueHotspotTracker()","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"valerietanhx"},"content":"                .getPersonList();","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"valerietanhx"},"content":"        List\u003cPerson\u003e remainingPersons \u003d fullList","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"valerietanhx"},"content":"                .stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"valerietanhx"},"content":"                .filter(p -\u003e !toDelete.contains(p))","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"valerietanhx"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"valerietanhx"},"content":"        model.setPersons(remainingPersons);","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":184,"author":{"gitId":"valerietanhx"},"content":"                \u0026\u0026 targetIndexes.equals(((DeleteCommand) other).targetIndexes)","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"valerietanhx"},"content":"                \u0026\u0026 date.equals(((DeleteCommand) other).date)","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"valerietanhx"},"content":"                \u0026\u0026 range.equals(((DeleteCommand) other).range)); // state check","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Tohtoroo":15,"markusyeo":6,"valerietanhx":133,"-":34}},{"path":"src/main/java/seedu/dengue/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_POSTAL;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_VARIANT;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.Messages;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.index.Index;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Postal;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":" * Edits the details of an existing person in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"sumhungyee"},"content":"            + \"[\" + PREFIX_POSTAL + \"POSTAL] \"","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"markusyeo"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"markusyeo"},"content":"            + \"[\" + PREFIX_AGE + \"AGE] \"","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"            + \"[\" + PREFIX_VARIANT + \"VARIANT]...\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"            + PREFIX_POSTAL + \"598765 \"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"            + PREFIX_DATE + \"2023-01-05\";","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the Dengue Hotspot Tracker.\";","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"sumhungyee"},"content":"        Postal updatedPostal \u003d editPersonDescriptor.getPostal().orElse(personToEdit.getPostal());","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"sumhungyee"},"content":"        Date updatedDate \u003d editPersonDescriptor.getDate().orElse(personToEdit.getDate());","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"markusyeo"},"content":"        Age updatedAge \u003d editPersonDescriptor.getAge().orElse(personToEdit.getAge());","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"axmszr"},"content":"        Set\u003cVariant\u003e updatedVariants \u003d editPersonDescriptor.getVariants().orElse(personToEdit.getVariants());","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"axmszr"},"content":"        return new Person(updatedName, updatedPostal, updatedDate, updatedAge, updatedVariants);","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"sumhungyee"},"content":"        private Postal postal;","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"markusyeo"},"content":"        private Date date;","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"markusyeo"},"content":"        private Age age;","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"axmszr"},"content":"        private Set\u003cVariant\u003e variants;","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"axmszr"},"content":"         * A defensive copy of {@code variants} is used internally.","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"sumhungyee"},"content":"            setPostal(toCopy.postal);","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"markusyeo"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"markusyeo"},"content":"            setAge(toCopy.age);","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"axmszr"},"content":"            setVariants(toCopy.variants);","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"axmszr"},"content":"            return CollectionUtil.isAnyNonNull(name, postal, date, age, variants);","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"sumhungyee"},"content":"        public void setPostal(Postal postal) {","lastModifiedDate":"2023-02-28"},{"lineNumber":164,"author":{"gitId":"sumhungyee"},"content":"            this.postal \u003d postal;","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"sumhungyee"},"content":"        public Optional\u003cPostal\u003e getPostal() {","lastModifiedDate":"2023-02-28"},{"lineNumber":168,"author":{"gitId":"sumhungyee"},"content":"            return Optional.ofNullable(postal);","lastModifiedDate":"2023-02-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"markusyeo"},"content":"        public void setDate(Date date) {","lastModifiedDate":"2023-03-04"},{"lineNumber":172,"author":{"gitId":"markusyeo"},"content":"            this.date \u003d date;","lastModifiedDate":"2023-03-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"sumhungyee"},"content":"        public Optional\u003cDate\u003e getDate() {","lastModifiedDate":"2023-03-04"},{"lineNumber":176,"author":{"gitId":"markusyeo"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2023-03-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"markusyeo"},"content":"        public void setAge(Age age) {","lastModifiedDate":"2023-03-04"},{"lineNumber":180,"author":{"gitId":"markusyeo"},"content":"            this.age \u003d age;","lastModifiedDate":"2023-03-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"markusyeo"},"content":"        public Optional\u003cAge\u003e getAge() {","lastModifiedDate":"2023-03-04"},{"lineNumber":184,"author":{"gitId":"markusyeo"},"content":"            return Optional.ofNullable(age);","lastModifiedDate":"2023-03-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"axmszr"},"content":"         * Sets {@code variants} to this object\u0027s {@code variants}.","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"axmszr"},"content":"         * A defensive copy of {@code variants} is used internally.","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"axmszr"},"content":"        public void setVariants(Set\u003cVariant\u003e variants) {","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"axmszr"},"content":"            this.variants \u003d (variants !\u003d null) ? new HashSet\u003c\u003e(variants) : null;","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"axmszr"},"content":"         * Returns an unmodifiable variant set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"axmszr"},"content":"         * Returns {@code Optional#empty()} if {@code variants} is null.","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"axmszr"},"content":"        public Optional\u003cSet\u003cVariant\u003e\u003e getVariants() {","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"axmszr"},"content":"            return (variants !\u003d null) ? Optional.of(Collections.unmodifiableSet(variants)) : Optional.empty();","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"sumhungyee"},"content":"                    \u0026\u0026 getPostal().equals(e.getPostal())","lastModifiedDate":"2023-02-28"},{"lineNumber":221,"author":{"gitId":"sumhungyee"},"content":"                    \u0026\u0026 getDate().equals(e.getDate())","lastModifiedDate":"2023-03-04"},{"lineNumber":222,"author":{"gitId":"markusyeo"},"content":"                    \u0026\u0026 getAge().equals(e.getAge())","lastModifiedDate":"2023-03-04"},{"lineNumber":223,"author":{"gitId":"axmszr"},"content":"                    \u0026\u0026 getVariants().equals(e.getVariants());","lastModifiedDate":"2023-03-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"markusyeo":33,"axmszr":20,"sumhungyee":12,"-":161}},{"path":"src/main/java/seedu/dengue/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Dengue Hotspot Tracker as requested ...\";","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"markusyeo":3,"-":16}},{"path":"src/main/java/seedu/dengue/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.Messages;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.predicate.FindPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":" * Finds and lists all persons in Dengue Hotspot Tracker whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"    //TODO: Edit message usage","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"    private final FindPredicate predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"    public FindCommand(FindPredicate predicate) {","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"        assert(!(predicate \u003d\u003d null));","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"                        model.getFilteredPersonList().size()));","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Tohtoroo":7,"markusyeo":4,"sumhungyee":1,"-":32}},{"path":"src/main/java/seedu/dengue/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markusyeo":2,"-":19}},{"path":"src/main/java/seedu/dengue/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":" * Lists all persons in the Dengue Hotspot Tracker to the user.","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markusyeo":4,"-":20}},{"path":"src/main/java/seedu/dengue/logic/commands/OverviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_POSTAL;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_VARIANT;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.overview.Overview;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":" * Changes the overview type of the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"public class OverviewCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    public static final String COMMAND_WORD \u003d \"overview\";","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"            + \": Changes the overview type to one of the following: \"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"            + \"\u0027\" + PREFIX_POSTAL + \"\u0027 for Postal (default), \"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"            + \"\u0027\" + PREFIX_AGE + \"\u0027 for Age, or \"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"            + \"\u0027\" + PREFIX_VARIANT + \"\u0027 for Variant. \"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"            + \"Example: \" + COMMAND_WORD + \" a/ \";","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Changed overview type to: %s\";","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"    private final Overview overview;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"    private final String type;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"     * Creates an {@code OverviewCommand} to change the overview to the given type.","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"     * @param blankOverview An empty {@code Overview}.","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"     * @param type The type of the overview.","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"    public OverviewCommand(Overview blankOverview, String type) {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"        requireNonNull(blankOverview);","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"        this.overview \u003d blankOverview;","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"        model.setOverview(this.overview);","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, this.type));","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"axmszr":48}},{"path":"src/main/java/seedu/dengue/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sumhungyee"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"sumhungyee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":"import static seedu.dengue.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":" * A command that reverses an undo operation.","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":"public class RedoCommand extends UndoRedoCommand {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"sumhungyee"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"sumhungyee"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redid %s operations successfully!\";","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"sumhungyee"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"sumhungyee"},"content":"            + \" performs a redo operation, where an optional argument \\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"sumhungyee"},"content":"            + \"can be provided to indicate the number of operations. \\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"            + \"eg. redo 2\";","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"sumhungyee"},"content":"    private final int numberOfRedos;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"     * Creates a {@code RedoCommand} to redo previous actions by the user.","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"     * @param numberOfRedos The number of steps to redo.","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"sumhungyee"},"content":"    public RedoCommand(int numberOfRedos) {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"sumhungyee"},"content":"        this.numberOfRedos \u003d numberOfRedos;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"sumhungyee"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"sumhungyee"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"sumhungyee"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"sumhungyee"},"content":"        model.redo();","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"sumhungyee"},"content":"        int counts \u003d 1 + undoOrRedoAtMost(model, this.numberOfRedos - 1, false);","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"sumhungyee"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"sumhungyee"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"sumhungyee"},"content":"                String.format(MESSAGE_SUCCESS, counts));","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"sumhungyee"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"sumhungyee":40}},{"path":"src/main/java/seedu/dengue/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":" * Sorts the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"            + \": Sorts the view by one of the following: \"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"            + \"\u0027\" + PREFIX_NAME + \"\u0027 for Name, \"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"            + \"\u0027\" + PREFIX_AGE + \"\u0027 for Age, or \"","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"            + \"\u0027\" + PREFIX_DATE + \"\u0027 for Date.\"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"            + \"Example: \" + COMMAND_WORD + \" d/ \";","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted by: %s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"    private final Comparator\u003cPerson\u003e comparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"    private final String type;","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"     * Creates a {@code SortCommand} to sort the list by the given parameter.","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"     * @param type The type of sort.","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"    public SortCommand(Comparator\u003cPerson\u003e comparator, String type) {","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"        requireNonNull(type);","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"valerietanhx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"valerietanhx"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"valerietanhx"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getDengueHotspotTracker().getPersonList();;","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"valerietanhx"},"content":"        List\u003cPerson\u003e toSort \u003d new ArrayList\u003c\u003e(lastShownList);","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"valerietanhx"},"content":"        toSort.sort(comparator);","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"valerietanhx"},"content":"        model.sort(toSort);","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"valerietanhx"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, this.type));","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"valerietanhx":56}},{"path":"src/main/java/seedu/dengue/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sumhungyee"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"sumhungyee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":"import static seedu.dengue.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":" * A command that reverses a change previously made, or reverses a redo operation.","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":"public class UndoCommand extends UndoRedoCommand {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"sumhungyee"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"sumhungyee"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undid %s operations successfully!\";","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"sumhungyee"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"sumhungyee"},"content":"            + \" performs an undo operation, where an optional argument \\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"sumhungyee"},"content":"            + \"can be provided to indicate the number of operations. \\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"            + \"eg. undo 1\";","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"sumhungyee"},"content":"    private final int numberOfUndos;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"     * Creates a {@code UndoCommand} to undo previous actions by the user.","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"     * @param numberOfUndos The number of steps to undo.","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"sumhungyee"},"content":"    public UndoCommand(int numberOfUndos) {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"sumhungyee"},"content":"        this.numberOfUndos \u003d numberOfUndos;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"sumhungyee"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"sumhungyee"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"sumhungyee"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"sumhungyee"},"content":"        model.undo();","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"sumhungyee"},"content":"        int counts \u003d 1 + undoOrRedoAtMost(model, this.numberOfUndos - 1, true);","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"sumhungyee"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"sumhungyee"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"sumhungyee"},"content":"                String.format(MESSAGE_SUCCESS, counts));","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"sumhungyee"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"sumhungyee":39}},{"path":"src/main/java/seedu/dengue/logic/commands/UndoRedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sumhungyee"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":" * A command class that handles common operations between {@link UndoCommand} and @{link RedoCommand}.","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"abstract class UndoRedoCommand extends Command {","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"sumhungyee"},"content":"     * Undo or redo actions by the user for a maximum number of times possible.","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"sumhungyee"},"content":"     * @param model The model to undo or redo.","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"sumhungyee"},"content":"     * @param numOfSteps An upper bound on the number of steps to undo or redo.","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"sumhungyee"},"content":"     * @param isUndo Boolean value that checks to undo or redo.","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"sumhungyee"},"content":"     * @return The maximum number of undo or redo operations possible that is less than {@param numOfSteps}.","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"    public int undoOrRedoAtMost(Model model, int numOfSteps, boolean isUndo) {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"sumhungyee"},"content":"        if (isUndo) {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"sumhungyee"},"content":"            return undoAtMost(model, numOfSteps);","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"sumhungyee"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"            return redoAtMost(model, numOfSteps);","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"     * Undo actions by the user for a maximum number of times possible.","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"sumhungyee"},"content":"     * @param model See {@code undoOrRedoAtMost}.","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"sumhungyee"},"content":"     * @param numOfSteps See {@code undoOrRedoAtMost}.","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"sumhungyee"},"content":"     * @return See {@code undoOrRedoAtMost}.","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"sumhungyee"},"content":"    public int undoAtMost(Model model, int numOfSteps) {","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"sumhungyee"},"content":"        int counts;","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"sumhungyee"},"content":"        for (counts \u003d 0; counts \u003c numOfSteps; counts++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"sumhungyee"},"content":"            try {","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"sumhungyee"},"content":"                model.undo();","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"sumhungyee"},"content":"            } catch (CommandException err) {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"sumhungyee"},"content":"                break;","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"sumhungyee"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"sumhungyee"},"content":"        return counts;","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"sumhungyee"},"content":"     * Redo actions by the user for a maximum number of times possible.","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"sumhungyee"},"content":"     * @param model See {@code undoOrRedoAtMost}.","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"sumhungyee"},"content":"     * @param numOfSteps See {@code undoOrRedoAtMost}.","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"sumhungyee"},"content":"     * @return See {@code undoOrRedoAtMost}.","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"sumhungyee"},"content":"    public int redoAtMost(Model model, int numOfSteps) {","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"sumhungyee"},"content":"        int counts;","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"sumhungyee"},"content":"        for (counts \u003d 0; counts \u003c numOfSteps; counts++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"sumhungyee"},"content":"            try {","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"sumhungyee"},"content":"                model.redo();","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"sumhungyee"},"content":"            } catch (CommandException err) {","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"sumhungyee"},"content":"                break;","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"sumhungyee"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"sumhungyee"},"content":"        return counts;","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"sumhungyee"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"sumhungyee":62}},{"path":"src/main/java/seedu/dengue/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands.exceptions;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"markusyeo":1,"-":16}},{"path":"src/main/java/seedu/dengue/logic/comparators/AgeComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package seedu.dengue.logic.comparators;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":" * Comparator for the class {@code Age}","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"public class AgeComparator implements Comparator\u003cAge\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"     * Compares two {@code Age} objects.","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"sumhungyee"},"content":"     * @param a1 the first object to be compared.","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"sumhungyee"},"content":"     * @param a2 the second object to be compared.","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"     * @return A negative integer, zero, or a positive integer if the first argument is","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"     *         less than, equal to, or greater than the second.","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"sumhungyee"},"content":"    public int compare(Age a1, Age a2) {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"        int firstAge \u003d Integer.parseInt(a1.value);","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"        int secondAge \u003d Integer.parseInt(a2.value);","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"        return firstAge - secondAge;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"        return this \u003d\u003d obj;","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"sumhungyee"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"axmszr":4,"valerietanhx":12,"sumhungyee":14}},{"path":"src/main/java/seedu/dengue/logic/comparators/DateComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package seedu.dengue.logic.comparators;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"sumhungyee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":" * Comparator for the class {@code Date}","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"public class DateComparator implements Comparator\u003cDate\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"sumhungyee"},"content":"     * Compares two {@code Date} objects.","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"sumhungyee"},"content":"     * @param d1 the first object to be compared.","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"sumhungyee"},"content":"     * @param d2 the second object to be compared.","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"sumhungyee"},"content":"     * @return An integer which is positive if d2 is after d1, zero if d1 is equal to d2 and negative otherwise.","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"    public int compare(Date d1, Date d2) {","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"        LocalDate first \u003d LocalDate.parse(d1.value);","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"sumhungyee"},"content":"        LocalDate second \u003d LocalDate.parse(d2.value);","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"sumhungyee"},"content":"        if (first.isBefore(second)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"sumhungyee"},"content":"            return -1;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"        } else if (first.isEqual(second)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"            return 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"sumhungyee"},"content":"            return 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"        return this \u003d\u003d obj;","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"sumhungyee"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"valerietanhx":7,"sumhungyee":27}},{"path":"src/main/java/seedu/dengue/logic/comparators/NameComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package seedu.dengue.logic.comparators;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":" * Comparator for the class {@Date}","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"public class NameComparator implements Comparator\u003cName\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"     * Compares two {@Name} objects.","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"     * @param n1 the first object to be compared.","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"     * @param n2 the second object to be compared.","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"     * @return An integer, which is positive if n2 \u003e n1, zero if n1 \u003d\u003d n2 and negative if n1 \u003c n2.","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"    public int compare(Name n1, Name n2) {","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"        return n1.fullName.compareTo(n2.fullName);","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"valerietanhx":21}},{"path":"src/main/java/seedu/dengue/logic/comparators/PersonAgeComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package seedu.dengue.logic.comparators;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":" * Comparator for the class {@Person} that compares by its {@Age} attribute","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"public class PersonAgeComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"    public int compare(Person p1, Person p2) {","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"        return new AgeComparator().compare(p1.getAge(), p2.getAge());","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"valerietanhx":17}},{"path":"src/main/java/seedu/dengue/logic/comparators/PersonDateComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package seedu.dengue.logic.comparators;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":" * Comparator for the class {@Person} that compares by its {@Date} attribute","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"public class PersonDateComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"    public int compare(Person p1, Person p2) {","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"        return new DateComparator().compare(p1.getDate(), p2.getDate());","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"valerietanhx":17}},{"path":"src/main/java/seedu/dengue/logic/comparators/PersonNameComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package seedu.dengue.logic.comparators;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":" * Comparator for the class {@Person} that compares by its {@Name} attribute","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"public class PersonNameComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"    public int compare(Person p1, Person p2) {","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"        return new NameComparator().compare(p1.getName(), p2.getName());","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"valerietanhx":17}},{"path":"src/main/java/seedu/dengue/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_POSTAL;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_VARIANT;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.AddCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Postal;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_POSTAL,","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"                        PREFIX_DATE, PREFIX_AGE, PREFIX_VARIANT);","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_AGE, PREFIX_POSTAL, PREFIX_DATE)","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"sumhungyee"},"content":"        Postal postal \u003d ParserUtil.parsePostal(argMultimap.getValue(PREFIX_POSTAL).get());","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"markusyeo"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"markusyeo"},"content":"        Age age \u003d ParserUtil.parseAge(argMultimap.getValue(PREFIX_AGE).get());","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"        Set\u003cVariant\u003e variantList \u003d ParserUtil.parseVariants(argMultimap.getAllValues(PREFIX_VARIANT));","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"        Person person \u003d new Person(name, postal, date, age, variantList);","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"markusyeo":17,"axmszr":5,"sumhungyee":1,"-":37}},{"path":"src/main/java/seedu/dengue/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"markusyeo":1,"-":59}},{"path":"src/main/java/seedu/dengue/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"markusyeo":1,"-":147}},{"path":"src/main/java/seedu/dengue/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"    public static final Prefix PREFIX_POSTAL \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"    public static final Prefix PREFIX_STARTDATE \u003d new Prefix(\"sd/\");","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"    public static final Prefix PREFIX_ENDDATE \u003d new Prefix(\"ed/\");","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"    public static final Prefix PREFIX_AGE \u003d new Prefix(\"a/\");","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"    public static final Prefix PREFIX_STARTAGE \u003d new Prefix(\"sa/\");","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"    public static final Prefix PREFIX_ENDAGE \u003d new Prefix(\"ea/\");","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    public static final Prefix PREFIX_VARIANT \u003d new Prefix(\"v/\");","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Tohtoroo":4,"markusyeo":2,"axmszr":1,"sumhungyee":2,"-":9}},{"path":"src/main/java/seedu/dengue/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_INVALID_RANGE;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_ENDDATE;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_STARTDATE;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.index.Index;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.range.EndDate;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.range.Range;","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.range.StartDate;","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DATE,","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"                        PREFIX_STARTDATE, PREFIX_ENDDATE);","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"        if (hasIndexAndDate(argMultimap)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"        if (noDateProvided(argMultimap)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"            return parseIndex(args);","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"valerietanhx"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"            return parseDate(argMultimap);","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"valerietanhx"},"content":"    private DeleteCommand parseIndex(String args) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"valerietanhx"},"content":"        try {","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"valerietanhx"},"content":"            List\u003cIndex\u003e indexes \u003d ParserUtil.parseMultiIndex(args);","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"valerietanhx"},"content":"            return new DeleteCommand(indexes);","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"valerietanhx"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"valerietanhx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"valerietanhx"},"content":"    private DeleteCommand parseDate(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"valerietanhx"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"valerietanhx"},"content":"            if (hasMixedDates(argMultimap)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"valerietanhx"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"valerietanhx"},"content":"                        DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"valerietanhx"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"valerietanhx"},"content":"            if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"valerietanhx"},"content":"                String date \u003d argMultimap.getValue(PREFIX_DATE).get();","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"valerietanhx"},"content":"                return new DeleteCommand(new Date(date));","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"valerietanhx"},"content":"            } else {","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"valerietanhx"},"content":"                StartDate startDate \u003d new StartDate(ParserUtil.parseOptionalDate(argMultimap","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"valerietanhx"},"content":"                        .getValue(PREFIX_STARTDATE)));","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"valerietanhx"},"content":"                EndDate endDate \u003d new EndDate(ParserUtil.parseOptionalDate(argMultimap","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"valerietanhx"},"content":"                        .getValue(PREFIX_ENDDATE)));","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"valerietanhx"},"content":"                if (!startDate.isBefore(endDate)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"valerietanhx"},"content":"                    throw new ParseException(MESSAGE_INVALID_RANGE);","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"valerietanhx"},"content":"                }","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"valerietanhx"},"content":"                Range\u003cDate\u003e range \u003d new Range\u003c\u003e(startDate, endDate);","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"valerietanhx"},"content":"                return new DeleteCommand(range);","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"valerietanhx"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"valerietanhx"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":82,"author":{"gitId":"valerietanhx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"valerietanhx"},"content":"    private static boolean hasIndexAndDate(ArgumentMultimap argMultimap) {","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"valerietanhx"},"content":"        boolean indexBeforeDate \u003d !argMultimap.getPreamble().isEmpty() \u0026 !noDateProvided(argMultimap);","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"valerietanhx"},"content":"        Optional\u003cString\u003e date \u003d argMultimap.getValue(PREFIX_DATE);","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"valerietanhx"},"content":"        Optional\u003cString\u003e startDate \u003d argMultimap.getValue(PREFIX_STARTDATE);","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"valerietanhx"},"content":"        Optional\u003cString\u003e endDate \u003d argMultimap.getValue(PREFIX_ENDDATE);","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"valerietanhx"},"content":"        boolean indexAfterDate \u003d indexAfterDate(date) | indexAfterDate(startDate) | indexAfterDate(endDate);","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"valerietanhx"},"content":"        return indexBeforeDate | indexAfterDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"valerietanhx"},"content":"    private static boolean indexAfterDate(Optional\u003cString\u003e date) {","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"valerietanhx"},"content":"        return !date.isEmpty() ? (date.get().trim().split(\"\\\\s+\").length \u003e 1) : false;","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"Tohtoroo"},"content":"     * Returns true if at least one of the prefixes for STARTDATE, ENDDATE is used in conjunction with DATE","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"Tohtoroo"},"content":"     * in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"valerietanhx"},"content":"    private static boolean hasMixedDates(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"Tohtoroo"},"content":"        return argumentMultimap.getValue(PREFIX_DATE).isPresent()","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"Tohtoroo"},"content":"                \u0026 (argumentMultimap.getValue(PREFIX_STARTDATE).isPresent()","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"Tohtoroo"},"content":"                | argumentMultimap.getValue(PREFIX_ENDDATE).isPresent());","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"Tohtoroo"},"content":"     * Returns true if none of the prefixes for STARTDATE, ENDDATE or DATE has a non-empty value","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"Tohtoroo"},"content":"     * in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"valerietanhx"},"content":"    private static boolean noDateProvided(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2023-03-25"},{"lineNumber":117,"author":{"gitId":"Tohtoroo"},"content":"        return argumentMultimap.getValue(PREFIX_DATE).isEmpty()","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"Tohtoroo"},"content":"                \u0026 argumentMultimap.getValue(PREFIX_STARTDATE).isEmpty()","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"Tohtoroo"},"content":"                \u0026 argumentMultimap.getValue(PREFIX_ENDDATE).isEmpty();","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":121,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Tohtoroo":14,"markusyeo":5,"valerietanhx":83,"-":20}},{"path":"src/main/java/seedu/dengue/logic/parser/DengueHotspotTrackerParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.AddCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.Command;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.EditCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.FindCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.ListCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.logic.commands.OverviewCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.logic.commands.RedoCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.logic.commands.SortCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.logic.commands.UndoCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"public class DengueHotspotTrackerParser {","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":75,"author":{"gitId":"axmszr"},"content":"        case OverviewCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"axmszr"},"content":"            return new OverviewCommandParser().parse(arguments);","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"sumhungyee"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"sumhungyee"},"content":"            return new UndoCommandParser().parse(arguments);","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"sumhungyee"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"sumhungyee"},"content":"            return new RedoCommandParser().parse(arguments);","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"valerietanhx"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"valerietanhx"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markusyeo":14,"axmszr":5,"valerietanhx":3,"sumhungyee":8,"-":62}},{"path":"src/main/java/seedu/dengue/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_POSTAL;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_VARIANT;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.index.Index;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.EditCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_POSTAL,","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"                        PREFIX_DATE, PREFIX_AGE, PREFIX_VARIANT);","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"sumhungyee"},"content":"        if (argMultimap.getValue(PREFIX_POSTAL).isPresent()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"sumhungyee"},"content":"            editPersonDescriptor.setPostal(ParserUtil.parsePostal(argMultimap.getValue(PREFIX_POSTAL).get()));","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"markusyeo"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"markusyeo"},"content":"            editPersonDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"markusyeo"},"content":"        if (argMultimap.getValue(PREFIX_AGE).isPresent()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"markusyeo"},"content":"            editPersonDescriptor.setAge(ParserUtil.parseAge(argMultimap.getValue(PREFIX_AGE).get()));","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"        parseVariantsForEdit(argMultimap.getAllValues(PREFIX_VARIANT)).ifPresent(editPersonDescriptor::setVariants);","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"axmszr"},"content":"     * Parses {@code Collection\u003cString\u003e variants} into a {@code Set\u003cVariant\u003e} if {@code variants} is non-empty.","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"axmszr"},"content":"     * If {@code variants} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"axmszr"},"content":"     * {@code Set\u003cVariant\u003e} containing zero variants.","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"axmszr"},"content":"    private Optional\u003cSet\u003cVariant\u003e\u003e parseVariantsForEdit(Collection\u003cString\u003e variants) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"axmszr"},"content":"        assert variants !\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"axmszr"},"content":"        if (variants.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"axmszr"},"content":"        Collection\u003cString\u003e variantSet \u003d variants.size() \u003d\u003d 1 \u0026\u0026 variants.contains(\"\")","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"axmszr"},"content":"                ? Collections.emptySet()","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"axmszr"},"content":"                : variants;","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"axmszr"},"content":"        return Optional.of(ParserUtil.parseVariants(variantSet));","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"markusyeo":15,"axmszr":14,"sumhungyee":2,"-":54}},{"path":"src/main/java/seedu/dengue/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_INVALID_RANGE;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_ENDAGE;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_ENDDATE;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_POSTAL;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_STARTAGE;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_STARTDATE;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_VARIANT;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.logic.commands.AddCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.FindCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.SubPostal;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.predicate.FindPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.EndAge;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.EndDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.Range;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.StartAge;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.StartDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_POSTAL, PREFIX_DATE,","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"                        PREFIX_AGE, PREFIX_VARIANT, PREFIX_ENDDATE, PREFIX_STARTDATE,","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"                        PREFIX_STARTAGE, PREFIX_ENDAGE);","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"        if (!isValidFormat(argMultimap)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"                    AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"Tohtoroo"},"content":"        Optional\u003cName\u003e name \u003d ParserUtil.parseOptionalName(argMultimap.getValue(PREFIX_NAME));","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"Tohtoroo"},"content":"        Optional\u003cSubPostal\u003e subPostal \u003d ParserUtil.parseOptionalSubPostal(","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Tohtoroo"},"content":"                argMultimap.getValue(PREFIX_POSTAL));","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Tohtoroo"},"content":"        Optional\u003cAge\u003e age \u003d ParserUtil.parseOptionalAge(argMultimap.getValue(PREFIX_AGE));","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"Tohtoroo"},"content":"        Optional\u003cDate\u003e date \u003d ParserUtil.parseOptionalDate(argMultimap.getValue(PREFIX_DATE));","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"Tohtoroo"},"content":"        Set\u003cVariant\u003e variantList \u003d ParserUtil.parseVariants(argMultimap.getAllValues(PREFIX_VARIANT));","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"Tohtoroo"},"content":"        Range\u003cDate\u003e dateRange \u003d getDateRange(argMultimap);","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Tohtoroo"},"content":"        Range\u003cAge\u003e ageRange \u003d getAgeRange(argMultimap);","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"Tohtoroo"},"content":"        FindPredicate canFilter \u003d new FindPredicate(name, subPostal, age, date,","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Tohtoroo"},"content":"                variantList, dateRange, ageRange);","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"Tohtoroo"},"content":"        return new FindCommand(canFilter);","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"Tohtoroo"},"content":"    private static Range\u003cDate\u003e getDateRange(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Tohtoroo"},"content":"        StartDate startDate \u003d new StartDate(ParserUtil.parseOptionalDate(argumentMultimap","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Tohtoroo"},"content":"                .getValue(PREFIX_STARTDATE)));","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Tohtoroo"},"content":"        EndDate endDate \u003d new EndDate(ParserUtil.parseOptionalDate(argumentMultimap","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Tohtoroo"},"content":"                .getValue(PREFIX_ENDDATE)));","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"valerietanhx"},"content":"        if (!startDate.isBefore(endDate)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"valerietanhx"},"content":"            throw new ParseException(MESSAGE_INVALID_RANGE);","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"Tohtoroo"},"content":"        return new Range\u003cDate\u003e(startDate, endDate);","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"Tohtoroo"},"content":"    private static Range\u003cAge\u003e getAgeRange(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"Tohtoroo"},"content":"        StartAge startAge \u003d new StartAge(ParserUtil.parseOptionalAge(argumentMultimap","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"Tohtoroo"},"content":"                .getValue(PREFIX_STARTAGE)));","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"Tohtoroo"},"content":"        EndAge endAge \u003d new EndAge(ParserUtil.parseOptionalAge(argumentMultimap","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"Tohtoroo"},"content":"                .getValue(PREFIX_ENDAGE)));","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"valerietanhx"},"content":"        if (!startAge.isBefore(endAge)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"valerietanhx"},"content":"            throw new ParseException(MESSAGE_INVALID_RANGE);","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"Tohtoroo"},"content":"        return new Range\u003cAge\u003e(startAge, endAge);","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"Tohtoroo"},"content":"     * Returns true if at least one of the prefixes contains non-empty {@code Optional} value in the given","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"Tohtoroo"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"Tohtoroo"},"content":"    private static boolean isAPrefixPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"Tohtoroo"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"Tohtoroo"},"content":"     * Returns true if at least one of the prefixes for STARTDATE, ENDDATE is used in conjunction with DATE","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"Tohtoroo"},"content":"     * in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"Tohtoroo"},"content":"    private static boolean hasMixedDates(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"Tohtoroo"},"content":"        return argumentMultimap.getValue(PREFIX_DATE).isPresent()","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"Tohtoroo"},"content":"                \u0026 (argumentMultimap.getValue(PREFIX_STARTDATE).isPresent()","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"Tohtoroo"},"content":"                | argumentMultimap.getValue(PREFIX_ENDDATE).isPresent());","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"Tohtoroo"},"content":"     * Returns true if at least one of the prefixes for STARTAGE, ENDAGE is used in conjunction with AGE","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"Tohtoroo"},"content":"     * in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"Tohtoroo"},"content":"    private static boolean hasMixedAges(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"Tohtoroo"},"content":"        return argumentMultimap.getValue(PREFIX_AGE).isPresent()","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"Tohtoroo"},"content":"                \u0026 (argumentMultimap.getValue(PREFIX_STARTAGE).isPresent()","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"Tohtoroo"},"content":"                | argumentMultimap.getValue(PREFIX_ENDAGE).isPresent());","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"Tohtoroo"},"content":"    private static boolean isValuePresent(ArgumentMultimap argumentMultimap, Prefix prefix) {","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"Tohtoroo"},"content":"        return argumentMultimap.getValue(prefix).isPresent();","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"Tohtoroo"},"content":"     * Returns true if at least one of the prefixes for AGE and DATE are not mixed, and that the user input has","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"Tohtoroo"},"content":"     * at least one prefix, and that the user input contains no preamble.","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"Tohtoroo"},"content":"    private static boolean isValidFormat(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"Tohtoroo"},"content":"        boolean isCommandNonEmpty \u003d isAPrefixPresent(argumentMultimap, PREFIX_NAME, PREFIX_POSTAL,","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"Tohtoroo"},"content":"                PREFIX_DATE, PREFIX_AGE, PREFIX_VARIANT, PREFIX_ENDDATE,","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"Tohtoroo"},"content":"                PREFIX_STARTDATE, PREFIX_STARTAGE, PREFIX_ENDAGE);","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"Tohtoroo"},"content":"        boolean isPreambleEmpty \u003d argumentMultimap.getPreamble().isEmpty();","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"Tohtoroo"},"content":"        boolean areAgePrefixesNotMixed \u003d !hasMixedAges(argumentMultimap);","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"Tohtoroo"},"content":"        boolean areDatePrefixesNotMixed \u003d !hasMixedDates(argumentMultimap);","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"Tohtoroo"},"content":"        return isCommandNonEmpty \u0026\u0026 isPreambleEmpty \u0026\u0026 areAgePrefixesNotMixed \u0026\u0026 areDatePrefixesNotMixed;","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Tohtoroo":105,"markusyeo":4,"valerietanhx":7,"-":20}},{"path":"src/main/java/seedu/dengue/logic/parser/OverviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_POSTAL;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_VARIANT;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.logic.commands.OverviewCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.overview.AgeOverview;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.overview.PostalOverview;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.overview.VariantOverview;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":" * Parses input arguments and creates a new OverviewCommand object","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"public class OverviewCommandParser implements Parser\u003cOverviewCommand\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"     * Parses the given {@code String} of arguments in the context of the OverviewCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"     * and returns a OverviewCommand object for execution.","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"    public OverviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"        String trimmedArgs \u003d args.trim().toLowerCase();","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"        if (trimmedArgs.equals(PREFIX_POSTAL.getPrefix())) {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"            return new OverviewCommand(new PostalOverview(), \"POSTAL\");","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"        } else if (trimmedArgs.equals(PREFIX_AGE.getPrefix())) {","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"            return new OverviewCommand(new AgeOverview(), \"AGE\");","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"        } else if (trimmedArgs.equals(PREFIX_VARIANT.getPrefix())) {","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"            return new OverviewCommand(new VariantOverview(), \"VARIANT\");","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, OverviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"axmszr":38}},{"path":"src/main/java/seedu/dengue/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.Command;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"     * @throws ParseException if {@code userInput} is not formatted","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"Tohtoroo":1,"markusyeo":2,"valerietanhx":2,"-":12}},{"path":"src/main/java/seedu/dengue/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.index.Index;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.util.StringUtil;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Postal;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.SubPostal;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.predicate.PredicateUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"     * Parses {@code oneBasedIndexes} into a {@code List\u003cIndex\u003e} and returns it. Leading and trailing whitespaces will","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"valerietanhx"},"content":"     * be trimmed.","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"     * @throws ParseException if any of the specified indexes are invalid (not non-zero unsigned integer).","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"valerietanhx"},"content":"    public static List\u003cIndex\u003e parseMultiIndex(String oneBasedIndexes) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"valerietanhx"},"content":"        List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"valerietanhx"},"content":"        String[] splitIndexes \u003d oneBasedIndexes.trim().split(\"\\\\s+\");","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"valerietanhx"},"content":"        for (int i \u003d 0; i \u003c splitIndexes.length; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"valerietanhx"},"content":"            indexes.add(parseIndex(splitIndexes[i]));","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"valerietanhx"},"content":"        return indexes;","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"Tohtoroo"},"content":"        if (!PredicateUtil.isNameValid(name)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"Tohtoroo"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"sumhungyee"},"content":"     * Parses a {@code String Postal} into a {@code Postal}.","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"sumhungyee"},"content":"     * @throws ParseException if the given {@code Postal} is invalid.","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"sumhungyee"},"content":"    public static Postal parsePostal(String postal) throws ParseException {","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Tohtoroo"},"content":"        if (!PredicateUtil.isPostalValid(postal)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"sumhungyee"},"content":"            throw new ParseException(Postal.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"Tohtoroo"},"content":"        String trimmedPostal \u003d postal.trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"sumhungyee"},"content":"        return new Postal(trimmedPostal);","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"markusyeo"},"content":"     * Parses a {@code String age} into an {@code Age}.","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"markusyeo"},"content":"     * @throws ParseException if the given {@code age} is invalid.","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"markusyeo"},"content":"    public static Age parseAge(String age) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"Tohtoroo"},"content":"        if (!PredicateUtil.isAgeValid(age)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"markusyeo"},"content":"            throw new ParseException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"Tohtoroo"},"content":"        String trimmedAge \u003d age.trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"markusyeo"},"content":"        return new Age(trimmedAge);","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"sumhungyee"},"content":"     * Parses a {@code String date} into an {@code Date}.","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"sumhungyee"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"sumhungyee"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"Tohtoroo"},"content":"        if (!PredicateUtil.isDateValid(date)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"markusyeo"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"Tohtoroo"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"Tohtoroo"},"content":"        return new Date(date);","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"axmszr"},"content":"     * Parses a {@code String variant} into a {@code Variant}.","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"axmszr"},"content":"     * @throws ParseException if the given {@code variant} is invalid.","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"axmszr"},"content":"    public static Variant parseVariant(String variant) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"Tohtoroo"},"content":"        if (!PredicateUtil.isVariantValid(variant)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"axmszr"},"content":"            throw new ParseException(Variant.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"Tohtoroo"},"content":"        String trimmedVariant \u003d variant.trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"axmszr"},"content":"        return new Variant(trimmedVariant);","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":129,"author":{"gitId":"axmszr"},"content":"     * Parses {@code Collection\u003cString\u003e variants} into a {@code Set\u003cVariant\u003e}.","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"Tohtoroo"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"Tohtoroo"},"content":"     * @throws ParseException if the given {@code Set\u003cVariant\u003e} is invalid.","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"axmszr"},"content":"    public static Set\u003cVariant\u003e parseVariants(Collection\u003cString\u003e variants) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"axmszr"},"content":"        requireNonNull(variants);","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"axmszr"},"content":"        final Set\u003cVariant\u003e variantSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"axmszr"},"content":"        for (String variantName : variants) {","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"axmszr"},"content":"            variantSet.add(parseVariant(variantName));","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":139,"author":{"gitId":"axmszr"},"content":"        return variantSet;","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"Tohtoroo"},"content":"     * Parses a {@code Optional\u003cString\u003e name} into a {@code Optional\u003cName\u003e}.","lastModifiedDate":"2023-03-27"},{"lineNumber":144,"author":{"gitId":"Tohtoroo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"Tohtoroo"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"Tohtoroo"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"Tohtoroo"},"content":"    public static Optional\u003cName\u003e parseOptionalName(Optional\u003cString\u003e name) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"Tohtoroo"},"content":"        if (name.isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"Tohtoroo"},"content":"            if (!PredicateUtil.isNameValid(name.get())) {","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"Tohtoroo"},"content":"                throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"Tohtoroo"},"content":"            String trimmedName \u003d name.get().trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"Tohtoroo"},"content":"            return Optional.of(new Name(trimmedName));","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"Tohtoroo"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":156,"author":{"gitId":"Tohtoroo"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":159,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"Tohtoroo"},"content":"     * Parses a {@code Optional\u003cString\u003e Postal} into a {@code Optional\u003cPostal\u003e}.","lastModifiedDate":"2023-03-27"},{"lineNumber":162,"author":{"gitId":"Tohtoroo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-27"},{"lineNumber":163,"author":{"gitId":"Tohtoroo"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"Tohtoroo"},"content":"     * @throws ParseException if the given {@code postal} is invalid.","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"Tohtoroo"},"content":"    public static Optional\u003cSubPostal\u003e parseOptionalSubPostal(Optional\u003cString\u003e subPostal) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"Tohtoroo"},"content":"        if (subPostal.isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"Tohtoroo"},"content":"            if (!PredicateUtil.isSubPostalValid(subPostal.get())) {","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"Tohtoroo"},"content":"                throw new ParseException(SubPostal.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"Tohtoroo"},"content":"            String trimmedSubPostal \u003d subPostal.get().trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"Tohtoroo"},"content":"            return Optional.of(new SubPostal(trimmedSubPostal));","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"Tohtoroo"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"Tohtoroo"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"Tohtoroo"},"content":"     * Parses a {@code Optional\u003cString\u003e age} into an {@code Optional\u003cAge\u003e}.","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"Tohtoroo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"Tohtoroo"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"Tohtoroo"},"content":"     * @throws ParseException if the given {@code age} is invalid.","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"Tohtoroo"},"content":"    public static Optional\u003cAge\u003e parseOptionalAge(Optional\u003cString\u003e age) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"Tohtoroo"},"content":"        if (age.isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"Tohtoroo"},"content":"            if (!PredicateUtil.isAgeValid(age.get())) {","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"Tohtoroo"},"content":"                throw new ParseException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"Tohtoroo"},"content":"            String trimmedAge \u003d age.get().trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"Tohtoroo"},"content":"            return Optional.of(new Age(trimmedAge));","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"Tohtoroo"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"Tohtoroo"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":196,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":197,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":198,"author":{"gitId":"Tohtoroo"},"content":"     * Parses a {@code Optional\u003cString\u003e date} into an {@code Optional\u003cDate\u003e}.","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"Tohtoroo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-27"},{"lineNumber":200,"author":{"gitId":"Tohtoroo"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":201,"author":{"gitId":"Tohtoroo"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2023-03-27"},{"lineNumber":202,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"Tohtoroo"},"content":"    public static Optional\u003cDate\u003e parseOptionalDate(Optional\u003cString\u003e date) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"Tohtoroo"},"content":"        if (date.isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"Tohtoroo"},"content":"            if (!PredicateUtil.isDateValid(date.get())) {","lastModifiedDate":"2023-03-27"},{"lineNumber":206,"author":{"gitId":"Tohtoroo"},"content":"                throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"Tohtoroo"},"content":"            String trimmedDate \u003d date.get().trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":209,"author":{"gitId":"Tohtoroo"},"content":"            return Optional.of(new Date(trimmedDate));","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"Tohtoroo"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"Tohtoroo"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":214,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":215,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":216,"author":{"gitId":"Tohtoroo"},"content":"     * Parses a {@code Optional\u003cString\u003e variant} into a {@code Optional\u003cVariant\u003e}.","lastModifiedDate":"2023-03-27"},{"lineNumber":217,"author":{"gitId":"Tohtoroo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-27"},{"lineNumber":218,"author":{"gitId":"Tohtoroo"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"Tohtoroo"},"content":"     * @throws ParseException if the given {@code variant} is invalid.","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"Tohtoroo"},"content":"    public static Optional\u003cVariant\u003e parseOptionalVariant(Optional\u003cString\u003e variant) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"Tohtoroo"},"content":"        if (variant.isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"Tohtoroo"},"content":"            if (!PredicateUtil.isVariantValid(variant.get())) {","lastModifiedDate":"2023-03-27"},{"lineNumber":224,"author":{"gitId":"Tohtoroo"},"content":"                throw new ParseException(Variant.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":225,"author":{"gitId":"Tohtoroo"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":226,"author":{"gitId":"Tohtoroo"},"content":"            String trimmedVariant \u003d variant.get().trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":227,"author":{"gitId":"Tohtoroo"},"content":"            return Optional.of(new Variant(trimmedVariant));","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"Tohtoroo"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":229,"author":{"gitId":"Tohtoroo"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-27"},{"lineNumber":230,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":232,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"Tohtoroo"},"content":"     * Parses {@code Collection\u003cOptional\u003cString\u003e\u003e variants} into a {@code Set\u003cOptional\u003cVariant\u003e\u003e}.","lastModifiedDate":"2023-03-27"},{"lineNumber":235,"author":{"gitId":"Tohtoroo"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":236,"author":{"gitId":"Tohtoroo"},"content":"     * @throws ParseException if the given {@code Set\u003cOptional\u003cVariant\u003e\u003e} is invalid.","lastModifiedDate":"2023-03-27"},{"lineNumber":237,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"Tohtoroo"},"content":"    public static Set\u003cOptional\u003cVariant\u003e\u003e parseOptionalVariants(Collection\u003cOptional\u003cString\u003e\u003e variants)","lastModifiedDate":"2023-03-27"},{"lineNumber":239,"author":{"gitId":"Tohtoroo"},"content":"            throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":240,"author":{"gitId":"Tohtoroo"},"content":"        requireNonNull(variants);","lastModifiedDate":"2023-03-27"},{"lineNumber":241,"author":{"gitId":"Tohtoroo"},"content":"        final Set\u003cOptional\u003cVariant\u003e\u003e variantSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"Tohtoroo"},"content":"        for (Optional\u003cString\u003e variantName : variants) {","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"Tohtoroo"},"content":"            variantSet.add(parseOptionalVariant(variantName));","lastModifiedDate":"2023-03-27"},{"lineNumber":244,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":245,"author":{"gitId":"Tohtoroo"},"content":"        return variantSet;","lastModifiedDate":"2023-03-27"},{"lineNumber":246,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Tohtoroo":123,"markusyeo":14,"axmszr":13,"valerietanhx":18,"sumhungyee":9,"-":70}},{"path":"src/main/java/seedu/dengue/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":" * E.g. \u0027v/\u0027 in \u0027add James v/ DENV1\u0027.","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"markusyeo":1,"axmszr":1,"-":37}},{"path":"src/main/java/seedu/dengue/logic/parser/RedoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sumhungyee"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"sumhungyee"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.logic.commands.RedoCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":" * A parser for the arguments of the redo command.","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":"public class RedoCommandParser implements Parser\u003cRedoCommand\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"sumhungyee"},"content":"     * Parses the given {@code String} of arguments in the context of the RedoCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"sumhungyee"},"content":"     * and returns a RedoCommand object for execution.","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"sumhungyee"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"sumhungyee"},"content":"    public RedoCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"sumhungyee"},"content":"            return new RedoCommand(1);","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"sumhungyee"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"            int numberofRedos \u003d Integer.parseInt(trimmedArgs);","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"            return new RedoCommand(numberofRedos);","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"        } catch (Exception err) {","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"sumhungyee"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"sumhungyee"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RedoCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"sumhungyee"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"sumhungyee":30}},{"path":"src/main/java/seedu/dengue/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.logic.commands.SortCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.logic.comparators.PersonAgeComparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.logic.comparators.PersonDateComparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.logic.comparators.PersonNameComparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":" * Parses input arguments and creates a new SortCommand object.","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"public class SortCommandParser {","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"        String trimmedArgs \u003d args.trim().toLowerCase();","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"        if (trimmedArgs.equals(PREFIX_NAME.getPrefix())) {","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"            return new SortCommand(new PersonNameComparator(), \"NAME\");","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"        } else if (trimmedArgs.equals(PREFIX_AGE.getPrefix())) {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"            return new SortCommand(new PersonAgeComparator(), \"AGE\");","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"        } else if (trimmedArgs.equals(PREFIX_DATE.getPrefix())) {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"            return new SortCommand(new PersonDateComparator(), \"DATE\");","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"valerietanhx":37}},{"path":"src/main/java/seedu/dengue/logic/parser/UndoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sumhungyee"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"sumhungyee"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.logic.commands.UndoCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":" * A parser for the arguments of the undo command.","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":"public class UndoCommandParser implements Parser\u003cUndoCommand\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"sumhungyee"},"content":"     * Parses the given {@code String} of arguments in the context of the UndoCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"sumhungyee"},"content":"     * and returns a UndoCommand object for execution.","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"sumhungyee"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"sumhungyee"},"content":"    public UndoCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"sumhungyee"},"content":"            return new UndoCommand(1);","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"sumhungyee"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"            int numberofUndos \u003d Integer.parseInt(trimmedArgs);","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"            return new UndoCommand(numberofUndos);","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"        } catch (Exception err) {","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"sumhungyee"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"sumhungyee"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UndoCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"sumhungyee"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"sumhungyee":30}},{"path":"src/main/java/seedu/dengue/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser.exceptions;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"markusyeo":2,"-":15}},{"path":"src/main/java/seedu/dengue/model/DengueHotspotTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.UniquePersonList;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"public class DengueHotspotTracker implements ReadOnlyDengueHotspotTracker {","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"    public DengueHotspotTracker() {}","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"     * Creates an DengueHotspotTracker using the Persons in the {@code toBeCopied}","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"    public DengueHotspotTracker(ReadOnlyDengueHotspotTracker toBeCopied) {","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"markusyeo"},"content":"     * Resets the existing data of this {@code DengueHotspotTracker} with {@code newData}.","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"markusyeo"},"content":"    public void resetData(ReadOnlyDengueHotspotTracker newData) {","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"markusyeo"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"markusyeo"},"content":"     * Adds a person to the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"markusyeo"},"content":"     * The person must not already exist in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"markusyeo"},"content":"     * {@code target} must exist in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"markusyeo"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"markusyeo"},"content":"     * the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"markusyeo"},"content":"     * Removes {@code key} from this {@code DengueHotspotTracker}.","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"markusyeo"},"content":"     * {@code key} must exist in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"markusyeo"},"content":"                || (other instanceof DengueHotspotTracker // instanceof handles nulls","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"markusyeo"},"content":"                \u0026\u0026 persons.equals(((DengueHotspotTracker) other).persons));","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"sumhungyee"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"sumhungyee"},"content":"    public DengueHotspotTracker generateDeepCopy() {","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"sumhungyee"},"content":"        DengueHotspotTracker copy \u003d new DengueHotspotTracker();","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"sumhungyee"},"content":"        ObservableList\u003cPerson\u003e personList \u003d this.getPersonList()","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"sumhungyee"},"content":"                .stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"sumhungyee"},"content":"                .map(p -\u003e p.getCopy())","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"sumhungyee"},"content":"                .collect(Collectors.toCollection(FXCollections::observableArrayList));","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"sumhungyee"},"content":"        copy.setPersons(personList);","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"sumhungyee"},"content":"        return copy;","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markusyeo":19,"sumhungyee":15,"-":100}},{"path":"src/main/java/seedu/dengue/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.GuiSettings;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.overview.Overview;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"markusyeo"},"content":"     * Returns the user prefs\u0027 Dengue Hotspot Tracker file path.","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"markusyeo"},"content":"    Path getDengueHotspotTrackerFilePath();","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"markusyeo"},"content":"     * Sets the user prefs\u0027 Dengue Hotspot Tracker file path.","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"markusyeo"},"content":"    void setDengueHotspotTrackerFilePath(Path dengueHotspotTrackerFilePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"     * Replaces Dengue Hotspot Tracker data with the data in {@code dengueHotspotTracker}.","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"markusyeo"},"content":"    void setDengueHotspotTracker(ReadOnlyDengueHotspotTracker dengueHotspotTracker);","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"markusyeo"},"content":"    /** Returns the DengueHotspotTracker */","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"markusyeo"},"content":"    ReadOnlyDengueHotspotTracker getDengueHotspotTracker();","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"markusyeo"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"markusyeo"},"content":"     * The person must exist in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"markusyeo"},"content":"     * {@code person} must not already exist in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"markusyeo"},"content":"     * {@code target} must exist in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"markusyeo"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"markusyeo"},"content":"     * the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"sumhungyee"},"content":"    void setPersons(List\u003cPerson\u003e persons);","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"axmszr"},"content":"     * Returns an unmodifiable view of the filtered person list.","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"axmszr"},"content":"     * Returns the overview of the model.","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"axmszr"},"content":"    Overview getOverview();","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"axmszr"},"content":"     * Sets the given overview as the new overview.","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"axmszr"},"content":"     * @param overview The new overview type to replace the current.","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"axmszr"},"content":"    void setOverview(Overview overview);","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"sumhungyee"},"content":"    void updateFromMemoryStack();","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"sumhungyee"},"content":"     * Undo an action.","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"sumhungyee"},"content":"     * @throws CommandException if cannot undo further.","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"sumhungyee"},"content":"    void undo() throws CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"sumhungyee"},"content":"     * Redo an action.","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"sumhungyee"},"content":"     * @throws CommandException if cannot redo further.","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"sumhungyee"},"content":"    void redo() throws CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"valerietanhx"},"content":"     * Sorts the list.","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"valerietanhx"},"content":"     * @throws CommandException if sort type not specified.","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"valerietanhx"},"content":"    void sort(List\u003cPerson\u003e sortedList);","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"markusyeo":16,"axmszr":17,"valerietanhx":6,"sumhungyee":18,"-":70}},{"path":"src/main/java/seedu/dengue/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.GuiSettings;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.LogsCenter;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.overview.Overview;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.overview.PostalOverview;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.storage.temporary.TemporaryMemory;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":" * Represents the in-memory model of the Dengue Hotspot Tracker data.","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"    private final DengueHotspotTracker dengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"    private TemporaryMemory memory;","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"    private Overview overview;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"     * Initializes a ModelManager with the given dengueHotspotTracker and userPrefs.","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"    public ModelManager(ReadOnlyDengueHotspotTracker dengueHotspotTracker, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"        requireAllNonNull(dengueHotspotTracker, userPrefs);","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"        logger.fine(\"Initializing with Dengue Hotspot Tracker: \" + dengueHotspotTracker","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"sumhungyee"},"content":"        this.dengueHotspotTracker \u003d new DengueHotspotTracker(dengueHotspotTracker)","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"sumhungyee"},"content":"                .generateDeepCopy();","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"markusyeo"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.dengueHotspotTracker.getPersonList());","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"        this.overview \u003d new PostalOverview();","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"sumhungyee"},"content":"        this.memory \u003d new TemporaryMemory(this.dengueHotspotTracker);","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"        this(new DengueHotspotTracker(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"markusyeo"},"content":"    public Path getDengueHotspotTrackerFilePath() {","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"markusyeo"},"content":"        return userPrefs.getDengueHotspotTrackerFilePath();","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"markusyeo"},"content":"    public void setDengueHotspotTrackerFilePath(Path dengueHotspotTrackerFilePath) {","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"markusyeo"},"content":"        requireNonNull(dengueHotspotTrackerFilePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"markusyeo"},"content":"        userPrefs.setDengueHotspotTrackerFilePath(dengueHotspotTrackerFilePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"markusyeo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d DengueHotspotTracker \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"sumhungyee"},"content":"    // Access Temporary Memory for Undo Redo","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"sumhungyee"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"sumhungyee"},"content":"    public void updateFromMemoryStack() {","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"sumhungyee"},"content":"        setDengueHotspotTracker(memory.loadCurrent());","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"sumhungyee"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"sumhungyee"},"content":"    public void undo() throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"sumhungyee"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"sumhungyee"},"content":"            memory.undo();","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"sumhungyee"},"content":"            updateFromMemoryStack();","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"sumhungyee"},"content":"        } catch (NullPointerException err) {","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"sumhungyee"},"content":"            throw new CommandException(\"Cannot undo any further!\");","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"sumhungyee"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"sumhungyee"},"content":"    public void redo() throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"sumhungyee"},"content":"        memory.redo();","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"sumhungyee"},"content":"        updateFromMemoryStack();","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"markusyeo"},"content":"    public void setDengueHotspotTracker(ReadOnlyDengueHotspotTracker dengueHotspotTracker) {","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"markusyeo"},"content":"        this.dengueHotspotTracker.resetData(dengueHotspotTracker);","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"markusyeo"},"content":"    public ReadOnlyDengueHotspotTracker getDengueHotspotTracker() {","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"markusyeo"},"content":"        return dengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"markusyeo"},"content":"        return dengueHotspotTracker.hasPerson(person);","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":133,"author":{"gitId":"markusyeo"},"content":"        dengueHotspotTracker.removePerson(target);","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"sumhungyee"},"content":"        memory.saveNewLatest(this.dengueHotspotTracker);","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"sumhungyee"},"content":"        updateFromMemoryStack();","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":140,"author":{"gitId":"markusyeo"},"content":"        dengueHotspotTracker.addPerson(person);","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"sumhungyee"},"content":"        memory.saveNewLatest(this.dengueHotspotTracker);","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"sumhungyee"},"content":"        updateFromMemoryStack();","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":149,"author":{"gitId":"markusyeo"},"content":"        dengueHotspotTracker.setPerson(target, editedPerson);","lastModifiedDate":"2023-03-04"},{"lineNumber":150,"author":{"gitId":"sumhungyee"},"content":"        memory.saveNewLatest(this.dengueHotspotTracker);","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"sumhungyee"},"content":"        updateFromMemoryStack();","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":154,"author":{"gitId":"sumhungyee"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"sumhungyee"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"sumhungyee"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"sumhungyee"},"content":"        dengueHotspotTracker.setPersons(persons);","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"sumhungyee"},"content":"        memory.saveNewLatest(this.dengueHotspotTracker);","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"sumhungyee"},"content":"        updateFromMemoryStack();","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"markusyeo"},"content":"     * {@code versionedDengueHotspotTracker}","lastModifiedDate":"2023-03-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":181,"author":{"gitId":"axmszr"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Overview Stuff \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"axmszr"},"content":"    public Overview getOverview() {","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"axmszr"},"content":"        this.overview.update(filteredPersons);","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"axmszr"},"content":"        return this.overview;","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"axmszr"},"content":"    public void setOverview(Overview newOverview) {","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"axmszr"},"content":"        this.overview \u003d newOverview;","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"valerietanhx"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Sort Stuff \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"valerietanhx"},"content":"    public void sort(List\u003cPerson\u003e sortedList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"valerietanhx"},"content":"        dengueHotspotTracker.setPersons(sortedList);","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"valerietanhx"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Misc Stuff \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"markusyeo"},"content":"        return dengueHotspotTracker.equals(other.dengueHotspotTracker)","lastModifiedDate":"2023-03-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":218,"author":{"gitId":"axmszr"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"axmszr"},"content":"                \u0026\u0026 overview.equals(other.overview);","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markusyeo":30,"axmszr":19,"valerietanhx":8,"sumhungyee":47,"-":117}},{"path":"src/main/java/seedu/dengue/model/ReadOnlyDengueHotspotTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":" * Unmodifiable view of a Dengue Hotspot Tracker","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"public interface ReadOnlyDengueHotspotTracker {","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"     * Generates a deep copy of an unmodifiable list.","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"     * @return A deep copy of the list.","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"sumhungyee"},"content":"    ReadOnlyDengueHotspotTracker generateDeepCopy();","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markusyeo":3,"sumhungyee":8,"-":13}},{"path":"src/main/java/seedu/dengue/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.GuiSettings;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"    Path getDengueHotspotTrackerFilePath();","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"markusyeo":3,"-":13}},{"path":"src/main/java/seedu/dengue/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.GuiSettings;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"    private Path dengueHotspotTrackerFilePath \u003d Paths.get(\"data\" , \"denguehotspottracker.csv\");","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"        setDengueHotspotTrackerFilePath(newUserPrefs.getDengueHotspotTrackerFilePath());","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"markusyeo"},"content":"    public Path getDengueHotspotTrackerFilePath() {","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"        return dengueHotspotTrackerFilePath;","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"markusyeo"},"content":"    public void setDengueHotspotTrackerFilePath(Path dengueHotspotTrackerFilePath) {","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"markusyeo"},"content":"        requireNonNull(dengueHotspotTrackerFilePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"markusyeo"},"content":"        this.dengueHotspotTrackerFilePath \u003d dengueHotspotTrackerFilePath;","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"markusyeo"},"content":"                \u0026\u0026 dengueHotspotTrackerFilePath.equals(o.dengueHotspotTrackerFilePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"markusyeo"},"content":"        return Objects.hash(guiSettings, dengueHotspotTrackerFilePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"markusyeo"},"content":"        sb.append(\"\\nLocal data file location : \" + dengueHotspotTrackerFilePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markusyeo":12,"-":75}},{"path":"src/main/java/seedu/dengue/model/overview/AgeOverview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package seedu.dengue.model.overview;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.logic.analyst.AgeAnalyst;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.logic.analyst.DataBin;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":" * An {@code Overview} that runs analysis by {@code Age}.","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":" *","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":" * @see AgeAnalyst","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"public class AgeOverview extends Overview {","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    private static final String AGE_TITLE \u003d \"Overview by Age\";","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    private static final int MAX_AGE_LENGTH \u003d 9; // Length of the longest bin name, \"190 - 199\"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"    private AgeAnalyst analyst;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"     * Constructs an {@code AgeOverview} instance with the given list of {@code Person}s.","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"     * @param personList The list of {Person} instances to analyze.","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"    public AgeOverview(List\u003cPerson\u003e personList) {","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"        List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e(personList);","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"        this.analyst \u003d new AgeAnalyst(persons);","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"     * Constructs an {@code AgeOverview} instance with an empty list of {@code Person}s.","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"    public AgeOverview() {","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"    public String getOverviewTitle() {","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"        return AGE_TITLE;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"    public AgeAnalyst getAnalyst() {","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"        return this.analyst;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"    public void update(List\u003cPerson\u003e personList) {","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"        List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e(personList);","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"        this.analyst \u003d new AgeAnalyst(persons);","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"    private static String padBinName(String binName) {","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"        int paddingNeeded \u003d MAX_AGE_LENGTH - binName.length();","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"        String whitespace \u003d makeWhitespace(paddingNeeded / 2);","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"        return whitespace + binName + whitespace;","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"    public String makeBinFormat(DataBin bin) {","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"        int maxSizeLen \u003d String.valueOf(getAnalyst().getTotal()).length();","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"        return String.format(\"%s\" + GAP + \"%\" + maxSizeLen + \"d\",","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"                padBinName(bin.getName()), bin.getSize());","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"axmszr"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"axmszr"},"content":"            return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"axmszr"},"content":"        if (!(obj instanceof AgeOverview)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"axmszr"},"content":"            return false;","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"axmszr"},"content":"        AgeOverview other \u003d (AgeOverview) obj;","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"axmszr"},"content":"        return this.analyst.equals(other.analyst);","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"axmszr":80}},{"path":"src/main/java/seedu/dengue/model/overview/Overview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package seedu.dengue.model.overview;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.logic.analyst.Analyst;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.logic.analyst.DataBin;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":" * The API of the Overview list.","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"public abstract class Overview {","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    protected static final int MAX_INDEX_LEN \u003d 4; // Length of \" 28.\"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    protected static final String GAP \u003d \"     \";","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"     * Returns the title {@code String} of the overview.","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"     * @return The title of the overview.","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"    public abstract String getOverviewTitle();","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"     * Returns the subtitle {@code String} of the overview.","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"     * @return The subtitle of the overview.","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"    public String getOverviewSubtitle() {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"        return String.format(\"Total Cases: %d\",","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"                getAnalyst().getTotal());","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"     * Returns the {@code Analayst} that runs the data analysis for the overview.","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"     * @return The analyst associated with the overview.","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"    public abstract Analyst getAnalyst();","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"     * Updates the analyst with the given {@code Person} list.","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"     * @param personsList The new list of persons to analyse.","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"    public abstract void update(List\u003cPerson\u003e personsList);","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"     * Returns a standardized {@code String} representation of a given bin,","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"     * including information like its name and size,","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"     * such that the format matches other bins in the same overview.","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"     * @param bin The input bin to format into a {@code String}.","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"     * @return The string representation of the bin.","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"    public abstract String makeBinFormat(DataBin bin);","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"    protected static String makeWhitespace(int length) {","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"        if (length \u003c\u003d 0) {","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"            return \"\";","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"        return Stream.iterate(\" \", x -\u003e x).limit(length).collect(Collectors.joining());","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"axmszr"},"content":"    private String makeBinPrefix(int x) {","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"        String index \u003d x + \".\";","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"axmszr"},"content":"        int paddingNeeded \u003d MAX_INDEX_LEN - index.length();","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"axmszr"},"content":"        return makeWhitespace(paddingNeeded) + index;","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"axmszr"},"content":"     * Returns a {@code String} of all the bins recorded in the overview.","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"axmszr"},"content":"     * Meant for display to the user.","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"axmszr"},"content":"     * @return Multi-line string representation of all present bins.","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"axmszr"},"content":"    public String getOverviewContent() {","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"axmszr"},"content":"        List\u003cDataBin\u003e sortedBins \u003d getAnalyst().getSortedBins();","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"axmszr"},"content":"        return Stream.iterate(1, i -\u003e i + 1).limit(sortedBins.size())","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"axmszr"},"content":"                .map(i -\u003e makeBinPrefix(i) + GAP + makeBinFormat(sortedBins.get(i - 1)))","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"axmszr"},"content":"                .collect(Collectors.joining(\"\\n\\n\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"axmszr":85}},{"path":"src/main/java/seedu/dengue/model/overview/PostalOverview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package seedu.dengue.model.overview;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.logic.analyst.DataBin;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.logic.analyst.PostalAnalyst;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":" * An {@code Overview} that runs analysis by {@code Postal}, i.e. neighbourhood/location.","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":" *","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":" * @see PostalAnalyst","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"public class PostalOverview extends Overview {","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    private static final String POSTAL_TITLE \u003d \"Overview by Location\";","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    private static final int MAX_NAME_LENGTH \u003d 17; // Hong Leong Garden","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"    private PostalAnalyst analyst;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"     * Constructs a {@code PostalOverview} instance with the given list of {@code Person}s.","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"     * @param personList The list of {Person} instances to analyze.","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"    public PostalOverview(List\u003cPerson\u003e personList) {","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"        List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e(personList);","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"        this.analyst \u003d new PostalAnalyst(persons);","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"     * Constructs a {@code PostalOverview} instance with an empty list of {@code Person}s.","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"    public PostalOverview() {","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"    public String getOverviewTitle() {","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"        return POSTAL_TITLE;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"    public PostalAnalyst getAnalyst() {","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"        return this.analyst;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"    public void update(List\u003cPerson\u003e personList) {","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"        List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e(personList);","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"        this.analyst \u003d new PostalAnalyst(persons);","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"    private static String[] splitLocationName(String locationName) {","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"        return locationName.split(\", \");","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"    public String makeBinFormat(DataBin bin) {","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"        String[] locationNames \u003d splitLocationName(bin.getName());","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"        String paddingWhitespace \u003d makeWhitespace(MAX_NAME_LENGTH - locationNames[0].length());","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"        int maxSizeLen \u003d String.valueOf(getAnalyst().getTotal()).length();","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"        locationNames[0] \u003d String.format(\"%s\" + paddingWhitespace + GAP + \"%\" + maxSizeLen + \"d\",","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"axmszr"},"content":"                locationNames[0], bin.getSize());","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"axmszr"},"content":"        String rowPrefix \u003d \"\\n\" + makeWhitespace(MAX_INDEX_LEN) + GAP;","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"        return String.join(rowPrefix, locationNames);","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"axmszr"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"axmszr"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"axmszr"},"content":"            return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"axmszr"},"content":"        if (!(obj instanceof PostalOverview)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"axmszr"},"content":"            return false;","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"axmszr"},"content":"        PostalOverview other \u003d (PostalOverview) obj;","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"axmszr"},"content":"        return this.analyst.equals(other.analyst);","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"axmszr":84}},{"path":"src/main/java/seedu/dengue/model/overview/VariantOverview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package seedu.dengue.model.overview;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.logic.analyst.DataBin;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.logic.analyst.VariantAnalyst;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":" * An {@code Overview} that runs analysis by {@code Variant}.","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":" *","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":" * @see VariantAnalyst","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"public class VariantOverview extends Overview {","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    private static final String VARIANT_TITLE \u003d \"Overview by Variant\";","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    private VariantAnalyst analyst;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"     * Constructs a {@code VariantOverview} instance with the given list of {@code Person}s.","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"     * @param personList The list of {Person} instances to analyze.","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"    public VariantOverview(List\u003cPerson\u003e personList) {","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"        List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e(personList);","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"        this.analyst \u003d new VariantAnalyst(persons);","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"     * Constructs a {@code VariantOverview} instance with an empty list of {@code Person}s.","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"    public VariantOverview() {","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"    public String getOverviewTitle() {","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"        return VARIANT_TITLE;","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"    public VariantAnalyst getAnalyst() {","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"        return this.analyst;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"    public void update(List\u003cPerson\u003e personList) {","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"        List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e(personList);","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"        this.analyst \u003d new VariantAnalyst(persons);","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"    public String makeBinFormat(DataBin bin) {","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"        int maxSizeLen \u003d String.valueOf(getAnalyst().getTotal()).length();","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"        return String.format(\"%s\" + GAP + \"%\" + maxSizeLen + \"d\",","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"                bin.getName(), bin.getSize());","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"            return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"axmszr"},"content":"        if (!(obj instanceof VariantOverview)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"axmszr"},"content":"            return false;","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"axmszr"},"content":"        VariantOverview other \u003d (VariantOverview) obj;","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"axmszr"},"content":"        return this.analyst.equals(other.analyst);","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"axmszr":73}},{"path":"src/main/java/seedu/dengue/model/person/Age.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":" * Represents a Person\u0027s age in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAge(String)}","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"public class Age {","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Age must be an integer between 0 and 199 inclusive.\";","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"     * The first character of the age must not be a whitespace,","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"    public static final String VALIDATION_REGEX \u003d \"(^[01]\\\\d{0,2}$|^\\\\d{1,2}$)\";","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"     * Constructs an {@code Age}.","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"     * @param age A valid age.","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"    public Age(String age) {","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"        requireNonNull(age);","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"        checkArgument(isValidAge(age), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"sumhungyee"},"content":"        value \u003d String.valueOf(Integer.valueOf(age));","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"sumhungyee"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"    public static boolean isValidAge(String test) {","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"markusyeo"},"content":"                || (other instanceof Age // instanceof handles nulls","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"markusyeo"},"content":"                \u0026\u0026 value.equals(((Age) other).value)); // state check","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markusyeo":15,"valerietanhx":1,"sumhungyee":3,"-":36}},{"path":"src/main/java/seedu/dengue/model/person/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":" * Represents a Person\u0027s dengue case date in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"public class Date {","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Dates should adhere to the following constraints:\\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"sumhungyee"},"content":"            + \"1. Dates to contain 4-digit years YYYY, 2-digit days dd and either 2-digit months MM,\"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"sumhungyee"},"content":"            + \" 3-letter months MMM, \\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"sumhungyee"},"content":"            + \"or fully-spelled months MMMM.\\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"            + \" - If months are given in the MM format and the dates are ambiguous, eg. 20001010 \\n \"","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"            + \"YYYY will be read first, followed by MM and DD. \\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"            + \"2. Dates must be valid. i.e.\\n\"","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"            + \" - MM must be a number between 01 and 12 inclusive\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"            + \" - dd must be a number between 01 and 31 inclusive\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"            + \" - dd should be within the valid range for the MM given.\\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"sumhungyee"},"content":"            + \"Example Dates: Jan-23-2000\";","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"sumhungyee"},"content":"    private static final DateFormat NUM_FORMATS \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"sumhungyee"},"content":"            new DateFormat(\"uuuu\", \"MM\", \"dd\");","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"sumhungyee"},"content":"    private static final DateFormat LONG_FORMATS \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"sumhungyee"},"content":"            new DateFormat(\"uuuu\", \"MMMM\", \"dd\");","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"sumhungyee"},"content":"    private static final DateFormat SHORT_FORMATS \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"sumhungyee"},"content":"            new DateFormat(\"uuuu\", \"MMM\", \"dd\");","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"sumhungyee"},"content":"    private static final Pattern LONG_MONTH_FORMAT_CHECK \u003d Pattern.compile(\"[a-zA-Z]{4,}\");","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"sumhungyee"},"content":"    private static final Pattern MONTH_FORMAT_CHECK \u003d Pattern.compile(\"[a-zA-Z]{3}\");","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"markusyeo"},"content":"     * @param date A Date.","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"markusyeo"},"content":"    public Date(String date) {","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"markusyeo"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"markusyeo"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"sumhungyee"},"content":"        value \u003d LocalDate.parse(date, produceValidationFormat(date))","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"sumhungyee"},"content":"                .toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"sumhungyee"},"content":"     * @param test A string which is tested on whether it is a valid date.","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"sumhungyee"},"content":"     * @return A boolean value.","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"markusyeo"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"sumhungyee"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"sumhungyee"},"content":"            LocalDate.parse(test, produceValidationFormat(test));","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"sumhungyee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"sumhungyee"},"content":"            return false;","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"sumhungyee"},"content":"        } catch (IllegalArgumentException err) {","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"sumhungyee"},"content":"            return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"sumhungyee"},"content":"        return true;","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"sumhungyee"},"content":"     * Produces a validation format, given input date string, to accommodate different date formats.","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"sumhungyee"},"content":"     * such as yyyy-MM-dd, yyyy MMMM dd or MMM/yyyy/dd.","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"sumhungyee"},"content":"     * When the order of numbers are ambiguous e.g. \"20000101\",","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"sumhungyee"},"content":"     * the first chain of alphabets 3 letters or longer will be parsed as MMM or MMMM.","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"sumhungyee"},"content":"     * The first 4-digit substring will be read into the year parameter.","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"sumhungyee"},"content":"     * Then, if month is in MM format,","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"sumhungyee"},"content":"     * the first 2-digit substring will be read into the month parameter.","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"sumhungyee"},"content":"     * Lastly, the last 2-digit substring will be read into the day parameter.","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"sumhungyee"},"content":"     * @param date A string representation of the date.","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"sumhungyee"},"content":"     * @return A format representation of the date. Eg. \"yyyy MMM dd\"","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"sumhungyee"},"content":"    public static DateTimeFormatter produceValidationFormat(String date)","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"sumhungyee"},"content":"            throws IllegalArgumentException {","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"sumhungyee"},"content":"        String dateString \u003d date;","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"sumhungyee"},"content":"        boolean alphabetIsPresent \u003d MONTH_FORMAT_CHECK.matcher(dateString).find();","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"sumhungyee"},"content":"        boolean longAlphabetIsPresent \u003d LONG_MONTH_FORMAT_CHECK","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"sumhungyee"},"content":"                .matcher(dateString).find();","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"sumhungyee"},"content":"        if (longAlphabetIsPresent) {","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"sumhungyee"},"content":"            dateString \u003d dateString.replaceFirst(\"[a-zA-Z]{4,}\", LONG_FORMATS.getMonth());","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"sumhungyee"},"content":"            dateString \u003d dateString.replaceFirst(\"\\\\d{4}\", LONG_FORMATS.getYear());","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"sumhungyee"},"content":"            dateString \u003d dateString.replaceFirst(\"\\\\d{2}\", LONG_FORMATS.getDay());","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"sumhungyee"},"content":"        } else if (alphabetIsPresent) {","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"sumhungyee"},"content":"            dateString \u003d dateString.replaceFirst(\"[a-zA-Z]{3}\", SHORT_FORMATS.getMonth());","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"sumhungyee"},"content":"            dateString \u003d dateString.replaceFirst(\"\\\\d{4}\", SHORT_FORMATS.getYear());","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"sumhungyee"},"content":"            dateString \u003d dateString.replaceFirst(\"\\\\d{2}\", SHORT_FORMATS.getDay());","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"sumhungyee"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"sumhungyee"},"content":"            dateString \u003d dateString.replaceFirst(\"\\\\d{4}\", NUM_FORMATS.getYear());","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"sumhungyee"},"content":"            dateString \u003d dateString.replaceFirst(\"\\\\d{2}\", NUM_FORMATS.getMonth());","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"sumhungyee"},"content":"            dateString \u003d dateString.replaceFirst(\"\\\\d{2}\", NUM_FORMATS.getDay());","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"sumhungyee"},"content":"        DateTimeFormatterBuilder builder \u003d new DateTimeFormatterBuilder();","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"sumhungyee"},"content":"        builder \u003d builder.parseCaseInsensitive();","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"sumhungyee"},"content":"        builder.parseCaseInsensitive();","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"sumhungyee"},"content":"        builder.appendPattern(dateString);","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"sumhungyee"},"content":"        DateTimeFormatter format \u003d builder.toFormatter()","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"sumhungyee"},"content":"                .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"sumhungyee"},"content":"        return format;","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"markusyeo"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"markusyeo"},"content":"                \u0026\u0026 value.equals(((Date) other).value)); // state check","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markusyeo":12,"valerietanhx":4,"sumhungyee":87,"-":31}},{"path":"src/main/java/seedu/dengue/model/person/DateFormat.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sumhungyee"},"content":"package seedu.dengue.model.person;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"sumhungyee"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":" * A class that represents possible formats of date components,","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":" * such as MMM for month, or MM.","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"public class DateFormat {","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":"    private final String day;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"    private final String month;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":"    private final String year;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":"    DateFormat(String year, String month, String day) {","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":"        this.day \u003d day;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"sumhungyee"},"content":"        this.month \u003d month;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"sumhungyee"},"content":"        this.year \u003d year;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"sumhungyee"},"content":"    public String getDay() {","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"        return this.day;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"sumhungyee"},"content":"    public String getMonth() {","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"sumhungyee"},"content":"        return this.month;","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"    public String getYear() {","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"sumhungyee"},"content":"        return this.year;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"sumhungyee":28}},{"path":"src/main/java/seedu/dengue/model/person/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package seedu.dengue.model.person;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":" * Represents the locations that each postal sector maps to.","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"public enum Location {","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"    DIST01(\"[01 02 03 04 05 06]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"            \"Raffles Place, Cecil, Marina, People\u0027s Park\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"    DIST02(\"[07 08]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"            \"Anson, Tanjong Pagar\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"    DIST03(\"[14 15 16]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"            \"Queenstown, Tiong Bahru\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"    DIST04(\"[09 10]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"            \"Telok Blangah, Harbourfront\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    DIST05(\"[11 12 13]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"            \"Pasir Panjang, Hong Leong Garden, Clementi New Town\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    DIST06(\"[17]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"            \"High Street, Beach Road (part)\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"    DIST07(\"[18 19]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"            \"Middle Road, Golden Mile\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"    DIST08(\"[20 21]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"            \"Little India\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"    DIST09(\"[22 23]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"            \"Orchard, Cairnhill, River Valley\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"    DIST10(\"[24 25 26 27]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"            \"Ardmore, Bukit Timah, Holland Road, Tanglin\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"    DIST11(\"[28 29 30]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"            \"Watten Estate, Novena, Thomson\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"    DIST12(\"[31 32 33]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"            \"Balestier, Toa Payoh, Serangoon\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"    DIST13(\"[34 35 36 37]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"            \"Macpherson, Braddell\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"    DIST14(\"[38 39 40 41]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"            \"Geylang, Eunos\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"    DIST15(\"[42 43 44 45]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"            \"Katong, Joo Chiat, Amber Road\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"    DIST16(\"[46 47 48]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"            \"Bedok, Upper East Coast, Eastwood, Kew Drive\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"    DIST17(\"[49 50 81]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"            \"Loyang, Changi\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"    DIST18(\"[51 52]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"            \"Tampines, Pasir Ris\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"    DIST19(\"[53 54 55 82]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"            \"Serangoon Garden, Hougang, Punggol\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"    DIST20(\"[56 57]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"            \"Bishan, Ang Mo Kio\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"    DIST21(\"[58 59]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"            \"Upper Bukit Timah, Clementi Park, Ulu Pandan\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"    DIST22(\"[60 61 62 63 64]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"            \"Jurong\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"    DIST23(\"[65 66 67 68]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"            \"Hillview, Dairy Farm, Bukit Panjang, Choa Chu Kang\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"    DIST24(\"[69 70 71]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"            \"Lim Chu Kang, Tengah\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"    DIST25(\"[72 73]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"            \"Kranji, Woodgrove\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"    DIST26(\"[77 78]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"            \"Upper Thomson, Springleaf\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"    DIST27(\"[75 76]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"            \"Yishun, Sembawang\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"    DIST28(\"[79 80]\",","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"            \"Seletar\");","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"    private final String postalSectors;","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"valerietanhx"},"content":"    private final String location;","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"axmszr"},"content":"    Location(String postalSectors, String location) {","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"        this.postalSectors \u003d postalSectors;","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"valerietanhx"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"valerietanhx"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"valerietanhx"},"content":"    public String toString() {","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"axmszr"},"content":"        return postalSectors + \", \" + location;","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"axmszr":60,"valerietanhx":17}},{"path":"src/main/java/seedu/dengue/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":" * Represents a Person\u0027s name in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markusyeo":3,"-":54}},{"path":"src/main/java/seedu/dengue/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.bean.CsvCustomBindByName;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.csvutil.AgeConverter;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.csvutil.DateConverter;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.csvutil.NameConverter;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.csvutil.PostalConverter;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.csvutil.VariantsConverter;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":" * Represents a Person in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"    @CsvCustomBindByName(column \u003d \"Patient Name\", converter \u003d NameConverter.class)","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"    private Name name;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"    @CsvCustomBindByName(column \u003d \"Postal Code\", converter \u003d PostalConverter.class)","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"    private Postal postal;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"    @CsvCustomBindByName(column \u003d \"Date\", converter \u003d DateConverter.class)","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"    private Date date;","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"    @CsvCustomBindByName(column \u003d \"Age\", converter \u003d AgeConverter.class)","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"    private Age age;","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"    @CsvCustomBindByName(column \u003d \"Variants\", converter \u003d VariantsConverter.class)","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"    private Set\u003cVariant\u003e variants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"    public Person() {}","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"    public Person(Name name, Postal postal, Date date, Age age, Set\u003cVariant\u003e variants) {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"        requireAllNonNull(name, postal, date, age, variants);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"sumhungyee"},"content":"        this.postal \u003d postal;","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"markusyeo"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"markusyeo"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"        this.variants.addAll(variants);","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"sumhungyee"},"content":"    public Postal getPostal() {","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"sumhungyee"},"content":"        return postal;","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"markusyeo"},"content":"    public Date getDate() {","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"markusyeo"},"content":"        return date;","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"markusyeo"},"content":"    public Age getAge() {","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"markusyeo"},"content":"        return age;","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"sumhungyee"},"content":"    public Person getCopy() {","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"sumhungyee"},"content":"        return new Person(this.name, this.postal, this.date, this.age, this.variants);","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"axmszr"},"content":"     * Returns an immutable variant set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"axmszr"},"content":"    public Set\u003cVariant\u003e getVariants() {","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"axmszr"},"content":"        return Collections.unmodifiableSet(variants);","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"sumhungyee"},"content":"        boolean isSame;","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"sumhungyee"},"content":"        } else if (otherPerson \u003d\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"sumhungyee"},"content":"            return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"sumhungyee"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"sumhungyee"},"content":"            boolean hasSameName \u003d otherPerson.getName().equals(getName());","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"sumhungyee"},"content":"            boolean hasSameAge \u003d otherPerson.getAge().equals(getAge());","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"sumhungyee"},"content":"            boolean hasSamePostal \u003d otherPerson.getPostal().equals(getPostal());","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"sumhungyee"},"content":"            isSame \u003d hasSameAge \u0026\u0026 hasSameName \u0026\u0026 hasSamePostal;","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"sumhungyee"},"content":"            return isSame;","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"sumhungyee"},"content":"                \u0026\u0026 otherPerson.getPostal().equals(getPostal())","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"markusyeo"},"content":"                \u0026\u0026 otherPerson.getDate().equals(getDate())","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"markusyeo"},"content":"                \u0026\u0026 otherPerson.getAge().equals(getAge())","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"axmszr"},"content":"                \u0026\u0026 otherPerson.getVariants().equals(getVariants());","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"markusyeo"},"content":"     * Returns an array of Strings representing the fields of this Person object formatted as a CSV string.","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"markusyeo"},"content":"     * The string array is generated in the following order: name, age, date, postal, and variants.","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"markusyeo"},"content":"     * @return A String[] representing the fields of this Person formatted as a CSV string","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"markusyeo"},"content":"    public String[] toCsvString() {","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"markusyeo"},"content":"        ArrayList\u003cString\u003e result \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"markusyeo"},"content":"        result.add(this.name.toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"markusyeo"},"content":"        result.add(this.age.toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"markusyeo"},"content":"        result.add(this.date.toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"markusyeo"},"content":"        result.add(this.postal.toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"markusyeo"},"content":"        Set\u003cVariant\u003e variantSet \u003d getVariants();","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"markusyeo"},"content":"        StringBuilder builder \u003d new StringBuilder(\"[\");","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"markusyeo"},"content":"        if (!variantSet.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"markusyeo"},"content":"            builder.append(variantSet.stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"markusyeo"},"content":"                    .map(Variant::toString)","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"markusyeo"},"content":"                    .collect(Collectors.joining(\", \")));","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"markusyeo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"markusyeo"},"content":"        builder.append(\"]\");","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"markusyeo"},"content":"        result.add(builder.toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"markusyeo"},"content":"        String[] csvString \u003d new String[5];","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"markusyeo"},"content":"        return result.toArray(csvString);","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"axmszr"},"content":"        return Objects.hash(name, postal, date, age, variants);","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"sumhungyee"},"content":"                .append(\"; Postal: \")","lastModifiedDate":"2023-02-28"},{"lineNumber":159,"author":{"gitId":"sumhungyee"},"content":"                .append(getPostal())","lastModifiedDate":"2023-02-28"},{"lineNumber":160,"author":{"gitId":"markusyeo"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2023-03-04"},{"lineNumber":161,"author":{"gitId":"markusyeo"},"content":"                .append(getDate())","lastModifiedDate":"2023-03-04"},{"lineNumber":162,"author":{"gitId":"markusyeo"},"content":"                .append(\"; Age: \")","lastModifiedDate":"2023-03-04"},{"lineNumber":163,"author":{"gitId":"markusyeo"},"content":"                .append(getAge());","lastModifiedDate":"2023-03-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":165,"author":{"gitId":"axmszr"},"content":"        Set\u003cVariant\u003e variantSet \u003d getVariants();","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"axmszr"},"content":"        if (!variantSet.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"axmszr"},"content":"            builder.append(\"; Variants: \");","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"axmszr"},"content":"            variantSet.forEach(builder::append);","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markusyeo":61,"axmszr":12,"sumhungyee":21,"-":78}},{"path":"src/main/java/seedu/dengue/model/person/Postal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"sumhungyee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":" * Represents a Person\u0027s postal number in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPostal(String)}","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":"public class Postal {","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"            \"Postal codes should only contain numbers or start with S, and it must be 6 digits long,\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"                    + \" beginning with a valid two-digit postal sector.\";","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"sumhungyee"},"content":"    public static final String VALIDATION_REGEX \u003d \"[Ss]?\\\\d{6}\";","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALIDATION_REGEX_FOR_SUB_POSTAL \u003d \"[Ss]?\\\\d{1,6}\";","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"sumhungyee"},"content":"    public final String value;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"sumhungyee"},"content":"     * Constructs a {@code Postal}.","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"     * @param postal A valid postal code.","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"    public Postal(String postal) {","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"        requireNonNull(postal);","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"        checkArgument(isValidPostal(postal), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"sumhungyee"},"content":"        value \u003d formatPostal(postal);","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"sumhungyee"},"content":"     * Formats a postal code to be in the form \"^S\\\\d{6}$\"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"sumhungyee"},"content":"     * @param string Postal code to format.","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"sumhungyee"},"content":"     * @return A formatted postal code.","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"sumhungyee"},"content":"    public String formatPostal(String string) {","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"sumhungyee"},"content":"        boolean hasStart \u003d string.substring(0, 1).toUpperCase().equals(\"S\");","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"sumhungyee"},"content":"        if (hasStart) {","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"sumhungyee"},"content":"            return string.toUpperCase();","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"sumhungyee"},"content":"        } else {","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"sumhungyee"},"content":"            return \"S\" + string;","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"     * Returns true if a given string is a valid postal code.","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"sumhungyee"},"content":"    public static boolean isValidPostal(String test) {","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"valerietanhx"},"content":"        if (test.length() \u003c 6) {","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"valerietanhx"},"content":"            return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"valerietanhx"},"content":"        String postalSector \u003d extractPostalSector(test);","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"valerietanhx"},"content":"        try { // check valid postal sector","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"valerietanhx"},"content":"            PostalSector.valueOf(\"SECTOR\" + postalSector);","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"valerietanhx"},"content":"        } catch (IllegalArgumentException ex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"valerietanhx"},"content":"            return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"sumhungyee"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"valerietanhx"},"content":"    private static String extractPostalSector(String postal) {","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"valerietanhx"},"content":"        return postal.toUpperCase().startsWith(\"S\") ? postal.substring(1, 3) : postal.substring(0, 2);","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"     * Returns the {@code PostalSector} corresponding to the postal code.","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"axmszr"},"content":"     * @return The corresponding {@code PostalSector}.","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"    public PostalSector getPostalSector() {","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"axmszr"},"content":"        assert isValidPostal(value);","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"axmszr"},"content":"        String postalSector \u003d extractPostalSector(value);","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"axmszr"},"content":"        return PostalSector.valueOf(\"SECTOR\" + postalSector);","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"sumhungyee"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"sumhungyee"},"content":"    public String toString() {","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"sumhungyee"},"content":"        return value;","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"sumhungyee"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"sumhungyee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"sumhungyee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"sumhungyee"},"content":"                || (other instanceof Postal // instanceof handles nulls","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"sumhungyee"},"content":"                \u0026\u0026 value.equals(((Postal) other).value)); // state check","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"sumhungyee"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"sumhungyee"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"sumhungyee"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"sumhungyee"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Tohtoroo":1,"markusyeo":3,"axmszr":12,"valerietanhx":17,"sumhungyee":58}},{"path":"src/main/java/seedu/dengue/model/person/PostalLocationMapping.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package seedu.dengue.model.person;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"//@@author valerietanhx","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":" * A mapping of postal sectors to locations.","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"public class PostalLocationMapping {","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"    private static final HashMap\u003cPostalSector, Location\u003e POSTAL_LOCATION_MAPPING \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"    static {","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR01, Location.DIST01);","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR02, Location.DIST01);","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR03, Location.DIST01);","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR04, Location.DIST01);","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR05, Location.DIST01);","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR06, Location.DIST01);","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR07, Location.DIST02);","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR08, Location.DIST02);","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR14, Location.DIST03);","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR15, Location.DIST03);","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR16, Location.DIST03);","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR09, Location.DIST04);","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR10, Location.DIST04);","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR11, Location.DIST05);","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR12, Location.DIST05);","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR13, Location.DIST05);","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR17, Location.DIST06);","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR18, Location.DIST07);","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR19, Location.DIST07);","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR20, Location.DIST08);","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR21, Location.DIST08);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR22, Location.DIST09);","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR23, Location.DIST09);","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR24, Location.DIST10);","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR25, Location.DIST10);","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR26, Location.DIST10);","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR27, Location.DIST10);","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR28, Location.DIST11);","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR29, Location.DIST11);","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR30, Location.DIST11);","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR31, Location.DIST12);","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR32, Location.DIST12);","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR33, Location.DIST12);","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR34, Location.DIST13);","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR35, Location.DIST13);","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR36, Location.DIST13);","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR37, Location.DIST13);","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR38, Location.DIST14);","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR39, Location.DIST14);","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR40, Location.DIST14);","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR41, Location.DIST14);","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR42, Location.DIST15);","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR43, Location.DIST15);","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR44, Location.DIST15);","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR45, Location.DIST15);","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR46, Location.DIST16);","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR47, Location.DIST16);","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR48, Location.DIST16);","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR49, Location.DIST17);","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR50, Location.DIST17);","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR81, Location.DIST17);","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR51, Location.DIST18);","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR52, Location.DIST18);","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR53, Location.DIST19);","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR54, Location.DIST19);","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR55, Location.DIST19);","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR82, Location.DIST19);","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR56, Location.DIST20);","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR57, Location.DIST20);","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR58, Location.DIST21);","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR59, Location.DIST21);","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR60, Location.DIST22);","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR61, Location.DIST22);","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR62, Location.DIST22);","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR63, Location.DIST22);","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR64, Location.DIST22);","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR65, Location.DIST23);","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR66, Location.DIST23);","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR67, Location.DIST23);","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR68, Location.DIST23);","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR69, Location.DIST24);","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR70, Location.DIST24);","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR71, Location.DIST24);","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR72, Location.DIST25);","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR73, Location.DIST25);","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR77, Location.DIST26);","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR78, Location.DIST26);","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR75, Location.DIST27);","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR76, Location.DIST27);","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR79, Location.DIST28);","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"valerietanhx"},"content":"        POSTAL_LOCATION_MAPPING.put(PostalSector.SECTOR80, Location.DIST28);","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"axmszr"},"content":"    //@@author axmszr","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"axmszr"},"content":"     * Maps the given {@code PostalSector} to its matching {@code Location}.","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"axmszr"},"content":"     * @param postalSector The postal sector to map.","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"axmszr"},"content":"     * @return The corresponding location.","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"axmszr"},"content":"    public static Location getLocation(PostalSector postalSector) {","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"axmszr"},"content":"        return POSTAL_LOCATION_MAPPING.get(postalSector);","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"axmszr"},"content":"     * Maps the given {@code Postal} to its matching {@code Location}.","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"axmszr"},"content":"     * @param postal The postal code to map.","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"axmszr"},"content":"     * @return The corresponding location.","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"axmszr"},"content":"    public static Location getLocation(Postal postal) {","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"axmszr"},"content":"        PostalSector postalSector \u003d postal.getPostalSector();","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"axmszr"},"content":"        return getLocation(postalSector);","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"axmszr":22,"valerietanhx":121}},{"path":"src/main/java/seedu/dengue/model/person/PostalSector.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package seedu.dengue.model.person;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":" * Represents the first two digits of a postal code.","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"public enum PostalSector {","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"    SECTOR01(\"01\"), SECTOR02(\"02\"), SECTOR03(\"03\"), SECTOR04(\"04\"), SECTOR05(\"05\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"    SECTOR06(\"06\"), SECTOR07(\"07\"), SECTOR08(\"08\"), SECTOR09(\"09\"), SECTOR10(\"10\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"    SECTOR11(\"11\"), SECTOR12(\"12\"), SECTOR13(\"13\"), SECTOR14(\"14\"), SECTOR15(\"15\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"    SECTOR16(\"16\"), SECTOR17(\"17\"), SECTOR18(\"18\"), SECTOR19(\"19\"), SECTOR20(\"20\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"    SECTOR21(\"21\"), SECTOR22(\"22\"), SECTOR23(\"23\"), SECTOR24(\"24\"), SECTOR25(\"25\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"    SECTOR26(\"26\"), SECTOR27(\"27\"), SECTOR28(\"28\"), SECTOR29(\"29\"), SECTOR30(\"30\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"    SECTOR31(\"31\"), SECTOR32(\"32\"), SECTOR33(\"33\"), SECTOR34(\"34\"), SECTOR35(\"35\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"    SECTOR36(\"36\"), SECTOR37(\"37\"), SECTOR38(\"38\"), SECTOR39(\"39\"), SECTOR40(\"40\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"    SECTOR41(\"41\"), SECTOR42(\"42\"), SECTOR43(\"43\"), SECTOR44(\"44\"), SECTOR45(\"45\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"    SECTOR46(\"46\"), SECTOR47(\"47\"), SECTOR48(\"48\"), SECTOR49(\"49\"), SECTOR50(\"50\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"    SECTOR51(\"51\"), SECTOR52(\"52\"), SECTOR53(\"53\"), SECTOR54(\"54\"), SECTOR55(\"55\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    SECTOR56(\"56\"), SECTOR57(\"57\"), SECTOR58(\"58\"), SECTOR59(\"59\"), SECTOR60(\"60\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"    SECTOR61(\"61\"), SECTOR62(\"62\"), SECTOR63(\"63\"), SECTOR64(\"64\"), SECTOR65(\"65\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"    SECTOR66(\"66\"), SECTOR67(\"67\"), SECTOR68(\"68\"), SECTOR69(\"69\"), SECTOR70(\"70\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"    SECTOR71(\"71\"), SECTOR72(\"72\"), SECTOR73(\"73\"), SECTOR74(\"74\"), SECTOR75(\"75\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"    SECTOR76(\"76\"), SECTOR77(\"77\"), SECTOR78(\"78\"), SECTOR79(\"89\"), SECTOR80(\"80\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"    SECTOR81(\"81\"), SECTOR82(\"82\");","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"    private final String postalSector;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"    PostalSector(String postalSector) {","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"        this.postalSector \u003d postalSector;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"    public String toString() {","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"valerietanhx"},"content":"        return postalSector;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"axmszr":1,"valerietanhx":35}},{"path":"src/main/java/seedu/dengue/model/person/SubPostal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package seedu.dengue.model.person;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":" * Represents a Person\u0027s subpostal number in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":" * The subpostal number is a valid substring of a postal number.","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"public class SubPostal {","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"            \"Postal codes for find should only contain numbers or start with S or s, and be at least 1 digit long\";","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALIDATION_REGEX_FOR_SUB_POSTAL \u003d \"[Ss]?\\\\d{1,6}\";","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"    public final String value;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"     * Constructs a {@code SubPostal}.","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"     * @param subPostal A valid subpostal code.","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"    public SubPostal(String subPostal) {","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"        requireNonNull(subPostal);","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"        checkArgument(isValidSubPostal(subPostal), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"        value \u003d formatSubPostal(subPostal);","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"     * Returns true if a given string is a valid substring of a postal code.","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"    public static boolean isValidSubPostal(String test) {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"        return test.matches(VALIDATION_REGEX_FOR_SUB_POSTAL);","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"     * Formats the subpostal such that it also contains the s.","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"     * @param string","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"     * @return","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"    public String formatSubPostal(String string) {","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"        boolean hasStart \u003d string.substring(0, 1).toUpperCase().equals(\"S\");","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"        if (hasStart) {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"            return string.toUpperCase();","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"            return \"S\" + string;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Tohtoroo":45,"sumhungyee":2}},{"path":"src/main/java/seedu/dengue/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":" * updating of persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":" * or updated is unique in terms of identity in the UniquePersonList. However, the removal of a person uses","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":" * Person#equals(Object) so as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":99,"author":{"gitId":"sumhungyee"},"content":"        this.internalList.setAll(List.copyOf(persons));","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"markusyeo":8,"sumhungyee":3,"-":129}},{"path":"src/main/java/seedu/dengue/model/person/csvutil/AgeConverter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person.csvutil;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.bean.AbstractBeanField;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvConstraintViolationException;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvDataTypeMismatchException;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":" * This class represents a converter for ages in CSV data. It extends","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":" * AbstractBeanField to implement the required functionality for converting","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":" * CSV data to Java objects.","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"public class AgeConverter extends AbstractBeanField {","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"     * Converts a string value representing an age to an Age object.","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"     * @param value the string value representing the age to convert","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"     * @return an Age object representing the converted age","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"     * @throws CsvDataTypeMismatchException if the value cannot be converted to an Age object","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"     * @throws CsvConstraintViolationException if the converted value violates any constraints","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"    protected Object convert(String value) throws CsvDataTypeMismatchException, CsvConstraintViolationException {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"            Age age \u003d ParserUtil.parseAge(value);","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"            return age;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"            throw new CsvDataTypeMismatchException(e.getMessage());","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"markusyeo":34}},{"path":"src/main/java/seedu/dengue/model/person/csvutil/DateConverter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person.csvutil;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.bean.AbstractBeanField;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvConstraintViolationException;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvDataTypeMismatchException;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":" * This class represents a converter for dates in CSV data. It extends","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":" * AbstractBeanField to implement the required functionality for converting","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":" * CSV data to Java objects.","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"public class DateConverter extends AbstractBeanField {","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"     * Converts a string value representing a date to a Date object.","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"     * @param value the string value representing the date to convert","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"     * @return a Date object representing the converted date","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"     * @throws CsvDataTypeMismatchException if the value cannot be converted to a Date object","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"     * @throws CsvConstraintViolationException if the converted value violates any constraints","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"    protected Object convert(String value) throws CsvDataTypeMismatchException, CsvConstraintViolationException {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"            Date date \u003d ParserUtil.parseDate(value);","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"            return date;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"            throw new CsvDataTypeMismatchException(e.getMessage());","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"markusyeo":34}},{"path":"src/main/java/seedu/dengue/model/person/csvutil/NameConverter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person.csvutil;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.bean.AbstractBeanField;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvConstraintViolationException;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvDataTypeMismatchException;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":" * This class represents a converter for names in CSV data. It extends","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":" * AbstractBeanField to implement the required functionality for converting","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":" * CSV data to Java objects.","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"public class NameConverter extends AbstractBeanField {","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"     * Converts a string value representing a name to a Name object.","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"     * @param value the string value representing the name to convert","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"     * @return a Name object representing the converted name","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"     * @throws CsvDataTypeMismatchException if the value cannot be converted to a Name object","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"     * @throws CsvConstraintViolationException if the converted value violates any constraints","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"    protected Object convert(String value) throws CsvDataTypeMismatchException, CsvConstraintViolationException {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"            Name name \u003d ParserUtil.parseName(value);","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"            return name;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"            throw new CsvDataTypeMismatchException(e.getMessage());","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"markusyeo":34}},{"path":"src/main/java/seedu/dengue/model/person/csvutil/PostalConverter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person.csvutil;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.bean.AbstractBeanField;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvConstraintViolationException;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvDataTypeMismatchException;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Postal;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":" * This class represents a converter for postal codes in CSV data. It extends","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":" * AbstractBeanField to implement the required functionality for converting","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":" * CSV data to Java objects.","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"public class PostalConverter extends AbstractBeanField {","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"     * Converts a string value representing a postal code to a Postal object.","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"     * @param value the string value representing the postal code to convert","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"     * @return a Postal object representing the converted postal code","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"     * @throws CsvDataTypeMismatchException if the value cannot be converted to a Postal object","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"     * @throws CsvConstraintViolationException if the converted value violates any constraints","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"    protected Object convert(String value) throws CsvDataTypeMismatchException, CsvConstraintViolationException {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"            Postal postal \u003d ParserUtil.parsePostal(value);","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"            return postal;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"            throw new CsvDataTypeMismatchException(e.getMessage());","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"markusyeo":34}},{"path":"src/main/java/seedu/dengue/model/person/csvutil/VariantsConverter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person.csvutil;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.bean.AbstractBeanField;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvConstraintViolationException;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvDataTypeMismatchException;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":" * This class represents a converter for dengue variants in CSV data. It extends","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":" * AbstractBeanField to implement the required functionality for converting","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":" * CSV data to Java objects.","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"public class VariantsConverter extends AbstractBeanField {","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"     * Converts a string value representing the variants to a Set of Variant objects.","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"     * @param value the string value representing the variants to convert","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"     * @return a Set of Variants object representing the converted variants","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"     * @throws CsvDataTypeMismatchException if the value cannot be converted to a Set of Variants","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"     * @throws CsvConstraintViolationException if the converted value violates any constraints","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"    protected Object convert(String value) throws CsvDataTypeMismatchException, CsvConstraintViolationException {","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"        if (value.equals(\"[]\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"            return new HashSet\u003cVariant\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"        String[] v \u003d value.replaceAll(\"\\\\[|\\\\]\", \"\").split(\", \");","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"        Collection\u003cString\u003e variants \u003d Arrays.asList(v);","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"        if (!variants.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"            try {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"                Set\u003cVariant\u003e variantSet \u003d ParserUtil.parseVariants(variants);","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"                return variantSet;","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"markusyeo"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"markusyeo"},"content":"                throw new CsvDataTypeMismatchException(e.getMessage());","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"markusyeo"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"markusyeo"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"markusyeo"},"content":"            return new HashSet\u003cVariant\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"markusyeo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"markusyeo"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"markusyeo":48}},{"path":"src/main/java/seedu/dengue/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person.exceptions;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"markusyeo":1,"-":10}},{"path":"src/main/java/seedu/dengue/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person.exceptions;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"markusyeo":1,"-":5}},{"path":"src/main/java/seedu/dengue/model/predicate/FindPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package seedu.dengue.model.predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.SubPostal;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.Range;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"public class FindPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"    private final Optional\u003cName\u003e name;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"    private final Optional\u003cSubPostal\u003e subPostal;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"    private final Optional\u003cAge\u003e age;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"    private final Optional\u003cDate\u003e date;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"    private final Set\u003cVariant\u003e variants;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"    private final Range\u003cDate\u003e dateRange;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"    private final Range\u003cAge\u003e ageRange;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"     * A class that represents the predicate which is used to filter through the persons list to test for whether","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"     * the person belongs to the filtered list.","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"     * @param name","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"     * @param subPostal","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"     * @param age","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"     * @param date","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"     * @param variants","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"     * @param dateRange","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"     * @param ageRange","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"    public FindPredicate(Optional\u003cName\u003e name, Optional\u003cSubPostal\u003e subPostal, Optional\u003cAge\u003e age, Optional\u003cDate\u003e date,","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"                         Set\u003cVariant\u003e variants, Range\u003cDate\u003e dateRange, Range\u003cAge\u003e ageRange) {","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"        this.subPostal \u003d subPostal;","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"        this.variants \u003d variants;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"        this.dateRange \u003d dateRange;","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"        this.ageRange \u003d ageRange;","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"        boolean containsName \u003d new PersonContainsNamePredicate(name).test(person);","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"Tohtoroo"},"content":"        boolean containsPostal \u003d new PersonContainsPostalPredicate(subPostal).test(person);","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"Tohtoroo"},"content":"        boolean containsAge \u003d new PersonContainsAgePredicate(age).test(person);","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"Tohtoroo"},"content":"        boolean containsDate \u003d new PersonContainsDatePredicate(date).test(person);","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"Tohtoroo"},"content":"        boolean containsVariants \u003d new PersonContainsVariantsPredicate(variants).test(person);","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"Tohtoroo"},"content":"        boolean containsDateRange \u003d new RangeContainsPersonPredicate(dateRange).test(person);","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Tohtoroo"},"content":"        boolean containsAgeRange \u003d new RangeContainsPersonPredicate(ageRange).test(person);","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Tohtoroo"},"content":"        return containsName \u0026\u0026 containsPostal \u0026\u0026 containsAge \u0026\u0026 containsDate \u0026\u0026 containsVariants","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Tohtoroo"},"content":"                \u0026\u0026 containsAgeRange \u0026\u0026 containsDateRange;","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Tohtoroo":62}},{"path":"src/main/java/seedu/dengue/model/predicate/PersonContainsAgePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package seedu.dengue.model.predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":" * Represents the predicate which tests for whether the person in the persons list is of the age based","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":" * on the user input.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"public class PersonContainsAgePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"    private final Optional\u003cAge\u003e age;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"    public PersonContainsAgePredicate(Optional\u003cAge\u003e age) {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"        if (age.isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"            return person.getAge().equals(age.get());","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"            return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Tohtoroo":29}},{"path":"src/main/java/seedu/dengue/model/predicate/PersonContainsDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package seedu.dengue.model.predicate;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":" * Represents the predicate which tests for whether the person in the persons list is reported on the","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":" * date based on the user input.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"public class PersonContainsDatePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"    private final Optional\u003cDate\u003e date;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"    public PersonContainsDatePredicate(Optional\u003cDate\u003e date) {","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"        if (date.isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"            Date d \u003d date.get();","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"            return person.getDate().equals(d);","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"        return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Tohtoroo":12,"valerietanhx":16}},{"path":"src/main/java/seedu/dengue/model/predicate/PersonContainsNamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package seedu.dengue.model.predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.commons.util.StringUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":" * Represents the predicate which tests for whether the person in the persons list has a valid substring of","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":" * the name given in the user input.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"public class PersonContainsNamePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"    private final Optional\u003cName\u003e name;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"    public PersonContainsNamePredicate(Optional\u003cName\u003e name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"        if (name.isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"            Predicate\u003cString\u003e containsName \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"                    keyword -\u003e StringUtil.containsSubstringWithLengthMoreThanOneIgnoreCase(","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"                            person.getName().fullName, keyword);","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"            return containsName.test(name.get().fullName);","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"            return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"Tohtoroo":33}},{"path":"src/main/java/seedu/dengue/model/predicate/PersonContainsPostalPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package seedu.dengue.model.predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.commons.util.StringUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.SubPostal;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":" * Represents the predicate which tests for whether the person in the persons list has a valid subpostal based","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":" * on the subpostal made using the user input.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"public class PersonContainsPostalPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"    private final Optional\u003cSubPostal\u003e subPostal;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"    public PersonContainsPostalPredicate(Optional\u003cSubPostal\u003e subPostal) {","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"        this.subPostal \u003d subPostal;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"        if (subPostal.isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"            Predicate\u003cString\u003e containsPostal \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"                    keyword -\u003e StringUtil.containsSubstringIgnoreCase(person.getPostal().value,","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"                            keyword);","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"            return containsPostal.test(subPostal.get().value);","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"            return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"Tohtoroo":33}},{"path":"src/main/java/seedu/dengue/model/predicate/PersonContainsVariantsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package seedu.dengue.model.predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":" * Represents the predicate which tests for whether the person in the persons list has a valid variant based","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":" * on the variant made using the user input.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"public class PersonContainsVariantsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"    private final Set\u003cVariant\u003e variants;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"    public PersonContainsVariantsPredicate(Set\u003cVariant\u003e variants) {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"        this.variants \u003d variants;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"        if (person.getVariants().containsAll(variants)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"            return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"        return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Tohtoroo":27}},{"path":"src/main/java/seedu/dengue/model/predicate/PredicateUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package seedu.dengue.model.predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Postal;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.SubPostal;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":" * Contains utility methods used for checking string validity in the various Predicate classes.","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"public class PredicateUtil {","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"     * Checks for whether the {@code String name} is valid.","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"     * Leading and trailing whitespaces will be trimmed from the {@code String name}.","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"    public static boolean isNameValid(String name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"        return Name.isValidName(trimmedName);","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"     * Checks for whether the {@code String postal} is valid.","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"     * Leading and trailing whitespaces will be trimmed from the {@code String postal}.","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"    public static boolean isPostalValid(String postal) {","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"        requireNonNull(postal);","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"        String trimmedPostal \u003d postal.trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"        return Postal.isValidPostal(trimmedPostal);","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"     * Checks for whether the {@code String subPostal} is valid.","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"     * Leading and trailing whitespaces will be trimmed from the {@code String subPostal}.","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"    public static boolean isSubPostalValid(String subPostal) {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"        requireNonNull(subPostal);","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"        String trimmedSubPostal \u003d subPostal.trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"        return SubPostal.isValidSubPostal(trimmedSubPostal);","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"     * Checks for whether the {@code String age} is valid.","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"     * Leading and trailing whitespaces will be trimmed from the {@code String age}.","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"    public static boolean isAgeValid(String age) {","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"Tohtoroo"},"content":"        requireNonNull(age);","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"Tohtoroo"},"content":"        String trimmedAge \u003d age.trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"Tohtoroo"},"content":"        return Age.isValidAge(trimmedAge);","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"Tohtoroo"},"content":"     * Checks for whether the {@code String date} is valid.","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"Tohtoroo"},"content":"     * Leading and trailing whitespaces will be trimmed from the {@code String date}.","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"Tohtoroo"},"content":"    public static boolean isDateValid(String date) {","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"Tohtoroo"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"Tohtoroo"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"Tohtoroo"},"content":"        return Date.isValidDate(trimmedDate);","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"Tohtoroo"},"content":"     * Checks for whether the {@code String variant} is valid.","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"Tohtoroo"},"content":"     * Leading and trailing whitespaces will be trimmed from the {@code String variant}.","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"Tohtoroo"},"content":"    public static boolean isVariantValid(String variant) {","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"Tohtoroo"},"content":"        requireNonNull(variant);","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"Tohtoroo"},"content":"        String trimmedVariant \u003d variant.trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"Tohtoroo"},"content":"        return Variant.isValidVariantName(trimmedVariant);","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Tohtoroo":77}},{"path":"src/main/java/seedu/dengue/model/predicate/RangeContainsPersonPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package seedu.dengue.model.predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.range.Range;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":" * Represents the predicate which tests for whether the person in the persons list is reported on the","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":" * range based on the user input.","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"public class RangeContainsPersonPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"    private final Range range;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"    public RangeContainsPersonPredicate(Range range) {","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"        this.range \u003d range;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"        return range.getStart().isBefore(person) \u0026\u0026 range.getEnd().isAfter(person);","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"Tohtoroo":8,"valerietanhx":16}},{"path":"src/main/java/seedu/dengue/model/range/End.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package seedu.dengue.model.range;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":" * Represents the end of a given range","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"public interface End\u003cT\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"    public boolean isAfter(Person p);","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Tohtoroo":3,"valerietanhx":7}},{"path":"src/main/java/seedu/dengue/model/range/EndAge.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package seedu.dengue.model.range;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.logic.comparators.AgeComparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":" * Represents the end of the age in a given range","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"public class EndAge implements End\u003cAge\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"    private static final AgeComparator AGE_COMPARATOR \u003d new AgeComparator();","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"    public final Optional\u003cAge\u003e age;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"     * Constructs an {@code Age}.","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"     * @param age A valid age.","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"    public EndAge(Optional\u003cAge\u003e age) {","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"     * Checks for whether the end value of the age range is after the age of the person.","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"     * @param p A Person.","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"    public boolean isAfter(Person p) {","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"        if (!age.isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"            return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"        return AGE_COMPARATOR.compare(age.get(), p.getAge()) \u003e\u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"     * Checks for whether the start value of the age range is before the given end age.","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"     * @param start A StartAge.","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"    public boolean isAfter(StartAge start) {","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"        if (!age.isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"valerietanhx"},"content":"            return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"valerietanhx"},"content":"        int a1 \u003d Integer.parseInt(age.get().value);","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"valerietanhx"},"content":"        int a2 \u003d Integer.parseInt(start.age.get().value);","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"valerietanhx"},"content":"        return a1 \u003e\u003d a2;","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"Tohtoroo":30,"valerietanhx":21}},{"path":"src/main/java/seedu/dengue/model/range/EndDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package seedu.dengue.model.range;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.logic.comparators.DateComparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":" * Represents the end of the date in a given range","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"public class EndDate implements End\u003cDate\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"    private static final DateComparator DATE_COMPARATOR \u003d new DateComparator();","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"    public final Optional\u003cDate\u003e date;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"     * Constructs an {@code Date}.","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"     * @param date A Date.","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"    public EndDate(Optional\u003cDate\u003e date) {","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"     * Checks for whether the end value of the date range is after the age of the person.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"     * @param p A Person.","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"valerietanhx"},"content":"    public boolean isAfter(Person p) {","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"        if (!date.isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"            return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"        return DATE_COMPARATOR.compare(date.get(), p.getDate()) \u003e\u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"     * Checks for whether the start value of the date range is before the given end date.","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"     * @param start A StartDate.","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"    public boolean isAfter(StartDate start) {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"valerietanhx"},"content":"        if (!date.isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"            return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"valerietanhx"},"content":"        LocalDate d1 \u003d LocalDate.parse(date.get().value);","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"valerietanhx"},"content":"        LocalDate d2 \u003d LocalDate.parse(start.date.get().value);","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"valerietanhx"},"content":"        return d1.compareTo(d2) \u003e\u003d 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"Tohtoroo":30,"valerietanhx":22}},{"path":"src/main/java/seedu/dengue/model/range/Range.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package seedu.dengue.model.range;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":" * Represents a range which can be used to signify age ranges, or date ranges to be used in predicates","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":" * to filter out people in the person list in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"public class Range\u003cT\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"    public final Start\u003cT\u003e start;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"    public final End\u003cT\u003e end;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"     * Constructs a {@code Range}.","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"     * Start and End should form a valid range, i.e. Start \u003c End.","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"valerietanhx"},"content":"     * @param start A Start.","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"valerietanhx"},"content":"     * @param end An End.","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    public Range(Start\u003cT\u003e start, End\u003cT\u003e end) {","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"valerietanhx"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"    public Start\u003cT\u003e getStart() {","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"        return start;","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"valerietanhx"},"content":"    public End\u003cT\u003e getEnd() {","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"        return end;","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Tohtoroo":4,"valerietanhx":27}},{"path":"src/main/java/seedu/dengue/model/range/Start.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"valerietanhx"},"content":"package seedu.dengue.model.range;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":" * Represents the start of a given range","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"public interface Start\u003cT\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"    public boolean isBefore(Person p);","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Tohtoroo":3,"valerietanhx":7}},{"path":"src/main/java/seedu/dengue/model/range/StartAge.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package seedu.dengue.model.range;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":" * Represents the start of the age in a given range","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"public class StartAge implements Start\u003cAge\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"valerietanhx"},"content":"    public final Optional\u003cAge\u003e age;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"     * Constructs an {@code Age}.","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"     * @param age A valid age.","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"    public StartAge(Optional\u003cAge\u003e age) {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"     * Checks for whether the start value of the age range is before the age of the person.","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"     * @param p A Person.","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"    public boolean isBefore(Person p) {","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"        if (!age.isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"            return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"        int a1 \u003d Integer.parseInt(age.get().value);","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"        int a2 \u003d Integer.parseInt(p.getAge().value);","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"        return a1 \u003c\u003d a2;","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"     * Checks for whether the start value of the age range is before the given end age.","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"     * @param end An EndAge.","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"    public boolean isBefore(EndAge end) {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"valerietanhx"},"content":"        if (!age.isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"            return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"valerietanhx"},"content":"        int a1 \u003d Integer.parseInt(age.get().value);","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"valerietanhx"},"content":"        int a2 \u003d Integer.parseInt(end.age.get().value);","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"valerietanhx"},"content":"        return a1 \u003c\u003d a2;","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"Tohtoroo":31,"valerietanhx":21}},{"path":"src/main/java/seedu/dengue/model/range/StartDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Tohtoroo"},"content":"package seedu.dengue.model.range;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":" * Represents the start of the date in a given range","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"public class StartDate implements Start\u003cDate\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"valerietanhx"},"content":"    public final Optional\u003cDate\u003e date;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"     * Constructs an {@code Date}.","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"     * @param date A Date.","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"    public StartDate(Optional\u003cDate\u003e date) {","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"valerietanhx"},"content":"     * Checks for whether the start value of the date range is before the date of the person.","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"     * @param p A Person.","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"valerietanhx"},"content":"    public boolean isBefore(Person p) {","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"        if (!date.isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"            return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"        LocalDate d1 \u003d LocalDate.parse(date.get().value);","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"        LocalDate d2 \u003d LocalDate.parse(p.getDate().value);","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"        return d1.compareTo(d2) \u003c\u003d 0;","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"     * Checks for whether the start value of the date range is before the given end date.","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"     * @param end An EndDate.","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"valerietanhx"},"content":"    public boolean isBefore(EndDate end) {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"valerietanhx"},"content":"        if (!date.isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"            return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"valerietanhx"},"content":"        LocalDate d1 \u003d LocalDate.parse(date.get().value);","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"valerietanhx"},"content":"        LocalDate d2 \u003d LocalDate.parse(end.date.get().value);","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"valerietanhx"},"content":"        return d1.compareTo(d2) \u003c\u003d 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"Tohtoroo":27,"valerietanhx":25}},{"path":"src/main/java/seedu/dengue/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.util;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.DengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ReadOnlyDengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Postal;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":" * Contains utility methods for populating {@code DengueHotspotTracker} with sample data.","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"public class SampleDataUtil {","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"        return new Person[] {","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Postal(\"664388\"), new Date(\"2000-11-11\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"                    new Age(\"111\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"                    getVariantSet(\"DENV1\")),","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"            new Person(new Name(\"Bernice Yu\"), new Postal(\"112727\"), new Date(\"2000-11-11\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"                    new Age(\"11\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"                    getVariantSet(\"DENV2\", \"DENV4\")),","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Postal(\"602283\"), new Date(\"2000-11-11\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"                    new Age(\"0\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"                    getVariantSet(\"DENV3\")),","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"            new Person(new Name(\"David Li\"), new Postal(\"600312\"), new Date(\"2000-11-11\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"sumhungyee"},"content":"                    new Age(\"1\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"                    getVariantSet(\"DENV1\")),","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Postal(\"654921\"), new Date(\"2000-11-11\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"sumhungyee"},"content":"                    new Age(\"199\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"                    getVariantSet(\"DENV2\")),","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Postal(\"666247\"), new Date(\"2000-11-11\"),","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"sumhungyee"},"content":"                    new Age(\"2\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"                    getVariantSet(\"DENV4\"))","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"        };","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"markusyeo"},"content":"    public static ReadOnlyDengueHotspotTracker getSampleDengueHotspotTracker() {","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"markusyeo"},"content":"        DengueHotspotTracker sampleAb \u003d new DengueHotspotTracker();","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"markusyeo"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"markusyeo"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"markusyeo"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"markusyeo"},"content":"        return sampleAb;","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"     * Returns a variant set containing the list of strings given.","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"    public static Set\u003cVariant\u003e getVariantSet(String... strings) {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"markusyeo"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"                .map(Variant::new)","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"markusyeo"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"markusyeo"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"markusyeo":39,"axmszr":17,"sumhungyee":4}},{"path":"src/main/java/seedu/dengue/model/variant/DengueVariant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package seedu.dengue.model.variant;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":" * Dengue variants for tagging.","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"valerietanhx"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"valerietanhx"},"content":"public enum DengueVariant {","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"    DENV1, DENV2, DENV3, DENV4","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"valerietanhx"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"axmszr":2,"valerietanhx":6}},{"path":"src/main/java/seedu/dengue/model/variant/Variant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package seedu.dengue.model.variant;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":" * Represents a Variant in the Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidVariantName(String)}","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"public class Variant {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Variants should be one of the four dengue variants: \"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"            + \"DENV1, DENV2, DENV3, or DENV4.\";","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"    public final DengueVariant variantName;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"     * Constructs a {@code Variant}.","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"     * @param variantName A valid dengue variant name.","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"    public Variant(String variantName) {","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"        requireNonNull(variantName);","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"        checkArgument(isValidVariantName(variantName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"        this.variantName \u003d DengueVariant.valueOf(variantName.toUpperCase());","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"     * Returns true if a given string is a valid dengue variant name.","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"    public static boolean isValidVariantName(String test) {","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"            DengueVariant.valueOf(test.toUpperCase());","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"            return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"        } catch (IllegalArgumentException ex) {","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"            return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"                || (other instanceof Variant // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"                \u0026\u0026 variantName.equals(((Variant) other).variantName)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"        return variantName.hashCode();","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"    public String toString() {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"markusyeo"},"content":"        return variantName.toString();","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Tohtoroo":2,"axmszr":55,"markusyeo":1}},{"path":"src/main/java/seedu/dengue/storage/CsvDengueHotspotStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.storage;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvDataTypeMismatchException;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvRequiredFieldEmptyException;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.LogsCenter;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.util.CsvUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.util.FileUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.DengueHotspotTracker;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ReadOnlyDengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":" * A class to access DengueHotspotTracker data stored as a csv file on the hard disk.","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"public class CsvDengueHotspotStorage implements DengueHotspotStorage {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CsvDengueHotspotStorage.class);","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"    private static String[] headers \u003d new String[]{\"Patient Name\", \"Age\", \"Date\", \"Postal Code\", \"Variants\"};","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"    public CsvDengueHotspotStorage(Path filePath) {","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"    public Path getDengueHotspotTrackerFilePath() {","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"        return filePath;","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"markusyeo"},"content":"    public Optional\u003cReadOnlyDengueHotspotTracker\u003e readDengueHotspotTracker() throws DataConversionException {","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"markusyeo"},"content":"        return readDengueHotspotTracker(filePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"markusyeo"},"content":"     * Similar to {@link #readDengueHotspotTracker()}.","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"markusyeo"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"markusyeo"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"markusyeo"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"markusyeo"},"content":"    public Optional\u003cReadOnlyDengueHotspotTracker\u003e readDengueHotspotTracker(Path filePath)","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"markusyeo"},"content":"            throws DataConversionException {","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"markusyeo"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"markusyeo"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"markusyeo"},"content":"            Optional\u003cList\u003cPerson\u003e\u003e optionalList \u003d CsvUtil.readCsvFile(","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"markusyeo"},"content":"                    filePath, Person.class);","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"markusyeo"},"content":"            if (!optionalList.isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"markusyeo"},"content":"                return Optional.empty();","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"markusyeo"},"content":"            }","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"markusyeo"},"content":"            DengueHotspotTracker readOnly \u003d new DengueHotspotTracker();","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"markusyeo"},"content":"            readOnly.setPersons(optionalList.get());","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"markusyeo"},"content":"            return Optional.of(readOnly);","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"markusyeo"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"markusyeo"},"content":"            throw e;","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"markusyeo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"markusyeo"},"content":"    public void saveDengueHotspotTracker(ReadOnlyDengueHotspotTracker dengueHotspotTracker)","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"markusyeo"},"content":"            throws IOException, CsvRequiredFieldEmptyException, CsvDataTypeMismatchException {","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"markusyeo"},"content":"        saveDengueHotspotTracker(dengueHotspotTracker, filePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"markusyeo"},"content":"     * Similar to {@link #saveDengueHotspotTracker(ReadOnlyDengueHotspotTracker)}.","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"markusyeo"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"markusyeo"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"markusyeo"},"content":"    public void saveDengueHotspotTracker(ReadOnlyDengueHotspotTracker dengueHotspotTracker, Path filePath)","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"markusyeo"},"content":"            throws IOException, CsvRequiredFieldEmptyException, CsvDataTypeMismatchException {","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"markusyeo"},"content":"        requireNonNull(dengueHotspotTracker);","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"markusyeo"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"markusyeo"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"markusyeo"},"content":"        CsvUtil.saveCsvFile(dengueHotspotTracker.getPersonList()","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"markusyeo"},"content":"                                    .stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"markusyeo"},"content":"                                    .map(Person::toCsvString)","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"markusyeo"},"content":"                                    .collect(Collectors.toList()), filePath, headers);","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"markusyeo"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"markusyeo":91}},{"path":"src/main/java/seedu/dengue/storage/DengueHotspotStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.storage;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvDataTypeMismatchException;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvRequiredFieldEmptyException;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.DengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ReadOnlyDengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":" * Represents a storage for {@link DengueHotspotTracker}.","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"public interface DengueHotspotStorage {","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"    Path getDengueHotspotTrackerFilePath();","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"     * Returns DengueHotspotTracker data as a {@link ReadOnlyDengueHotspotTracker}.","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"    Optional\u003cReadOnlyDengueHotspotTracker\u003e readDengueHotspotTracker() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"     * @see #getDengueHotspotTrackerFilePath()","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"    Optional\u003cReadOnlyDengueHotspotTracker\u003e readDengueHotspotTracker(Path filePath) throws DataConversionException,","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"            IOException;","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"     * Saves the given {@link ReadOnlyDengueHotspotTracker} to the storage.","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"markusyeo"},"content":"     * @param dengueHotspotTracker cannot be null.","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"markusyeo"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"markusyeo"},"content":"    void saveDengueHotspotTracker(ReadOnlyDengueHotspotTracker dengueHotspotTracker)","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"markusyeo"},"content":"            throws IOException, CsvRequiredFieldEmptyException, CsvDataTypeMismatchException;","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"markusyeo"},"content":"     * @see #saveDengueHotspotTracker(ReadOnlyDengueHotspotTracker)","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"markusyeo"},"content":"    void saveDengueHotspotTracker(ReadOnlyDengueHotspotTracker dengueHotspotTracker, Path filePath)","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"            throws IOException, CsvRequiredFieldEmptyException, CsvDataTypeMismatchException;","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"markusyeo"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"markusyeo":53}},{"path":"src/main/java/seedu/dengue/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.storage;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.util.JsonUtil;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.UserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"markusyeo":5,"-":42}},{"path":"src/main/java/seedu/dengue/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.storage;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ReadOnlyDengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.UserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":" * API of the Storage component","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"public interface Storage extends DengueHotspotStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"    Path getDengueHotspotTrackerFilePath();","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"    Optional\u003cReadOnlyDengueHotspotTracker\u003e readDengueHotspotTracker() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"    void saveDengueHotspotTracker(ReadOnlyDengueHotspotTracker dengueHotspotTracker) throws IOException;","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"markusyeo":32}},{"path":"src/main/java/seedu/dengue/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.storage;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvDataTypeMismatchException;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvRequiredFieldEmptyException;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.LogsCenter;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ReadOnlyDengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.UserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":" * Manages storage of DengueHotspotTracker data in local storage.","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"    private DengueHotspotStorage dengueHotspotStorage;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"     * Creates a {@code StorageManager} with the given {@code DengueHotspotTrackerStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"    public StorageManager(DengueHotspotStorage dengueHotspotStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"        this.dengueHotspotStorage \u003d dengueHotspotStorage;","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"markusyeo"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"markusyeo"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"markusyeo"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"markusyeo"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"markusyeo"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d DengueHotspotTracker methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"markusyeo"},"content":"    public Path getDengueHotspotTrackerFilePath() {","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"markusyeo"},"content":"        return dengueHotspotStorage.getDengueHotspotTrackerFilePath();","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"markusyeo"},"content":"    public Optional\u003cReadOnlyDengueHotspotTracker\u003e readDengueHotspotTracker()","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"markusyeo"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"markusyeo"},"content":"        return readDengueHotspotTracker(dengueHotspotStorage.getDengueHotspotTrackerFilePath());","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"markusyeo"},"content":"    public Optional\u003cReadOnlyDengueHotspotTracker\u003e readDengueHotspotTracker(Path filePath)","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"markusyeo"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"markusyeo"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"markusyeo"},"content":"        return dengueHotspotStorage.readDengueHotspotTracker(filePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"markusyeo"},"content":"    public void saveDengueHotspotTracker(ReadOnlyDengueHotspotTracker dengueHotspotTracker) throws IOException {","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"markusyeo"},"content":"        saveDengueHotspotTracker(dengueHotspotTracker, dengueHotspotStorage.getDengueHotspotTrackerFilePath());","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"markusyeo"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"markusyeo"},"content":"    public void saveDengueHotspotTracker(ReadOnlyDengueHotspotTracker dengueHotspotTracker, Path filePath)","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"markusyeo"},"content":"            throws IOException {","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"markusyeo"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"markusyeo"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"markusyeo"},"content":"            dengueHotspotStorage.saveDengueHotspotTracker(dengueHotspotTracker, filePath);","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"markusyeo"},"content":"        } catch (CsvRequiredFieldEmptyException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"markusyeo"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"markusyeo"},"content":"        } catch (CsvDataTypeMismatchException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"markusyeo"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"markusyeo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"markusyeo"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"markusyeo":90}},{"path":"src/main/java/seedu/dengue/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.storage;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.UserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":" * Represents a storage for {@link seedu.dengue.model.UserPrefs}.","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"     * Saves the given {@link seedu.dengue.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"markusyeo":6,"-":30}},{"path":"src/main/java/seedu/dengue/storage/temporary/SpecialisedStackForMemory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sumhungyee"},"content":"package seedu.dengue.storage.temporary;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"sumhungyee"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":"import java.util.Deque;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":"import java.util.EmptyStackException;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"import java.util.Stack;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":" * A specialised Stack for the temporary redoHistory undoHistory for DengueHotspotTracker\u0027s undo command.","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":" * This stack has a fixed size of 10.","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"sumhungyee"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"sumhungyee"},"content":"public class SpecialisedStackForMemory\u003cT\u003e implements StackWithStorage\u003cT\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"sumhungyee"},"content":"    public static final int MAX_SIZE \u003d 10;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"    private final Deque\u003cT\u003e redoHistory;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"    private final Stack\u003cT\u003e undoHistory;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"sumhungyee"},"content":"     * Creates a specialised stack that stores {@Code T} objects.","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"sumhungyee"},"content":"     * @param latest A {@link T} object.","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"    protected SpecialisedStackForMemory(T latest) {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"        this.undoHistory \u003d new Stack\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"        this.redoHistory \u003d new ArrayDeque\u003cT\u003e(MAX_SIZE + 1);","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"        this.redoHistory.push(latest);","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"sumhungyee"},"content":"     * Creates an empty {@code SpecialisedStackForMemory}.","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"sumhungyee"},"content":"    public SpecialisedStackForMemory() {","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"        this.undoHistory \u003d new Stack\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"        this.redoHistory \u003d new ArrayDeque\u003cT\u003e(MAX_SIZE + 1);","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"sumhungyee"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"sumhungyee"},"content":"    public T temporaryPop() throws NoSuchElementException {","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"        T latest \u003d this.redoHistory.pop();","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"markusyeo"},"content":"        this.undoHistory.push(latest);","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"sumhungyee"},"content":"        return latest;","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"markusyeo"},"content":"    public Deque\u003cT\u003e getRedoHistory() {","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"markusyeo"},"content":"        return this.redoHistory;","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"markusyeo"},"content":"    public Stack\u003cT\u003e getUndoHistory() {","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"markusyeo"},"content":"        return this.undoHistory;","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"sumhungyee"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"sumhungyee"},"content":"    public void pushOneFromTemporaryPop() throws EmptyStackException {","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"markusyeo"},"content":"        this.redoHistory.push(this.undoHistory.pop());","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"sumhungyee"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"sumhungyee"},"content":"    public void pushAllFromTemporaryPop() {","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"markusyeo"},"content":"        while (!this.undoHistory.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"markusyeo"},"content":"            this.redoHistory.push(this.undoHistory.pop());","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"sumhungyee"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"sumhungyee"},"content":"    public void clearStorage() {","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"markusyeo"},"content":"        this.undoHistory.clear();","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"sumhungyee"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"sumhungyee"},"content":"    public T peek() {","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"markusyeo"},"content":"        return this.redoHistory.peek();","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"sumhungyee"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"sumhungyee"},"content":"    public T push(T latest) {","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"markusyeo"},"content":"        this.redoHistory.push(latest);","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"sumhungyee"},"content":"        return latest;","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"sumhungyee"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"sumhungyee"},"content":"    public T removeOld() throws NoSuchElementException {","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"markusyeo"},"content":"        return this.redoHistory.pollLast();","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"markusyeo"},"content":"     * Checks if the redoHistory stack is full.","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"sumhungyee"},"content":"     * @return A boolean value.","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"sumhungyee"},"content":"    public boolean isFull() {","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"markusyeo"},"content":"        return this.redoHistory.size() \u003e MAX_SIZE;","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"sumhungyee"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"markusyeo":24,"sumhungyee":70}},{"path":"src/main/java/seedu/dengue/storage/temporary/StackWithStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sumhungyee"},"content":"package seedu.dengue.storage.temporary;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"sumhungyee"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":" * An interface for a temporary memory stack for the undo function.","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":" * This data structure is a specialised stack which supports pop and push.","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":" * This specialised stack also supports the removal of items too deep in the stack.","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":" * This stack also temporarily stores popped items.","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"public interface StackWithStorage\u003cT\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":"     * Pops the top layer of the stack then reveals the top layer.","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"sumhungyee"},"content":"     * @return the popped element.","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"sumhungyee"},"content":"    T temporaryPop();","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"     * For one element previously popped, push the latest one back into the stack.","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"sumhungyee"},"content":"    void pushOneFromTemporaryPop();","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"     * For all elements previously popped, push them back into the stack.","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"    void pushAllFromTemporaryPop();","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"     * Return the current top element of the stack.","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"sumhungyee"},"content":"     * @return The top element of the stack.","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"sumhungyee"},"content":"    T peek();","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"sumhungyee"},"content":"     * Pushes an element to the top of the stack.","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"sumhungyee"},"content":"     * @param t item to be pushed.","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"sumhungyee"},"content":"     * @return The item {@param t}.","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"sumhungyee"},"content":"    T push(T t);","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"sumhungyee"},"content":"     * Clears all temporarily-stored popped elements.","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"sumhungyee"},"content":"    void clearStorage();","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"sumhungyee"},"content":"     * Remove old values at the bottom of the stack.","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"sumhungyee"},"content":"    T removeOld();","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"sumhungyee"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"sumhungyee":50}},{"path":"src/main/java/seedu/dengue/storage/temporary/TemporaryMemory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sumhungyee"},"content":"package seedu.dengue.storage.temporary;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":"import java.util.EmptyStackException;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.model.ReadOnlyDengueHotspotTracker;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":" * A class that stores previous {@link ReadOnlyDengueHotspotTracker} objects as memory temporarily.","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":" * When this app is not in use, the memory is reset.","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":" * Only the past 10 iterations of the file will be stored, and older iterations are deleted.","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"sumhungyee"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"sumhungyee"},"content":"public class TemporaryMemory extends SpecialisedStackForMemory\u003cReadOnlyDengueHotspotTracker\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"sumhungyee"},"content":"    public TemporaryMemory(ReadOnlyDengueHotspotTracker latest) {","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"sumhungyee"},"content":"        super(latest.generateDeepCopy());","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"sumhungyee"},"content":"    public TemporaryMemory() {","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"sumhungyee"},"content":"        super();","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"     * Pushes the latest updated {@link ReadOnlyDengueHotspotTracker} into the memory stack.","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"sumhungyee"},"content":"     * If the memory stack is full, delete the oldest entry.","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"sumhungyee"},"content":"     * @param latest The newest iteration of {@link ReadOnlyDengueHotspotTracker}.","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"sumhungyee"},"content":"    public void saveNewLatest(ReadOnlyDengueHotspotTracker latest) {","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"sumhungyee"},"content":"        push(latest.generateDeepCopy());","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"sumhungyee"},"content":"        clearRedoStorage();","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"sumhungyee"},"content":"        if (isFull()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"sumhungyee"},"content":"            removeOld();","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"sumhungyee"},"content":"     * Loads the current {@link ReadOnlyDengueHotspotTracker}","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"sumhungyee"},"content":"     * @return An unmodifiable view of the tracker.","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"sumhungyee"},"content":"    public ReadOnlyDengueHotspotTracker loadCurrent() {","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"sumhungyee"},"content":"        return super.peek();","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"sumhungyee"},"content":"     * Checks if further undo operations are possible.","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"sumhungyee"},"content":"    public boolean canUndo() {","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"markusyeo"},"content":"        return this.getRedoHistory().size() \u003e 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"sumhungyee"},"content":"     * Undo the latest operation.","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"sumhungyee"},"content":"    public void undo() throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"sumhungyee"},"content":"        if (canUndo()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"sumhungyee"},"content":"            super.temporaryPop();","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"sumhungyee"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"sumhungyee"},"content":"            throw new CommandException(\"Cannot undo any further!\");","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"sumhungyee"},"content":"     * Redo the last operation.","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"sumhungyee"},"content":"    public void redo() throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"sumhungyee"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"sumhungyee"},"content":"            super.pushOneFromTemporaryPop();","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"sumhungyee"},"content":"        } catch (EmptyStackException err) {","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"sumhungyee"},"content":"            throw new CommandException(\"Reached the latest iteration!\");","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"sumhungyee"},"content":"     * Delete all memory of future operations.","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"sumhungyee"},"content":"    public void clearRedoStorage() {","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"sumhungyee"},"content":"        super.clearStorage();","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"sumhungyee"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"markusyeo":1,"sumhungyee":81}},{"path":"src/main/java/seedu/dengue/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.ui;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.CommandResult;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"markusyeo"},"content":"         * @see seedu.dengue.logic.Logic#execute(String)","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"markusyeo":5,"-":80}},{"path":"src/main/java/seedu/dengue/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.ui;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.LogsCenter;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"valerietanhx"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103-w17-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"    public static final String HELP_MESSAGE \u003d \"The following are the available commands for this application:\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"valerietanhx"},"content":"            + \"add, list, edit, find, delete, clear, help, exit\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"            + \"Formatting:\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"            + \"add: add n/PATIENT_NAME p/POSTAL_CODE d/DATE a/AGE [v/DENGUE_VARIANT]...\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"            + \"list: list\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"            + \"edit: edit INDEX [n/NAME] [p/POSTAL] [d/DATE] [a/AGE] [v/DENGUE_VARIANT]...\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"            + \"find: find KEYWORD [MORE_KEYWORDS]\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"            + \"delete: delete INDEX\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"            + \"clear: clear\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"valerietanhx"},"content":"            + \"help: help\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"            + \"exit: exit\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"            + \"If you want more information, you can refer to the user guide:\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"            + USERGUIDE_URL;","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *      if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *      if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *      if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *      if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Tohtoroo":9,"markusyeo":2,"axmszr":2,"valerietanhx":3,"-":88}},{"path":"src/main/java/seedu/dengue/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.ui;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.GuiSettings;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.LogsCenter;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.Logic;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.CommandResult;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"    private OverviewDisplay overviewDisplay;","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"    private StackPane overviewDisplayPlaceholder;","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"axmszr"},"content":"        overviewDisplay \u003d new OverviewDisplay();","lastModifiedDate":"2023-03-26"},{"lineNumber":121,"author":{"gitId":"axmszr"},"content":"        overviewDisplay.setOverview(logic.getOverview());","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"axmszr"},"content":"        overviewDisplayPlaceholder.getChildren().add(overviewDisplay.getRoot());","lastModifiedDate":"2023-03-26"},{"lineNumber":123,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"markusyeo"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getDengueHotspotTrackerFilePath());","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"markusyeo"},"content":"     * @see seedu.dengue.logic.Logic#execute(String)","lastModifiedDate":"2023-03-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"axmszr"},"content":"            overviewDisplay.setOverview(logic.getOverview());","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"markusyeo":9,"axmszr":9,"-":187}},{"path":"src/main/java/seedu/dengue/ui/OverviewDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package seedu.dengue.ui;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.overview.Overview;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":" * A ui for the current overview that is displayed on the right of the application.","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"public class OverviewDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    private static final String FXML \u003d \"OverviewDisplay.fxml\";","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    private Label overviewTitle;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    private Label overviewSubtitle;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"    private TextArea overviewContent;","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"     * Constructs a new blank {@code OverviewDisplay} instance.","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"    public OverviewDisplay() {","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"        super(FXML);","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"    private void setOverviewTitle(String newOverviewTitle) {","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"axmszr"},"content":"        requireNonNull(newOverviewTitle);","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"        overviewTitle.setText(newOverviewTitle);","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"    private void setOverviewSubtitle(String newOverviewSubtitle) {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"        requireNonNull(newOverviewSubtitle);","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"        overviewSubtitle.setText(newOverviewSubtitle);","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"    private void setOverviewContent(String newOverviewContent) {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"        requireNonNull(newOverviewContent);","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"        overviewContent.setText(newOverviewContent);","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"axmszr"},"content":"     * Updates the OverviewDisplay with the given {@code Overview}.","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"     * @param overview The overview to display.","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"    public void setOverview(Overview overview) {","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"        requireNonNull(overview);","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"        setOverviewTitle(overview.getOverviewTitle());","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"        setOverviewSubtitle(overview.getOverviewSubtitle());","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"        setOverviewContent(overview.getOverviewContent());","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"axmszr":57}},{"path":"src/main/java/seedu/dengue/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.ui;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    private static final String AGE_FORMAT \u003d \"Patient Age: %s y/o\";","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"    private static final String POSTAL_FORMAT \u003d \"Postal Code: %s\";","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    private static final String DATE_FORMAT \u003d \"Reported on: %s\";","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"     * The issue on DengueHotspotTracker level 4\u003c/a\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"    private Label age;","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"    private Label postal;","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"markusyeo"},"content":"    private Label date;","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"axmszr"},"content":"    private FlowPane variants;","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"        age.setText(String.format(AGE_FORMAT, person.getAge().value));","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"        postal.setText(String.format(POSTAL_FORMAT, person.getPostal().value));","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"        date.setText(String.format(DATE_FORMAT, person.getDate().value));","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"        person.getVariants().stream()","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"                .sorted(Comparator.comparing(variant -\u003e variant.variantName))","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"                .forEach(variant -\u003e variants.getChildren().add(new Label(variant.variantName.toString())));","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"markusyeo":6,"axmszr":11,"-":64}},{"path":"src/main/java/seedu/dengue/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.ui;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.LogsCenter;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"markusyeo":3,"-":45}},{"path":"src/main/java/seedu/dengue/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.ui;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"markusyeo":1,"-":27}},{"path":"src/main/java/seedu/dengue/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.ui;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markusyeo":1,"-":27}},{"path":"src/main/java/seedu/dengue/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.ui;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"markusyeo":1,"-":12}},{"path":"src/main/java/seedu/dengue/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.ui;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.MainApp;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.LogsCenter;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.util.StringUtil;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.Logic;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DengueTheme.css\");","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"markusyeo":5,"axmszr":1,"-":77}},{"path":"src/main/java/seedu/dengue/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.ui;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.MainApp;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"markusyeo":2,"-":86}},{"path":"src/main/resources/view/DengueTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"    -fx-base: #474A2C;","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"axmszr"},"content":"    -fx-background-color: derive(#474A2C, 20%);","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"axmszr"},"content":"    -fx-padding: 5 2 0 10;","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"axmszr"},"content":"    -fx-background-color: #B9C19D;","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"axmszr"},"content":"    -fx-label-padding: 0;","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"axmszr"},"content":"    -fx-padding: 5 15 5 0;","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"axmszr"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"axmszr"},"content":".list-cell:filled {","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"axmszr"},"content":"    -fx-background-radius: 0 10 25 10;","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"axmszr"},"content":"    -fx-background-insets: 1 2 2 0;","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"axmszr"},"content":"    -fx-background-color: #CCD5AE;","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"axmszr"},"content":"    -fx-background-color: #E9EDC9;","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"axmszr"},"content":"    -fx-background-color: #FFF5DA;","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"axmszr"},"content":"    -fx-font-family: \"Verdana\";","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"axmszr"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"axmszr"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"axmszr"},"content":"    -fx-text-fill: #3D4A5A;","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"axmszr"},"content":"    -fx-font-family: \"Lucida Sans Typewriter\";","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"axmszr"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"axmszr"},"content":"    -fx-text-fill: #3D4A5A;","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"axmszr"},"content":"    -fx-padding: 5 0 0 0;","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"axmszr"},"content":".small_label_gap {","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"axmszr"},"content":"    -fx-font-size:3px;","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":139,"author":{"gitId":"axmszr"},"content":"     -fx-background-color: derive(#474A2C, 20%);","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":143,"author":{"gitId":"axmszr"},"content":"     -fx-background-color: #E7D6C5;","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"axmszr"},"content":"    -fx-background-color: #B3A79B;","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"axmszr"},"content":"    -fx-background-color: #B3A79B;","lastModifiedDate":"2023-03-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"axmszr"},"content":"    -fx-background-color: #B3A79B;","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"axmszr"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-01"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"axmszr"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":291,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"axmszr"},"content":"    -fx-background-color: #FFF5DA;","lastModifiedDate":"2023-03-15"},{"lineNumber":293,"author":{"gitId":"axmszr"},"content":"    -fx-background-insets: 2;","lastModifiedDate":"2023-03-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"axmszr"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"axmszr"},"content":"    -fx-background-color: #B3A79B;","lastModifiedDate":"2023-03-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"axmszr"},"content":"    -fx-border-color: #181818;","lastModifiedDate":"2023-03-01"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"axmszr"},"content":"    -fx-font-family: \"Tahoma\";","lastModifiedDate":"2023-03-15"},{"lineNumber":330,"author":{"gitId":"axmszr"},"content":"    -fx-font-size: 16pt;","lastModifiedDate":"2023-03-01"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-15"},{"lineNumber":332,"author":{"gitId":"axmszr"},"content":"    -fx-prompt-text-fill: beige;","lastModifiedDate":"2023-03-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"axmszr"},"content":"    -fx-background-color: #B3A79B;","lastModifiedDate":"2023-03-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"axmszr"},"content":"    -fx-border-color: #181818;","lastModifiedDate":"2023-03-01"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"axmszr"},"content":"#variants {","lastModifiedDate":"2023-03-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"axmszr"},"content":"#variants .label {","lastModifiedDate":"2023-03-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"axmszr"},"content":"    -fx-background-color: #3E7B91;","lastModifiedDate":"2023-03-15"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":359,"author":{"gitId":"axmszr"},"content":".overview-title {","lastModifiedDate":"2023-03-28"},{"lineNumber":360,"author":{"gitId":"axmszr"},"content":"    -fx-font-family: \"Lucida Sans Typewriter\";","lastModifiedDate":"2023-03-28"},{"lineNumber":361,"author":{"gitId":"axmszr"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-03-28"},{"lineNumber":362,"author":{"gitId":"axmszr"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":363,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":364,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":365,"author":{"gitId":"axmszr"},"content":".overview-subtitle {","lastModifiedDate":"2023-03-28"},{"lineNumber":366,"author":{"gitId":"axmszr"},"content":"    -fx-font-family: \"Lucida Sans Typewriter\";","lastModifiedDate":"2023-03-27"},{"lineNumber":367,"author":{"gitId":"axmszr"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-27"},{"lineNumber":368,"author":{"gitId":"axmszr"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-27"},{"lineNumber":369,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":370,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":371,"author":{"gitId":"axmszr"},"content":".overview-content {","lastModifiedDate":"2023-03-28"},{"lineNumber":372,"author":{"gitId":"axmszr"},"content":"    -fx-font-family: \"Lucida Sans Typewriter\";","lastModifiedDate":"2023-03-28"},{"lineNumber":373,"author":{"gitId":"axmszr"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2023-03-28"},{"lineNumber":374,"author":{"gitId":"axmszr"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-28"},{"lineNumber":375,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"axmszr":65,"-":310}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"    -fx-background: transparent;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":".variant-selector {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"axmszr":2,"-":18}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"    -fx-background-color: #649494;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"    -fx-background-color: #B3A79B;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"    -fx-background-color: #E7D6C5;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    -fx-background-color: #3D4A5A;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"axmszr":4,"-":15}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help Page\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"sumhungyee"},"content":"    \u003cImage url\u003d\"@/images/help_page_icon.png\" /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"sumhungyee"},"content":"          \u003cInsets bottom\u003d\"20.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"axmszr":1,"sumhungyee":2,"-":39}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"         title\u003d\"Dengue Hotspot Tracker\" minWidth\u003d\"800\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"sumhungyee"},"content":"    \u003cImage url\u003d\"@/images/dengue_tracker.png\" /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"        \u003cURL value\u003d\"@DengueTheme.css\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"      \u003cVBox prefWidth\u003d\"800\" prefHeight\u003d\"600\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"20\" bottom\u003d\"10\" left\u003d\"20\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"axmszr"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"20\" bottom\u003d\"10\" left\u003d\"20\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"axmszr"},"content":"        \u003cHBox prefWidth\u003d\"800\" prefHeight\u003d\"600\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"axmszr"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"axmszr"},"content":"                     minWidth\u003d\"450\" prefWidth\u003d\"450\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"20\" bottom\u003d\"10\" left\u003d\"20\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"          \u003cStackPane fx:id\u003d\"overviewDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"axmszr"},"content":"                     minWidth\u003d\"300\" prefWidth\u003d\"300\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"axmszr"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"axmszr"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"axmszr"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"axmszr":17,"sumhungyee":1,"-":52}},{"path":"src/main/resources/view/OverviewDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"  \u003cVBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"    \u003cLabel fx:id\u003d\"overviewTitle\" styleClass\u003d\"overview-title\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"    \u003cLabel styleClass\u003d\"small_label_gap\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"    \u003cLabel styleClass\u003d\"small_label_gap\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"    \u003cLabel fx:id\u003d\"overviewSubtitle\" styleClass\u003d\"overview-subtitle\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    \u003cLabel styleClass\u003d\"small_label_gap\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"    \u003cTextArea fx:id\u003d\"overviewContent\" editable\u003d\"false\" styleClass\u003d\"overview-content\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"  \u003c/VBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"axmszr":18}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"    \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"      \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"          \u003cInsets right\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"              \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"axmszr"},"content":"        \u003cLabel styleClass\u003d\"small_label_gap\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"        \u003cLabel fx:id\u003d\"age\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$age\" /\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"        \u003cLabel fx:id\u003d\"postal\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$postal\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"        \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"axmszr"},"content":"      \u003cRegion HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"      \u003cFlowPane fx:id\u003d\"variants\" prefWidth\u003d\"20\" maxWidth\u003d\"20\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"          \u003cInsets top\u003d\"10\" right\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"axmszr"},"content":"      \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"axmszr"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"axmszr":14,"markusyeo":1,"-":29}},{"path":"src/test/java/seedu/dengue/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"markusyeo":1,"-":57}},{"path":"src/test/java/seedu/dengue/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"markusyeo":1,"-":26}},{"path":"src/test/java/seedu/dengue/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.core;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markusyeo":2,"-":133}},{"path":"src/test/java/seedu/dengue/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.core.index;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"markusyeo":2,"-":58}},{"path":"src/test/java/seedu/dengue/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.util;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"        assertNotNull(AppUtil.getImage(\"/images/dengue_tracker.png\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, ()","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"                            -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"markusyeo":5,"-":32}},{"path":"src/test/java/seedu/dengue/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.util;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"markusyeo":3,"-":105}},{"path":"src/test/java/seedu/dengue/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.util;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.Config;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"markusyeo":4,"-":112}},{"path":"src/test/java/seedu/dengue/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.util;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markusyeo":2,"-":21}},{"path":"src/test/java/seedu/dengue/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.util;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.testutil.SerializableTestClass;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.testutil.TestUtil;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markusyeo":3,"-":42}},{"path":"src/test/java/seedu/dengue/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.commons.util;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"markusyeo"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"markusyeo"},"content":"                -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"markusyeo":4,"-":140}},{"path":"src/test/java/seedu/dengue/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.AGE_DESC_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.POSTAL_DESC_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.AddCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.CommandResult;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.ListCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ModelManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ReadOnlyDengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.UserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.storage.CsvDengueHotspotStorage;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.storage.StorageManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.testutil.PersonBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"markusyeo"},"content":"        CsvDengueHotspotStorage dengueHotspotTrackerStorage \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"markusyeo"},"content":"                new CsvDengueHotspotStorage(temporaryFolder.resolve(\"dengueHotspotTracker.csv\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"markusyeo"},"content":"        StorageManager storage \u003d new StorageManager(dengueHotspotTrackerStorage, userPrefsStorage);","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"markusyeo"},"content":"        // Setup LogicManager with JsonDengueHotspotTrackerIoExceptionThrowingStub","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"markusyeo"},"content":"        CsvDengueHotspotStorage dengueHotspotTrackerStorage \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"markusyeo"},"content":"                new JsonDengueHotspotIoExceptionThrowingStub(temporaryFolder","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"markusyeo"},"content":"                        .resolve(\"ioExceptionDengueHotspotTracker.csv\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"markusyeo"},"content":"        StorageManager storage \u003d new StorageManager(dengueHotspotTrackerStorage, userPrefsStorage);","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"markusyeo"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + POSTAL_DESC_AMY + DATE_DESC_AMY","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"markusyeo"},"content":"                + AGE_DESC_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"axmszr"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withVariants().build();","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"markusyeo"},"content":"        Model expectedModel \u003d new ModelManager(model.getDengueHotspotTracker(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"markusyeo"},"content":"    private static class JsonDengueHotspotIoExceptionThrowingStub extends CsvDengueHotspotStorage {","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"markusyeo"},"content":"        private JsonDengueHotspotIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"markusyeo"},"content":"        public void saveDengueHotspotTracker(ReadOnlyDengueHotspotTracker dengueHotspotTracker, Path filePath)","lastModifiedDate":"2023-03-04"},{"lineNumber":160,"author":{"gitId":"markusyeo"},"content":"                throws IOException {","lastModifiedDate":"2023-03-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"markusyeo":38,"axmszr":1,"-":125}},{"path":"src/test/java/seedu/dengue/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.getTypicalDengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ModelManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.UserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.testutil.PersonBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"        model \u003d new ModelManager(getTypicalDengueHotspotTracker(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"        Model expectedModel \u003d new ModelManager(model.getDengueHotspotTracker(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"markusyeo"},"content":"        Person personInList \u003d model.getDengueHotspotTracker().getPersonList().get(0);","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"markusyeo":12,"-":33}},{"path":"src/test/java/seedu/dengue/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":"import java.util.EmptyStackException;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"sumhungyee"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.GuiSettings;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.DengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ReadOnlyDengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.overview.Overview;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.testutil.PersonBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"sumhungyee"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"sumhungyee"},"content":"        public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"sumhungyee"},"content":"            throw new RuntimeException();","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"sumhungyee"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"sumhungyee"},"content":"        public void updateFromMemoryStack() {","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"sumhungyee"},"content":"            throw new NullPointerException();","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"sumhungyee"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"sumhungyee"},"content":"        public void undo() {","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"sumhungyee"},"content":"            throw new NullPointerException();","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"sumhungyee"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"sumhungyee"},"content":"        public void redo() {","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"sumhungyee"},"content":"            throw new EmptyStackException();","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"markusyeo"},"content":"        public Path getDengueHotspotTrackerFilePath() {","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"markusyeo"},"content":"        public void setDengueHotspotTrackerFilePath(Path dengueHotspotTrackerFilePath) {","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"markusyeo"},"content":"        public void setDengueHotspotTracker(ReadOnlyDengueHotspotTracker newData) {","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"markusyeo"},"content":"        public ReadOnlyDengueHotspotTracker getDengueHotspotTracker() {","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"axmszr"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"axmszr"},"content":"        public Overview getOverview() {","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"axmszr"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"axmszr"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"axmszr"},"content":"        public void setOverview(Overview overview) {","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"axmszr"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"axmszr"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"valerietanhx"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"valerietanhx"},"content":"        public void sort(List\u003cPerson\u003e sortedList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"valerietanhx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"markusyeo"},"content":"        public ReadOnlyDengueHotspotTracker getDengueHotspotTracker() {","lastModifiedDate":"2023-03-04"},{"lineNumber":226,"author":{"gitId":"markusyeo"},"content":"            return new DengueHotspotTracker();","lastModifiedDate":"2023-03-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"markusyeo":16,"axmszr":11,"valerietanhx":4,"sumhungyee":21,"-":178}},{"path":"src/test/java/seedu/dengue/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"valerietanhx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.getTypicalDengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"valerietanhx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"valerietanhx"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.DengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ModelManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.UserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.SubPostal;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.predicate.FindPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.EndAge;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.EndDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.Range;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.StartAge;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.StartDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"public class ClearCommandTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"    public void execute_emptyDengueHotspotTracker_success() {","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"valerietanhx"},"content":"        List\u003cPerson\u003e referenceCopy \u003d new ArrayList\u003c\u003e(lastShownList);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"valerietanhx"},"content":"        String expectedMessage \u003d String.format(ClearCommand.MESSAGE_SUCCESS, referenceCopy.size());","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"valerietanhx"},"content":"        assertCommandSuccess(new ClearCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"valerietanhx"},"content":"    public void execute_unfilteredNonEmptyDengueHotspotTracker_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"markusyeo"},"content":"        Model model \u003d new ModelManager(getTypicalDengueHotspotTracker(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"markusyeo"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalDengueHotspotTracker(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"        expectedModel.setDengueHotspotTracker(new DengueHotspotTracker());","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"valerietanhx"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"valerietanhx"},"content":"        List\u003cPerson\u003e referenceCopy \u003d new ArrayList\u003c\u003e(lastShownList);","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"valerietanhx"},"content":"        String expectedMessage \u003d String.format(ClearCommand.MESSAGE_SUCCESS, referenceCopy.size());","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"valerietanhx"},"content":"        assertCommandSuccess(new ClearCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"valerietanhx"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"valerietanhx"},"content":"    public void execute_filteredNonEmptyDengueHotspotTracker_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"valerietanhx"},"content":"        Model model \u003d new ModelManager(getTypicalDengueHotspotTracker(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"valerietanhx"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalDengueHotspotTracker(), new UserPrefs());","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"Tohtoroo"},"content":"        Optional\u003cSubPostal\u003e emptySubPostal \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"Tohtoroo"},"content":"        Optional\u003cName\u003e testName \u003d Optional.of(new Name(\"Kurz\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"Tohtoroo"},"content":"        Optional\u003cAge\u003e emptyAge \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"Tohtoroo"},"content":"        Optional\u003cDate\u003e emptyDate \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"Tohtoroo"},"content":"        Set\u003cVariant\u003e emptyVariants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"Tohtoroo"},"content":"        Range\u003cDate\u003e emptyDateRange \u003d new Range\u003cDate\u003e(new StartDate(emptyDate), new EndDate(emptyDate));","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Tohtoroo"},"content":"        Range\u003cAge\u003e emptyAgeRange \u003d new Range\u003cAge\u003e(new StartAge(emptyAge), new EndAge(emptyAge));","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Tohtoroo"},"content":"        FindPredicate predicate \u003d new FindPredicate(","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"Tohtoroo"},"content":"                testName, emptySubPostal, emptyAge, emptyDate, emptyVariants, emptyDateRange, emptyAgeRange);","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"valerietanhx"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"valerietanhx"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"valerietanhx"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"valerietanhx"},"content":"        List\u003cPerson\u003e referenceCopy \u003d new ArrayList\u003c\u003e(lastShownList);","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"valerietanhx"},"content":"        for (Person person : referenceCopy) {","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"valerietanhx"},"content":"            expectedModel.deletePerson(person);","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"valerietanhx"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"valerietanhx"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"valerietanhx"},"content":"        String expectedMessage \u003d String.format(ClearCommand.MESSAGE_SUCCESS, referenceCopy.size());","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"valerietanhx"},"content":"        assertCommandSuccess(new ClearCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"valerietanhx"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"valerietanhx"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"valerietanhx"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"valerietanhx"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"valerietanhx"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"valerietanhx"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"valerietanhx"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"markusyeo"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"Tohtoroo":23,"markusyeo":26,"valerietanhx":46,"sumhungyee":2}},{"path":"src/test/java/seedu/dengue/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"markusyeo":1,"-":53}},{"path":"src/test/java/seedu/dengue/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_POSTAL;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_VARIANT;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.index.Index;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.DengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.SubPostal;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.predicate.FindPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.EndAge;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.EndDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.Range;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.StartAge;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.StartDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_NAME_ALICE \u003d \"Alice Pauline\";","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_NAME_BENSON \u003d \"Benson Meier\";","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_NAME_CARL \u003d \"Carl Kurz\";","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_NAME_DANIEL \u003d \"Daniel Meier\";","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_NAME_ELLE \u003d \"Elle Meyer\";","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_NAME_FIONA \u003d \"Fiona Kunz\";","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_NAME_GEORGE \u003d \"George Best\";","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_NAME_HOON \u003d \"Hoon Meier\";","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_NAME_IDA \u003d \"Ida Mueller\";","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"valerietanhx"},"content":"    public static final String VALID_POSTAL_ALICE \u003d \"123456\";","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"markusyeo"},"content":"    public static final String VALID_POSTAL_AMY \u003d \"111111\";","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"valerietanhx"},"content":"    public static final String VALID_POSTAL_BENSON \u003d \"234567\";","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"markusyeo"},"content":"    public static final String VALID_POSTAL_BOB \u003d \"222222\";","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"valerietanhx"},"content":"    public static final String VALID_POSTAL_CARL \u003d \"654321\";","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"valerietanhx"},"content":"    public static final String VALID_POSTAL_DANIEL \u003d \"816253\";","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"valerietanhx"},"content":"    public static final String VALID_POSTAL_ELLE \u003d \"012345\";","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"valerietanhx"},"content":"    public static final String VALID_POSTAL_FIONA \u003d \"432156\";","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"valerietanhx"},"content":"    public static final String VALID_POSTAL_GEORGE \u003d \"321235\";","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"valerietanhx"},"content":"    public static final String VALID_POSTAL_HOON \u003d \"435316\";","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"valerietanhx"},"content":"    public static final String VALID_POSTAL_IDA \u003d \"613473\";","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_DATE_ALICE \u003d \"2023-03-05\";","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"markusyeo"},"content":"    public static final String VALID_DATE_AMY \u003d \"2001-01-01\";","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_DATE_BENSON \u003d \"2022-03-05\";","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"markusyeo"},"content":"    public static final String VALID_DATE_BOB \u003d \"2002-02-02\";","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_DATE_CARL \u003d \"2023-02-02\";","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_DATE_DANIEL \u003d \"2023-01-01\";","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_DATE_ELLE \u003d \"2022-12-31\";","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_DATE_FIONA \u003d \"2022-01-05\";","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_DATE_GEORGE \u003d \"2023-01-05\";","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_DATE_HOON \u003d \"1850-01-02\";","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_DATE_IDA \u003d \"1996-10-01\";","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_AGE_ALICE \u003d \"21\";","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"markusyeo"},"content":"    public static final String VALID_AGE_AMY \u003d \"11\";","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_AGE_BENSON \u003d \"85\";","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"markusyeo"},"content":"    public static final String VALID_AGE_BOB \u003d \"22\";","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_AGE_CARL \u003d \"35\";","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_AGE_DANIEL \u003d \"143\";","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_AGE_ELLE \u003d \"65\";","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_AGE_FIONA \u003d \"5\";","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_AGE_GEORGE \u003d \"12\";","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_AGE_HOON \u003d \"1\";","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_AGE_IDA \u003d \"27\";","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_VARIANT_DENV1_UPPERCASE \u003d \"DENV1\";","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_VARIANT_DENV2_UPPERCASE \u003d \"DENV2\";","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_VARIANT_DENV3_UPPERCASE \u003d \"DENV3\";","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_VARIANT_DENV4_UPPERCASE \u003d \"DENV4\";","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VALID_VARIANT_DENV1_LOWERCASE \u003d \"denv4\";","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"sumhungyee"},"content":"    public static final String POSTAL_DESC_AMY \u003d \" \" + PREFIX_POSTAL + VALID_POSTAL_AMY;","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"sumhungyee"},"content":"    public static final String POSTAL_DESC_BOB \u003d \" \" + PREFIX_POSTAL + VALID_POSTAL_BOB;","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"markusyeo"},"content":"    public static final String DATE_DESC_AMY \u003d \" \" + PREFIX_DATE + VALID_DATE_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"markusyeo"},"content":"    public static final String DATE_DESC_BOB \u003d \" \" + PREFIX_DATE + VALID_DATE_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"markusyeo"},"content":"    public static final String AGE_DESC_AMY \u003d \" \" + PREFIX_AGE + VALID_AGE_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"markusyeo"},"content":"    public static final String AGE_DESC_BOB \u003d \" \" + PREFIX_AGE + VALID_AGE_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VARIANT_DESC_DENV2 \u003d \" \" + PREFIX_VARIANT + VALID_VARIANT_DENV2_UPPERCASE;","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"Tohtoroo"},"content":"    public static final String VARIANT_DESC_DENV1 \u003d \" \" + PREFIX_VARIANT + VALID_VARIANT_DENV1_UPPERCASE;","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"sumhungyee"},"content":"    public static final String INVALID_POSTAL_DESC \u003d \" \" + PREFIX_POSTAL + \"911a\"; // \u0027a\u0027 not allowed in postals","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"markusyeo"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DATE + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"markusyeo"},"content":"    public static final String INVALID_AGE_DESC \u003d \" \" + PREFIX_AGE; // empty string not allowed for age","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"Tohtoroo"},"content":"    public static final String INVALID_VARIANT_DESC \u003d \" \" + PREFIX_VARIANT + \"severe\"; // \"severe\" is not a variant","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":116,"author":{"gitId":"markusyeo"},"content":"                .withPostal(VALID_POSTAL_AMY).withDate(VALID_DATE_AMY).withAddress(VALID_AGE_AMY)","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"Tohtoroo"},"content":"                .withVariants(VALID_VARIANT_DENV2_UPPERCASE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":119,"author":{"gitId":"markusyeo"},"content":"                .withPostal(VALID_POSTAL_BOB).withDate(VALID_DATE_BOB).withAddress(VALID_AGE_BOB)","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"Tohtoroo"},"content":"                .withVariants(VALID_VARIANT_DENV1_UPPERCASE, VALID_VARIANT_DENV2_UPPERCASE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"markusyeo"},"content":"     * - the Dengue Hotspot Tracker, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"markusyeo"},"content":"        DengueHotspotTracker expectedDengueHotspotTracker \u003d new DengueHotspotTracker(actualModel","lastModifiedDate":"2023-03-04"},{"lineNumber":159,"author":{"gitId":"markusyeo"},"content":"                .getDengueHotspotTracker());","lastModifiedDate":"2023-03-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":163,"author":{"gitId":"markusyeo"},"content":"        assertEquals(expectedDengueHotspotTracker, actualModel.getDengueHotspotTracker());","lastModifiedDate":"2023-03-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":168,"author":{"gitId":"markusyeo"},"content":"     * {@code model}\u0027s Dengue Hotspot Tracker.","lastModifiedDate":"2023-03-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":174,"author":{"gitId":"Tohtoroo"},"content":"        Optional\u003cSubPostal\u003e emptySubPostal \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"Tohtoroo"},"content":"        Optional\u003cName\u003e testName \u003d Optional.of(person.getName());","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"Tohtoroo"},"content":"        Optional\u003cAge\u003e emptyAge \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"Tohtoroo"},"content":"        Optional\u003cDate\u003e emptyDate \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"Tohtoroo"},"content":"        Set\u003cVariant\u003e emptyVariants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"Tohtoroo"},"content":"        Range\u003cDate\u003e emptyDateRange \u003d new Range\u003cDate\u003e(new StartDate(emptyDate), new EndDate(emptyDate));","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"Tohtoroo"},"content":"        Range\u003cAge\u003e emptyAgeRange \u003d new Range\u003cAge\u003e(new StartAge(emptyAge), new EndAge(emptyAge));","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"Tohtoroo"},"content":"        model.updateFilteredPersonList(","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"Tohtoroo"},"content":"                new FindPredicate(testName, emptySubPostal, emptyAge, emptyDate, emptyVariants,","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"Tohtoroo"},"content":"                        emptyDateRange, emptyAgeRange));","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Tohtoroo":61,"markusyeo":30,"axmszr":1,"valerietanhx":9,"sumhungyee":4,"-":83}},{"path":"src/test/java/seedu/dengue/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"//import static seedu.dengue.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.getTypicalDengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.Messages;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.index.Index;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ModelManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.UserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"    private Model model \u003d new ModelManager(getTypicalDengueHotspotTracker(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_INDEX_SUCCESS, 1);","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getDengueHotspotTracker(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"    //    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"    //    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"    //        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"Tohtoroo"},"content":"    //        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"Tohtoroo"},"content":"    //        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"valerietanhx"},"content":"    //        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_INDEX_SUCCESS, personToDelete);","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"Tohtoroo"},"content":"    //        Model expectedModel \u003d new ModelManager(model.getDengueHotspotTracker(), new UserPrefs());","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"Tohtoroo"},"content":"    //        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"Tohtoroo"},"content":"    //        showNoPerson(expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"Tohtoroo"},"content":"    //        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Tohtoroo"},"content":"    //    }","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"Tohtoroo"},"content":"    //    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"Tohtoroo"},"content":"    //    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"Tohtoroo"},"content":"    //        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"Tohtoroo"},"content":"    //        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"Tohtoroo"},"content":"    //        // ensures that outOfBoundIndex is still in bounds of Dengue Hotspot Tracker list","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"Tohtoroo"},"content":"    //        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDengueHotspotTracker().getPersonList().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"Tohtoroo"},"content":"    //        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"Tohtoroo"},"content":"    //        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"Tohtoroo"},"content":"    //    }","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Tohtoroo":28,"markusyeo":14,"valerietanhx":2,"-":65}},{"path":"src/test/java/seedu/dengue/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_VARIANT_DENV1_UPPERCASE;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"//import static seedu.dengue.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.getTypicalDengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.Messages;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.index.Index;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.DengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ModelManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.UserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.testutil.PersonBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"    private Model model \u003d new ModelManager(getTypicalDengueHotspotTracker(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"markusyeo"},"content":"        Model expectedModel \u003d new ModelManager(new DengueHotspotTracker(model.getDengueHotspotTracker()),","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"markusyeo"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"markusyeo"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPostal(VALID_POSTAL_BOB)","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Tohtoroo"},"content":"                .withVariants(VALID_VARIANT_DENV1_UPPERCASE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"Tohtoroo"},"content":"                .withPostal(VALID_POSTAL_BOB).withVariants(VALID_VARIANT_DENV1_UPPERCASE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"markusyeo"},"content":"        Model expectedModel \u003d new ModelManager(new DengueHotspotTracker(model.getDengueHotspotTracker()),","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"markusyeo"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"markusyeo"},"content":"        Model expectedModel \u003d new ModelManager(new DengueHotspotTracker(model.getDengueHotspotTracker()),","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"markusyeo"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"Tohtoroo"},"content":"    //    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"Tohtoroo"},"content":"    //    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"Tohtoroo"},"content":"    //        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"Tohtoroo"},"content":"    //        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"Tohtoroo"},"content":"    //        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"Tohtoroo"},"content":"    //        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"Tohtoroo"},"content":"    //                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"Tohtoroo"},"content":"    //        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"Tohtoroo"},"content":"    //        Model expectedModel \u003d new ModelManager(new DengueHotspotTracker(model.getDengueHotspotTracker()),","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"Tohtoroo"},"content":"    //                new UserPrefs());","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"Tohtoroo"},"content":"    //        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"Tohtoroo"},"content":"    //        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"Tohtoroo"},"content":"    //    }","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"Tohtoroo"},"content":"    //    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"Tohtoroo"},"content":"    //    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"Tohtoroo"},"content":"    //        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"Tohtoroo"},"content":"    //        // edit person in filtered list into a duplicate in Dengue Hotspot Tracker","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"Tohtoroo"},"content":"    //        Person personInList \u003d model.getDengueHotspotTracker().getPersonList()","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"Tohtoroo"},"content":"    //        .get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"Tohtoroo"},"content":"    //        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"Tohtoroo"},"content":"    //                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"Tohtoroo"},"content":"    //        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"Tohtoroo"},"content":"    //    }","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"markusyeo"},"content":"     * but smaller than size of Dengue Hotspot Tracker","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"Tohtoroo"},"content":"    //    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"Tohtoroo"},"content":"    //    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"Tohtoroo"},"content":"    //        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"Tohtoroo"},"content":"    //        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"Tohtoroo"},"content":"    //        // ensures that outOfBoundIndex is still in bounds of Dengue Hotspot Tracker list","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"Tohtoroo"},"content":"    //        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDengueHotspotTracker().getPersonList().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"Tohtoroo"},"content":"    //        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"Tohtoroo"},"content":"    //                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"Tohtoroo"},"content":"    //        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"Tohtoroo"},"content":"    //    }","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Tohtoroo":45,"markusyeo":29,"-":104}},{"path":"src/test/java/seedu/dengue/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_VARIANT_DENV1_UPPERCASE;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"markusyeo"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPostal(VALID_POSTAL_BOB).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"sumhungyee"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"markusyeo"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withDate(VALID_DATE_BOB).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_AGE_BOB).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"        // different variants -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Tohtoroo"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withVariants(VALID_VARIANT_DENV1_UPPERCASE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Tohtoroo":2,"markusyeo":12,"axmszr":1,"sumhungyee":1,"-":42}},{"path":"src/test/java/seedu/dengue/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ModelManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"markusyeo":5,"-":15}},{"path":"src/test/java/seedu/dengue/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"//import static seedu.dengue.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"//import static seedu.dengue.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"//import static seedu.dengue.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.getTypicalDengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ModelManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.UserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.person.SubPostal;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.predicate.FindPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.EndAge;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.EndDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.Range;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.StartAge;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.range.StartDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"    private Model model \u003d new ModelManager(getTypicalDengueHotspotTracker(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalDengueHotspotTracker(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"    public void execute_oneKeywords_noPersonFound() throws ParseException {","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"        Optional\u003cSubPostal\u003e emptySubPostal \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"        Optional\u003cName\u003e testName \u003d Optional.of(new Name(\"abcdefghijklmnop\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"        Optional\u003cAge\u003e emptyAge \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"        Optional\u003cDate\u003e emptyDate \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"        Set\u003cVariant\u003e emptyVariants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"        Range\u003cDate\u003e emptyDateRange \u003d new Range\u003cDate\u003e(new StartDate(emptyDate), new EndDate(emptyDate));","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"        Range\u003cAge\u003e emptyAgeRange \u003d new Range\u003cAge\u003e(new StartAge(emptyAge), new EndAge(emptyAge));","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"        FindPredicate predicate \u003d new FindPredicate(","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"Tohtoroo"},"content":"                testName, emptySubPostal, emptyAge, emptyDate, emptyVariants, emptyDateRange, emptyAgeRange);","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"Tohtoroo"},"content":"    //    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"Tohtoroo"},"content":"    //    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"Tohtoroo"},"content":"    //        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"Tohtoroo"},"content":"    //        Optional\u003cSubPostal\u003e testSubPostal \u003d Optional.of(new SubPostal(\"94\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Tohtoroo"},"content":"    //        Optional\u003cName\u003e emptyName \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Tohtoroo"},"content":"    //        Optional\u003cAge\u003e emptyAge \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"Tohtoroo"},"content":"    //        Optional\u003cDate\u003e emptyDate \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"Tohtoroo"},"content":"    //        Set\u003cVariant\u003e emptyVariants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"Tohtoroo"},"content":"    //        FindPredicate predicate \u003d new FindPredicate(","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"Tohtoroo"},"content":"    //                emptyName, testSubPostal, emptyAge, emptyDate, emptyVariants);","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"Tohtoroo"},"content":"    //        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"Tohtoroo"},"content":"    //        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"Tohtoroo"},"content":"    //        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"Tohtoroo"},"content":"    //        assertEquals(Arrays.asList(ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"Tohtoroo"},"content":"    //    }","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Tohtoroo":44,"markusyeo":9,"-":22}},{"path":"src/test/java/seedu/dengue/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ModelManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"markusyeo":5,"-":15}},{"path":"src/test/java/seedu/dengue/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"//import static seedu.dengue.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"//import static seedu.dengue.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.getTypicalDengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ModelManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.UserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"        model \u003d new ModelManager(getTypicalDengueHotspotTracker(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"        expectedModel \u003d new ModelManager(model.getDengueHotspotTracker(), new UserPrefs());","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"    //    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"    //    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"    //        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"    //        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"    //    }","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Tohtoroo":7,"markusyeo":8,"-":24}},{"path":"src/test/java/seedu/dengue/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.AGE_DESC_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.AGE_DESC_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.DATE_DESC_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.INVALID_AGE_DESC;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.INVALID_POSTAL_DESC;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.INVALID_VARIANT_DESC;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.POSTAL_DESC_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.POSTAL_DESC_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_VARIANT_DENV1_UPPERCASE;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_VARIANT_DENV2_UPPERCASE;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VARIANT_DESC_DENV1;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VARIANT_DESC_DENV2;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.AddCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Postal;","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.testutil.PersonBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withVariants(VALID_VARIANT_DENV2_UPPERCASE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + POSTAL_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"                + AGE_DESC_BOB + VARIANT_DESC_DENV2, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"markusyeo"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + POSTAL_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"axmszr"},"content":"                + AGE_DESC_BOB + VARIANT_DESC_DENV2, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"sumhungyee"},"content":"        // multiple postals - last postal accepted","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"markusyeo"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + POSTAL_DESC_AMY + POSTAL_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"axmszr"},"content":"                + AGE_DESC_BOB + VARIANT_DESC_DENV2, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"sumhungyee"},"content":"        // multiple dates - last date accepted","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"markusyeo"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + POSTAL_DESC_BOB + DATE_DESC_AMY + DATE_DESC_BOB","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"axmszr"},"content":"                + AGE_DESC_BOB + VARIANT_DESC_DENV2, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"markusyeo"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + POSTAL_DESC_BOB + DATE_DESC_BOB + AGE_DESC_AMY","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"                + AGE_DESC_BOB + VARIANT_DESC_DENV2, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"axmszr"},"content":"        // multiple variants - all accepted","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"axmszr"},"content":"        Person expectedPersonMultipleVariants \u003d new PersonBuilder(BOB)","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"Tohtoroo"},"content":"                .withVariants(VALID_VARIANT_DENV2_UPPERCASE, VALID_VARIANT_DENV1_UPPERCASE)","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":74,"author":{"gitId":"markusyeo"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + POSTAL_DESC_BOB + DATE_DESC_BOB + AGE_DESC_BOB","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"axmszr"},"content":"                + VARIANT_DESC_DENV1 + VARIANT_DESC_DENV2, new AddCommand(expectedPersonMultipleVariants));","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"axmszr"},"content":"        // zero variants","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"axmszr"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withVariants().build();","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"markusyeo"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + POSTAL_DESC_AMY + DATE_DESC_AMY + AGE_DESC_AMY,","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"markusyeo"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + POSTAL_DESC_BOB + DATE_DESC_BOB + AGE_DESC_BOB,","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"sumhungyee"},"content":"        // missing postal prefix","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"markusyeo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_POSTAL_BOB + DATE_DESC_BOB + AGE_DESC_BOB,","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"sumhungyee"},"content":"        // missing date prefix","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"markusyeo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + POSTAL_DESC_BOB + VALID_DATE_BOB + AGE_DESC_BOB,","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"markusyeo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + POSTAL_DESC_BOB + DATE_DESC_BOB + VALID_AGE_BOB,","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"markusyeo"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_POSTAL_BOB + VALID_DATE_BOB + VALID_AGE_BOB,","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"markusyeo"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + POSTAL_DESC_BOB + DATE_DESC_BOB + AGE_DESC_BOB","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"axmszr"},"content":"                + VARIANT_DESC_DENV1 + VARIANT_DESC_DENV2, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"sumhungyee"},"content":"        // invalid postal","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"markusyeo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_POSTAL_DESC + DATE_DESC_BOB + AGE_DESC_BOB","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"axmszr"},"content":"                + VARIANT_DESC_DENV1 + VARIANT_DESC_DENV2, Postal.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"sumhungyee"},"content":"        // invalid date","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"markusyeo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + POSTAL_DESC_BOB + INVALID_DATE_DESC + AGE_DESC_BOB","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"axmszr"},"content":"                + VARIANT_DESC_DENV1 + VARIANT_DESC_DENV2, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"markusyeo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + POSTAL_DESC_BOB + DATE_DESC_BOB + INVALID_AGE_DESC","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"axmszr"},"content":"                + VARIANT_DESC_DENV1 + VARIANT_DESC_DENV2, Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"axmszr"},"content":"        // invalid variant","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"markusyeo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + POSTAL_DESC_BOB + DATE_DESC_BOB + AGE_DESC_BOB","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"Tohtoroo"},"content":"                + INVALID_VARIANT_DESC + VALID_VARIANT_DENV2_UPPERCASE, Variant.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"markusyeo"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + POSTAL_DESC_BOB + DATE_DESC_BOB + INVALID_AGE_DESC,","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"markusyeo"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + POSTAL_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"axmszr"},"content":"                + AGE_DESC_BOB + VARIANT_DESC_DENV1 + VARIANT_DESC_DENV2,","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Tohtoroo":5,"markusyeo":51,"axmszr":20,"sumhungyee":6,"-":60}},{"path":"src/test/java/seedu/dengue/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"axmszr"},"content":"        String argsString \u003d \"  some random string /v variant with leading and trailing spaces \";","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"markusyeo":1,"axmszr":1,"-":148}},{"path":"src/test/java/seedu/dengue/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.Command;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"markusyeo":3,"-":36}},{"path":"src/test/java/seedu/dengue/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"markusyeo":6,"-":26}},{"path":"src/test/java/seedu/dengue/logic/parser/DengueHotspotTrackerParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.AddCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.EditCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.logic.commands.FindCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.ListCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.person.SubPostal;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.predicate.FindPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.testutil.PersonBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.testutil.PersonUtil;","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"public class DengueHotspotTrackerParserTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"    private final DengueHotspotTrackerParser parser \u003d new DengueHotspotTrackerParser();","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"Tohtoroo"},"content":"    //    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"Tohtoroo"},"content":"    //    public void parseCommand_find() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"Tohtoroo"},"content":"    //        Optional\u003cSubPostal\u003e emptySubPostal \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"Tohtoroo"},"content":"    //        Optional\u003cName\u003e testName \u003d Optional.of(new Name(\"Baron\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"Tohtoroo"},"content":"    //        Optional\u003cAge\u003e emptyAge \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"Tohtoroo"},"content":"    //        Optional\u003cDate\u003e emptyDate \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"Tohtoroo"},"content":"    //        Set\u003cVariant\u003e emptyVariants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"Tohtoroo"},"content":"    //        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"Tohtoroo"},"content":"    //                FindCommand.COMMAND_WORD + \" n/Baron\");","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"Tohtoroo"},"content":"    //        assertEquals(new FindCommand(new FindPredicate(","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"Tohtoroo"},"content":"    //                testName, emptySubPostal, emptyAge, emptyDate, emptyVariants)), command);","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"Tohtoroo"},"content":"    //    }","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Tohtoroo":19,"markusyeo":21,"sumhungyee":1,"-":65}},{"path":"src/test/java/seedu/dengue/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.AGE_DESC_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.AGE_DESC_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.DATE_DESC_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.INVALID_AGE_DESC;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.INVALID_POSTAL_DESC;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.INVALID_VARIANT_DESC;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.POSTAL_DESC_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.POSTAL_DESC_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_VARIANT_DENV1_UPPERCASE;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_VARIANT_DENV2_UPPERCASE;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VARIANT_DESC_DENV1;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VARIANT_DESC_DENV2;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_VARIANT;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.index.Index;","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.EditCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Postal;","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"axmszr"},"content":"    private static final String VARIANT_EMPTY \u003d \" \" + PREFIX_VARIANT;","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"sumhungyee"},"content":"        assertParseFailure(parser, \"1\" + INVALID_POSTAL_DESC, Postal.MESSAGE_CONSTRAINTS); // invalid postal","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"sumhungyee"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC, Date.MESSAGE_CONSTRAINTS); // invalid date","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"markusyeo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_AGE_DESC, Age.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"axmszr"},"content":"        assertParseFailure(parser, \"1\" + INVALID_VARIANT_DESC, Variant.MESSAGE_CONSTRAINTS); // invalid var","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"sumhungyee"},"content":"        // invalid postal followed by valid date","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"markusyeo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_POSTAL_DESC + DATE_DESC_AMY, Postal.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"sumhungyee"},"content":"        // valid postal followed by invalid postal. The test case for invalid postal followed by valid postal","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"sumhungyee"},"content":"        assertParseFailure(parser, \"1\" + POSTAL_DESC_BOB + INVALID_POSTAL_DESC, Postal.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"axmszr"},"content":"        // while parsing {@code PREFIX_VARIANT} alone will reset the dengue variants of the {@code Person} being edited,","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"axmszr"},"content":"        // parsing it together with a valid variant results in error","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"axmszr"},"content":"        assertParseFailure(parser, \"1\" + VARIANT_DESC_DENV2 + VARIANT_DESC_DENV1 + VARIANT_EMPTY,","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"axmszr"},"content":"                Variant.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"axmszr"},"content":"        assertParseFailure(parser, \"1\" + VARIANT_DESC_DENV2 + VARIANT_EMPTY + VARIANT_DESC_DENV1,","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"axmszr"},"content":"                Variant.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"axmszr"},"content":"        assertParseFailure(parser, \"1\" + VARIANT_EMPTY + VARIANT_DESC_DENV2 + VARIANT_DESC_DENV1,","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"axmszr"},"content":"                Variant.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"markusyeo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_DATE_DESC","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"markusyeo"},"content":"                        + VALID_AGE_AMY + VALID_POSTAL_AMY,","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":115,"author":{"gitId":"axmszr"},"content":"        String userInput \u003d targetIndex.getOneBased() + POSTAL_DESC_BOB + VARIANT_DESC_DENV1","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"axmszr"},"content":"                + DATE_DESC_AMY + AGE_DESC_AMY + NAME_DESC_AMY + VARIANT_DESC_DENV2;","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"markusyeo"},"content":"                .withPostal(VALID_POSTAL_BOB).withDate(VALID_DATE_AMY).withAddress(VALID_AGE_AMY)","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"Tohtoroo"},"content":"                .withVariants(VALID_VARIANT_DENV1_UPPERCASE, VALID_VARIANT_DENV2_UPPERCASE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"markusyeo"},"content":"        String userInput \u003d targetIndex.getOneBased() + POSTAL_DESC_BOB + DATE_DESC_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"sumhungyee"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPostal(VALID_POSTAL_BOB)","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"markusyeo"},"content":"                .withDate(VALID_DATE_AMY).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"sumhungyee"},"content":"        // postal","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"sumhungyee"},"content":"        userInput \u003d targetIndex.getOneBased() + POSTAL_DESC_AMY;","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"sumhungyee"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPostal(VALID_POSTAL_AMY).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"sumhungyee"},"content":"        // date","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"markusyeo"},"content":"        userInput \u003d targetIndex.getOneBased() + DATE_DESC_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"markusyeo"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDate(VALID_DATE_AMY).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"markusyeo"},"content":"        userInput \u003d targetIndex.getOneBased() + AGE_DESC_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":161,"author":{"gitId":"markusyeo"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_AGE_AMY).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"axmszr"},"content":"        // variants","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"axmszr"},"content":"        userInput \u003d targetIndex.getOneBased() + VARIANT_DESC_DENV2;","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"Tohtoroo"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withVariants(VALID_VARIANT_DENV2_UPPERCASE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"markusyeo"},"content":"        String userInput \u003d targetIndex.getOneBased() + POSTAL_DESC_AMY + AGE_DESC_AMY + DATE_DESC_AMY","lastModifiedDate":"2023-03-04"},{"lineNumber":176,"author":{"gitId":"axmszr"},"content":"                + VARIANT_DESC_DENV2 + POSTAL_DESC_AMY + AGE_DESC_AMY + DATE_DESC_AMY + VARIANT_DESC_DENV2","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"axmszr"},"content":"                + POSTAL_DESC_BOB + AGE_DESC_BOB + DATE_DESC_BOB + VARIANT_DESC_DENV1;","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"sumhungyee"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPostal(VALID_POSTAL_BOB)","lastModifiedDate":"2023-02-28"},{"lineNumber":180,"author":{"gitId":"markusyeo"},"content":"                .withDate(VALID_DATE_BOB).withAddress(VALID_AGE_BOB)","lastModifiedDate":"2023-03-04"},{"lineNumber":181,"author":{"gitId":"Tohtoroo"},"content":"                .withVariants(VALID_VARIANT_DENV2_UPPERCASE, VALID_VARIANT_DENV1_UPPERCASE)","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":192,"author":{"gitId":"sumhungyee"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_POSTAL_DESC + POSTAL_DESC_BOB;","lastModifiedDate":"2023-02-28"},{"lineNumber":193,"author":{"gitId":"sumhungyee"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPostal(VALID_POSTAL_BOB).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"markusyeo"},"content":"        userInput \u003d targetIndex.getOneBased() + DATE_DESC_BOB + INVALID_POSTAL_DESC + AGE_DESC_BOB","lastModifiedDate":"2023-03-04"},{"lineNumber":199,"author":{"gitId":"sumhungyee"},"content":"                + POSTAL_DESC_BOB;","lastModifiedDate":"2023-02-28"},{"lineNumber":200,"author":{"gitId":"markusyeo"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPostal(VALID_POSTAL_BOB)","lastModifiedDate":"2023-03-04"},{"lineNumber":201,"author":{"gitId":"markusyeo"},"content":"                .withDate(VALID_DATE_BOB)","lastModifiedDate":"2023-03-04"},{"lineNumber":202,"author":{"gitId":"markusyeo"},"content":"                .withAddress(VALID_AGE_BOB).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"axmszr"},"content":"    public void parse_resetVariants_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"axmszr"},"content":"        String userInput \u003d targetIndex.getOneBased() + VARIANT_EMPTY;","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"axmszr"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withVariants().build();","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Tohtoroo":5,"markusyeo":51,"axmszr":24,"sumhungyee":14,"-":123}},{"path":"src/test/java/seedu/dengue/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"//import static seedu.dengue.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"//import static seedu.dengue.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"//import static seedu.dengue.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"//","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"//import java.util.HashSet;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"//import java.util.Optional;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"//import java.util.Set;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"//","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"//","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.logic.commands.FindCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.person.SubPostal;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.predicate.FindPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"    private final FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"    //    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"    //    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"    //        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"    //        FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"    //    }","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"    //    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"    //    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"    //        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"    //        Optional\u003cSubPostal\u003e emptySubPostal \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"    //        Optional\u003cName\u003e testName \u003d Optional.of(new Name(\"Alice\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"    //        Optional\u003cAge\u003e emptyAge \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"    //        Optional\u003cDate\u003e emptyDate \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"    //        Set\u003cVariant\u003e emptyVariants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"    //        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"    //                new FindCommand(new FindPredicate(testName, emptySubPostal, emptyAge, emptyDate, emptyVariants));","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"    //        assertParseSuccess(parser, \"n/Alice\", expectedFindCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"    //        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"    //        assertParseSuccess(parser, \" n/\\n Alice \", expectedFindCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"    //    }","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Tohtoroo":40,"markusyeo":1,"-":6}},{"path":"src/test/java/seedu/dengue/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Postal;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"    private static final String INVALID_POSTAL \u003d \"+651234\";","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"    private static final String INVALID_AGE \u003d \" \";","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"    private static final String INVALID_DATE \u003d \"example.com\";","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"axmszr"},"content":"    private static final String INVALID_VARIANT \u003d \"#DENV1\";","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"sumhungyee"},"content":"    private static final String VALID_POSTAL \u003d \"123456\";","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"    private static final String VALID_AGE \u003d \"25\";","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"    private static final String VALID_DATE \u003d \"2023-02-25\";","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"axmszr"},"content":"    private static final String VALID_VARIANT_1 \u003d \"DENV1\";","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"axmszr"},"content":"    private static final String VALID_VARIANT_2 \u003d \"DENV2\";","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"sumhungyee"},"content":"    public void parsePostal_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"sumhungyee"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePostal((String) null));","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"sumhungyee"},"content":"    public void parsePostal_invalidValue_throwsParseException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"sumhungyee"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePostal(INVALID_POSTAL));","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"sumhungyee"},"content":"    public void parsePostal_validValueWithoutWhitespace_returnsPostal() throws Exception {","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"sumhungyee"},"content":"        Postal expectedPostal \u003d new Postal(VALID_POSTAL);","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"sumhungyee"},"content":"        assertEquals(expectedPostal, ParserUtil.parsePostal(VALID_POSTAL));","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"sumhungyee"},"content":"    public void parsePostal_validValueWithWhitespace_returnsTrimmedPostal() throws Exception {","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"sumhungyee"},"content":"        String postalWithWhitespace \u003d WHITESPACE + VALID_POSTAL + WHITESPACE;","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"sumhungyee"},"content":"        Postal expectedPostal \u003d new Postal(VALID_POSTAL);","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"sumhungyee"},"content":"        assertEquals(expectedPostal, ParserUtil.parsePostal(postalWithWhitespace));","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"markusyeo"},"content":"    public void parseAge_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"markusyeo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAge((String) null));","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"markusyeo"},"content":"    public void parseAge_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"markusyeo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAge(INVALID_AGE));","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"markusyeo"},"content":"    public void parseAge_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"markusyeo"},"content":"        Age expectedAge \u003d new Age(VALID_AGE);","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"markusyeo"},"content":"        assertEquals(expectedAge, ParserUtil.parseAge(VALID_AGE));","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"markusyeo"},"content":"    public void parseAge_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"markusyeo"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_AGE + WHITESPACE;","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"markusyeo"},"content":"        Age expectedAge \u003d new Age(VALID_AGE);","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"markusyeo"},"content":"        assertEquals(expectedAge, ParserUtil.parseAge(addressWithWhitespace));","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"markusyeo"},"content":"    public void parseDate_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"markusyeo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDate((String) null));","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"markusyeo"},"content":"    public void parseDate_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"markusyeo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE));","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"sumhungyee"},"content":"    public void parseDate_validValueWithoutWhitespace_returnsDate() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"markusyeo"},"content":"        Date expectedDate \u003d new Date(VALID_DATE);","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"markusyeo"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(VALID_DATE));","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"sumhungyee"},"content":"    public void parseDate_validValueWithWhitespace_returnsTrimmedDate() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"sumhungyee"},"content":"        String dateWithWhitespace \u003d WHITESPACE + VALID_DATE + WHITESPACE;","lastModifiedDate":"2023-03-04"},{"lineNumber":147,"author":{"gitId":"markusyeo"},"content":"        Date expectedDate \u003d new Date(VALID_DATE);","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"sumhungyee"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(dateWithWhitespace));","lastModifiedDate":"2023-03-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"axmszr"},"content":"    public void parseVariant_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"axmszr"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseVariant(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"axmszr"},"content":"    public void parseVariant_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"axmszr"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseVariant(INVALID_VARIANT));","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"axmszr"},"content":"    public void parseVariant_validValueWithoutWhitespace_returnsVariant() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"axmszr"},"content":"        Variant expectedVariant \u003d new Variant(VALID_VARIANT_1);","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"axmszr"},"content":"        assertEquals(expectedVariant, ParserUtil.parseVariant(VALID_VARIANT_1));","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"axmszr"},"content":"    public void parseVariant_validValueWithWhitespace_returnsTrimmedVariant() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"axmszr"},"content":"        String variantWithWhitespace \u003d WHITESPACE + VALID_VARIANT_1 + WHITESPACE;","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"axmszr"},"content":"        Variant expectedVariant \u003d new Variant(VALID_VARIANT_1);","lastModifiedDate":"2023-03-23"},{"lineNumber":171,"author":{"gitId":"axmszr"},"content":"        assertEquals(expectedVariant, ParserUtil.parseVariant(variantWithWhitespace));","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"axmszr"},"content":"    public void parseVariants_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"axmszr"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseVariants(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"axmszr"},"content":"    public void parseVariants_collectionWithInvalidVariants_throwsParseException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"axmszr"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseVariants(","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"axmszr"},"content":"                Arrays.asList(VALID_VARIANT_1, INVALID_VARIANT)));","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"axmszr"},"content":"    public void parseVariants_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"axmszr"},"content":"        assertTrue(ParserUtil.parseVariants(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"axmszr"},"content":"    public void parseVariants_collectionWithValidVariants_returnsVariantSet() throws Exception {","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"axmszr"},"content":"        Set\u003cVariant\u003e actualVariantSet \u003d ParserUtil.parseVariants(Arrays.asList(VALID_VARIANT_1, VALID_VARIANT_2));","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"axmszr"},"content":"        Set\u003cVariant\u003e expectedVariantSet \u003d new HashSet\u003c\u003e(","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"axmszr"},"content":"                Arrays.asList(new Variant(VALID_VARIANT_1), new Variant(VALID_VARIANT_2)));","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"axmszr"},"content":"        assertEquals(expectedVariantSet, actualVariantSet);","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"markusyeo":31,"axmszr":27,"sumhungyee":17,"-":123}},{"path":"src/test/java/seedu/dengue/model/DengueHotspotTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_VARIANT_DENV1_UPPERCASE;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.getTypicalDengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.testutil.PersonBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"public class DengueHotspotTrackerTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"    private final DengueHotspotTracker dengueHotspotTracker \u003d new DengueHotspotTracker();","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"    public void constructor() {","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"        assertEquals(Collections.emptyList(), dengueHotspotTracker.getPersonList());","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"        assertThrows(NullPointerException.class, () -\u003e dengueHotspotTracker.resetData(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"markusyeo"},"content":"    public void resetData_withValidReadOnlyDengueHotspotTracker_replacesData() {","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"markusyeo"},"content":"        DengueHotspotTracker newData \u003d getTypicalDengueHotspotTracker();","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"markusyeo"},"content":"        dengueHotspotTracker.resetData(newData);","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"markusyeo"},"content":"        assertEquals(newData, dengueHotspotTracker);","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"markusyeo"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"markusyeo"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"sumhungyee"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"sumhungyee"},"content":"                .withAge(VALID_AGE_ALICE)","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"sumhungyee"},"content":"                .withPostal(VALID_POSTAL_ALICE)","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"sumhungyee"},"content":"                .withVariants(VALID_VARIANT_DENV1_UPPERCASE)","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"markusyeo"},"content":"                .build();","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"markusyeo"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"markusyeo"},"content":"        DengueHotspotTrackerStub newData \u003d new DengueHotspotTrackerStub(newPersons);","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"markusyeo"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e dengueHotspotTracker.resetData(newData));","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"markusyeo"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"markusyeo"},"content":"        assertThrows(NullPointerException.class, () -\u003e dengueHotspotTracker.hasPerson(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"markusyeo"},"content":"    public void hasPerson_personNotInDengueHotspotTracker_returnsFalse() {","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"markusyeo"},"content":"        assertFalse(dengueHotspotTracker.hasPerson(ALICE));","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"markusyeo"},"content":"    public void hasPerson_personInDengueHotspotTracker_returnsTrue() {","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"markusyeo"},"content":"        dengueHotspotTracker.addPerson(ALICE);","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"markusyeo"},"content":"        assertTrue(dengueHotspotTracker.hasPerson(ALICE));","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"markusyeo"},"content":"    public void hasPerson_personWithSameIdentityFieldsInDengueHotspotTracker_returnsTrue() {","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"markusyeo"},"content":"        dengueHotspotTracker.addPerson(ALICE);","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"sumhungyee"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAge(VALID_AGE_ALICE)","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"sumhungyee"},"content":"                .withPostal(VALID_POSTAL_ALICE).withVariants(VALID_VARIANT_DENV1_UPPERCASE)","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"markusyeo"},"content":"                .build();","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"markusyeo"},"content":"        assertTrue(dengueHotspotTracker.hasPerson(editedAlice));","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"markusyeo"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"markusyeo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e dengueHotspotTracker.getPersonList().remove(0));","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"markusyeo"},"content":"     * A stub ReadOnlyDengueHotspotTracker whose persons list can violate interface constraints.","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"markusyeo"},"content":"    private static class DengueHotspotTrackerStub implements ReadOnlyDengueHotspotTracker {","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"markusyeo"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"markusyeo"},"content":"        DengueHotspotTrackerStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"markusyeo"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"markusyeo"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"markusyeo"},"content":"        @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"markusyeo"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"markusyeo"},"content":"            return persons;","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"markusyeo"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"sumhungyee"},"content":"        /**","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"sumhungyee"},"content":"         * Returns itself","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"sumhungyee"},"content":"         * @return itself.","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"sumhungyee"},"content":"         */","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"sumhungyee"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"sumhungyee"},"content":"        public ReadOnlyDengueHotspotTracker generateDeepCopy() {","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"sumhungyee"},"content":"            return this;","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"markusyeo"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"Tohtoroo":1,"markusyeo":98,"sumhungyee":17}},{"path":"src/test/java/seedu/dengue/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"//import static seedu.dengue.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"//import static seedu.dengue.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"//import java.util.HashSet;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"//import java.util.Optional;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"//import java.util.Set;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.GuiSettings;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.person.SubPostal;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.predicate.FindPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.testutil.DengueHotspotTrackerBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"        assertEquals(new DengueHotspotTracker(), new DengueHotspotTracker(modelManager.getDengueHotspotTracker()));","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"markusyeo"},"content":"        userPrefs.setDengueHotspotTrackerFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"markusyeo"},"content":"        userPrefs.setDengueHotspotTrackerFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"markusyeo"},"content":"    public void setDengueHotspotTrackerFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"markusyeo"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setDengueHotspotTrackerFilePath(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"markusyeo"},"content":"    public void setDengueHotspotTrackerFilePath_validPath_setsDengueHotspotTrackerFilePath() {","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"markusyeo"},"content":"        modelManager.setDengueHotspotTrackerFilePath(path);","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"markusyeo"},"content":"        assertEquals(path, modelManager.getDengueHotspotTrackerFilePath());","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"markusyeo"},"content":"    public void hasPerson_personNotInDengueHotspotTracker_returnsFalse() {","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"markusyeo"},"content":"    public void hasPerson_personInDengueHotspotTracker_returnsTrue() {","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"Tohtoroo"},"content":"    //    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"Tohtoroo"},"content":"    //    public void equals() {","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"Tohtoroo"},"content":"    //        DengueHotspotTracker dengueHotspotTracker \u003d new DengueHotspotTrackerBuilder()","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"Tohtoroo"},"content":"    //                .withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"Tohtoroo"},"content":"    //        DengueHotspotTracker differentDengueHotspotTracker \u003d new DengueHotspotTracker();","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"Tohtoroo"},"content":"    //        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"Tohtoroo"},"content":"    //        // same values -\u003e returns true","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"Tohtoroo"},"content":"    //        modelManager \u003d new ModelManager(dengueHotspotTracker, userPrefs);","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"Tohtoroo"},"content":"    //        ModelManager modelManagerCopy \u003d new ModelManager(dengueHotspotTracker, userPrefs);","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"Tohtoroo"},"content":"    //        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"Tohtoroo"},"content":"    //        // same object -\u003e returns true","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"Tohtoroo"},"content":"    //        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"Tohtoroo"},"content":"    //        // null -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"Tohtoroo"},"content":"    //        assertFalse(modelManager.equals(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"Tohtoroo"},"content":"    //        // different types -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"Tohtoroo"},"content":"    //        assertFalse(modelManager.equals(5));","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"Tohtoroo"},"content":"    //        // different dengueHotspotTracker -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"Tohtoroo"},"content":"    //        assertFalse(modelManager.equals(new ModelManager(differentDengueHotspotTracker, userPrefs)));","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"Tohtoroo"},"content":"    //        // different filteredList -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"Tohtoroo"},"content":"    //        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"Tohtoroo"},"content":"    //        Optional\u003cSubPostal\u003e emptySubPostal \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"Tohtoroo"},"content":"    //        Optional\u003cName\u003e testName \u003d Optional.of(new Name(\"Alice Pauline\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"Tohtoroo"},"content":"    //        Optional\u003cAge\u003e emptyAge \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"Tohtoroo"},"content":"    //        Optional\u003cDate\u003e emptyDate \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"Tohtoroo"},"content":"    //        Set\u003cVariant\u003e emptyVariants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"Tohtoroo"},"content":"    //        modelManager.updateFilteredPersonList(new FindPredicate(testName,","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"Tohtoroo"},"content":"    //                emptySubPostal, emptyAge, emptyDate, emptyVariants));","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"Tohtoroo"},"content":"    //        assertFalse(modelManager.equals(new ModelManager(dengueHotspotTracker, userPrefs)));","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"Tohtoroo"},"content":"    //        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"Tohtoroo"},"content":"    //        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"Tohtoroo"},"content":"    //","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"Tohtoroo"},"content":"    //        // different userPrefs -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"Tohtoroo"},"content":"    //        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"Tohtoroo"},"content":"    //        differentUserPrefs.setDengueHotspotTrackerFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"Tohtoroo"},"content":"    //        assertFalse(modelManager.equals(new ModelManager(dengueHotspotTracker, differentUserPrefs)));","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"Tohtoroo"},"content":"    //    }","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Tohtoroo":55,"markusyeo":14,"-":77}},{"path":"src/test/java/seedu/dengue/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"    public void setDengueHotspotTrackerFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setDengueHotspotTrackerFilePath(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"markusyeo":4,"-":17}},{"path":"src/test/java/seedu/dengue/model/person/AgeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"public class AgeTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Age(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"        String invalidAge \u003d \"\";","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Age(invalidAge));","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"    public void isValidAge() {","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"        // null age","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"        assertThrows(NullPointerException.class, () -\u003e Age.isValidAge(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"        // invalid age","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"        assertFalse(Age.isValidAge(\"\")); // empty string","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"        assertFalse(Age.isValidAge(\" \")); // spaces only","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"        assertFalse(Age.isValidAge(\"200\")); // \u003e 199","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"        assertFalse(Age.isValidAge(\"a\")); // non numerical","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"        assertFalse(Age.isValidAge(\"2@\")); // illegal special characters","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"        assertFalse(Age.isValidAge(\"#@\")); // special characters","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"        // valid ages","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"        assertTrue(Age.isValidAge(\"0\")); // Boundary case 0","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"        assertTrue(Age.isValidAge(\"1\")); // long address","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"        assertTrue(Age.isValidAge(\"10\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"        assertTrue(Age.isValidAge(\"21\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"        assertTrue(Age.isValidAge(\"32\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"markusyeo"},"content":"        assertTrue(Age.isValidAge(\"43\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"markusyeo"},"content":"        assertTrue(Age.isValidAge(\"54\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"markusyeo"},"content":"        assertTrue(Age.isValidAge(\"65\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"markusyeo"},"content":"        assertTrue(Age.isValidAge(\"76\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"markusyeo"},"content":"        assertTrue(Age.isValidAge(\"87\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"markusyeo"},"content":"        assertTrue(Age.isValidAge(\"98\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"markusyeo"},"content":"        assertTrue(Age.isValidAge(\"100\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"markusyeo"},"content":"        assertTrue(Age.isValidAge(\"199\")); // Boundary case 199","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"markusyeo"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"markusyeo":50}},{"path":"src/test/java/seedu/dengue/model/person/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"public class DateTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"sumhungyee"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"    public void isValidDate() {","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"        // null date","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"sumhungyee"},"content":"        // blank date","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"        assertFalse(Date.isValidDate(\"\")); // empty string","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"        assertFalse(Date.isValidDate(\" \")); // spaces only","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"sumhungyee"},"content":"        // wrong formats","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"        assertFalse(Date.isValidDate(\"2000-1-01\")); // single-digit month","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"valerietanhx"},"content":"        assertFalse(Date.isValidDate(\"2000-01-1\")); // single-digit day","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"valerietanhx"},"content":"        assertFalse(Date.isValidDate(\"23-01-01\")); // two-digit year","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"sumhungyee"},"content":"        assertFalse(Date.isValidDate(\"23/Janrrr/01\")); // invalid month string","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"sumhungyee"},"content":"        assertFalse(Date.isValidDate(\"23/may/may/01\")); // multiple months","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"        // missing parts","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"        assertFalse(Date.isValidDate(\"1999-12\")); // missing day","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"markusyeo"},"content":"        assertFalse(Date.isValidDate(\"1999--31\")); // missing month","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"markusyeo"},"content":"        assertFalse(Date.isValidDate(\"-12-12\")); // missing year","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"markusyeo"},"content":"        // invalid parts","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"valerietanhx"},"content":"        assertFalse(Date.isValidDate(\"2000-11-32\")); // invalid day","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"valerietanhx"},"content":"        assertFalse(Date.isValidDate(\"2023-02-29\")); // invalid day given month","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"valerietanhx"},"content":"        assertFalse(Date.isValidDate(\"2000-13-13\")); // invalid month","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"sumhungyee"},"content":"        // valid date","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"        assertTrue(Date.isValidDate(\"1999-04-26\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"sumhungyee"},"content":"        assertTrue(Date.isValidDate(\"2000/01/01\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"sumhungyee"},"content":"        assertTrue(Date.isValidDate(\"$2000-01-01\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"sumhungyee"},"content":"        assertTrue(Date.isValidDate(\"01-01-2000\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"sumhungyee"},"content":"        assertTrue(Date.isValidDate(\"1999//// january $$$$-26\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"sumhungyee"},"content":"        assertTrue(Date.isValidDate(\"1999//// dec::::: 26:::\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"valerietanhx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"markusyeo"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"markusyeo":34,"valerietanhx":7,"sumhungyee":19}},{"path":"src/test/java/seedu/dengue/model/person/FindPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"Tohtoroo"},"content":"//","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Tohtoroo"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"//","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Tohtoroo"},"content":"//import java.util.HashSet;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"//import java.util.Optional;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"//import java.util.Set;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"//","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"//","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.predicate.FindPredicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Tohtoroo"},"content":"//import seedu.dengue.testutil.PersonBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"Tohtoroo"},"content":"public class FindPredicateTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"//    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"//    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"//        // One keyword","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"//        Optional\u003cSubPostal\u003e emptySubPostal \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"//        Optional\u003cName\u003e emptyName \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"//        Optional\u003cAge\u003e emptyAge \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"//        Optional\u003cDate\u003e emptyDate \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Tohtoroo"},"content":"//        Set\u003cVariant\u003e emptyVariants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"//        Optional\u003cName\u003e testName \u003d Optional.of(new Name(\"ALICE\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Tohtoroo"},"content":"//","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"//        //one keyword all case","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"//        FindPredicate predicate \u003d new FindPredicate(","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"//                testName, emptySubPostal, emptyAge, emptyDate, emptyVariants);","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"//","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"//        testName \u003d Optional.of(new Name(\"ALICE BOB\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"//        // Multiple keywords","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"//        predicate \u003d new FindPredicate(","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Tohtoroo"},"content":"//                testName, emptySubPostal, emptyAge, emptyDate, emptyVariants);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Tohtoroo"},"content":"//","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"//        testName \u003d Optional.of(new Name(\"ALicE BoB\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"//        // Mixed-case keywords","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"//        predicate \u003d new FindPredicate(","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"//                testName, emptySubPostal, emptyAge, emptyDate, emptyVariants);","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"//    }","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"//    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"//    public void test_nameDoesNotContainKeywords_returnsFalse() throws ParseException {","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"//","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"//        Optional\u003cSubPostal\u003e emptySubPostal \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"Tohtoroo"},"content":"//        Optional\u003cName\u003e emptyName \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"Tohtoroo"},"content":"//        Optional\u003cAge\u003e emptyAge \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"Tohtoroo"},"content":"//        Optional\u003cDate\u003e emptyDate \u003d Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"Tohtoroo"},"content":"//        Set\u003cVariant\u003e emptyVariants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"Tohtoroo"},"content":"//","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"Tohtoroo"},"content":"//        // Zero keywords","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"Tohtoroo"},"content":"//        FindPredicate predicate \u003d new FindPredicate(","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"Tohtoroo"},"content":"//                emptyName, emptySubPostal, emptyAge, emptyDate, emptyVariants);","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"Tohtoroo"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"Tohtoroo"},"content":"//","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"Tohtoroo"},"content":"//        // Non-matching keyword","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"Tohtoroo"},"content":"//        Optional\u003cName\u003e testName \u003d Optional.of(new Name(\"Carol\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"Tohtoroo"},"content":"//        predicate \u003d new FindPredicate(","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Tohtoroo"},"content":"//                testName, emptySubPostal, emptyAge, emptyDate, emptyVariants);","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Tohtoroo"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"Tohtoroo"},"content":"//    }","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Tohtoroo":63,"markusyeo":1,"-":3}},{"path":"src/test/java/seedu/dengue/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"markusyeo":2,"-":38}},{"path":"src/test/java/seedu/dengue/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_DATE_ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_NAME_ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_VARIANT_DENV2_UPPERCASE;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.testutil.PersonBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"axmszr"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getVariants().remove(0));","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"sumhungyee"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPostal(VALID_POSTAL_BOB)","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"                .withDate(VALID_DATE_BOB)","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"                .withAge(VALID_AGE_BOB).withVariants(VALID_VARIANT_DENV2_UPPERCASE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"sumhungyee"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"sumhungyee"},"content":"        // name same, all other attributes same -\u003e returns true","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"sumhungyee"},"content":"        Person duplicateAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"sumhungyee"},"content":"                .withName(VALID_NAME_ALICE)","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"sumhungyee"},"content":"                .withAge(VALID_AGE_ALICE)","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"sumhungyee"},"content":"                .withDate(VALID_DATE_ALICE)","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"sumhungyee"},"content":"                .withPostal(VALID_POSTAL_ALICE)","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"sumhungyee"},"content":"                .build();","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"sumhungyee"},"content":"        assertTrue(ALICE.isSamePerson(duplicateAlice));","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"markusyeo"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPostal(VALID_POSTAL_BOB).build();","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"sumhungyee"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"markusyeo"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withDate(VALID_DATE_BOB).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"markusyeo"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAge(VALID_AGE_BOB).build();","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":101,"author":{"gitId":"axmszr"},"content":"        // different variants -\u003e returns false","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"Tohtoroo"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withVariants(VALID_VARIANT_DENV2_UPPERCASE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Tohtoroo":3,"markusyeo":14,"axmszr":2,"sumhungyee":16,"-":70}},{"path":"src/test/java/seedu/dengue/model/person/PostalTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"sumhungyee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"public class PostalTest {","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"sumhungyee"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Postal(null));","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"sumhungyee"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"sumhungyee"},"content":"    public void constructor_invalidPostal_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"        String invalidPostal \u003d \"\";","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Postal(invalidPostal));","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"sumhungyee"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"    public void isValidPostal() {","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"        // null postal number","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"        assertThrows(NullPointerException.class, () -\u003e Postal.isValidPostal(null));","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"sumhungyee"},"content":"        // invalid postal numbers","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"        assertFalse(Postal.isValidPostal(\"\")); // empty string","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"sumhungyee"},"content":"        assertFalse(Postal.isValidPostal(\" \")); // spaces only","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"sumhungyee"},"content":"        assertFalse(Postal.isValidPostal(\"91\")); // less than 3 numbers","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"sumhungyee"},"content":"        assertFalse(Postal.isValidPostal(\"postal\")); // non-numeric","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"sumhungyee"},"content":"        assertFalse(Postal.isValidPostal(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"sumhungyee"},"content":"        assertFalse(Postal.isValidPostal(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"valerietanhx"},"content":"        assertFalse(Postal.isValidPostal(\"999999\")); // invalid postal sector","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"sumhungyee"},"content":"        // valid postal numbers","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"valerietanhx"},"content":"        assertTrue(Postal.isValidPostal(\"111222\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"valerietanhx"},"content":"        assertTrue(Postal.isValidPostal(\"821750\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"valerietanhx"},"content":"        assertTrue(Postal.isValidPostal(\"024293\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"sumhungyee"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"markusyeo":2,"valerietanhx":4,"sumhungyee":35}},{"path":"src/test/java/seedu/dengue/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.model.person;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_DATE_ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_VARIANT_DENV1_UPPERCASE;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.testutil.PersonBuilder;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"sumhungyee"},"content":"    public void contains_personWithSameNameInList_returnsFalse() {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAge(VALID_AGE_BOB).withVariants(VALID_VARIANT_DENV1_UPPERCASE)","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"sumhungyee"},"content":"        assertFalse(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"sumhungyee"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"sumhungyee"},"content":"    public void contains_personWithSameDetailsInList_returnsTrue() {","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"sumhungyee"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"sumhungyee"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"sumhungyee"},"content":"                .withAge(VALID_AGE_ALICE)","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"sumhungyee"},"content":"                .withDate(VALID_DATE_ALICE)","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"sumhungyee"},"content":"                .withPostal(VALID_POSTAL_ALICE)","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"sumhungyee"},"content":"                .withVariants(VALID_VARIANT_DENV1_UPPERCASE)","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"Tohtoroo"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAge(VALID_AGE_BOB).withVariants(VALID_VARIANT_DENV1_UPPERCASE)","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Tohtoroo":3,"markusyeo":8,"sumhungyee":15,"-":159}},{"path":"src/test/java/seedu/dengue/model/variant/VariantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"axmszr"},"content":"package seedu.dengue.model.variant;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"axmszr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"public class VariantTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"axmszr"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"axmszr"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Variant(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"axmszr"},"content":"    public void constructor_invalidVariantName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"axmszr"},"content":"        String invalidVariantName \u003d \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"axmszr"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Variant(invalidVariantName));","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"axmszr"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"axmszr"},"content":"    public void isValidVariantName() {","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"axmszr"},"content":"        // null variant name","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"axmszr"},"content":"        assertThrows(NullPointerException.class, () -\u003e Variant.isValidVariantName(null));","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"axmszr"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"axmszr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"axmszr"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"axmszr":26}},{"path":"src/test/java/seedu/dengue/storage/CsvDengueHotspotTrackerStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.storage;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.HOON;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.IDA;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.getTypicalDengueHotspotTracker;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvDataTypeMismatchException;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"import com.opencsv.exceptions.CsvRequiredFieldEmptyException;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.DengueHotspotTracker;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ReadOnlyDengueHotspotTracker;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.testutil.TypicalPersons;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"public class CsvDengueHotspotTrackerStorageTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\",","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"            \"data\", \"CsvDengueHotspotTrackerStorageTest\");","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"    private static final String TYPICAL_PERSONS_FILE \u003d \"typicalPersonsDengueHotspotTracker.csv\";","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"    @TempDir","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"    public void readDengueHotspotTracker_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"        assertThrows(NullPointerException.class, () -\u003e readDengueHotspotTracker(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"markusyeo"},"content":"    private java.util.Optional\u003cReadOnlyDengueHotspotTracker\u003e readDengueHotspotTracker(String filePath)","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"markusyeo"},"content":"            throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"markusyeo"},"content":"        return new CsvDengueHotspotStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"markusyeo"},"content":"                .readDengueHotspotTracker(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"markusyeo"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"markusyeo"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"markusyeo"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"markusyeo"},"content":"                : null;","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"markusyeo"},"content":"    public void readDengueHotspotTracker_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"markusyeo"},"content":"        Optional\u003cReadOnlyDengueHotspotTracker\u003e dataFromFile \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"markusyeo"},"content":"                readDengueHotspotTracker(TYPICAL_PERSONS_FILE);","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"markusyeo"},"content":"        if (dataFromFile.isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"markusyeo"},"content":"            ReadOnlyDengueHotspotTracker dengueHotspotTrackerFromFile \u003d dataFromFile.get();","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"markusyeo"},"content":"            DengueHotspotTracker typicalPersonsDengueHotspotTracker \u003d TypicalPersons.getTypicalDengueHotspotTracker();","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"markusyeo"},"content":"            assertEquals(dengueHotspotTrackerFromFile, typicalPersonsDengueHotspotTracker);","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"markusyeo"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"markusyeo"},"content":"            assert false;","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"markusyeo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"markusyeo"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"markusyeo"},"content":"        assertFalse(readDengueHotspotTracker(\"NonExistentFile.csv\").isPresent());","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"markusyeo"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"markusyeo"},"content":"        assertThrows(DataConversionException.class, ()","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"markusyeo"},"content":"                -\u003e readDengueHotspotTracker(\"notCsvFormatDengueHotspotTracker.csv\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"markusyeo"},"content":"    public void readDengueHotspotTracker_invalidPersonDengueHotspotTracker_throwDataConversionException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"markusyeo"},"content":"        assertThrows(DataConversionException.class, ()","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"markusyeo"},"content":"                -\u003e readDengueHotspotTracker(\"invalidPersonDengueHotspotTracker.csv\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"markusyeo"},"content":"    public void readDengueHotspotTracker_invalidAndValidPersonDengueHotspotTracker_throwDataConversionException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"markusyeo"},"content":"        assertThrows(DataConversionException.class, ()","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"markusyeo"},"content":"                -\u003e readDengueHotspotTracker(\"invalidAndValidPersonDengueHotspotTracker.csv\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"markusyeo"},"content":"    public void readAndSaveDengueHotspotTracker_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"markusyeo"},"content":"        Path filePath \u003d testFolder.resolve(\"TempDengueHotspotTracker.csv\");","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"markusyeo"},"content":"        DengueHotspotTracker original \u003d getTypicalDengueHotspotTracker();","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"markusyeo"},"content":"        CsvDengueHotspotStorage csvDengueHotspotStorage \u003d new CsvDengueHotspotStorage(filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"markusyeo"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"markusyeo"},"content":"        csvDengueHotspotStorage.saveDengueHotspotTracker(original, filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"markusyeo"},"content":"        ReadOnlyDengueHotspotTracker readBack \u003d csvDengueHotspotStorage.readDengueHotspotTracker(filePath).get();","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"markusyeo"},"content":"        assertEquals(original, new DengueHotspotTracker(readBack));","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"markusyeo"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"markusyeo"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"markusyeo"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"markusyeo"},"content":"        csvDengueHotspotStorage.saveDengueHotspotTracker(original, filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"markusyeo"},"content":"        readBack \u003d csvDengueHotspotStorage.readDengueHotspotTracker(filePath).get();","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"markusyeo"},"content":"        assertEquals(original, new DengueHotspotTracker(readBack));","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"markusyeo"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"markusyeo"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"markusyeo"},"content":"        csvDengueHotspotStorage.saveDengueHotspotTracker(original); // file path not specified","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"markusyeo"},"content":"        readBack \u003d csvDengueHotspotStorage.readDengueHotspotTracker().get(); // file path not specified","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"markusyeo"},"content":"        assertEquals(original, new DengueHotspotTracker(readBack));","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"markusyeo"},"content":"    public void saveDengueHotspotTracker_nullDengueHotspotTracker_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"markusyeo"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"markusyeo"},"content":"                -\u003e saveDengueHotspotTracker(null, \"SomeFile.csv\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"markusyeo"},"content":"     * Saves {@code dengueHotspotTracker} at the specified {@code filePath}.","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"markusyeo"},"content":"    private void saveDengueHotspotTracker(ReadOnlyDengueHotspotTracker dengueHotspotTracker, String filePath) {","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"markusyeo"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"markusyeo"},"content":"            new CsvDengueHotspotStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"markusyeo"},"content":"                    .saveDengueHotspotTracker(dengueHotspotTracker, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"markusyeo"},"content":"        } catch (IOException | CsvRequiredFieldEmptyException | CsvDataTypeMismatchException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"markusyeo"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", e);","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"markusyeo"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"markusyeo"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"markusyeo"},"content":"    public void saveDengueHotspotTracker_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"markusyeo"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"markusyeo"},"content":"                -\u003e saveDengueHotspotTracker(new DengueHotspotTracker(), null));","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"markusyeo"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"markusyeo":138}},{"path":"src/test/java/seedu/dengue/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.storage;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.GuiSettings;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.UserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"markusyeo"},"content":"        assertThrows(DataConversionException.class, ()","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"markusyeo"},"content":"                -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"markusyeo"},"content":"        userPrefs.setDengueHotspotTrackerFilePath(Paths.get(\"denguehotspottracker.csv\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"axmszr"},"content":"        Path prefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"axmszr"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(prefsFilePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"markusyeo":8,"axmszr":2,"-":114}},{"path":"src/test/java/seedu/dengue/storage/SpecialisedStackForMemoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sumhungyee"},"content":"package seedu.dengue.storage;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"sumhungyee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"import java.util.Random;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.storage.temporary.SpecialisedStackForMemory;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"sumhungyee"},"content":"public class SpecialisedStackForMemoryTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"sumhungyee"},"content":"    private static final int BOUND \u003d 100;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"sumhungyee"},"content":"    private SpecialisedStackForMemory\u003cInteger\u003e specialisedStack;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"sumhungyee"},"content":"    private final Random random \u003d new Random();","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"sumhungyee"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"sumhungyee"},"content":"        this.specialisedStack \u003d new SpecialisedStackForMemory\u003cInteger\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"    // Positive test cases for specialised stack.","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"sumhungyee"},"content":"    public void push_randomIntegers_givesCorrectResults() {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"        for (int i \u003d 0; i \u003c 20; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"sumhungyee"},"content":"            int newInt \u003d random.nextInt(BOUND);","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"sumhungyee"},"content":"            specialisedStack.push(newInt);","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"sumhungyee"},"content":"            assertTrue(specialisedStack.peek() \u003d\u003d newInt);","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"sumhungyee"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"sumhungyee"},"content":"    public void removeOld_randomIntegers_givesCorrectResults() {","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"sumhungyee"},"content":"        int first \u003d BOUND + 1;","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"sumhungyee"},"content":"        specialisedStack.push(first);","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"sumhungyee"},"content":"        for (int i \u003d 0; i \u003c 20; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"sumhungyee"},"content":"            specialisedStack.push(random.nextInt(BOUND));","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"sumhungyee"},"content":"        assertTrue(first \u003d\u003d specialisedStack.removeOld());","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"sumhungyee"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"sumhungyee"},"content":"    public void temporaryPop_randomIntegers_givesCorrectResults() {","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"sumhungyee"},"content":"        ArrayList\u003cInteger\u003e integers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"sumhungyee"},"content":"        for (int i \u003d 0; i \u003c 20; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"sumhungyee"},"content":"            int newInt \u003d random.nextInt(BOUND);","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"sumhungyee"},"content":"            integers.add(newInt);","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"sumhungyee"},"content":"            specialisedStack.push(newInt);","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"sumhungyee"},"content":"        int size \u003d integers.size();","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"sumhungyee"},"content":"        for (int i \u003d size - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"sumhungyee"},"content":"            assertTrue(specialisedStack.temporaryPop() \u003d\u003d integers.get(i));","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"markusyeo"},"content":"        assertTrue(specialisedStack.getUndoHistory().size() \u003d\u003d size);","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"sumhungyee"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"sumhungyee"},"content":"    public void temporaryPopThenPush_randomIntegers_givesCorrectResults() {","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"sumhungyee"},"content":"        ArrayList\u003cInteger\u003e integers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"sumhungyee"},"content":"        for (int i \u003d 0; i \u003c 20; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"sumhungyee"},"content":"            int newInt \u003d random.nextInt(BOUND);","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"sumhungyee"},"content":"            integers.add(newInt);","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"sumhungyee"},"content":"            specialisedStack.push(newInt);","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"sumhungyee"},"content":"        int size \u003d integers.size();","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"sumhungyee"},"content":"        for (int i \u003d size - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"sumhungyee"},"content":"            specialisedStack.temporaryPop();","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"sumhungyee"},"content":"        for (int x : integers) {","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"sumhungyee"},"content":"            specialisedStack.pushOneFromTemporaryPop();","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"sumhungyee"},"content":"            assertTrue(specialisedStack.peek() \u003d\u003d x);","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"sumhungyee"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"markusyeo":1,"sumhungyee":77}},{"path":"src/test/java/seedu/dengue/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.storage;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.TypicalPersons.getTypicalDengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.GuiSettings;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.DengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.ReadOnlyDengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.UserPrefs;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"        CsvDengueHotspotStorage dengueHotspotTrackerStorage \u003d new CsvDengueHotspotStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"        storageManager \u003d new StorageManager(dengueHotspotTrackerStorage, userPrefsStorage);","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"    public void dengueHotspotTrackerReadSave() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"markusyeo"},"content":"         * {@link JsonDengueHotspotTrackerStorage} class.","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"markusyeo"},"content":"         * More extensive testing of UserPref saving/reading is done in","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"markusyeo"},"content":"         * {@link CsvDengueHotspotTrackerStorageTest} class.","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"markusyeo"},"content":"        DengueHotspotTracker original \u003d getTypicalDengueHotspotTracker();","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"markusyeo"},"content":"        storageManager.saveDengueHotspotTracker(original);","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"markusyeo"},"content":"        ReadOnlyDengueHotspotTracker retrieved \u003d storageManager.readDengueHotspotTracker().get();","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"markusyeo"},"content":"        assertEquals(original, new DengueHotspotTracker(retrieved));","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"markusyeo"},"content":"    public void getDengueHotspotTrackerFilePath() {","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"markusyeo"},"content":"        assertNotNull(storageManager.getDengueHotspotTrackerFilePath());","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markusyeo":18,"-":51}},{"path":"src/test/java/seedu/dengue/storage/TemporaryMemoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sumhungyee"},"content":"package seedu.dengue.storage;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"sumhungyee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"sumhungyee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"sumhungyee"},"content":"import java.util.Random;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"sumhungyee"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"sumhungyee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.model.DengueHotspotTracker;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.storage.temporary.TemporaryMemory;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.testutil.DengueHotspotTrackerBuilder;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"sumhungyee"},"content":"public class TemporaryMemoryTest {","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"sumhungyee"},"content":"    private DengueHotspotTrackerBuilder builder;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"sumhungyee"},"content":"    private DengueHotspotTracker tracker;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"sumhungyee"},"content":"    private TemporaryMemory memory;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"sumhungyee"},"content":"    private ArrayList\u003cDengueHotspotTracker\u003e inputs;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"sumhungyee"},"content":"    // Randomly generated states of DengueHotspotTrackers to test.","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"sumhungyee"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"sumhungyee"},"content":"        this.builder \u003d new DengueHotspotTrackerBuilder();","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"        this.tracker \u003d this.builder.buildNew();","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"sumhungyee"},"content":"        this.memory \u003d new TemporaryMemory(this.tracker);","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"sumhungyee"},"content":"        this.inputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"sumhungyee"},"content":"        for (int i \u003d 0; i \u003c 15; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"sumhungyee"},"content":"            inputs.add(builder.buildRandom());","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"sumhungyee"},"content":"    // Positive random test cases.","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"sumhungyee"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"sumhungyee"},"content":"    public void pushManySaves_randomDengueHotspotTrackers_memoryKeepsOnlyTenSaves() {","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"sumhungyee"},"content":"        int i;","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"sumhungyee"},"content":"        for (i \u003d 0; i \u003c 9; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"sumhungyee"},"content":"            this.memory.saveNewLatest(this.inputs.get(i));","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"sumhungyee"},"content":"        assertFalse(this.memory.isFull());","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"markusyeo"},"content":"        while (i \u003c inputs.size()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"sumhungyee"},"content":"            this.memory.saveNewLatest(this.inputs.get(i++));","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"markusyeo"},"content":"            assertEquals(this.memory.getRedoHistory().size(), this.memory.MAX_SIZE);","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"markusyeo"},"content":"            i++;","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"sumhungyee"},"content":"    // Saves multiple files into the stack, then perform undo a number of times","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"sumhungyee"},"content":"    // less than the number of saves.","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"sumhungyee"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"sumhungyee"},"content":"    public void saveMultipleThenUndoFewerTimes_randomNumberOfRandomFiles_loadsCorrectFile()","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"sumhungyee"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"sumhungyee"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"sumhungyee"},"content":"        int numFiles \u003d random.nextInt(10) + 3;","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"sumhungyee"},"content":"        for (int i \u003d 0; i \u003c numFiles; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"sumhungyee"},"content":"            this.memory.saveNewLatest(inputs.get(i));","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"sumhungyee"},"content":"        int numUndos \u003d random.nextInt(numFiles - 2) + 1;","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"sumhungyee"},"content":"        for (int j \u003d 0; j \u003c numUndos; j++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"sumhungyee"},"content":"            this.memory.undo();","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"sumhungyee"},"content":"        assertEquals(this.memory.loadCurrent(), inputs.get(numFiles - numUndos - 1));","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"sumhungyee"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"sumhungyee"},"content":"    public void undoAndPushNew_randomFiles_temporaryStorageEmpty()","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"sumhungyee"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"sumhungyee"},"content":"        this.memory.saveNewLatest(inputs.get(0));","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"sumhungyee"},"content":"        this.memory.saveNewLatest(inputs.get(1));","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"sumhungyee"},"content":"        this.memory.undo();","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"sumhungyee"},"content":"        this.memory.saveNewLatest(inputs.get(2));","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"markusyeo"},"content":"        assertEquals(this.memory.getUndoHistory().size(), 0);","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"sumhungyee"},"content":"    // Negative test cases.","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"sumhungyee"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"sumhungyee"},"content":"    public void undoTooManySteps_threeRandomFiles_throwsCommandException()","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"sumhungyee"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"sumhungyee"},"content":"        this.memory.saveNewLatest(inputs.get(0));","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"sumhungyee"},"content":"        this.memory.saveNewLatest(inputs.get(1));","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"sumhungyee"},"content":"        this.memory.undo();","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"sumhungyee"},"content":"        this.memory.undo();","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"markusyeo"},"content":"        assertEquals(this.memory.getRedoHistory().size(), 1);","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"sumhungyee"},"content":"        assertThrows(CommandException.class, () -\u003e this.memory.undo());","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"sumhungyee"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"sumhungyee"},"content":"    public void redoTooManySteps_threeRandomFiles_throwsCommandException()","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"sumhungyee"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"sumhungyee"},"content":"        this.memory.saveNewLatest(inputs.get(0));","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"sumhungyee"},"content":"        this.memory.saveNewLatest(inputs.get(1));","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"sumhungyee"},"content":"        this.memory.undo();","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"sumhungyee"},"content":"        this.memory.redo();","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"sumhungyee"},"content":"        assertThrows(CommandException.class, () -\u003e this.memory.redo());","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"sumhungyee"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"sumhungyee"},"content":"    public void saveAfterUndoThenRedo_randomFiles_throwsCommandException()","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"sumhungyee"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"sumhungyee"},"content":"        this.memory.saveNewLatest(inputs.get(5));","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"sumhungyee"},"content":"        this.memory.saveNewLatest(inputs.get(6));","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"sumhungyee"},"content":"        this.memory.undo();","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"sumhungyee"},"content":"        this.memory.saveNewLatest(inputs.get(2));","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"sumhungyee"},"content":"        assertThrows(CommandException.class, () -\u003e this.memory.redo());","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"sumhungyee"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"markusyeo":7,"sumhungyee":106}},{"path":"src/test/java/seedu/dengue/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.testutil;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"     * consistency with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"markusyeo":3,"-":31}},{"path":"src/test/java/seedu/dengue/testutil/DengueHotspotTrackerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.testutil;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"sumhungyee"},"content":"import java.util.Random;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.DengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"sumhungyee"},"content":"import seedu.dengue.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":" * A utility class to help with building DengueHotspotTracker objects.","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":" *     {@code DengueHotspotTracker ab \u003d new DengueHotspotTrackerBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"public class DengueHotspotTrackerBuilder {","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"sumhungyee"},"content":"    private static final int BOUND \u003d 15;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"sumhungyee"},"content":"    private static final Random RANDOM \u003d new Random();","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"markusyeo"},"content":"    private DengueHotspotTracker dengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"markusyeo"},"content":"    public DengueHotspotTrackerBuilder() {","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"markusyeo"},"content":"        dengueHotspotTracker \u003d new DengueHotspotTracker();","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"markusyeo"},"content":"    public DengueHotspotTrackerBuilder(DengueHotspotTracker dengueHotspotTracker) {","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"markusyeo"},"content":"        this.dengueHotspotTracker \u003d dengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"markusyeo"},"content":"     * Adds a new {@code Person} to the {@code DengueHotspotTracker} that we are building.","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"    public DengueHotspotTrackerBuilder withPerson(Person person) {","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"        dengueHotspotTracker.addPerson(person);","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"markusyeo"},"content":"        return this;","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"sumhungyee"},"content":"     * Adds a random number of generated {@code Person} to the {@code DengueHotspotTracker}.","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"sumhungyee"},"content":"     * @return A DengueHotspotTracker with a random number of random persons.","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"sumhungyee"},"content":"    public DengueHotspotTracker buildRandom() {","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"sumhungyee"},"content":"        dengueHotspotTracker \u003d new DengueHotspotTracker();","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"sumhungyee"},"content":"        for (int i \u003d 0; i \u003c RANDOM.nextInt(BOUND); i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"sumhungyee"},"content":"            try {","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"sumhungyee"},"content":"                dengueHotspotTracker.addPerson(new PersonBuilder().buildRandom());","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"sumhungyee"},"content":"            } catch (DuplicatePersonException err) {","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"sumhungyee"},"content":"                // This will almost never happen. If it happens, ignore.","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"sumhungyee"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"sumhungyee"},"content":"        return dengueHotspotTracker.generateDeepCopy();","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"sumhungyee"},"content":"     * Builds a {@link DengueHotspotTracker}.","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"sumhungyee"},"content":"     * @return A copy of {@code dengueHotspotTracker}.","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"markusyeo"},"content":"    public DengueHotspotTracker build() {","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"sumhungyee"},"content":"        return dengueHotspotTracker.generateDeepCopy();","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"sumhungyee"},"content":"     * Resets {@code dengueHotspotTracker} and returns it.","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"sumhungyee"},"content":"     * @return","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"sumhungyee"},"content":"    public DengueHotspotTracker buildNew() {","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"sumhungyee"},"content":"        this.dengueHotspotTracker \u003d new DengueHotspotTracker();","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"sumhungyee"},"content":"        return new DengueHotspotTracker();","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"markusyeo"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"markusyeo":33,"sumhungyee":36}},{"path":"src/test/java/seedu/dengue/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.testutil;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Postal;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"sumhungyee"},"content":"        descriptor.setPostal(person.getPostal());","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"        descriptor.setDate(person.getDate());","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"markusyeo"},"content":"        descriptor.setAge(person.getAge());","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"axmszr"},"content":"        descriptor.setVariants(person.getVariants());","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"sumhungyee"},"content":"     * Sets the {@code Postal} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"sumhungyee"},"content":"    public EditPersonDescriptorBuilder withPostal(String postal) {","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"sumhungyee"},"content":"        descriptor.setPostal(new Postal(postal));","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"sumhungyee"},"content":"     * Sets the {@code Date} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"sumhungyee"},"content":"    public EditPersonDescriptorBuilder withDate(String date) {","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"sumhungyee"},"content":"        descriptor.setDate(new Date(date));","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"markusyeo"},"content":"        descriptor.setAge(new Age(address));","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"axmszr"},"content":"     * Parses the {@code variants} into a {@code Set\u003cVariant\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"axmszr"},"content":"    public EditPersonDescriptorBuilder withVariants(String... variants) {","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"axmszr"},"content":"        Set\u003cVariant\u003e variantSet \u003d Stream.of(variants).map(Variant::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"axmszr"},"content":"        descriptor.setVariants(variantSet);","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"markusyeo":10,"axmszr":6,"sumhungyee":7,"-":64}},{"path":"src/test/java/seedu/dengue/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.testutil;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"sumhungyee"},"content":"import java.util.Random;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Age;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Date;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Name;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Postal;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"sumhungyee"},"content":"    public static final String DEFAULT_POSTAL \u003d \"654214\";","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"markusyeo"},"content":"    public static final String DEFAULT_DATE \u003d \"2023-03-05\";","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"markusyeo"},"content":"    public static final String DEFAULT_AGE \u003d \"23\";","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"sumhungyee"},"content":"    private static final Random RANDOM \u003d new Random();","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"sumhungyee"},"content":"    private static final int BOUND \u003d 199;","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"sumhungyee"},"content":"    private static final int SMALL_BOUND \u003d 15;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"sumhungyee"},"content":"    private Postal postal;","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"markusyeo"},"content":"    private Date date;","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"markusyeo"},"content":"    private Age age;","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"axmszr"},"content":"    private Set\u003cVariant\u003e variants;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"        this.name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"markusyeo"},"content":"        this.postal \u003d new Postal(DEFAULT_POSTAL);","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"markusyeo"},"content":"        this.date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"markusyeo"},"content":"        this.age \u003d new Age(DEFAULT_AGE);","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"axmszr"},"content":"        this.variants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"sumhungyee"},"content":"        postal \u003d personToCopy.getPostal();","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"markusyeo"},"content":"        date \u003d personToCopy.getDate();","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"markusyeo"},"content":"        age \u003d personToCopy.getAge();","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"        variants \u003d new HashSet\u003c\u003e(personToCopy.getVariants());","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"axmszr"},"content":"     * Parses the {@code variants} into a {@code Set\u003cVariant\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"axmszr"},"content":"    public PersonBuilder withVariants(String ... variants) {","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"axmszr"},"content":"        this.variants \u003d SampleDataUtil.getVariantSet(variants);","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"markusyeo"},"content":"     * Sets the {@code Age} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"markusyeo"},"content":"    public PersonBuilder withAge(String age) {","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"markusyeo"},"content":"        this.age \u003d new Age(age);","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"sumhungyee"},"content":"     * Sets the {@code Postal} of the {@code Person} that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"sumhungyee"},"content":"    public PersonBuilder withPostal(String postal) {","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"sumhungyee"},"content":"        this.postal \u003d new Postal(postal);","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"markusyeo"},"content":"     * Sets the {@code Date} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"markusyeo"},"content":"    public PersonBuilder withDate(String date) {","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"markusyeo"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":98,"author":{"gitId":"axmszr"},"content":"        return new Person(name, postal, date, age, variants);","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"sumhungyee"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"sumhungyee"},"content":"     * Builds a random person with a randomly generated name and age.","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"sumhungyee"},"content":"     * @return A new random person.","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"sumhungyee"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"sumhungyee"},"content":"    public Person buildRandom() {","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"sumhungyee"},"content":"        StringBuilder nameBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"sumhungyee"},"content":"        for (int i \u003d 0; i \u003c RANDOM.nextInt(SMALL_BOUND) + 5; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"sumhungyee"},"content":"            nameBuilder.append(RANDOM.nextInt(26) + 97);","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"sumhungyee"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"sumhungyee"},"content":"        String newName \u003d nameBuilder.toString();","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"sumhungyee"},"content":"        return new PersonBuilder().withAge(String.valueOf(RANDOM.nextInt(BOUND)))","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"sumhungyee"},"content":"                .withName(newName)","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"sumhungyee"},"content":"                .build();","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"sumhungyee"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"markusyeo":23,"axmszr":8,"sumhungyee":27,"-":59}},{"path":"src/test/java/seedu/dengue/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.testutil;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_POSTAL;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"axmszr"},"content":"import static seedu.dengue.logic.parser.CliSyntax.PREFIX_VARIANT;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.AddCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"axmszr"},"content":"import seedu.dengue.model.variant.Variant;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"markusyeo"},"content":"        sb.append(PREFIX_POSTAL + person.getPostal().value + \" \");","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"markusyeo"},"content":"        sb.append(PREFIX_DATE + person.getDate().value + \" \");","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"markusyeo"},"content":"        sb.append(PREFIX_AGE + person.getAge().value + \" \");","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"axmszr"},"content":"        person.getVariants().stream().forEach(","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"axmszr"},"content":"            s -\u003e sb.append(PREFIX_VARIANT + s.variantName.toString() + \" \")","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"markusyeo"},"content":"        descriptor.getPostal().ifPresent(postal -\u003e sb.append(PREFIX_POSTAL).append(postal.value).append(\" \"));","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"sumhungyee"},"content":"        descriptor.getDate().ifPresent(date -\u003e sb.append(PREFIX_DATE).append(date.value).append(\" \"));","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"        descriptor.getAge().ifPresent(address -\u003e sb.append(PREFIX_AGE).append(address.value).append(\" \"));","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"axmszr"},"content":"        if (descriptor.getVariants().isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"axmszr"},"content":"            Set\u003cVariant\u003e variantSet \u003d descriptor.getVariants().get();","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"axmszr"},"content":"            if (variantSet.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"axmszr"},"content":"                sb.append(PREFIX_VARIANT);","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"axmszr"},"content":"                variantSet.forEach(s -\u003e sb.append(PREFIX_VARIANT).append(s.variantName).append(\" \"));","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"markusyeo":13,"axmszr":9,"sumhungyee":1,"-":39}},{"path":"src/test/java/seedu/dengue/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.testutil;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markusyeo":1,"-":71}},{"path":"src/test/java/seedu/dengue/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.testutil;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.index.Index;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markusyeo":4,"-":51}},{"path":"src/test/java/seedu/dengue/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.testutil;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.commons.core.index.Index;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"markusyeo":2,"-":10}},{"path":"src/test/java/seedu/dengue/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.testutil;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_BENSON;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_CARL;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_DANIEL;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_ELLE;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_FIONA;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_GEORGE;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_HOON;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_AGE_IDA;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_DATE_ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_DATE_BENSON;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_DATE_CARL;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_DATE_DANIEL;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_DATE_ELLE;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_DATE_FIONA;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_DATE_GEORGE;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_DATE_HOON;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_DATE_IDA;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_NAME_ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_NAME_BENSON;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_NAME_CARL;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_NAME_DANIEL;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_NAME_ELLE;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_NAME_FIONA;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_NAME_GEORGE;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_NAME_HOON;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_NAME_IDA;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_AMY;","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_BENSON;","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_BOB;","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_CARL;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_DANIEL;","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_ELLE;","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_FIONA;","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_GEORGE;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_HOON;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_POSTAL_IDA;","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_VARIANT_DENV1_UPPERCASE;","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_VARIANT_DENV2_UPPERCASE;","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_VARIANT_DENV3_UPPERCASE;","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"Tohtoroo"},"content":"import static seedu.dengue.logic.commands.CommandTestUtil.VALID_VARIANT_DENV4_UPPERCASE;","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"markusyeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"markusyeo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"markusyeo"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.DengueHotspotTracker;","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"markusyeo"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"markusyeo"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"markusyeo"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"markusyeo"},"content":"public class TypicalPersons {","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"Tohtoroo"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(VALID_NAME_ALICE)","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"Tohtoroo"},"content":"            .withAge(VALID_AGE_ALICE).withDate(VALID_DATE_ALICE)","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"Tohtoroo"},"content":"            .withPostal(VALID_POSTAL_ALICE)","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"Tohtoroo"},"content":"            .withVariants(VALID_VARIANT_DENV1_UPPERCASE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"Tohtoroo"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(VALID_NAME_BENSON)","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"Tohtoroo"},"content":"            .withAge(VALID_AGE_BENSON).withDate(VALID_DATE_BENSON).withPostal(VALID_POSTAL_BENSON)","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"Tohtoroo"},"content":"            .withVariants(VALID_VARIANT_DENV2_UPPERCASE, VALID_VARIANT_DENV4_UPPERCASE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"Tohtoroo"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(VALID_NAME_CARL).withPostal(VALID_POSTAL_CARL)","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"Tohtoroo"},"content":"        .withDate(VALID_DATE_CARL).withAge(VALID_AGE_CARL).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"Tohtoroo"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(VALID_NAME_DANIEL)","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"Tohtoroo"},"content":"            .withPostal(VALID_POSTAL_DANIEL).withDate(VALID_DATE_DANIEL)","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"Tohtoroo"},"content":"            .withAge(VALID_AGE_DANIEL).withVariants(VALID_VARIANT_DENV3_UPPERCASE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"Tohtoroo"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(VALID_NAME_ELLE).withPostal(VALID_POSTAL_ELLE)","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"Tohtoroo"},"content":"            .withDate(VALID_DATE_ELLE).withAge(VALID_AGE_ELLE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"Tohtoroo"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(VALID_NAME_FIONA).withPostal(VALID_POSTAL_FIONA)","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"Tohtoroo"},"content":"            .withDate(VALID_DATE_FIONA).withAge(VALID_AGE_FIONA).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"Tohtoroo"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(VALID_NAME_GEORGE)","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"Tohtoroo"},"content":"            .withPostal(VALID_POSTAL_GEORGE).withDate(VALID_DATE_GEORGE).withAge(VALID_AGE_GEORGE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"markusyeo"},"content":"    // Manually added","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"Tohtoroo"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(VALID_NAME_HOON).withPostal(VALID_POSTAL_HOON)","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"Tohtoroo"},"content":"            .withDate(VALID_DATE_HOON).withAge(VALID_AGE_HOON).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"Tohtoroo"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(VALID_NAME_IDA).withPostal(VALID_POSTAL_IDA)","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"Tohtoroo"},"content":"            .withDate(VALID_DATE_IDA).withAge(VALID_AGE_IDA).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"markusyeo"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"markusyeo"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPostal(VALID_POSTAL_AMY)","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"Tohtoroo"},"content":"            .withDate(VALID_DATE_AMY).withAge(VALID_AGE_AMY).withVariants(VALID_VARIANT_DENV2_UPPERCASE).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"markusyeo"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPostal(VALID_POSTAL_BOB)","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"Tohtoroo"},"content":"            .withDate(VALID_DATE_BOB).withAge(VALID_AGE_BOB)","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"Tohtoroo"},"content":"            .withVariants(VALID_VARIANT_DENV1_UPPERCASE, VALID_VARIANT_DENV2_UPPERCASE)","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"markusyeo"},"content":"            .build();","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"sumhungyee"},"content":"    // Manually added","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"sumhungyee"},"content":"    public static final Person AMISH \u003d new PersonBuilder().withName(\"Amish Bii\").withPostal(VALID_POSTAL_CARL)","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"sumhungyee"},"content":"            .withDate(VALID_DATE_BOB).withAge(VALID_AGE_BOB)","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"sumhungyee"},"content":"            .withVariants(VALID_VARIANT_DENV2_UPPERCASE, VALID_VARIANT_DENV1_UPPERCASE)","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"sumhungyee"},"content":"            .build();","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"sumhungyee"},"content":"    public static final Person BECCA \u003d new PersonBuilder().withName(\"Becca Poo\").withPostal(\"135211\")","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"sumhungyee"},"content":"            .withDate(VALID_DATE_AMY).withAge(VALID_AGE_AMY)","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"sumhungyee"},"content":"            .withVariants(VALID_VARIANT_DENV1_UPPERCASE, VALID_VARIANT_DENV2_UPPERCASE)","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"sumhungyee"},"content":"            .build();","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"sumhungyee"},"content":"    public static final Person CAROL \u003d new PersonBuilder().withName(\"Carol See\").withPostal(VALID_POSTAL_FIONA)","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"sumhungyee"},"content":"            .withDate(VALID_DATE_HOON).withAge(VALID_AGE_IDA).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"sumhungyee"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"markusyeo"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"markusyeo"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"markusyeo"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"markusyeo"},"content":"     * Returns an {@code DengueHotspotTracker} with all the typical persons.","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"markusyeo"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"markusyeo"},"content":"    public static DengueHotspotTracker getTypicalDengueHotspotTracker() {","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"markusyeo"},"content":"        DengueHotspotTracker ab \u003d new DengueHotspotTracker();","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"markusyeo"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"markusyeo"},"content":"            ab.addPerson(person);","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"markusyeo"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"markusyeo"},"content":"        return ab;","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"markusyeo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"markusyeo"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"sumhungyee"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"sumhungyee"},"content":"                ALICE, BENSON, CARL, DANIEL,","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"sumhungyee"},"content":"                ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"markusyeo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"markusyeo"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"Tohtoroo":65,"markusyeo":50,"sumhungyee":19}},{"path":"src/test/java/seedu/dengue/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.ui;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"markusyeo":1,"-":34}},{"path":"src/test/java/seedu/dengue/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markusyeo"},"content":"package seedu.dengue.ui;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"markusyeo"},"content":"import static seedu.dengue.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"markusyeo"},"content":"import seedu.dengue.MainApp;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"markusyeo":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"\u003c?import seedu.dengue.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"markusyeo":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"markusyeo"},"content":"\u003cfx:root type\u003d\"seedu.dengue.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"markusyeo":1,"-":5}}]
