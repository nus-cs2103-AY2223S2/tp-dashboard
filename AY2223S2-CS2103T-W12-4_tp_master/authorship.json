[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"# MediMeet","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-W12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W12-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"redHat-arko"},"content":"![Ui](docs/images/Ui_placeholder.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"## Overview","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"**MediMeet** is a desktop application for doctors to manage their patientsâ€™ details and appointment dates. MediMeet enables doctors to effectively manage patient details and appointments, and saves costs by reducing the need for personal assistants or appointment managers.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"**MediMeet** is:","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"* written in Java, in OOP fashion","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"* documented for both users and developers","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"* optimised for CLI","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"## Features","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"1. Patient list","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"2. Appointment manager","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"3. Calendar view of appointments","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"4. Upcoming appointments at a glance","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"# Acknowledgements","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"zxisatree":19,"redHat-arko":1,"-":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"run {","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    implementation \u0027com.calendarfx:view:11.12.5\u0027","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"zxisatree"},"content":"    archiveFileName \u003d \u0027medimeet.jar\u0027","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"zxisatree":5,"Jayanth-Balasubramanian":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"### Chia Zi Xuan","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"\u003cimg src\u003d\"images/zxisatree.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"[[github](https://github.com/zxisatree)]","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"[[portfolio](team/zxisatree.md)]","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"* Responsibilities: Integration + Testing","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"redHat-arko"},"content":"### Arkobrata Chaudhuri","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"redHat-arko"},"content":"\u003cimg src\u003d\"images/redhat-arko.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"redHat-arko"},"content":"[[github](http://github.com/redHat-arko)]","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"redHat-arko"},"content":"[[portfolio](team/redhat-arko.md)]","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"### Jayanth Balasubramanian","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003cimg src\u003d\"images/jayanth-balasubramanian.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"[[github](https://github.com/Jayanth-Balasubramanian)]","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"[[portfolio](team/jayanth-balasubramanian.md)]","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"* Responsibilities: UI, Git expert","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"### Johnny Doe","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2020-06-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-06-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"### Jean Doe","lastModifiedDate":"2020-06-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2020-06-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"### James Doe","lastModifiedDate":"2020-06-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2020-06-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"runoutofit"},"content":"### Chua Wen Hong","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"runoutofit"},"content":"\u003cimg src\u003d\"images/runoutofit.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"runoutofit"},"content":"[[github](https://github.com/runoutofit)]","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"runoutofit"},"content":"[[portfolio](team/runoutofit.md)]","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"runoutofit"},"content":"* Role: Developer","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"runoutofit"},"content":"* Responsibilities: UI, Code Quality, Documentations","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"zxisatree":5,"redHat-arko":4,"Jayanth-Balasubramanian":5,"runoutofit":9,"-":55}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"## **Overview**","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"**MediMeet** is a desktop application for doctors to manage their patientsâ€™ details and appointment dates. MediMeet enables doctors to effectively manage patient details and appointments, and saves costs by reducing the need for personal assistants or appointment managers.","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"## **Table of Contents**","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"* MediMeet is a fork of [AddressBook](https://se-education.org/addressbook-level3/) by SE-EDU.","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S2-CS2103T-W12-4/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103T-W12-4/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103T-W12-4/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"zxisatree"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103T-W12-4/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `AppointmentListPanel`, `PatientListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"zxisatree"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S2-CS2103T-W12-4/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103T-W12-4/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"* depends on some classes in the `Model` component, as it displays `Patient` and `Appointment` objects","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"* residing in the `Model`.","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"zxisatree"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103T-W12-4/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to add a Patient).","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"zxisatree"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103T-W12-4/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"zxisatree"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"zxisatree"},"content":"* stores the address book data i.e., all `Patient` objects (which are contained in a `UniquePatientList` object), and all `Appointment` objects (which are contained in a `UniqueAppointmentList` object).","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"zxisatree"},"content":"* stores the currently \u0027selected\u0027 `Patient` and `Appointment` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPatient\u003e`/`ObservableList\u003cAppointment\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"zxisatree"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Patient` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Patient` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"zxisatree"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103T-W12-4/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"zxisatree"},"content":"* inherits from `AddressBookStorage`, `AppointmentListStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"zxisatree"},"content":"### Edit patient (`edit`) command","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"zxisatree"},"content":"**Implementation**","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"zxisatree"},"content":"The edit command edits a patient in the patient list by first finding the patient, creating a new `EditPatientDescriptor` based on the original patient, modifying that object with the given parameters, then replacing the patient in the model\u0027s patient list with a new patient constructed using the given `EditPatientDescriptor`.","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"zxisatree"},"content":"**Design considerations**","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"zxisatree"},"content":"One way to reduce the amount of overhead in each edit command is to store only the relevant changes for each edit command in `EditPatientDescriptor`. This would remove the need to make a copy of every field of the original patient which would save some time. However, this would require `EditCommand#execute()` to have to check for each field\u0027s presence, through something like an `Optional`. This would also involve making `Patient` mutable, which would make it difficult to ensure that the patient list stays valid after various commands.","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"zxisatree"},"content":"### Edit appointment (`edit_appt`) command","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"zxisatree"},"content":"**Implementation**","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"zxisatree"},"content":"The edit appointment command edits an appointment in the appointment list by finding the appointment, creating a new `EditAppointmentDescriptor` based on the original appointment, modifying that object with the given parameters, then replacing the appointment in the model\u0027s appointment list with a new appointment constructed using the given `EditAppointmentDescriptor`.","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"zxisatree"},"content":"**Design considerations**","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"zxisatree"},"content":"Similar to `edit`, storing the relevant changes for each edit command instead of storing every field of the appointment would make the edit appointment command more efficient. However, making any model mutable is undesirable as immutability allows us to easily ensure certain properties about the internal list of patients and appointments.","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"zxisatree"},"content":"### Find patient (`find`) and find patient by details (`find_details`) commands","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"zxisatree"},"content":"**Implementation**","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"zxisatree"},"content":"The find and find details commands offer two ways of finding a patient to view their info. `find` is less comprehensive, and only searches for by patient name, while `find_details` tries to find a match in a patient\u0027s details, including their phone, address, email and tags. Both utilise a `Predicate\u003cPatient\u003e` in order to filter `model`\u0027s appointment list via `Model#updateFilteredPatientList(Predicate\u003cPatient\u003e)`. `find` uses a `NameContainsKeywordsPredicate`, while `find_details` uses a `DetailsContainKeywordsPredicate`.","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"zxisatree"},"content":"Both predicates work in a similar fashion as they implement Java\u0027s base `Predicate` interface. `NameContainsKeywordsPredicate#test(Patient)` takes the patient\u0027s full name, turns it into a `List\u003cString\u003e`, and checks if any of the keywords match any word in the name. `DetailsContainKeywordsPredicate#test(Patient)` calls `Patient#getDetailsAsList()` and matches the keywords against that list of all the patient\u0027s details instead.","lastModifiedDate":"2023-03-29"},{"lineNumber":190,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":191,"author":{"gitId":"zxisatree"},"content":"**Design considerations**","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"zxisatree"},"content":"The two commands are very similar. Currently, they only differ in their predicate\u0027s type, and have the same `execute` method implementation. An alternative way of implementing `find_details` would be to change `FindCommand`\u0027s constructor to accept a `Predicate\u003cPatient\u003e` instead, and `FindCommandParser` to create the correct type of `Predicate`.","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"zxisatree"},"content":"We chose to use two different commands as we expect to expand upon the find commands differently in the future, such as allowing partial matches for `find` but not `find_details`. The details of a patient often include too many words for partial matching to be relevant. Thus, decoupling the commands from each other allows future extension of the commands to be easier.","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"zxisatree"},"content":"### Find appointment (`find_appt`) command","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"zxisatree"},"content":"**Implementation**","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"zxisatree"},"content":"The find appointment command utilises a `Predicate\u003cAppointment\u003e` in order to filter `model`\u0027s appointment list via `Model#updateFilteredAppointmentList(Predicate\u003cAppointment\u003e)`. The type of `Predicate` is determined during parsing, where a single date time in the command will use a `TimeInTimeslotPredicate`, while two date times in the command will result in a `AppointmentDuringTimePredicate` being used instead.","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":203,"author":{"gitId":"zxisatree"},"content":"`TimeInTimeslotPredicate#test(Appointment)` checks if the time in the command is during the timeslot of the given appointment.  `AppointmentDuringTimePredicate#test(Appointment)` checks if the given timeslot in the command overlaps with the timeslot of the given appointment.","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":205,"author":{"gitId":"zxisatree"},"content":"**Design considerations**","lastModifiedDate":"2023-03-23"},{"lineNumber":206,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":207,"author":{"gitId":"zxisatree"},"content":"We chose to use a single command instead of two different commands like `find` and `find_details` since the functionality of the two types of appointment finding commands is very similar, and unlikely to change in the future.","lastModifiedDate":"2023-03-29"},{"lineNumber":208,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"zxisatree"},"content":"### Delete appointment (`delete_appt`) command","lastModifiedDate":"2023-03-29"},{"lineNumber":210,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"runoutofit"},"content":"**Implementation**","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"zxisatree"},"content":"The delete appointment command allows the user to delete an existing appointment from MediMeet. This is executed by identifying the chosen appointment by its AppointmentId, filtering `model` appointment list via `Model#getFilteredAppointmentList()` and obtaining a `matchingAppointments` list and finally removing the first `Appointment` on the list.","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":215,"author":{"gitId":"runoutofit"},"content":"**Design considerations**","lastModifiedDate":"2023-03-23"},{"lineNumber":216,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":217,"author":{"gitId":"zxisatree"},"content":"We originally wanted to identify Appointments by their `AppointmentId` instead of their index as we expect to identify each appointment by their own unique IDs. However, we chose to use indexes in a similar fashion to patients so that users would not need to confuse themselves with two different types of commands.","lastModifiedDate":"2023-03-31"},{"lineNumber":218,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"zxisatree"},"content":"**Proposed Implementation**","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"zxisatree"},"content":"Step 2. The user executes `delete 5` command to delete the 5th Patient in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2023-03-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"zxisatree"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new Patient. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2023-03-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"zxisatree"},"content":"Step 4. The user now decides that adding the Patient was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-03-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"zxisatree"},"content":"**Design considerations:**","lastModifiedDate":"2023-03-30"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"zxisatree"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the Patient being deleted).","lastModifiedDate":"2023-03-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":304,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"redHat-arko"},"content":"* is a receptionist for a small clinic, or a doctor who is a General Practitioner (GP)","lastModifiedDate":"2023-03-24"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"zxisatree"},"content":"**Value proposition**: MediMeet enables doctors to effectively manage patient details and appointments, and saves costs by reducing the need for Patiental assistants or appointment managers.","lastModifiedDate":"2023-03-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹ | I want to â€¦â€‹                                                      | So that I canâ€¦â€‹                                                       |","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"|----------|---------|-------------------------------------------------------------------|-----------------------------------------------------------------------|","lastModifiedDate":"2023-03-02"},{"lineNumber":329,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* * *`  | doctor  | view details about my patients                                    | I can see everything I need to know about them at a glance            |","lastModifiedDate":"2023-03-02"},{"lineNumber":330,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* * *`  | doctor  | add a new patient to the addressbook                              | I can have new patients                                               |","lastModifiedDate":"2023-03-02"},{"lineNumber":331,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* * *`  | doctor  | edit patients\u0027 details                                            | I can update patient details                                          |","lastModifiedDate":"2023-03-02"},{"lineNumber":332,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* * *`  | doctor  | find a particular patient\u0027s details                               | I can easily locate patients                                          |","lastModifiedDate":"2023-03-02"},{"lineNumber":333,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* * *`  | doctor  | keep records of a patient                                         | I can check their medical history                                     |","lastModifiedDate":"2023-03-02"},{"lineNumber":334,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* * *`  | doctor  | quickly add notes about a patient                                 | I can keep an accurate and up-to-date record of their medical history |","lastModifiedDate":"2023-03-02"},{"lineNumber":335,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* * *`  | doctor  | add patient appointments                                          | I can schedule and keep track of all my patient visits                |","lastModifiedDate":"2023-03-02"},{"lineNumber":336,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* * *`  | doctor  | view upcoming appointment                                         | I can see when my next appointment will be                            |","lastModifiedDate":"2023-03-02"},{"lineNumber":337,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* * *`  | doctor  | view the number of patients I have to see in a day                | I can gauge my workload                                               |","lastModifiedDate":"2023-03-02"},{"lineNumber":338,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* * *`  | doctor  | navigate the ui using keyboard commands                           | I work faster and more efficiently                                    |","lastModifiedDate":"2023-03-02"},{"lineNumber":339,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* * *`  | doctor  | mark appointments as done                                         | I can remove it from my calendar                                      |","lastModifiedDate":"2023-03-02"},{"lineNumber":340,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* * *`  | doctor  | access help guide                                                 | I can be assisted when I have trouble using MediMeet                  |","lastModifiedDate":"2023-03-02"},{"lineNumber":341,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* * *`  | doctor  | delete appointments                                               | I can remove patients who cancelled appointments                      |","lastModifiedDate":"2023-03-02"},{"lineNumber":342,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* * *`  | doctor  | save data to memory                                               | I can store the data after closing the application                    |","lastModifiedDate":"2023-03-02"},{"lineNumber":343,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* * *`  | doctor  | retrieve data from memory                                         | I can have my saved data after restarting the application             |","lastModifiedDate":"2023-03-02"},{"lineNumber":344,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* * *`  | doctor  | delete a patient from the address book                            | I can remove data for former patients                                 |","lastModifiedDate":"2023-03-02"},{"lineNumber":345,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* *`    | doctor  | automate appointment assignment                                   | I don\u0027t have to manually add appointments                             |","lastModifiedDate":"2023-03-02"},{"lineNumber":346,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* *`    | doctor  | access different templates for emailing different users           | I can quickly send standard emails to various users                   |","lastModifiedDate":"2023-03-02"},{"lineNumber":347,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* *`    | doctor  | send mass emails                                                  | I don\u0027t have to send them indivually if I can\u0027t make it that day      |","lastModifiedDate":"2023-03-02"},{"lineNumber":348,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* *`    | doctor  | set my availability                                               | I can block off time for tasks or meetings                            |","lastModifiedDate":"2023-03-02"},{"lineNumber":349,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* *`    | doctor  | view my appointments and patient information on any device        | I can access these details from anywhere                              |","lastModifiedDate":"2023-03-02"},{"lineNumber":350,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* *`    | doctor  | add sample data                                                   | I can test out MediMeet                                               |","lastModifiedDate":"2023-03-02"},{"lineNumber":351,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* *`    | doctor  | purge all data                                                    | I can remove sample or confidential data                              |","lastModifiedDate":"2023-03-02"},{"lineNumber":352,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* *`    | doctor  | filter my appointments by date, patient name, or appointment type | I can find the data I need quickly                                    |","lastModifiedDate":"2023-03-02"},{"lineNumber":353,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* *`    | doctor  | add billing info                                                  | I can manage patient financials centrally                             |","lastModifiedDate":"2023-03-02"},{"lineNumber":354,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `* *`    | doctor  | add appointments to calendar                                      | I can view my schedule at a glance                                    |","lastModifiedDate":"2023-03-02"},{"lineNumber":355,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `*`      | doctor  | share patient details with other doctors                          | other doctors can access the necessary details                        |","lastModifiedDate":"2023-03-02"},{"lineNumber":356,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `*`      | doctor  | login to the system                                               | I can prevent malicious actors from accessing my data                 |","lastModifiedDate":"2023-03-02"},{"lineNumber":357,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `*`      | doctor  | reset my password                                                 | I still have access to my account if I forget my password             |","lastModifiedDate":"2023-03-02"},{"lineNumber":358,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `*`      | doctor  | delete my account                                                 | I can remove all my data when it is no longer needed                  |","lastModifiedDate":"2023-03-02"},{"lineNumber":359,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| `*`      | doctor  | can change my password if needed                                  | I can ensure the security of my account                               |","lastModifiedDate":"2023-03-02"},{"lineNumber":360,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"zxisatree"},"content":"(For all use cases below, the **System** is the `MediMeet` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"zxisatree"},"content":"**Use case: Delete a Patient**","lastModifiedDate":"2023-03-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"zxisatree"},"content":"1.  User requests to list Patients","lastModifiedDate":"2023-03-23"},{"lineNumber":373,"author":{"gitId":"zxisatree"},"content":"2.  AddressBook shows a list of Patients","lastModifiedDate":"2023-03-23"},{"lineNumber":374,"author":{"gitId":"zxisatree"},"content":"3.  User requests to delete a specific Patient in the list","lastModifiedDate":"2023-03-23"},{"lineNumber":375,"author":{"gitId":"zxisatree"},"content":"4.  AddressBook deletes the Patient","lastModifiedDate":"2023-03-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"redHat-arko"},"content":"**Use case: Set availability**","lastModifiedDate":"2023-03-02"},{"lineNumber":392,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":393,"author":{"gitId":"redHat-arko"},"content":"**MSS:**","lastModifiedDate":"2023-03-02"},{"lineNumber":394,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":395,"author":{"gitId":"redHat-arko"},"content":"1. User requests to set availability.","lastModifiedDate":"2023-03-02"},{"lineNumber":396,"author":{"gitId":"redHat-arko"},"content":"2. MediMeet asks for date/time of availability.","lastModifiedDate":"2023-03-02"},{"lineNumber":397,"author":{"gitId":"redHat-arko"},"content":"3. User enters date/time of availability.","lastModifiedDate":"2023-03-02"},{"lineNumber":398,"author":{"gitId":"redHat-arko"},"content":"4. MediMeet sets the date/time of availability for the user.","lastModifiedDate":"2023-03-02"},{"lineNumber":399,"author":{"gitId":"redHat-arko"},"content":"   Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":400,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":401,"author":{"gitId":"redHat-arko"},"content":"**Extensions:**","lastModifiedDate":"2023-03-02"},{"lineNumber":402,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":403,"author":{"gitId":"redHat-arko"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-03-02"},{"lineNumber":404,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":405,"author":{"gitId":"redHat-arko"},"content":"    * 3a1. MediMeet requests for a valid time/time input.","lastModifiedDate":"2023-03-02"},{"lineNumber":406,"author":{"gitId":"redHat-arko"},"content":"    * 3a2. User provides a valid date/time input.","lastModifiedDate":"2023-03-02"},{"lineNumber":407,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":408,"author":{"gitId":"redHat-arko"},"content":"Steps 3a1-3a2 are repeated until a valid input is provided.","lastModifiedDate":"2023-03-02"},{"lineNumber":409,"author":{"gitId":"redHat-arko"},"content":"Use case resumes at step 4.","lastModifiedDate":"2023-03-02"},{"lineNumber":410,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":411,"author":{"gitId":"redHat-arko"},"content":"**Use case: View patient appointments and details**","lastModifiedDate":"2023-03-02"},{"lineNumber":412,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":413,"author":{"gitId":"redHat-arko"},"content":"**MSS:**","lastModifiedDate":"2023-03-02"},{"lineNumber":414,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":415,"author":{"gitId":"redHat-arko"},"content":"1. User requests to view patient appointments and details.","lastModifiedDate":"2023-03-02"},{"lineNumber":416,"author":{"gitId":"redHat-arko"},"content":"2. MediMeet shows the list of patients that match the request.","lastModifiedDate":"2023-03-02"},{"lineNumber":417,"author":{"gitId":"redHat-arko"},"content":"3. User selects the desired patient.","lastModifiedDate":"2023-03-02"},{"lineNumber":418,"author":{"gitId":"redHat-arko"},"content":"4. MediMeet displays the patient appointments and details.","lastModifiedDate":"2023-03-02"},{"lineNumber":419,"author":{"gitId":"redHat-arko"},"content":"   Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":420,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":421,"author":{"gitId":"redHat-arko"},"content":"**Extensions:**","lastModifiedDate":"2023-03-02"},{"lineNumber":422,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":423,"author":{"gitId":"redHat-arko"},"content":"* 1a. MediMeet cannot find any patients that match the search request.","lastModifiedDate":"2023-03-02"},{"lineNumber":424,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":425,"author":{"gitId":"redHat-arko"},"content":"    * 1a1. MediMeet requests for a valid search request.","lastModifiedDate":"2023-03-02"},{"lineNumber":426,"author":{"gitId":"redHat-arko"},"content":"    * 1a2. User provides a valid search request.","lastModifiedDate":"2023-03-02"},{"lineNumber":427,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":428,"author":{"gitId":"redHat-arko"},"content":"Steps 1a1-1a2 are repeated until a valid input is provided.","lastModifiedDate":"2023-03-02"},{"lineNumber":429,"author":{"gitId":"redHat-arko"},"content":"Use case resumes at step 2.","lastModifiedDate":"2023-03-02"},{"lineNumber":430,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":431,"author":{"gitId":"redHat-arko"},"content":"**Use case: Filter appointments**","lastModifiedDate":"2023-03-02"},{"lineNumber":432,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":433,"author":{"gitId":"redHat-arko"},"content":"**MSS:**","lastModifiedDate":"2023-03-02"},{"lineNumber":434,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":435,"author":{"gitId":"redHat-arko"},"content":"1. User requests to filter appointments.","lastModifiedDate":"2023-03-02"},{"lineNumber":436,"author":{"gitId":"redHat-arko"},"content":"2. MediMeet asks the user to enter the criteria to filter appointments by.","lastModifiedDate":"2023-03-02"},{"lineNumber":437,"author":{"gitId":"redHat-arko"},"content":"3. User enters the criteria to filter appointments by.","lastModifiedDate":"2023-03-02"},{"lineNumber":438,"author":{"gitId":"redHat-arko"},"content":"4. MediMeet shows the list of appointments that match the request.","lastModifiedDate":"2023-03-02"},{"lineNumber":439,"author":{"gitId":"redHat-arko"},"content":"   Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":440,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":441,"author":{"gitId":"redHat-arko"},"content":"**Extensions:**","lastModifiedDate":"2023-03-02"},{"lineNumber":442,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":443,"author":{"gitId":"redHat-arko"},"content":"* 3a. MediMeet cannot find any patients that match the search request.","lastModifiedDate":"2023-03-02"},{"lineNumber":444,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":445,"author":{"gitId":"redHat-arko"},"content":"    * 3a1. MediMeet requests for a valid search request.","lastModifiedDate":"2023-03-02"},{"lineNumber":446,"author":{"gitId":"redHat-arko"},"content":"    * 3a2. User provides a valid search request.","lastModifiedDate":"2023-03-02"},{"lineNumber":447,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":448,"author":{"gitId":"redHat-arko"},"content":"Steps 3a1-3a2 are repeated until a valid input is provided.","lastModifiedDate":"2023-03-02"},{"lineNumber":449,"author":{"gitId":"redHat-arko"},"content":"Use case resumes at step 4.","lastModifiedDate":"2023-03-02"},{"lineNumber":450,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":451,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"zxisatree"},"content":"**Use case: UC1 - Edit patient details**","lastModifiedDate":"2023-03-02"},{"lineNumber":454,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":455,"author":{"gitId":"zxisatree"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":456,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":457,"author":{"gitId":"zxisatree"},"content":"1. User requests to edit the details of a patient.","lastModifiedDate":"2023-03-02"},{"lineNumber":458,"author":{"gitId":"zxisatree"},"content":"2. MediMeet shows the list of patients that match the search request.","lastModifiedDate":"2023-03-02"},{"lineNumber":459,"author":{"gitId":"zxisatree"},"content":"3. User selects the desired patient.","lastModifiedDate":"2023-03-02"},{"lineNumber":460,"author":{"gitId":"zxisatree"},"content":"4. MediMeet displays the patient details.","lastModifiedDate":"2023-03-02"},{"lineNumber":461,"author":{"gitId":"zxisatree"},"content":"5. User provides the edited patient details.","lastModifiedDate":"2023-03-02"},{"lineNumber":462,"author":{"gitId":"zxisatree"},"content":"6. MediMeet edits the details of the patient and displays the new patient details.","lastModifiedDate":"2023-03-02"},{"lineNumber":463,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":464,"author":{"gitId":"zxisatree"},"content":"   Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":465,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":466,"author":{"gitId":"zxisatree"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":467,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":468,"author":{"gitId":"zxisatree"},"content":"* 1a. MediMeet cannot find any patients that match the search request.","lastModifiedDate":"2023-03-02"},{"lineNumber":469,"author":{"gitId":"zxisatree"},"content":"  * 1a1. MediMeet requests for a valid search request.","lastModifiedDate":"2023-03-02"},{"lineNumber":470,"author":{"gitId":"zxisatree"},"content":"  * 1a2. User provides a valid search request.","lastModifiedDate":"2023-03-02"},{"lineNumber":471,"author":{"gitId":"zxisatree"},"content":"  * Steps 1a1-1a2 are repeated until a valid search request is provided.","lastModifiedDate":"2023-03-02"},{"lineNumber":472,"author":{"gitId":"zxisatree"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2023-03-02"},{"lineNumber":473,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":474,"author":{"gitId":"zxisatree"},"content":"* 5a. MediMeet detects an error in the entered data.","lastModifiedDate":"2023-03-02"},{"lineNumber":475,"author":{"gitId":"zxisatree"},"content":"  * 5a1. MediMeet requests for the correct data.","lastModifiedDate":"2023-03-02"},{"lineNumber":476,"author":{"gitId":"zxisatree"},"content":"  * 5a2. User enters new data.","lastModifiedDate":"2023-03-02"},{"lineNumber":477,"author":{"gitId":"zxisatree"},"content":"  * Steps 5a1-5a2 are repeated until the data entered are correct.","lastModifiedDate":"2023-03-02"},{"lineNumber":478,"author":{"gitId":"zxisatree"},"content":"  * Use case resumes from step 6.","lastModifiedDate":"2023-03-02"},{"lineNumber":479,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":480,"author":{"gitId":"zxisatree"},"content":"**Use case: UC7 - Add note about a patient**","lastModifiedDate":"2023-03-02"},{"lineNumber":481,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":482,"author":{"gitId":"zxisatree"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":483,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":484,"author":{"gitId":"zxisatree"},"content":"1. User requests to add a note to a patient.","lastModifiedDate":"2023-03-02"},{"lineNumber":485,"author":{"gitId":"zxisatree"},"content":"2. MediMeet shows the list of patients that match the request.","lastModifiedDate":"2023-03-02"},{"lineNumber":486,"author":{"gitId":"zxisatree"},"content":"3. User selects the desired patient.","lastModifiedDate":"2023-03-02"},{"lineNumber":487,"author":{"gitId":"zxisatree"},"content":"4. MediMeet displays the patient details.","lastModifiedDate":"2023-03-02"},{"lineNumber":488,"author":{"gitId":"zxisatree"},"content":"5. User provides the new note.","lastModifiedDate":"2023-03-02"},{"lineNumber":489,"author":{"gitId":"zxisatree"},"content":"6. MediMeet adds the note to the patient and displays the new patient details and notes.","lastModifiedDate":"2023-03-02"},{"lineNumber":490,"author":{"gitId":"zxisatree"},"content":"   Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":491,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":492,"author":{"gitId":"zxisatree"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":493,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":494,"author":{"gitId":"zxisatree"},"content":"* 1a. No patients match the search request.","lastModifiedDate":"2023-03-02"},{"lineNumber":495,"author":{"gitId":"zxisatree"},"content":"  * 1a1. MediMeet requests for a valid search request.","lastModifiedDate":"2023-03-02"},{"lineNumber":496,"author":{"gitId":"zxisatree"},"content":"  * 1a2. User provides a valid search request.","lastModifiedDate":"2023-03-02"},{"lineNumber":497,"author":{"gitId":"zxisatree"},"content":"  * Steps 1a1-1a2 are repeated until a valid search request is provided.","lastModifiedDate":"2023-03-02"},{"lineNumber":498,"author":{"gitId":"zxisatree"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2023-03-02"},{"lineNumber":499,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":500,"author":{"gitId":"redHat-arko"},"content":"![AddRemark](images/RemarkSequenceDiagram.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":501,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":502,"author":{"gitId":"zxisatree"},"content":"**Use case: UC8 - Add patient appointment**","lastModifiedDate":"2023-03-02"},{"lineNumber":503,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":504,"author":{"gitId":"zxisatree"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":505,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":506,"author":{"gitId":"zxisatree"},"content":"1. User requests to add appointment and enters the desired description and desired patient to add the appointment for.","lastModifiedDate":"2023-03-02"},{"lineNumber":507,"author":{"gitId":"zxisatree"},"content":"2. MediMeet shows the list of patients that match the request.","lastModifiedDate":"2023-03-02"},{"lineNumber":508,"author":{"gitId":"zxisatree"},"content":"3. User selects the desired patient.","lastModifiedDate":"2023-03-02"},{"lineNumber":509,"author":{"gitId":"zxisatree"},"content":"4. MediMeet adds the appointment and updates the calendar.","lastModifiedDate":"2023-03-02"},{"lineNumber":510,"author":{"gitId":"zxisatree"},"content":"5. MediMeet displays the patient\u0027s details.","lastModifiedDate":"2023-03-02"},{"lineNumber":511,"author":{"gitId":"zxisatree"},"content":"   Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":512,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":513,"author":{"gitId":"zxisatree"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":514,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":515,"author":{"gitId":"zxisatree"},"content":"* 1a. MediMeet detects an error in the entered data.","lastModifiedDate":"2023-03-02"},{"lineNumber":516,"author":{"gitId":"zxisatree"},"content":"  * 1a1. MediMeet requests for the correct data.","lastModifiedDate":"2023-03-02"},{"lineNumber":517,"author":{"gitId":"zxisatree"},"content":"  * 1a2. User enters new data.","lastModifiedDate":"2023-03-02"},{"lineNumber":518,"author":{"gitId":"zxisatree"},"content":"  * Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2023-03-02"},{"lineNumber":519,"author":{"gitId":"zxisatree"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2023-03-02"},{"lineNumber":520,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":521,"author":{"gitId":"zxisatree"},"content":"* 1b. The desired patient is not provided.","lastModifiedDate":"2023-03-02"},{"lineNumber":522,"author":{"gitId":"zxisatree"},"content":"  * 1b1. MediMeet requests for the patient details.","lastModifiedDate":"2023-03-02"},{"lineNumber":523,"author":{"gitId":"zxisatree"},"content":"  * 1b2. User enters patient details.","lastModifiedDate":"2023-03-02"},{"lineNumber":524,"author":{"gitId":"zxisatree"},"content":"  * Steps 1b1-1b2 are repeated until the data entered are correct.","lastModifiedDate":"2023-03-02"},{"lineNumber":525,"author":{"gitId":"zxisatree"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2023-03-02"},{"lineNumber":526,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":527,"author":{"gitId":"zxisatree"},"content":"* 1c. No patients match the desired patient details.","lastModifiedDate":"2023-03-02"},{"lineNumber":528,"author":{"gitId":"zxisatree"},"content":"  * 1c1. MediMeet requests for valid patient details.","lastModifiedDate":"2023-03-02"},{"lineNumber":529,"author":{"gitId":"zxisatree"},"content":"  * 1c2. User provides valid patient details.","lastModifiedDate":"2023-03-02"},{"lineNumber":530,"author":{"gitId":"zxisatree"},"content":"  * Steps 1c1-1c2 are repeated until a valid search request is provided.","lastModifiedDate":"2023-03-02"},{"lineNumber":531,"author":{"gitId":"zxisatree"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2023-03-02"},{"lineNumber":532,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":533,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"2. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-03-02"},{"lineNumber":537,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"3. Should load quickly and be responsive, even with a large amount of patient data.","lastModifiedDate":"2023-03-02"},{"lineNumber":538,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"4. Should be reliable, with minimal errors that could impact the doctor\u0027s ability to manage their appointments and patient details.","lastModifiedDate":"2023-03-02"},{"lineNumber":539,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"5. Should use clear and concise language, icons, and design elements to help the doctor understand the information presented and the actions they can take.","lastModifiedDate":"2023-03-02"},{"lineNumber":540,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"6. Should provide clear and easily accessible help and documentation, including FAQs and tutorials, to assist the doctor in using the platform effectively.","lastModifiedDate":"2023-03-02"},{"lineNumber":541,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"7. Should be designed to prevent errors and provide clear, actionable error messages if errors occur, so that the doctor can quickly correct any issues.","lastModifiedDate":"2023-03-02"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"redHat-arko"},"content":"* **Availability**: The date/time the user is open to taking appointments for","lastModifiedDate":"2023-03-02"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"runoutofit"},"content":"   2. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum. A sample of the expected result is shown below:","lastModifiedDate":"2023-03-23"},{"lineNumber":568,"author":{"gitId":"runoutofit"},"content":"   ![v1.2_jar](images/v1.2_jar.jpg)","lastModifiedDate":"2023-03-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"zxisatree"},"content":"### Deleting a Patient","lastModifiedDate":"2023-03-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"zxisatree"},"content":"1. Deleting a Patient while all Patients are being shown","lastModifiedDate":"2023-03-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"zxisatree"},"content":"   1. Prerequisites: List all Patients using the `list` command. Multiple Patients in the list.","lastModifiedDate":"2023-03-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"zxisatree"},"content":"      Expected: No Patient is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-03-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"zxisatree":162,"redHat-arko":64,"Jayanth-Balasubramanian":45,"runoutofit":9,"-":322}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"## What is MediMeet?","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"**MediMeet** is a patient appointment management system for individual practitioners and small clinics. With MediMeet, you can efficiently manage patient information and appointment information in one place, saving you both time and money. \u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"MediMeet combines the visual appeal of a GUI (graphical user interface) with the speed and convenience of a command-line interface. Our easy-to-use commands make it easy to add, edit patient information, appointments and so much more! \u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"## How to (best) use this guide","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"This user guide is designed to be used by anyone who has never used MediMeet before. If you are an experienced user, you can jump straight to the [Command summary](#command-summary) section to see a list of all MediMeetâ€™s commands.","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"The following table shows the different sections and what they contain. To jump to a particular section, click on the link in the table of contents above.","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| Section                                                     | Description                                                                |","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"|-------------------------------------------------------------|----------------------------------------------------------------------------|","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| [Quick start](#quick-start)                                 | Contains a step-by-step guide on how to download and start using MediMeet. |","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| [Features](#features)                                       | Contains a detailed description of all MediMeetâ€™s functionality.           |","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| [FAQ](#faq)                                                 | Contains answers to frequently asked questions.                            |","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| [Command summary](#command-summary)                         | Contains a summary of all MediMeetâ€™s commands.                             |","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| [Glossary of technical terms](#glossary-of-technical-terms) | Contains descriptions of technical terms used in this guide.               |","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"Below are some common terms you will come across in the guide, and their explanations.","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| Term            | Meaning                                      |","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"|-----------------|----------------------------------------------|","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| **Patient**     | A person who is registered in MediMeet       |","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| **Appointment** | A meeting between a doctor and a patient     |","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| **Timeslot**    | A time period in which an appointment occurs |","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| **Remark**      | A note about a patient                       |","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| **Tag**         | A label that can be added to a patient       |","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| **MediMeet**    | The application MediMeet                     |","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"We also use symbols to indicate useful information. The following table shows what each symbol means.","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| Symbol               | Description                                                 |","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"|----------------------|-------------------------------------------------------------|","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| :bulb:               | Contains a tip that may be useful when using MediMeet.      |","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| :information_source: | Contains important information that you should be aware of. |","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| :exclamation:        | Warning that you should take note of.                       |","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"runoutofit"},"content":"You can use the glossary to quickly look up the meaning of any unfamiliar technical term. Just search for the term you want to look up!","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"runoutofit"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"1. Ensure you have Java `11` or above installed in your Computer. \u003cbr\u003e \u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e **:information_source: Finding your java version**: To check the default java version on your device, run `java -version` on your terminal. You should see a string with `11.x.x`. For more information, refer to [this guide](https://www.java.com/en/download/help/version_manual.html#cmdline). \u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"2. Download the latest `medimeet.jar` from [here](https://github.com/AY2223S2-CS2103T-W12-4/tp/releases/download/v1.2/medimeet.jar).","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your MediMeet.","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"4. Open the `medimeet.jar` file by double clicking on it. If a dialog box opens asking \u0027How do you want to open this file?\u0027, choose \u0027Java(TM) Platform SE binary\u0027. A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"    * If you are familiar with terminals and command lines, you can choose to open the file from a command line instead. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar medimeet.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"runoutofit"},"content":"   ![Ui](images/updated_UI.jpg)","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"redHat-arko"},"content":"   * `list_patient` : Lists all patients.","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"redHat-arko"},"content":"   * `add_patient n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a patient named `John Doe` to MediMeet.","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"redHat-arko"},"content":"   * `delete_patient 3` : Deletes the 3rd patient shown in the current list.","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"zxisatree"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* Items with `â€¦`â€‹ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]â€¦â€‹` can be used as `Â ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"redHat-arko"},"content":"### Adding a patient: `add_patient`","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"redHat-arko"},"content":"Adds a patient to MediMeet.","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"redHat-arko"},"content":"Format: `add_patient n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]â€¦â€‹`","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"zxisatree"},"content":"A patient can have any number of tags (including 0).","lastModifiedDate":"2023-04-06"},{"lineNumber":122,"author":{"gitId":"zxisatree"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-04-06"},{"lineNumber":125,"author":{"gitId":"zxisatree"},"content":"MediMeet does not support phone numbers longer than 15 digits. Although MediMeet will still accept phone numbers longer than 15 digits, the application might display the patient list strangely.","lastModifiedDate":"2023-04-06"},{"lineNumber":126,"author":{"gitId":"zxisatree"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":127,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":128,"author":{"gitId":"zxisatree"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:exclamation: **Warning:**","lastModifiedDate":"2023-04-06"},{"lineNumber":129,"author":{"gitId":"zxisatree"},"content":"Tags should be limited to 30 characters or less. If you want to record information longer than that, use the `remark` command instead.","lastModifiedDate":"2023-04-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"redHat-arko"},"content":"* `add_patient n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"redHat-arko"},"content":"* `add_patient n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"redHat-arko"},"content":"### Listing all patients : `list_patient`","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"redHat-arko"},"content":"Shows a list of all patients in MediMeet.","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"redHat-arko"},"content":"Format: `list_patient`","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"redHat-arko"},"content":"### Editing a patient : `edit_patient`","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"redHat-arko"},"content":"Edits an existing patient in MediMeet.","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"runoutofit"},"content":"Format: `edit_patient INDEX [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]â€¦â€‹`","lastModifiedDate":"2023-04-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"redHat-arko"},"content":"* Edits the patient at the specified `INDEX`. The index refers to the index number shown in the displayed patient list. The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"runoutofit"},"content":"* Editing of names are not allowed.","lastModifiedDate":"2023-04-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"redHat-arko"},"content":"* When editing tags, the existing tags of the patient will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"redHat-arko"},"content":"* You can remove all the patientâ€™s tags by typing `t/` without","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"redHat-arko"},"content":"*  `edit_patient 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st patient to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"redHat-arko"},"content":"### Locating patients by name: `find_patient`","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"redHat-arko"},"content":"Finds patients whose names contain any of the given keywords.","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"redHat-arko"},"content":"Format: `find_patient KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"redHat-arko"},"content":"* Patients matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"redHat-arko"},"content":"* `find_patient John` returns `john` and `John Doe`","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"redHat-arko"},"content":"* `find_patient alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"redHat-arko"},"content":"### Locating patients by details: `find_patient_details`","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"redHat-arko"},"content":"Finds patients whose details contain any of the given keywords.","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"redHat-arko"},"content":"Format: `find_patient_details KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"redHat-arko"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"redHat-arko"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"redHat-arko"},"content":"* All patient details are searched.","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"redHat-arko"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"redHat-arko"},"content":"* Patient details matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"redHat-arko"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"redHat-arko"},"content":"Examples:","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"redHat-arko"},"content":"* `find_patient_details 22224444` returns the patient with a phone number `22224444`","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"redHat-arko"},"content":"### Deleting a patient : `delete_patient`","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"redHat-arko"},"content":"Deletes the specified patient from MediMeet.","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"redHat-arko"},"content":"Format: `delete_patient INDEX`","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"redHat-arko"},"content":"* Deletes the patient at the specified `INDEX`.","lastModifiedDate":"2023-03-28"},{"lineNumber":200,"author":{"gitId":"redHat-arko"},"content":"* The index refers to the index number shown in the displayed patient list.","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"redHat-arko"},"content":"* `list_patient` followed by `delete_patient 2` deletes the 2nd patient in the MediMeet.","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"runoutofit"},"content":"* `find_patient Alex` followed by `delete_patient 1` deletes the 1st patient in the results of the `find_patient` command.","lastModifiedDate":"2023-04-04"},{"lineNumber":206,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"redHat-arko"},"content":"### Adding patient notes: `remark_patient`","lastModifiedDate":"2023-03-30"},{"lineNumber":208,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"redHat-arko"},"content":"Adds a remark to a patient in MediMeet.","lastModifiedDate":"2023-03-28"},{"lineNumber":210,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":211,"author":{"gitId":"redHat-arko"},"content":"Format: `remark_patient INDEX [r/REMARK]`","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":213,"author":{"gitId":"redHat-arko"},"content":"* Remarks cannot be edited and can only be overwritten.","lastModifiedDate":"2023-03-28"},{"lineNumber":214,"author":{"gitId":"zxisatree"},"content":"* In order to remove notes from a patient, use `remark_patient INDEX` without the optional `[r\\REMARK]`, or use `remark_patient INDEX r/`.","lastModifiedDate":"2023-04-06"},{"lineNumber":215,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":216,"author":{"gitId":"redHat-arko"},"content":"* Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":217,"author":{"gitId":"redHat-arko"},"content":"* `remark_patient 1 r/Immunocompromised` Adds a note `Immunocompromised` to the patient.","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"redHat-arko"},"content":"* `remark_patient 1` Removes any existing note from the patient.","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":220,"author":{"gitId":"runoutofit"},"content":"### Viewing a patient: `view`","lastModifiedDate":"2023-03-31"},{"lineNumber":221,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":222,"author":{"gitId":"runoutofit"},"content":"Views a patient\u0027s full details in another popup window.","lastModifiedDate":"2023-03-31"},{"lineNumber":223,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":224,"author":{"gitId":"runoutofit"},"content":"Format: `view INDEX`","lastModifiedDate":"2023-03-31"},{"lineNumber":225,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":226,"author":{"gitId":"runoutofit"},"content":"Example:","lastModifiedDate":"2023-03-31"},{"lineNumber":227,"author":{"gitId":"runoutofit"},"content":"* `view 1`","lastModifiedDate":"2023-03-31"},{"lineNumber":228,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":229,"author":{"gitId":"redHat-arko"},"content":"### Adding an appointment: `add_appt`","lastModifiedDate":"2023-03-28"},{"lineNumber":230,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":231,"author":{"gitId":"redHat-arko"},"content":"Adds an appointment for an existing patient in MediMeet.","lastModifiedDate":"2023-03-28"},{"lineNumber":232,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":233,"author":{"gitId":"runoutofit"},"content":"Format: `add_appt n/NAME ts/TIMESLOT d/DESCRIPTION doc/DOCTORâ€¦â€‹`","lastModifiedDate":"2023-04-04"},{"lineNumber":234,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":235,"author":{"gitId":"redHat-arko"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":236,"author":{"gitId":"runoutofit"},"content":"* `add_appt n/Alex Yeoh ts/01012023 00:00,01012023 01:00 d/Regular checkup doc/Xiao Lu`","lastModifiedDate":"2023-04-04"},{"lineNumber":237,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":238,"author":{"gitId":"redHat-arko"},"content":"### Listing all appointments : `list_appt`","lastModifiedDate":"2023-03-28"},{"lineNumber":239,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":240,"author":{"gitId":"redHat-arko"},"content":"Shows a list of all appointments in MediMeet.","lastModifiedDate":"2023-03-28"},{"lineNumber":241,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":242,"author":{"gitId":"redHat-arko"},"content":"Format: `list_appt`","lastModifiedDate":"2023-03-28"},{"lineNumber":243,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":244,"author":{"gitId":"redHat-arko"},"content":"### Editing an appointment : `edit_appt`","lastModifiedDate":"2023-03-28"},{"lineNumber":245,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"redHat-arko"},"content":"Edits an existing appointment in MediMeet.","lastModifiedDate":"2023-03-28"},{"lineNumber":247,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":248,"author":{"gitId":"runoutofit"},"content":"Format: `edit_appt INDEX [ts/TIMESLOT] [d/DESCRIPTION] [doc/DOCTOR]â€¦â€‹`","lastModifiedDate":"2023-04-04"},{"lineNumber":249,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"redHat-arko"},"content":"* Edits the appointment at the specified `INDEX`. The index refers to the index number shown in the displayed patient list. The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"redHat-arko"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"redHat-arko"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":254,"author":{"gitId":"redHat-arko"},"content":"Examples:","lastModifiedDate":"2023-03-28"},{"lineNumber":255,"author":{"gitId":"redHat-arko"},"content":"*  `edit_appt 1 ts/01012023 00:00,01012023 01:00 d/Regular checkup` Edits the timeslot of the 1st appointment to be `01012023 00:00,01012023 01:00` and the description to be `Regular checkup`, respectively.","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":257,"author":{"gitId":"redHat-arko"},"content":"### Locating appointments: `find_appt`","lastModifiedDate":"2023-03-28"},{"lineNumber":258,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":259,"author":{"gitId":"redHat-arko"},"content":"Finds all appointments whose timeslots cover the specified time.","lastModifiedDate":"2023-03-28"},{"lineNumber":260,"author":{"gitId":"redHat-arko"},"content":"If a second timeslot is specified, all appointments that occur during that time period are found.","lastModifiedDate":"2023-03-28"},{"lineNumber":261,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":262,"author":{"gitId":"redHat-arko"},"content":"Format: `find_appt TIMESLOT [TIMESLOT]`","lastModifiedDate":"2023-03-28"},{"lineNumber":263,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":264,"author":{"gitId":"redHat-arko"},"content":"Examples:","lastModifiedDate":"2023-03-28"},{"lineNumber":265,"author":{"gitId":"redHat-arko"},"content":"*  `find_appt 01012023 00:00` Finds all appointments during `01012023 00:00`.","lastModifiedDate":"2023-03-28"},{"lineNumber":266,"author":{"gitId":"redHat-arko"},"content":"*  `find_appt 01012023 00:00 01012023 01:00` Finds all appointments between `01012023 00:00` and `01012023 01:00`.","lastModifiedDate":"2023-03-28"},{"lineNumber":267,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":268,"author":{"gitId":"redHat-arko"},"content":"### Deleting an appointment: `delete_appt`","lastModifiedDate":"2023-03-28"},{"lineNumber":269,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":270,"author":{"gitId":"redHat-arko"},"content":"Deletes an existing appointment in MediMeet.","lastModifiedDate":"2023-03-28"},{"lineNumber":271,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":272,"author":{"gitId":"redHat-arko"},"content":"Format: `delete_appt APPOINTMENT_INDEX`","lastModifiedDate":"2023-03-30"},{"lineNumber":273,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":274,"author":{"gitId":"redHat-arko"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":275,"author":{"gitId":"redHat-arko"},"content":"* `delete_appt 1`","lastModifiedDate":"2023-03-28"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"redHat-arko"},"content":"Clears all entries from MediMeet.","lastModifiedDate":"2023-03-28"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"AddressBook and Appointment List data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-03-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":295,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"MediMeet data are saved in two JSON files: `[JAR file location]/data/addressbook.json` contains patient contact information, and `[JAR file location]/data/appointment_list.json` contains appointment information. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-03-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":297,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"If your changes to the data files make their format invalid, MediMeet will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-03-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":300,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"runoutofit"},"content":"| Action                      | Format, Examples                                                                                                                                                                      |","lastModifiedDate":"2023-03-02"},{"lineNumber":316,"author":{"gitId":"runoutofit"},"content":"|-----------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-04"},{"lineNumber":317,"author":{"gitId":"runoutofit"},"content":"| **Add patient**             | `add_patient n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]â€¦â€‹` \u003cbr\u003e e.g., `add_patient n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2023-04-04"},{"lineNumber":318,"author":{"gitId":"runoutofit"},"content":"| **Add appointment**         | `add_appt n/NAME ts/TIMESLOT d/DESCRIPTION [t/TAG]â€¦â€‹` \u003cbr\u003e e.g., `add_appt n/John Doe ts/01012023 00:00,01012023 01:00 d/Regular checkup`                                             |                                                                                                       |","lastModifiedDate":"2023-04-04"},{"lineNumber":319,"author":{"gitId":"runoutofit"},"content":"| **Clear**                   | `clear`                                                                                                                                                                               |","lastModifiedDate":"2023-03-02"},{"lineNumber":320,"author":{"gitId":"runoutofit"},"content":"| **Delete patient**          | `delete_patient INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                           |","lastModifiedDate":"2023-04-04"},{"lineNumber":321,"author":{"gitId":"redHat-arko"},"content":"| **Delete appointment**      | `delete_appt INDEX`\u003cbr\u003e e.g., `delete_appt 3`                                                                                                                                         |","lastModifiedDate":"2023-03-28"},{"lineNumber":322,"author":{"gitId":"runoutofit"},"content":"| **Edit patient**            | `edit_patient INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]â€¦â€‹`\u003cbr\u003e e.g.,`edit_patient 2 n/James Lee e/jameslee@example.com`                                           |","lastModifiedDate":"2023-04-04"},{"lineNumber":323,"author":{"gitId":"redHat-arko"},"content":"| **Edit appointment**        | `edit_appt INDEX [ts/TIMESLOT] [d/DESCRIPTION] [t/TAG]â€¦â€‹` \u003cbr\u003e e.g.,`edit_appt 1 ts/01012023 00:00,01012023 01:00 d/Regular checkup`                                                  |","lastModifiedDate":"2023-03-28"},{"lineNumber":324,"author":{"gitId":"runoutofit"},"content":"| **Find patient**            | `find_patient KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find_patient James Jake`                                                                                                            |","lastModifiedDate":"2023-04-04"},{"lineNumber":325,"author":{"gitId":"runoutofit"},"content":"| **Find in patient details** | `find_patient_details KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find_patient_details 22224444`                                                                                              |","lastModifiedDate":"2023-04-04"},{"lineNumber":326,"author":{"gitId":"redHat-arko"},"content":"| **Find appointment**        | `find_appt TIMESLOT [TIMESLOT]`\u003cbr\u003e e.g., `find_appt 01012023 00:00 01012023 01:00`                                                                                                   |","lastModifiedDate":"2023-03-28"},{"lineNumber":327,"author":{"gitId":"runoutofit"},"content":"| **List patient**            | `list_patient`                                                                                                                                                                        |","lastModifiedDate":"2023-04-04"},{"lineNumber":328,"author":{"gitId":"redHat-arko"},"content":"| **List appointments**       | `list_appt`                                                                                                                                                                           |","lastModifiedDate":"2023-03-28"},{"lineNumber":329,"author":{"gitId":"runoutofit"},"content":"| **Help**                    | `help`                                                                                                                                                                                |","lastModifiedDate":"2023-03-02"},{"lineNumber":330,"author":{"gitId":"runoutofit"},"content":"| **Add patient notes**       | `remark_patient INDEX [r/REMARK]` \u003cbr\u003e e.g., `remark_patient 3 r/Immunocompromised`                                                                                                   |","lastModifiedDate":"2023-04-04"},{"lineNumber":331,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":332,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-29"},{"lineNumber":333,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":334,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"## Glossary of technical terms","lastModifiedDate":"2023-03-29"},{"lineNumber":335,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":336,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| Term              | Description                                                                                                                                                                              |","lastModifiedDate":"2023-03-29"},{"lineNumber":337,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"|-------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-29"},{"lineNumber":338,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| **CLI**           | Command Line Interface. MediMeet is a CLI application.                                                                                                                                   |","lastModifiedDate":"2023-03-29"},{"lineNumber":339,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| **GUI**           | Graphical User Interface. MediMeet has a GUI created with JavaFX.                                                                                                                        |","lastModifiedDate":"2023-03-29"},{"lineNumber":340,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| **JAR**           | Java Archive (JAR) is a package file format typically used to aggregate many Java class files and associated metadata and resources (text, images, etc.) into one file for distribution. |","lastModifiedDate":"2023-03-29"},{"lineNumber":341,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| **JSON**          | JavaScript Object Notation (JSON) is a lightweight data-interchange format.                                                                                                              |","lastModifiedDate":"2023-03-29"},{"lineNumber":342,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| **Mainstream OS** | Mainstream OS are the operating systems that are supported by MediMeet.                                                                                                                  |","lastModifiedDate":"2023-03-29"},{"lineNumber":343,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| **Java**          | Java is a popular programming language that MediMeet is written in.                                                                                                                      |","lastModifiedDate":"2023-03-29"},{"lineNumber":344,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| **Gradle**        | Gradle is a build tool that MediMeet uses.                                                                                                                                               |","lastModifiedDate":"2023-03-29"},{"lineNumber":345,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"| **IntelliJ**      | IntelliJ is an Integrated Development Environment (IDE) that MediMeet uses.                                                                                                              |","lastModifiedDate":"2023-03-29"},{"lineNumber":346,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":347,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":348,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-29"},{"lineNumber":349,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":350,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"## Acknowledgements","lastModifiedDate":"2023-03-29"},{"lineNumber":351,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":352,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-29"},{"lineNumber":353,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"* This project uses the [JavaFx](https://openjfx.io/) library.","lastModifiedDate":"2023-03-29"},{"lineNumber":354,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"* This project uses the [JUnit](https://junit.org/junit5/) library.","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"zxisatree":14,"redHat-arko":104,"Jayanth-Balasubramanian":61,"runoutofit":33,"-":142}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"zxisatree"},"content":"    content: \"MediMeet\";","lastModifiedDate":"2023-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"zxisatree":1,"-":294}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"AddressBook *-right-\u003e \"1\" UniquePatientList","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"UniqueTagList -[hidden]down- UniquePatientList","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"UniqueTagList -[hidden]down- UniquePatientList","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"UniquePatientList -right-\u003e Patient","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"Patient -up-\u003e \"*\" Tag","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"Patient *--\u003e Id","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"Patient *--\u003e Name","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"Patient *--\u003e Phone","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"Patient *--\u003e Email","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"Patient *--\u003e Address","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"Patient *--\u003e Remark","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"zxisatree":11,"-":12}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAppointmentList\" as ReadOnlyAppointmentList","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as iModel","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"Class AppointmentList","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"Class UniqueAppointmentList","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"Class Appointment","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"Class AppointmentId","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"Class Timeslot","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"Class Description","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"Class AppointmentTag","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"Class UniquePatientList","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"Class Patient","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"Class PatientId","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"Class PatientTag","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"Class Remark","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"HiddenOutside ..\u003e iModel","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"AppointmentList .up.|\u003e ReadOnlyAppointmentList","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"ModelManager .up.|\u003e iModel","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"iModel .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"iModel .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"iModel .left.\u003e ReadOnlyAppointmentList","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"ModelManager -left-\u003e \"1\" AppointmentList","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"AppointmentList *--\u003e \"1\" UniqueAppointmentList","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"UniqueAppointmentList --\u003e \"~* all\" Appointment","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"Appointment *--\u003e AppointmentId","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"Appointment *--\u003e Timeslot","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"Appointment *--\u003e Description","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"Appointment *--\u003e \"*\" AppointmentTag","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"AddressBook *--\u003e \"1\" UniquePatientList","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"UniquePatientList --\u003e \"~* all\" Patient","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"Patient *--\u003e PatientId","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"Patient *--\u003e Name","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"Patient *--\u003e Phone","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"Patient *--\u003e Email","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"Patient *--\u003e Address","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"Patient *--\u003e Remark","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"Patient *--\u003e \"*\" PatientTag","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"AppointmentId -[hidden]right-\u003e Timeslot","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"zxisatree"},"content":"Timeslot -[hidden]right-\u003e Description","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"zxisatree"},"content":"Description -[hidden]right-\u003e AppointmentTag","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"zxisatree"},"content":"AppointmentTag -[hidden]right-\u003e PatientId","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"PatientId -[hidden]right-\u003e Name","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"zxisatree"},"content":"Email -[hidden]right-\u003e PatientTag","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"zxisatree"},"content":"ModelManager --\u003e\"~* filtered\" Patient","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"zxisatree"},"content":"ModelManager --\u003e Appointment","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"zxisatree":46,"-":34}},{"path":"docs/diagrams/RemarkSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"redHat-arko"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"redHat-arko"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"redHat-arko"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"redHat-arko"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"redHat-arko"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"redHat-arko"},"content":"participant \":RemarkCommandParser\" as RemarkCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"redHat-arko"},"content":"participant \"r:RemarkCommand\" as RemarkCommand LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"redHat-arko"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"redHat-arko"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"redHat-arko"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"redHat-arko"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"redHat-arko"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"redHat-arko"},"content":"[-\u003e LogicManager : execute(\"remark 1 Immunocompromised\")","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"redHat-arko"},"content":"activate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"redHat-arko"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"remark 1 Immunocompromised\")","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"redHat-arko"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"redHat-arko"},"content":"create RemarkCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"redHat-arko"},"content":"AddressBookParser -\u003e RemarkCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"redHat-arko"},"content":"activate RemarkCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"redHat-arko"},"content":"RemarkCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"redHat-arko"},"content":"deactivate RemarkCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"redHat-arko"},"content":"AddressBookParser -\u003e RemarkCommandParser : parse(\"1 Immunocompromised\")","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"redHat-arko"},"content":"activate RemarkCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"redHat-arko"},"content":"create RemarkCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"redHat-arko"},"content":"RemarkCommandParser -\u003e RemarkCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"redHat-arko"},"content":"activate RemarkCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"redHat-arko"},"content":"RemarkCommand --\u003e RemarkCommandParser : r","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"redHat-arko"},"content":"deactivate RemarkCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"redHat-arko"},"content":"RemarkCommandParser --\u003e AddressBookParser : r","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"redHat-arko"},"content":"deactivate RemarkCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"redHat-arko"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"redHat-arko"},"content":"RemarkCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"redHat-arko"},"content":"destroy RemarkCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"redHat-arko"},"content":"AddressBookParser --\u003e LogicManager : r","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"redHat-arko"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"redHat-arko"},"content":"LogicManager -\u003e RemarkCommand : execute()","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"redHat-arko"},"content":"activate RemarkCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"redHat-arko"},"content":"RemarkCommand -\u003e Model : editPatient(1, \"Immunocompromised\")","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"redHat-arko"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"redHat-arko"},"content":"Model --\u003e RemarkCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"redHat-arko"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"redHat-arko"},"content":"create CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"redHat-arko"},"content":"RemarkCommand -\u003e CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"redHat-arko"},"content":"activate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"redHat-arko"},"content":"CommandResult --\u003e RemarkCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"redHat-arko"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"redHat-arko"},"content":"RemarkCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"redHat-arko"},"content":"deactivate RemarkCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"redHat-arko"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"redHat-arko"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"redHat-arko"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"redHat-arko":69}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as iStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"Class JsonAdapatedPatient","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"Class JsonAdaptedPatientTag","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"package \"AppointmentList Storage\" #F4F6F6{","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAppointmentListStorage\" as AppointmentListStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"Class JsonAppointmentListStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"Class JsonSerializableAppointmentList","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"Class JsonAdapatedAppointment","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"Class JsonAdaptedAppointmentTag","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"HiddenOutside ..\u003e iStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"StorageManager .up.|\u003e iStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"StorageManager -up-\u003e \"1\" AppointmentListStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"iStorage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"iStorage -right-|\u003e AddressBookStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"iStorage -right-|\u003e AppointmentListStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdapatedPatient","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"JsonAdapatedPatient --\u003e \"*\" JsonAdaptedPatientTag","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"JsonAppointmentListStorage .up.|\u003e AppointmentListStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"JsonAppointmentListStorage ..\u003e JsonSerializableAppointmentList","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"JsonSerializableAppointmentList --\u003e \"*\" JsonAdapatedAppointment","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"JsonAdapatedAppointment --\u003e \"*\" JsonAdaptedAppointmentTag","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"zxisatree":24,"-":34}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"Class PatientListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"Class PatientCard","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"Class AppointmentListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"Class AppointmentCard","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"MainWindow *-down-\u003e \"1\" PatientListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"MainWindow *-down-\u003e \"1\" AppointmentListPanel","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"PatientListPanel -down-\u003e \"*\" PatientCard","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"AppointmentListPanel -down-\u003e \"*\" AppointmentCard","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"AppointmentCard --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"PatientListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"AppointmentListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"PatientCard --|\u003e UiPart","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"AppointmentCard ..down\u003e Model","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"PatientCard ..right\u003e Model","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"PatientListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jayanth-Balasubramanian":15,"-":50}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"runoutofit"},"content":"title:MediMeet","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"runoutofit"},"content":"![Ui](images/updated_UI.jpg)","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"runoutofit"},"content":"**MediMeet is a desktop application for managing your patient and appointment details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"runoutofit"},"content":"* If you are interested in using MediMeet, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"runoutofit"},"content":"* If you are interested about developing MediMeet, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"runoutofit":5,"-":14}},{"path":"docs/team/jayanth-balasubramanian.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"### Project: MediMeet","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"**MediMeet** is a desktop application that enables doctors to effectively manage patient details and appointments. It saves costs by reducing the need for personal assistants or appointment managers.","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dJayanth-Balasubramanian\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dJayanth-Balasubramanian\u0026tabRepo\u003dAY2223S2-CS2103T-W12-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"* **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    * to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    * to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    * User Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        * to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        * to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    * to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"* **Reviewing/mentoring contributions**:","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    * to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    * to be added soon","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"Jayanth-Balasubramanian":29}},{"path":"docs/team/redhat-arko.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"redHat-arko"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"redHat-arko"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"redHat-arko"},"content":"title: Arkobrata Chaudhuri\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"redHat-arko"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"redHat-arko"},"content":"### Project: MediMeet","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"redHat-arko"},"content":"**MediMeet** is a desktop application for doctors to manage their patientsâ€™ details and appointment dates. It helps them manage their own appointments and mitigates the need for a personal assistant or appointment manager, while also saving costs in the process.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"redHat-arko"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"redHat-arko"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"redHat-arko"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dredHat-arko\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"redHat-arko"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"redHat-arko"},"content":"* **Enhancements implemented**: to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"redHat-arko"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"redHat-arko"},"content":"    * User Guide: to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"redHat-arko"},"content":"    * Developer Guide: to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"redHat-arko"},"content":"* **Contributions to team based tasks**:","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"redHat-arko"},"content":"    * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"redHat-arko"},"content":"    * Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"redHat-arko"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"redHat-arko"},"content":"* **Review/mentoring contributions**: to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"redHat-arko"},"content":"* **Contributions beyond the project team**: to be added soon","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"redHat-arko":31}},{"path":"docs/team/runoutofit.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"runoutofit"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"runoutofit"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"runoutofit"},"content":"title: Chua Wen Hong\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"runoutofit"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"runoutofit"},"content":"### Project: MediMeet","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"runoutofit"},"content":"**MediMeet** is a desktop application for doctors to manage their patientsâ€™ details and appointment dates. It helps them manage their own appointments and mitigates the need for a personal assistant or appointment manager, while also saving costs in the process.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"runoutofit"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"runoutofit"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"runoutofit"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003drunoutofit\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"runoutofit"},"content":"* **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"runoutofit"},"content":"    * to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"runoutofit"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"runoutofit"},"content":"    * to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"runoutofit"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"runoutofit"},"content":"    * User Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"runoutofit"},"content":"        * to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"runoutofit"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"runoutofit"},"content":"        * to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"runoutofit"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"runoutofit"},"content":"    * to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"runoutofit"},"content":"* **Reviewing/mentoring contributions**:","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"runoutofit"},"content":"    * to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"runoutofit"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"runoutofit"},"content":"  * to be added soon","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"runoutofit":34}},{"path":"docs/team/zxisatree.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"title: Chia Zi Xuan\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"### Project: MediMeet","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"**MediMeet** is a desktop application for doctors to manage their patientsâ€™ details and appointment dates. It helps them manage their own appointments and mitigates the need for a personal assistant or appointment manager, while also saving costs in the process.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dzxisatree\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"* **Enhancements implemented**: to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"  * User Guide: to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"  * Developer Guide: to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"* **Contributions to team based tasks**:","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"  * PRs reviewed (with non-trivial review comments): to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"  * Contributed to forum discussions (examples: to be added soon)","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"* **Review/mentoring contributions**: to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"* **Contributions beyond the project team**: to be added soon","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"zxisatree":31}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.AppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyAppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyPatientList;","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"import seedu.address.storage.AppointmentListStorage;","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"import seedu.address.storage.JsonAppointmentListStorage;","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"        AppointmentListStorage appointmentListStorage \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"            new JsonAppointmentListStorage(userPrefs.getAppointmentListFilePath());","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"        storage \u003d new StorageManager(addressBookStorage, appointmentListStorage, userPrefsStorage);","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"zxisatree"},"content":"        Optional\u003cReadOnlyPatientList\u003e addressBookOptional;","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"zxisatree"},"content":"        Optional\u003cReadOnlyAppointmentList\u003e appointmentListOptional;","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"zxisatree"},"content":"        ReadOnlyPatientList initialPatientData;","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"zxisatree"},"content":"        ReadOnlyAppointmentList initialAppointmentData;","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"zxisatree"},"content":"            if (addressBookOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"zxisatree"},"content":"                logger.info(\"Data file for patients not found. Will be starting with a sample patient list\");","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"zxisatree"},"content":"            initialPatientData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"zxisatree"},"content":"            appointmentListOptional \u003d storage.readAppointmentList();","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"zxisatree"},"content":"            if (appointmentListOptional.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"zxisatree"},"content":"                logger.info(","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"zxisatree"},"content":"                    \"Data file for appointment lists not found. Will be starting with a sample appointment list\");","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"zxisatree"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"zxisatree"},"content":"            initialAppointmentData \u003d appointmentListOptional.orElseGet(SampleDataUtil::getSampleAppointmentList);","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"zxisatree"},"content":"            initialPatientData \u003d new AddressBook();","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"zxisatree"},"content":"            initialAppointmentData \u003d new AppointmentList();","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":106,"author":{"gitId":"zxisatree"},"content":"            initialPatientData \u003d new AddressBook();","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"zxisatree"},"content":"            initialAppointmentData \u003d new AppointmentList();","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"zxisatree"},"content":"        return new ModelManager(initialPatientData, initialAppointmentData, userPrefs);","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zxisatree":27,"-":173}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX \u003d \"The patient index provided is invalid\";","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"        \"The appointment index provided is invalid\";","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_PATIENTS_LISTED_OVERVIEW \u003d \"%1$d patients listed!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_APPOINTMENTS_LISTED_OVERVIEW \u003d \"%1$d appointments listed!\";","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_INVALID_PATIENT_NAME \u003d \"The patient name provided is invalid!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zxisatree":6,"-":11}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"     * Returns true if {@code s} is \"0\" or a representation of the integer zero.","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"     * @param s The string to check.","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"     * @return True if the string is a representation of the integer zero.","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"    public static boolean isZero(String s) {","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"        try {","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"            return value \u003d\u003d 0;","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"            return false;","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zxisatree":16,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyAppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyPatientList;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"    ReadOnlyPatientList getAddressBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /** Returns an unmodifiable view of the filtered list of patients */","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"     * Returns the appointment list.","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"     * @see seedu.address.model.Model#getAppointmentList()","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"    ReadOnlyAppointmentList getAppointmentList();","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"zxisatree":10,"Jayanth-Balasubramanian":5,"-":45}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyAppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyPatientList;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"            storage.saveAppointmentList(model.getAppointmentList());","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"    public ReadOnlyPatientList getAddressBook() {","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"    public ReadOnlyAppointmentList getAppointmentList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"        return model.getAppointmentList();","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return model.getFilteredPatientList();","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return model.getFilteredAppointmentList();","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"zxisatree":6,"Jayanth-Balasubramanian":8,"-":79}},{"path":"src/main/java/seedu/address/logic/commands/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redHat-arko"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"redHat-arko"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESLOT;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.ui.CalendarCard;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"redHat-arko"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"redHat-arko"},"content":" * Adds an appointment to a patient in the address book.","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"redHat-arko"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"redHat-arko"},"content":"public class AddAppointmentCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"redHat-arko"},"content":"    public static final String COMMAND_WORD \u003d \"add_appt\";","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String COMMAND_ALIAS \u003d \"aa\";","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"redHat-arko"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an appointment for a patient. \"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"redHat-arko"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"redHat-arko"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"redHat-arko"},"content":"            + PREFIX_TIMESLOT + \"TIMESLOT \"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"redHat-arko"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION\"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"redHat-arko"},"content":"            + PREFIX_DOCTOR + \"DOCTOR\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"redHat-arko"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"redHat-arko"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"redHat-arko"},"content":"            + PREFIX_TIMESLOT + \"01012023 00:00,01012023 01:00 \"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"redHat-arko"},"content":"            + PREFIX_DESCRIPTION + \"Regular checkup \"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"redHat-arko"},"content":"            + PREFIX_DOCTOR + \"Xiao Lu\";","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"redHat-arko"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New appointment added: %1$s\";","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_TIMESLOT_OCCUPIED \u003d \"That timeslot is occupied\";","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_PATIENT_DOES_NOT_EXIST \u003d \"This patient does not exist\";","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"redHat-arko"},"content":"    private final Appointment toAdd;","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"redHat-arko"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"redHat-arko"},"content":"     * Creates an AddAppointmentCommand to add the specified {@code Patient}","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"redHat-arko"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"redHat-arko"},"content":"    public AddAppointmentCommand(Appointment appointment) {","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"redHat-arko"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"redHat-arko"},"content":"        toAdd \u003d appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"redHat-arko"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"redHat-arko"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"redHat-arko"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"redHat-arko"},"content":"        if (!model.hasPatientName(toAdd.getPatientName())) {","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"            throw new CommandException(MESSAGE_PATIENT_DOES_NOT_EXIST);","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"redHat-arko"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"redHat-arko"},"content":"        if (model.hasAppointment(toAdd)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"            throw new CommandException(MESSAGE_TIMESLOT_OCCUPIED);","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"redHat-arko"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"runoutofit"},"content":"        if (model.hasPatientName(toAdd.getPatientName())) {","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"redHat-arko"},"content":"            model.addAppointment(toAdd);","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            CalendarCard.addAppointmentsToCalendar(model.getAppointmentList());","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"runoutofit"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"redHat-arko"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"redHat-arko"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"redHat-arko"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"redHat-arko"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"redHat-arko"},"content":"                || (other instanceof AddAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"redHat-arko"},"content":"                \u0026\u0026 toAdd.equals(((AddAppointmentCommand) other).toAdd));","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"redHat-arko"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"redHat-arko":62,"zxisatree":4,"Jayanth-Balasubramanian":3,"runoutofit":2}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Adds a patient to the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"    public static final String COMMAND_WORD \u003d \"add_patient\";","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"    public static final String COMMAND_ALIAS \u003d \"ap\";","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a patient to the address book. \"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"redHat-arko"},"content":"            + PREFIX_TAG + \"astigmatism \"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"redHat-arko"},"content":"            + PREFIX_TAG + \"lasikDue\";","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New patient added: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists in the address book\";","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final Patient toAdd;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Creates an AddCommand to add the specified {@code Patient}","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public AddCommand(Patient patient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        toAdd \u003d patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (model.hasPatient(toAdd)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        model.addPatient(toAdd);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zxisatree":2,"redHat-arko":2,"Jayanth-Balasubramanian":13,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String COMMAND_ALIAS \u003d \"c\";","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Patient and appointment list have been cleared!\";","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zxisatree":1,"Jayanth-Balasubramanian":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"runoutofit"},"content":"    private final boolean view;","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"runoutofit"},"content":"    private final int index;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"runoutofit"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean view, int index) {","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"runoutofit"},"content":"        this.view \u003d view;","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"runoutofit"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"runoutofit"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"runoutofit"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"runoutofit"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}, {@code view} and {@code index},","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"runoutofit"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"runoutofit"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"runoutofit"},"content":"    public CommandResult(String feedbackToUser, boolean view, int index) {","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"runoutofit"},"content":"        this(feedbackToUser, false, false, view, index);","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"runoutofit"},"content":"        this(feedbackToUser, false, false, false, 0);","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"runoutofit"},"content":"    public boolean isView() {","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"runoutofit"},"content":"        return view;","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"runoutofit"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"runoutofit"},"content":"    public int getIndex() {","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"runoutofit"},"content":"        return index;","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"runoutofit"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"zxisatree"},"content":"    public String toString() {","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"zxisatree"},"content":"        return feedbackToUser;","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zxisatree":4,"runoutofit":24,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"runoutofit"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"runoutofit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"runoutofit"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"runoutofit"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"runoutofit"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"runoutofit"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"runoutofit"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"runoutofit"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.ui.CalendarCard;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"runoutofit"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"runoutofit"},"content":" * Deletes the appointment identified by user.","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"runoutofit"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"runoutofit"},"content":"public class DeleteAppointmentCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"runoutofit"},"content":"    public static final String COMMAND_WORD \u003d \"delete_appt\";","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String COMMAND_ALIAS \u003d \"da\";","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"runoutofit"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"redHat-arko"},"content":"            + \": Deletes the appointment identified by the index number used in the displayed appointment list.\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"redHat-arko"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"redHat-arko"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"runoutofit"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"Deleted Appointment: %1$s\";","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"runoutofit"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"runoutofit"},"content":"    public DeleteAppointmentCommand(Index targetIndex) {","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"runoutofit"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"runoutofit"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"runoutofit"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"runoutofit"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"runoutofit"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"runoutofit"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"runoutofit"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"runoutofit"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"runoutofit"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"runoutofit"},"content":"        Appointment appointmentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"runoutofit"},"content":"        model.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        CalendarCard.addAppointmentsToCalendar(model.getAppointmentList());","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"runoutofit"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_APPOINTMENT_SUCCESS, appointmentToDelete));","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"runoutofit"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"runoutofit"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"runoutofit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"runoutofit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"runoutofit"},"content":"                || (other instanceof DeleteAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"runoutofit"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteAppointmentCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"runoutofit"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"runoutofit"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"redHat-arko":3,"runoutofit":44,"Jayanth-Balasubramanian":3}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Deletes a patient identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"    public static final String COMMAND_WORD \u003d \"delete_patient\";","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"    public static final String COMMAND_ALIAS \u003d \"dp\";","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            + \": Deletes the patient identified by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String MESSAGE_DELETE_PATIENT_SUCCESS \u003d \"Deleted Patient: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient patientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        model.deletePatient(patientToDelete);","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete));","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zxisatree":2,"Jayanth-Balasubramanian":9,"-":42}},{"path":"src/main/java/seedu/address/logic/commands/EditAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESLOT;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"import java.util.List;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Description;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.appointment.Doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Timeslot;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.ui.CalendarCard;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":" * Edits the details of an existing appointment in the address book.","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"public class EditAppointmentCommand extends Command {","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"    public static final String COMMAND_WORD \u003d \"edit_appt\";","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String COMMAND_ALIAS \u003d \"ea\";","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the appointment identified \"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"        + \"by the index number used in the displayed appointment list. \"","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"redHat-arko"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"        + \"[\" + PREFIX_TIMESLOT + \"TIMESLOT] \"","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"redHat-arko"},"content":"        + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"redHat-arko"},"content":"        + \"[\" + PREFIX_DOCTOR + \"DOCTOR]\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"redHat-arko"},"content":"        + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"redHat-arko"},"content":"        + PREFIX_TIMESLOT + \"01022023 09:00,01022023 11:00 \"","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"redHat-arko"},"content":"        + PREFIX_DESCRIPTION + \"Regular checkup \"","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"redHat-arko"},"content":"        + PREFIX_DOCTOR + \"Xiao Lu\";","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_EDIT_APPOINTMENT_SUCCESS \u003d \"Edited appointment: %1$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists in the patient list.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_PATIENT_DOES_NOT_EXIST \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"        \"The specified patient does not exist in the patient list.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"    private final Index index;","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"    private final EditAppointmentDescriptor editAppointmentDescriptor;","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"     * @param editAppointmentDescriptor details to edit the appointment with","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"    public EditAppointmentCommand(Index index, EditAppointmentDescriptor editAppointmentDescriptor) {","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"        requireNonNull(editAppointmentDescriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"        this.editAppointmentDescriptor \u003d new EditAppointmentDescriptor(editAppointmentDescriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"zxisatree"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"zxisatree"},"content":"        System.out.println(editAppointmentDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"zxisatree"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"zxisatree"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"zxisatree"},"content":"        } else if (editAppointmentDescriptor.getPatientName().isPresent()","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"zxisatree"},"content":"            \u0026\u0026 !model.hasPatientName(editAppointmentDescriptor.getPatientName().get())) {","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"zxisatree"},"content":"            throw new CommandException(MESSAGE_PATIENT_DOES_NOT_EXIST);","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"zxisatree"},"content":"        Appointment appointmentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"zxisatree"},"content":"        Appointment editedAppointment \u003d createEditedAppointment(appointmentToEdit, editAppointmentDescriptor);","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"zxisatree"},"content":"        if (!appointmentToEdit.isSameAppointment(editedAppointment) \u0026\u0026 model.hasAppointment(editedAppointment)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"zxisatree"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"zxisatree"},"content":"        model.setAppointment(appointmentToEdit, editedAppointment);","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"zxisatree"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        CalendarCard.addAppointmentsToCalendar(model.getAppointmentList());","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"zxisatree"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_APPOINTMENT_SUCCESS, editedAppointment));","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"zxisatree"},"content":"     * Creates and returns a {@code Appointment} with the details of {@code appointmentToEdit}","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"zxisatree"},"content":"     * edited with {@code editAppointmentDescriptor}.","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"zxisatree"},"content":"    private static Appointment createEditedAppointment(Appointment appointmentToEdit,","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"zxisatree"},"content":"                                                       EditAppointmentDescriptor editAppointmentDescriptor) {","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"zxisatree"},"content":"        assert appointmentToEdit !\u003d null;","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"zxisatree"},"content":"        Timeslot updatedTimeslot \u003d editAppointmentDescriptor.getTimeslot().orElse(appointmentToEdit.getTimeslot());","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"zxisatree"},"content":"        Description updatedDescription \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"zxisatree"},"content":"            editAppointmentDescriptor.getDescription().orElse(appointmentToEdit.getDescription());","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"redHat-arko"},"content":"        Name updatedName \u003d editAppointmentDescriptor.getPatientName().orElse(appointmentToEdit.getPatientName());","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"redHat-arko"},"content":"        Doctor updatedDoctor \u003d editAppointmentDescriptor.getDoctor().orElse(appointmentToEdit.getDoctor());","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"zxisatree"},"content":"        return new Appointment(updatedName, updatedTimeslot, updatedDescription, updatedDoctor);","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"zxisatree"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"zxisatree"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"zxisatree"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"zxisatree"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"zxisatree"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"zxisatree"},"content":"        if (!(other instanceof EditAppointmentCommand)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"zxisatree"},"content":"            return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"zxisatree"},"content":"        // state check","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"zxisatree"},"content":"        EditAppointmentCommand e \u003d (EditAppointmentCommand) other;","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"zxisatree"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"zxisatree"},"content":"            \u0026\u0026 editAppointmentDescriptor.equals(e.editAppointmentDescriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"zxisatree"},"content":"     * Stores the details to edit the appointment with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"zxisatree"},"content":"     * corresponding field value of the appointment.","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"zxisatree"},"content":"    public static class EditAppointmentDescriptor {","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"zxisatree"},"content":"        private Timeslot timeslot;","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"zxisatree"},"content":"        private Description description;","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"redHat-arko"},"content":"        private Name patientName;","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"redHat-arko"},"content":"        private Doctor doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"zxisatree"},"content":"        public EditAppointmentDescriptor() {","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"zxisatree"},"content":"        /**","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"zxisatree"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"zxisatree"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"zxisatree"},"content":"         */","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"zxisatree"},"content":"        public EditAppointmentDescriptor(EditAppointmentDescriptor toCopy) {","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"zxisatree"},"content":"            setTimeslot(toCopy.timeslot);","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"zxisatree"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"redHat-arko"},"content":"            setPatientName(toCopy.patientName);","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"redHat-arko"},"content":"            setDoctor(toCopy.doctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"zxisatree"},"content":"        /**","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"zxisatree"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"zxisatree"},"content":"         */","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"zxisatree"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"redHat-arko"},"content":"            return CollectionUtil.isAnyNonNull(timeslot, description, patientName, doctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":158,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":159,"author":{"gitId":"zxisatree"},"content":"        public void setTimeslot(Timeslot timeslot) {","lastModifiedDate":"2023-03-17"},{"lineNumber":160,"author":{"gitId":"zxisatree"},"content":"            this.timeslot \u003d timeslot;","lastModifiedDate":"2023-03-17"},{"lineNumber":161,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":162,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":163,"author":{"gitId":"zxisatree"},"content":"        public Optional\u003cTimeslot\u003e getTimeslot() {","lastModifiedDate":"2023-03-17"},{"lineNumber":164,"author":{"gitId":"zxisatree"},"content":"            return Optional.ofNullable(timeslot);","lastModifiedDate":"2023-03-17"},{"lineNumber":165,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":167,"author":{"gitId":"zxisatree"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2023-03-17"},{"lineNumber":168,"author":{"gitId":"zxisatree"},"content":"            this.description \u003d description;","lastModifiedDate":"2023-03-17"},{"lineNumber":169,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":170,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":171,"author":{"gitId":"zxisatree"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2023-03-17"},{"lineNumber":172,"author":{"gitId":"zxisatree"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2023-03-17"},{"lineNumber":173,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":174,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":175,"author":{"gitId":"redHat-arko"},"content":"        public void setPatientName(Name patientName) {","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"redHat-arko"},"content":"            this.patientName \u003d patientName;","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":178,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":179,"author":{"gitId":"redHat-arko"},"content":"        public Optional\u003cName\u003e getPatientName() {","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"redHat-arko"},"content":"            return Optional.ofNullable(patientName);","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":182,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":183,"author":{"gitId":"redHat-arko"},"content":"        public void setDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"redHat-arko"},"content":"            this.doctor \u003d doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":186,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":187,"author":{"gitId":"redHat-arko"},"content":"        public Optional\u003cDoctor\u003e getDoctor() {","lastModifiedDate":"2023-03-29"},{"lineNumber":188,"author":{"gitId":"redHat-arko"},"content":"            return Optional.ofNullable(doctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":190,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":191,"author":{"gitId":"zxisatree"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":192,"author":{"gitId":"zxisatree"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":193,"author":{"gitId":"zxisatree"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":194,"author":{"gitId":"zxisatree"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-17"},{"lineNumber":195,"author":{"gitId":"zxisatree"},"content":"                return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":196,"author":{"gitId":"zxisatree"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":197,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":198,"author":{"gitId":"zxisatree"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":199,"author":{"gitId":"zxisatree"},"content":"            if (!(other instanceof EditAppointmentDescriptor)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":200,"author":{"gitId":"zxisatree"},"content":"                return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":201,"author":{"gitId":"zxisatree"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":202,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":203,"author":{"gitId":"zxisatree"},"content":"            // state check","lastModifiedDate":"2023-03-17"},{"lineNumber":204,"author":{"gitId":"zxisatree"},"content":"            EditAppointmentDescriptor e \u003d (EditAppointmentDescriptor) other;","lastModifiedDate":"2023-03-17"},{"lineNumber":205,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":206,"author":{"gitId":"redHat-arko"},"content":"            return getPatientName().equals(e.getPatientName())","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"redHat-arko"},"content":"                \u0026\u0026 getTimeslot().equals(e.getTimeslot())","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"zxisatree"},"content":"                \u0026\u0026 getDescription().equals(e.getDescription())","lastModifiedDate":"2023-03-17"},{"lineNumber":209,"author":{"gitId":"redHat-arko"},"content":"                \u0026\u0026 getDoctor().equals(e.getDoctor());","lastModifiedDate":"2023-03-29"},{"lineNumber":210,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":211,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"zxisatree"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":213,"author":{"gitId":"zxisatree"},"content":"        public String toString() {","lastModifiedDate":"2023-03-30"},{"lineNumber":214,"author":{"gitId":"zxisatree"},"content":"            return \"EditAppointmentDescriptor{\"","lastModifiedDate":"2023-03-30"},{"lineNumber":215,"author":{"gitId":"zxisatree"},"content":"                + \"timeslot\u003d\" + timeslot","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"zxisatree"},"content":"                + \", description\u003d\" + description","lastModifiedDate":"2023-03-30"},{"lineNumber":217,"author":{"gitId":"zxisatree"},"content":"                + \", patientName\u003d\" + patientName","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"zxisatree"},"content":"                + \", doctor\u003d\" + doctor","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"zxisatree"},"content":"                + \u0027}\u0027;","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":222,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"zxisatree":190,"redHat-arko":29,"Jayanth-Balasubramanian":3}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Edits the details of an existing patient in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"    public static final String COMMAND_WORD \u003d \"edit_patient\";","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"    public static final String COMMAND_ALIAS \u003d \"ep\";","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the patient identified \"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            + \"by the index number used in the displayed patient list. \"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String MESSAGE_EDIT_PATIENT_SUCCESS \u003d \"Edited Patient: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists in the address book.\";","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final EditPatientDescriptor editPatientDescriptor;","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param index of the patient in the filtered patient list to edit","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param editPatientDescriptor details to edit the patient with","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public EditCommand(Index index, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(editPatientDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.editPatientDescriptor \u003d new EditPatientDescriptor(editPatientDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient editedPatient \u003d createEditedPatient(patientToEdit, editPatientDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (!patientToEdit.isSamePatient(editedPatient) \u0026\u0026 model.hasPatient(editedPatient)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient));","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Creates and returns a {@code Patient} with the details of {@code patientToEdit}","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * edited with {@code editPatientDescriptor}.","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static Patient createEditedPatient(Patient patientToEdit, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assert patientToEdit !\u003d null;","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"zxisatree"},"content":"        Name name \u003d patientToEdit.getName();","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Phone updatedPhone \u003d editPatientDescriptor.getPhone().orElse(patientToEdit.getPhone());","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Email updatedEmail \u003d editPatientDescriptor.getEmail().orElse(patientToEdit.getEmail());","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Address updatedAddress \u003d editPatientDescriptor.getAddress().orElse(patientToEdit.getAddress());","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"redHat-arko"},"content":"        Remark updatedRemark \u003d editPatientDescriptor.getRemark().orElse(patientToEdit.getRemark());","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPatientDescriptor.getTags().orElse(patientToEdit.getTags());","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"zxisatree"},"content":"        return new Patient(name, updatedPhone, updatedEmail, updatedAddress, updatedRemark, updatedTags);","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \u0026\u0026 editPatientDescriptor.equals(e.editPatientDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Stores the details to edit the patient with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * corresponding field value of the patient.","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static class EditPatientDescriptor {","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"redHat-arko"},"content":"        private Remark remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public EditPatientDescriptor() {}","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public EditPatientDescriptor(EditPatientDescriptor toCopy) {","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"redHat-arko"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"redHat-arko"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2023-03-17"},{"lineNumber":190,"author":{"gitId":"redHat-arko"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":191,"author":{"gitId":"redHat-arko"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":192,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":193,"author":{"gitId":"redHat-arko"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2023-03-17"},{"lineNumber":194,"author":{"gitId":"redHat-arko"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2023-03-17"},{"lineNumber":195,"author":{"gitId":"redHat-arko"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":196,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            if (!(other instanceof EditPatientDescriptor)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            EditPatientDescriptor e \u003d (EditPatientDescriptor) other;","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"redHat-arko":12,"zxisatree":4,"Jayanth-Balasubramanian":42,"-":178}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String COMMAND_ALIAS \u003d \"ex\";","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"runoutofit"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false, 0);","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Jayanth-Balasubramanian":1,"runoutofit":1,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/FindAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.ui.CalendarCard;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":" * Finds and lists all appointments whose timeslots contain the specified time.","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"public class FindAppointmentCommand extends Command {","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"    public static final String COMMAND_WORD \u003d \"find_appt\";","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String COMMAND_ALIAS \u003d \"fa\";","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all appointments whose timeslots cover the \"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"        + \"specified time and displays them as a list with index \"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"        + \"numbers.\\nIf a second time is specified, all appointments that occur during that time period are \"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"        + \"displayed.\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"        + \"Parameters: ddMMyyyy HH:mm [ddMMyyyy HH:mm]\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"        + \"Example: \" + COMMAND_WORD + \" 19032023 08:30\";","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"    private final Predicate\u003cAppointment\u003e predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"    public FindAppointmentCommand(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"        model.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        CalendarCard.addAppointmentsToCalendar(model.getAppointmentList());","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"            String.format(Messages.MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, model.getFilteredAppointmentList().size()));","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"            || (other instanceof FindAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"            \u0026\u0026 predicate.equals(((FindAppointmentCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"zxisatree":45,"Jayanth-Balasubramanian":3}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Finds and lists all patients in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"    public static final String COMMAND_WORD \u003d \"find_patient\";","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"    public static final String COMMAND_ALIAS \u003d \"fp\";","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patients whose names contain any of \"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        model.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                String.format(Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW, model.getFilteredPatientList().size()));","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"zxisatree":2,"Jayanth-Balasubramanian":5,"-":35}},{"path":"src/main/java/seedu/address/logic/commands/FindDetailsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.patient.DetailsContainKeywordsPredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":" * Finds and lists all patients in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"public class FindDetailsCommand extends Command {","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"    public static final String COMMAND_WORD \u003d \"find_patient_details\";","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"    public static final String COMMAND_ALIAS \u003d \"fpd\";","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patients whose details contain any of \"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"        + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"        + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"        + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"    private final DetailsContainKeywordsPredicate predicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"    public FindDetailsCommand(DetailsContainKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"        model.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"            String.format(Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW, model.getFilteredPatientList().size()));","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"            || (other instanceof FindDetailsCommand // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"            \u0026\u0026 predicate.equals(((FindDetailsCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"zxisatree":42}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String COMMAND_ALIAS \u003d \"h\";","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"runoutofit"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, 0);","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":1,"runoutofit":1,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/ListAppointmentsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":" * Lists all appointments to the user.","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"public class ListAppointmentsCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"    public static final String COMMAND_WORD \u003d \"list_appt\";","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String COMMAND_ALIAS \u003d \"la\";","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all appointments\";","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"zxisatree":22,"Jayanth-Balasubramanian":1}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Lists all patients in the address book to the user.","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"    public static final String COMMAND_WORD \u003d \"list_patient\";","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"    public static final String COMMAND_ALIAS \u003d \"lp\";","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all patients\";","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zxisatree":2,"Jayanth-Balasubramanian":4,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redHat-arko"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"redHat-arko"},"content":"import java.util.List;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"redHat-arko"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"redHat-arko"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"redHat-arko"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"redHat-arko"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"    public static final String COMMAND_WORD \u003d \"remark_patient\";","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"    public static final String COMMAND_ALIAS \u003d \"rp\";","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"redHat-arko"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"redHat-arko"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"redHat-arko"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"redHat-arko"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"redHat-arko"},"content":"            + PREFIX_REMARK + \"[REMARK]\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"redHat-arko"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"            + PREFIX_REMARK + \"Immunocompromised\";","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"redHat-arko"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"redHat-arko"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"redHat-arko"},"content":"    private final Index index;","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"redHat-arko"},"content":"    private final Remark remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"redHat-arko"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"redHat-arko"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"redHat-arko"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"redHat-arko"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"redHat-arko"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"redHat-arko"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"redHat-arko"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"redHat-arko"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"redHat-arko"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"redHat-arko"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"redHat-arko"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"redHat-arko"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"redHat-arko"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"redHat-arko"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"redHat-arko"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"        Patient editedPatient \u003d new Patient(patientToEdit.getName(), patientToEdit.getPhone(),","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"runoutofit"},"content":"                patientToEdit.getEmail(), patientToEdit.getAddress(), remark, patientToEdit.getTags());","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"redHat-arko"},"content":"        model.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"redHat-arko"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"redHat-arko"},"content":"        return new CommandResult(generateSuccessMessage(editedPatient));","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"redHat-arko"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"redHat-arko"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"redHat-arko"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"redHat-arko"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"redHat-arko"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"redHat-arko"},"content":"    private String generateSuccessMessage(Patient patientToEdit) {","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"redHat-arko"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"redHat-arko"},"content":"        return String.format(message, patientToEdit);","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"redHat-arko"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"redHat-arko"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"redHat-arko"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"redHat-arko"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"redHat-arko"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"redHat-arko"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"redHat-arko"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"redHat-arko"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"redHat-arko"},"content":"            return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"redHat-arko"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"redHat-arko"},"content":"        // state check","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"redHat-arko"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"redHat-arko"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"redHat-arko"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"redHat-arko"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"redHat-arko":87,"zxisatree":4,"runoutofit":1}},{"path":"src/main/java/seedu/address/logic/commands/TodayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.AppointmentHasOverlapPredicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":" * Finds and lists all appointments that are happening on the current day.","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"public class TodayCommand extends Command {","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"    public static final String COMMAND_WORD \u003d \"today\";","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all appointments for today\";","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"    private final Predicate\u003cAppointment\u003e predicate \u003d AppointmentHasOverlapPredicate.todayPredicate();","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"        model.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"            String.format(Messages.MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, model.getFilteredAppointmentList().size()));","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"zxisatree":31}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"runoutofit"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"runoutofit"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"runoutofit"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"runoutofit"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"runoutofit"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"runoutofit"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"runoutofit"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"runoutofit"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"runoutofit"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"runoutofit"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"runoutofit"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"runoutofit"},"content":" * Displays a patient with full detail, identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"runoutofit"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"runoutofit"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"runoutofit"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"runoutofit"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"runoutofit"},"content":"            + \": Displays the entity identified by the index number used in the displayed current list.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"runoutofit"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"runoutofit"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"runoutofit"},"content":"    public static final String MESSAGE_SHOW_ENTITY_SUCCESS \u003d \"Showing Patient:\";","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"runoutofit"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"runoutofit"},"content":"    public ViewCommand(Index targetIndex) {","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"runoutofit"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"runoutofit"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"runoutofit"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"runoutofit"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"runoutofit"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"runoutofit"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"runoutofit"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"runoutofit"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"runoutofit"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"runoutofit"},"content":"        Patient patientToDisplay \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"runoutofit"},"content":"        Predicate\u003cAppointment\u003e predicate \u003d new Predicate\u003cAppointment\u003e() {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"runoutofit"},"content":"            @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"runoutofit"},"content":"            public boolean test(Appointment appointment) {","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"runoutofit"},"content":"                return appointment.getPatientName().fullName.equals(patientToDisplay.getName().fullName);","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"runoutofit"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"runoutofit"},"content":"        };","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"runoutofit"},"content":"        model.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"runoutofit"},"content":"        return new CommandResult(String.format(MESSAGE_SHOW_ENTITY_SUCCESS, model.getFilteredAppointmentList()),","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"runoutofit"},"content":"                true, targetIndex.getZeroBased());","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"runoutofit"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"runoutofit"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"runoutofit"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"runoutofit"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"runoutofit"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"runoutofit"},"content":"                \u0026\u0026 targetIndex.equals(((ViewCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"runoutofit"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"runoutofit"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"runoutofit":61}},{"path":"src/main/java/seedu/address/logic/parser/AddAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redHat-arko"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESLOT;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"redHat-arko"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.appointment.Description;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.appointment.Doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.appointment.Timeslot;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"redHat-arko"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"redHat-arko"},"content":" * Parses input arguments and creates a new AddAppointmentCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"redHat-arko"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"redHat-arko"},"content":"public class AddAppointmentCommandParser implements Parser\u003cAddAppointmentCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"redHat-arko"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"redHat-arko"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"redHat-arko"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"redHat-arko"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"redHat-arko"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"redHat-arko"},"content":"    public AddAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"redHat-arko"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"redHat-arko"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TIMESLOT, PREFIX_DESCRIPTION, PREFIX_DOCTOR);","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"redHat-arko"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_TIMESLOT, PREFIX_DESCRIPTION, PREFIX_DOCTOR)","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"redHat-arko"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"redHat-arko"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"redHat-arko"},"content":"                    AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"redHat-arko"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"redHat-arko"},"content":"        Name patientName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"redHat-arko"},"content":"        Timeslot timeslot \u003d ParserUtil.parseTimeslot(argMultimap.getValue(PREFIX_TIMESLOT).get());","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"redHat-arko"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"redHat-arko"},"content":"        Doctor doctor \u003d ParserUtil.parseDoctor(argMultimap.getValue(PREFIX_DOCTOR).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"        Appointment appointment \u003d new Appointment(patientName, timeslot, description, doctor);","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"redHat-arko"},"content":"        return new AddAppointmentCommand(appointment);","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"redHat-arko"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"redHat-arko"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"redHat-arko"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"redHat-arko"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"redHat-arko"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"redHat-arko"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"redHat-arko"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"redHat-arko":56,"zxisatree":1}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"runoutofit"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"redHat-arko"},"content":"        Remark remark \u003d new Remark(\"\"); // add command does not allow adding remarks straight away","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"        Patient patient \u003d new Patient(name, phone, email, address, remark, tagList);","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return new AddCommand(patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"redHat-arko":2,"zxisatree":2,"Jayanth-Balasubramanian":6,"runoutofit":1,"-":52}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"runoutofit"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"import seedu.address.logic.commands.FindAppointmentCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"import seedu.address.logic.commands.FindDetailsCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"import seedu.address.logic.commands.ListAppointmentsCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"import seedu.address.logic.commands.TodayCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"runoutofit"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case AddCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            // fall through to AddCommand.COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case AddAppointmentCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            // fall through to AddAppointmentCommand.COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"redHat-arko"},"content":"        case AddAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"redHat-arko"},"content":"            return new AddAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case EditCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            // fall through to RemarkCommand.COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case DeleteCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            // fall through to DeleteCommand.COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case DeleteAppointmentCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            // fall through to DeleteAppointmentCommand.COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"redHat-arko"},"content":"        case DeleteAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"redHat-arko"},"content":"            return new DeleteAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case ClearCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            // fall through to RemarkCommand.COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case FindCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            // fall through to FindCommand.COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case FindDetailsCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            // fall through to FindDetailsCommand.COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"zxisatree"},"content":"        case FindDetailsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"zxisatree"},"content":"            return new FindDetailsCommandParser().parse(arguments);","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case FindAppointmentCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            // fall through to FindAppointmentCommand.COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"zxisatree"},"content":"        case FindAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"zxisatree"},"content":"            return new FindAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case ListCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            // fall through to ListCommand.COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case ListAppointmentsCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            // fall through to ListAppointmentsCommand.COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"zxisatree"},"content":"        case ListAppointmentsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"zxisatree"},"content":"            return new ListAppointmentsCommand();","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case EditAppointmentCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            // fall through to EditAppointmentCommand.COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"zxisatree"},"content":"        case EditAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"zxisatree"},"content":"            return new EditAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case ExitCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            // fall through to ExitCommand.COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case HelpCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            // fall through to HelpCommand.COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":125,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case RemarkCommand.COMMAND_ALIAS:","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            // fall through to RemarkCommand.COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"redHat-arko"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"redHat-arko"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"runoutofit"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"runoutofit"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"zxisatree"},"content":"        case TodayCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"zxisatree"},"content":"            return new TodayCommand();","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"redHat-arko":10,"zxisatree":20,"runoutofit":6,"Jayanth-Balasubramanian":30,"-":74}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"    public static final Prefix PREFIX_TIMESLOT \u003d new Prefix(\"ts/\");","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"redHat-arko"},"content":"    public static final Prefix PREFIX_DOCTOR \u003d new Prefix(\"doc/\");","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"redHat-arko"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"zxisatree":2,"redHat-arko":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"runoutofit"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"runoutofit"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"runoutofit"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"runoutofit"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"runoutofit"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"runoutofit"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"runoutofit"},"content":" * Parses input command and deletes Appointment object.","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"runoutofit"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"runoutofit"},"content":"public class DeleteAppointmentCommandParser implements Parser\u003cDeleteAppointmentCommand\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"runoutofit"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"runoutofit"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteAppointmentCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"runoutofit"},"content":"     * and returns an DeleteAppointmentCommand object for execution.","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"runoutofit"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"runoutofit"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"runoutofit"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"runoutofit"},"content":"    public DeleteAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"runoutofit"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"runoutofit"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"runoutofit"},"content":"            return new DeleteAppointmentCommand(index);","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"runoutofit"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"runoutofit"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"runoutofit"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"runoutofit"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"runoutofit"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"runoutofit"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"runoutofit":27}},{"path":"src/main/java/seedu/address/logic/parser/EditAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESLOT;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":" * Parses input arguments and creates a new EditAppointmentCommand object","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"public class EditAppointmentCommandParser implements Parser\u003cEditAppointmentCommand\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"     * Parses the given {@code String} of arguments in the context of the EditAppointmentCommand","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"     * and returns an EditAppointmentCommand object for execution.","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"    public EditAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"redHat-arko"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TIMESLOT, PREFIX_DESCRIPTION, PREFIX_DOCTOR);","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"        Index index;","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"        try {","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"        EditAppointmentDescriptor editAppointmentDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"redHat-arko"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"redHat-arko"},"content":"            editAppointmentDescriptor.setPatientName(","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"redHat-arko"},"content":"                    ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"redHat-arko"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"        if (argMultimap.getValue(PREFIX_TIMESLOT).isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"            editAppointmentDescriptor.setTimeslot(","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"                    ParserUtil.parseTimeslot(argMultimap.getValue(PREFIX_TIMESLOT).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"            editAppointmentDescriptor.setDescription(","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"                    ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"redHat-arko"},"content":"        if (argMultimap.getValue(PREFIX_DOCTOR).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"redHat-arko"},"content":"            editAppointmentDescriptor.setDescription(","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"redHat-arko"},"content":"                    ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DOCTOR).get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"redHat-arko"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"        if (!editAppointmentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"            throw new ParseException(EditAppointmentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"        return new EditAppointmentCommand(index, editAppointmentDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"zxisatree":55,"redHat-arko":12}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"redHat-arko"},"content":"                        PREFIX_REMARK, PREFIX_TAG);","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            editPatientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            editPatientDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            editPatientDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPatientDescriptor::setTags);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"redHat-arko"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"redHat-arko"},"content":"            editPatientDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"redHat-arko"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPatientDescriptor::setTags);","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (!editPatientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return new EditCommand(index, editPatientDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"redHat-arko":6,"zxisatree":1,"Jayanth-Balasubramanian":8,"-":71}},{"path":"src/main/java/seedu/address/logic/parser/FindAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import seedu.address.logic.commands.FindAppointmentCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.AppointmentHasOverlapPredicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.TimeInTimeslotPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"public class FindAppointmentCommandParser implements Parser\u003cFindAppointmentCommand\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"     * Parses the given {@code String} of arguments in the context of the FindAppointmentCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"     * and returns a FindAppointmentCommand object for execution.","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"    public FindAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"        // Check if the number of arguments is valid","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"        String[] splitArgs \u003d trimmedArgs.split(\" \");","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"        if (trimmedArgs.isEmpty() || !(splitArgs.length \u003d\u003d 2 || splitArgs.length \u003d\u003d 4)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"        Predicate\u003cAppointment\u003e predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"        if (splitArgs.length \u003d\u003d 4) {","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"            predicate \u003d new AppointmentHasOverlapPredicate(trimmedArgs);","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"            predicate \u003d new TimeInTimeslotPredicate(trimmedArgs);","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"        return new FindAppointmentCommand(predicate);","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"zxisatree":41}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Jayanth-Balasubramanian":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/FindDetailsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import seedu.address.logic.commands.FindDetailsCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.patient.DetailsContainKeywordsPredicate;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":" * Parses input arguments and creates a new FindDetailsCommand object","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"public class FindDetailsCommandParser implements Parser\u003cFindDetailsCommand\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"     * Parses the given {@code String} of arguments in the context of the FindDetailsCommand","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"     * and returns a FindDetailsCommand object for execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"    public FindDetailsCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindDetailsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"        return new FindDetailsCommand(new DetailsContainKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"zxisatree":33}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Description;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.appointment.Doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Timeslot;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"        if (StringUtil.isZero(trimmedIndex) || !StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"zxisatree"},"content":"     * Parses a {@code String timeslot} into an {@code Timeslot}.","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"zxisatree"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"zxisatree"},"content":"     * @throws ParseException if the given {@code timeslot} is invalid.","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"zxisatree"},"content":"    public static Timeslot parseTimeslot(String timeslot) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"zxisatree"},"content":"        requireNonNull(timeslot);","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"zxisatree"},"content":"        String trimmedTimeslot \u003d timeslot.trim();","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"zxisatree"},"content":"        if (!Timeslot.isValidTimeslot(trimmedTimeslot)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"zxisatree"},"content":"            throw new ParseException(Timeslot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"zxisatree"},"content":"        Timeslot result;","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"zxisatree"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"zxisatree"},"content":"            result \u003d new Timeslot(trimmedTimeslot);","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"zxisatree"},"content":"        } catch (IllegalArgumentException iae) {","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"zxisatree"},"content":"            throw new ParseException(Timeslot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"zxisatree"},"content":"        return result;","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"zxisatree"},"content":"     * Parses a {@code String description} into an {@code Description}.","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"zxisatree"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"zxisatree"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"zxisatree"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"zxisatree"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"zxisatree"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"zxisatree"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"zxisatree"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"zxisatree"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"redHat-arko"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"redHat-arko"},"content":"     * Parses a {@code String description} into an {@code Doctor}.","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"redHat-arko"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"redHat-arko"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"redHat-arko"},"content":"     * @throws ParseException if the given {@code doctor} is invalid.","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"redHat-arko"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"redHat-arko"},"content":"    public static Doctor parseDoctor(String doctor) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"redHat-arko"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"redHat-arko"},"content":"        String trimmedDoctor \u003d doctor.trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"redHat-arko"},"content":"        if (!Doctor.isValidDoctor(trimmedDoctor)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"redHat-arko"},"content":"            throw new ParseException(Doctor.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"redHat-arko"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"redHat-arko"},"content":"        return new Doctor(trimmedDoctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"redHat-arko"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"redHat-arko"},"content":"     * Parses a {@code String remark} into an {@code Remark}.","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"redHat-arko"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"redHat-arko"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":158,"author":{"gitId":"redHat-arko"},"content":"     * @throws ParseException if the given {@code remark} is invalid.","lastModifiedDate":"2023-03-17"},{"lineNumber":159,"author":{"gitId":"redHat-arko"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":160,"author":{"gitId":"redHat-arko"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":161,"author":{"gitId":"redHat-arko"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-03-17"},{"lineNumber":162,"author":{"gitId":"redHat-arko"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2023-03-17"},{"lineNumber":163,"author":{"gitId":"redHat-arko"},"content":"        if (!Remark.isValidRemark(trimmedRemark)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":164,"author":{"gitId":"redHat-arko"},"content":"            throw new ParseException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":165,"author":{"gitId":"redHat-arko"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"redHat-arko"},"content":"        return new Remark(remark);","lastModifiedDate":"2023-03-17"},{"lineNumber":167,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":168,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"zxisatree":40,"redHat-arko":32,"Jayanth-Balasubramanian":4,"-":119}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redHat-arko"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"redHat-arko"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"redHat-arko"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"redHat-arko"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"redHat-arko"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"redHat-arko"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"redHat-arko"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"redHat-arko"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"redHat-arko"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"redHat-arko"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"redHat-arko"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"redHat-arko"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"redHat-arko"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"redHat-arko"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"redHat-arko"},"content":"        Index index;","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"redHat-arko"},"content":"        try {","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"redHat-arko"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"redHat-arko"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"redHat-arko"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"redHat-arko"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"redHat-arko"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"redHat-arko"},"content":"        return new RemarkCommand(index, new Remark(remark));","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"redHat-arko"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"redHat-arko":37}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"runoutofit"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"runoutofit"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"runoutofit"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"runoutofit"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"runoutofit"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"runoutofit"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"runoutofit"},"content":" * Parses input command and displays patient object.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"runoutofit"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"runoutofit"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"runoutofit"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"runoutofit"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"runoutofit"},"content":"     * and returns an ViewCommand object for execution.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"runoutofit"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"runoutofit"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"runoutofit"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"runoutofit"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"runoutofit"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"runoutofit"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"runoutofit"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"runoutofit"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"runoutofit"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"runoutofit"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"runoutofit"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"runoutofit"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"runoutofit"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"runoutofit":27}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.UniquePatientList;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Duplicates are not allowed (by .isSamePatient comparison)","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"public class AddressBook implements ReadOnlyPatientList {","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final UniquePatientList patients;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        patients \u003d new UniquePatientList();","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Creates an AddressBook using the Patients in the {@code toBeCopied}","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"    public AddressBook(ReadOnlyPatientList toBeCopied) {","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Replaces the contents of the patient list with {@code patients}.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * {@code patients} must not contain duplicate patients.","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.patients.setPatients(patients);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"    public void resetData(ReadOnlyPatientList newData) {","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        setPatients(newData.getPatientList());","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return patients.contains(patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Adds a patient to the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * The patient must not already exist in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void addPatient(Patient p) {","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        patients.add(p);","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Replaces the given patient {@code target} in the list with {@code editedPatient}.","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * The patient identity of {@code editedPatient} must not be the same","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * as another existing patient in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(editedPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        patients.setPatient(target, editedPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void removePatient(Patient key) {","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        patients.remove(key);","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return patients.asUnmodifiableObservableList().size() + \" patients\";","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return patients.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \u0026\u0026 patients.equals(((AddressBook) other).patients));","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return patients.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zxisatree":3,"Jayanth-Balasubramanian":32,"-":84}},{"path":"src/main/java/seedu/address/model/AppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.appointment.UniqueAppointmentList;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Wraps all appointment related data","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Duplicates are not allowed (by .isSameAppointment comparison)","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class AppointmentList implements ReadOnlyAppointmentList {","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final UniqueAppointmentList appointments;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    {","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        appointments \u003d new UniqueAppointmentList();","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public AppointmentList() {}","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Creates an AppointmentList using the Appointments in the {@code toBeCopied}","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public AppointmentList(ReadOnlyAppointmentList toBeCopied) {","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this();","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.appointments.setAppointments(appointments);","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Resets the existing data of this {@code AppointmentList} with {@code newData}.","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void resetData(ReadOnlyAppointmentList newData) {","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        setAppointments(newData.getAppointmentList());","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"     * Returns true if an appointment with the same identity as {@code appointment} exists in the appointment list.","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return appointments.contains(appointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        appointments.add(appointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(editedAppointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        appointments.setAppointment(target, editedAppointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void removeAppointment(Appointment key) {","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        appointments.remove(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public String toString() {","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return appointments.asUnmodifiableObservableList().size() + \"appointments\";","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                || (other instanceof AppointmentList","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \u0026\u0026 appointments.equals(((AppointmentList) other).appointments));","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return appointments.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"zxisatree":1,"Jayanth-Balasubramanian":78}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    Predicate\u003cPatient\u003e PREDICATE_SHOW_ALL_PATIENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    Predicate\u003cAppointment\u003e PREDICATE_SHOW_ALL_APPOINTMENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    Path getAppointmentListPath();","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    void setAppointmentListPath(Path appointmentListPath);","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"    void setAddressBook(ReadOnlyPatientList addressBook);","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"    ReadOnlyPatientList getAddressBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    boolean hasPatient(Patient patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"redHat-arko"},"content":"    boolean hasPatientName(Name name);","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Deletes the given patient.","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * The patient must exist in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    void deletePatient(Patient target);","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Adds the given patient.","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * {@code patient} must not already exist in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    void addPatient(Patient patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Replaces the given patient {@code target} with {@code editedPatient}.","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * The patient identity of {@code editedPatient} must not be the same","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * as another existing patient in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    void setPatient(Patient target, Patient editedPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /** Returns an unmodifiable view of the filtered patient list */","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Updates the filter of the filtered patient list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    void setAppointmentList(ReadOnlyAppointmentList appointmentList);","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    ReadOnlyAppointmentList getAppointmentList();","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    boolean hasAppointment(Appointment appointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"runoutofit"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"runoutofit"},"content":"     * Deletes the given appointment.","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"runoutofit"},"content":"     * Appointment must exist in the addressbook.","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"runoutofit"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    void deleteAppointment(Appointment appointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    void addAppointment(Appointment appointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    void setAppointment(Appointment target, Appointment editedAppointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate);","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"redHat-arko":2,"zxisatree":2,"Jayanth-Balasubramanian":33,"runoutofit":5,"-":68}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final AppointmentList appointmentList;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final FilteredList\u003cPatient\u003e filteredPatients;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final FilteredList\u003cAppointment\u003e filteredAppointments;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    // keeping for backward compatibility temporarily, because storage has not been updated","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"    public ModelManager(ReadOnlyPatientList addressBook, ReadOnlyAppointmentList appointmentList,","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"                        ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + userPrefs);","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"        this.appointmentList \u003d new AppointmentList(appointmentList);","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        filteredPatients \u003d new FilteredList\u003c\u003e(this.addressBook.getPatientList());","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"        filteredAppointments \u003d new FilteredList\u003c\u003e(this.appointmentList.getAppointmentList());","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Initializes a ModelManager with the given addressBook, appointmentList and userPrefs.","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"    public ModelManager(ReadOnlyPatientList addressBook, AppointmentList appointmentList, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireAllNonNull(addressBook, appointmentList, userPrefs);","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                + \", appointmentList: \" + appointmentList + userPrefs);","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.appointmentList \u003d new AppointmentList(appointmentList);","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        filteredPatients \u003d new FilteredList\u003c\u003e(this.addressBook.getPatientList());","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        filteredAppointments \u003d new FilteredList\u003c\u003e(this.appointmentList.getAppointmentList());","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this(new AddressBook(), new AppointmentList(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public Path getAppointmentListPath() {","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setAppointmentListPath(Path appointmentListFilePath) {","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(appointmentListFilePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        userPrefs.setAddressBookFilePath(appointmentListFilePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"zxisatree"},"content":"    public void setAddressBook(ReadOnlyPatientList addressBook) {","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"zxisatree"},"content":"    public ReadOnlyPatientList getAddressBook() {","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return addressBook.hasPatient(patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"redHat-arko"},"content":"    public boolean hasPatientName(Name name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"zxisatree"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"zxisatree"},"content":"        return addressBook.getPatientList().stream().anyMatch(patient -\u003e patient.getName().equals(name));","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":138,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void deletePatient(Patient target) {","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"zxisatree"},"content":"        // Save the patient and appointment list","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"zxisatree"},"content":"        AddressBook addressBookCopy \u003d new AddressBook(addressBook);","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"zxisatree"},"content":"        AppointmentList appointmentListCopy \u003d new AppointmentList(appointmentList);","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        addressBook.removePatient(target);","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"zxisatree"},"content":"        // Remove all appointments of that patient","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"zxisatree"},"content":"        List\u003cAppointment\u003e appointmentsToRemove \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"zxisatree"},"content":"        for (Appointment appointment : appointmentList.getAppointmentList()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"zxisatree"},"content":"            if (appointment.getPatientName().equals(target.getName())) {","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"zxisatree"},"content":"                appointmentsToRemove.add(appointment);","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"zxisatree"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"zxisatree"},"content":"        for (Appointment appointment : appointmentsToRemove) {","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"zxisatree"},"content":"            appointmentList.removeAppointment(appointment);","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"zxisatree"},"content":"        // Check that the patient and their corresponding appointments have been removed","lastModifiedDate":"2023-03-27"},{"lineNumber":156,"author":{"gitId":"zxisatree"},"content":"        // If not, reset both lists and throw an error","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"zxisatree"},"content":"        boolean didDeletePatientFail \u003d addressBook.hasPatient(target);","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":159,"author":{"gitId":"zxisatree"},"content":"        boolean areAllAppointmentsDeleted \u003d true;","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"zxisatree"},"content":"        for (Appointment appointment : appointmentsToRemove) {","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"zxisatree"},"content":"            if (appointmentList.hasAppointment(appointment)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":162,"author":{"gitId":"zxisatree"},"content":"                areAllAppointmentsDeleted \u003d false;","lastModifiedDate":"2023-03-27"},{"lineNumber":163,"author":{"gitId":"zxisatree"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"zxisatree"},"content":"        if (!areAllAppointmentsDeleted || didDeletePatientFail) {","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"zxisatree"},"content":"            this.addressBook.setPatients(addressBookCopy.getPatientList());","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"zxisatree"},"content":"            this.appointmentList.setAppointments(appointmentListCopy.getAppointmentList());","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void addPatient(Patient patient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        addressBook.addPatient(patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":179,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireAllNonNull(target, editedPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":182,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        addressBook.setPatient(target, editedPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":185,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Patient List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":188,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns an unmodifiable view of the list of {@code Patient} backed by the internal list of","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":192,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return filteredPatients;","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":197,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":199,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        filteredPatients.setPredicate(predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":218,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \u0026\u0026 filteredPatients.equals(other.filteredPatients);","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        //      \u0026\u0026 filteredAppointments.equals(other.filteredAppointments);","lastModifiedDate":"2023-03-16"},{"lineNumber":220,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        // not added to keep backward compatibility with tests until storage is fixed","lastModifiedDate":"2023-03-16"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":223,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":224,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setAppointmentList(ReadOnlyAppointmentList appointmentList) {","lastModifiedDate":"2023-03-16"},{"lineNumber":225,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.appointmentList.resetData(appointmentList);","lastModifiedDate":"2023-03-16"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":229,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public ReadOnlyAppointmentList getAppointmentList() {","lastModifiedDate":"2023-03-16"},{"lineNumber":230,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return appointmentList;","lastModifiedDate":"2023-03-16"},{"lineNumber":231,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":232,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":233,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":234,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-16"},{"lineNumber":235,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(appointmentList);","lastModifiedDate":"2023-03-16"},{"lineNumber":236,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return appointmentList.hasAppointment(appointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":237,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":238,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":239,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":240,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void deleteAppointment(Appointment target) {","lastModifiedDate":"2023-03-16"},{"lineNumber":241,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        appointmentList.removeAppointment(target);","lastModifiedDate":"2023-03-16"},{"lineNumber":242,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":243,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":244,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":245,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-16"},{"lineNumber":246,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        appointmentList.addAppointment(appointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":247,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":248,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":249,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":250,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":251,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-03-16"},{"lineNumber":252,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":253,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":254,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        appointmentList.setAppointment(target, editedAppointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":255,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":256,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":257,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":258,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-03-16"},{"lineNumber":259,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return filteredAppointments;","lastModifiedDate":"2023-03-16"},{"lineNumber":260,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":261,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":262,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":263,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2023-03-16"},{"lineNumber":264,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-16"},{"lineNumber":265,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        filteredAppointments.setPredicate(predicate);","lastModifiedDate":"2023-03-16"},{"lineNumber":266,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zxisatree":42,"redHat-arko":1,"Jayanth-Balasubramanian":94,"-":130}},{"path":"src/main/java/seedu/address/model/ReadOnlyAppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Unmodifiable view of an appointment list","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public interface ReadOnlyAppointmentList {","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns an unmodifiable view of the appointments list.","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * This list will not contain any duplicate appointments.","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    ObservableList\u003cAppointment\u003e getAppointmentList();","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"Jayanth-Balasubramanian":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyPatientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":" * Unmodifiable view of the patient list","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"public interface ReadOnlyPatientList {","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns an unmodifiable view of the patients list.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * This list will not contain any duplicate patients.","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    ObservableList\u003cPatient\u003e getPatientList();","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zxisatree":2,"Jayanth-Balasubramanian":4,"-":11}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    Path getAppointmentListFilePath();","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Jayanth-Balasubramanian":2,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Path appointmentListPath \u003d Paths.get(\"data\", \"appointment_list.json\");","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        setAppointmentListFilePath(newUserPrefs.getAppointmentListFilePath());","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public Path getAppointmentListFilePath() {","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return appointmentListPath;","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setAppointmentListFilePath(Path appointmentListPath) {","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(appointmentListPath);","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.appointmentListPath \u003d appointmentListPath;","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jayanth-Balasubramanian":10,"-":86}},{"path":"src/main/java/seedu/address/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import java.time.chrono.ChronoLocalDateTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":" * Represents an Appointment in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":" * Guarantees: details except description are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"public class Appointment {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"redHat-arko"},"content":"    private final Name patientName;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"    private final Timeslot timeslot;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"    private final Description description;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"redHat-arko"},"content":"    private final Doctor doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"    public Appointment(Name patientName, Timeslot timeslot, Description description,","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"redHat-arko"},"content":"                       Doctor doctor) {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"redHat-arko"},"content":"        requireAllNonNull(timeslot, description, patientName, doctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"redHat-arko"},"content":"        this.patientName \u003d patientName;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"        this.timeslot \u003d timeslot;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"redHat-arko"},"content":"        this.doctor \u003d doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"redHat-arko"},"content":"    public Name getPatientName() {","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"redHat-arko"},"content":"        return patientName;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"    public Timeslot getTimeslot() {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"        return timeslot;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"     * Checks if this timeslot and the provided timeslot overlap.","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"     * @param otherTimeslot The timeslot to check for overlaps with.","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"     * @return Whether both timeslots clash.","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"    public boolean hasOverlap(Timeslot otherTimeslot) {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"        return timeslot.hasOverlap(otherTimeslot);","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"    public Description getDescription() {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"        return description;","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"redHat-arko"},"content":"    public Doctor getDoctor() {","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"redHat-arko"},"content":"        return doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"     * Checks if the given time occurs within the timeslot of the appointment","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"     * @return If the given time occurs within the timeslot of the appointment","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"    public boolean duringTime(ChronoLocalDateTime\u003c?\u003e time) {","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"        return (time.isAfter(timeslot.startingDateTime) || time.isEqual(timeslot.startingDateTime))","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"            \u0026\u0026 (time.isBefore(timeslot.endingDateTime) || time.isEqual(timeslot.endingDateTime));","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"zxisatree"},"content":"     * Returns true if both appointments have the same timeslot.","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"zxisatree"},"content":"     * This defines a weaker notion of equality between two appointments.","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"    public boolean isSameAppointment(Appointment otherAppointment) {","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"zxisatree"},"content":"        if (otherAppointment \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"zxisatree"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"zxisatree"},"content":"        return otherAppointment !\u003d null","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"zxisatree"},"content":"            \u0026\u0026 otherAppointment.getTimeslot().equals(getTimeslot());","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"zxisatree"},"content":"     * Returns true if both appointments have the same timeslot, description and patient.","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"zxisatree"},"content":"     * This defines a stronger notion of equality between two patients.","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"zxisatree"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"zxisatree"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"zxisatree"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"zxisatree"},"content":"        if (!(other instanceof Appointment)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"zxisatree"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"zxisatree"},"content":"        Appointment otherAppointment \u003d (Appointment) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"redHat-arko"},"content":"        return otherAppointment.getPatientName().equals(getPatientName())","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"redHat-arko"},"content":"            \u0026\u0026 otherAppointment.getTimeslot().equals(getTimeslot())","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"zxisatree"},"content":"            \u0026\u0026 otherAppointment.getDescription().equals(getDescription())","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"redHat-arko"},"content":"            \u0026\u0026 otherAppointment.getDoctor().equals(getDoctor());","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"zxisatree"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"zxisatree"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"redHat-arko"},"content":"        return Objects.hash(patientName, timeslot, description, doctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"zxisatree"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"zxisatree"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"zxisatree"},"content":"        builder.append(getTimeslot())","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"redHat-arko"},"content":"            .append(\"; Patient Name: \")","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"redHat-arko"},"content":"            .append(getPatientName())","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"zxisatree"},"content":"            .append(\"; Description: \")","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"redHat-arko"},"content":"            .append(getDescription())","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"redHat-arko"},"content":"            .append(\"; Doctor: \")","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"redHat-arko"},"content":"            .append(getDoctor());","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"zxisatree"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"zxisatree":99,"redHat-arko":22}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentHasOverlapPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import java.time.ZoneId;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"import seedu.address.logic.commands.FindAppointmentCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":" * Tests that a {@code Appointment}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"public class AppointmentHasOverlapPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"    private final Timeslot timeslot;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"     * Parses the given {@code String} of arguments in the context of the FindAppointmentCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"     * and returns an FindAppointmentCommand object for execution.","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"    public AppointmentHasOverlapPredicate(String timeStr) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"        String[] splitTimeStr \u003d timeStr.split(\" \");","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"        String startTimeStr \u003d splitTimeStr[0] + \" \" + splitTimeStr[1];","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"        String endTimeStr \u003d splitTimeStr[2] + \" \" + splitTimeStr[3];","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"        if (!Timeslot.isValidDatetime(startTimeStr) || !Timeslot.isValidDatetime(endTimeStr)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"        Timeslot result;","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"            result \u003d new Timeslot(startTimeStr + \",\" + endTimeStr);","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"        } catch (IllegalArgumentException iae) {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"        this.timeslot \u003d result;","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"    private AppointmentHasOverlapPredicate(Timeslot timeslot) {","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"        this.timeslot \u003d timeslot;","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"     * Returns a predicate that filters out appointments that are not happening on the current day.","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"     * @return Predicate with a timeslot covering the current day.","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"    public static AppointmentHasOverlapPredicate todayPredicate() {","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"        // Adapted from","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"        // https://stackoverflow.com/questions/6850874/","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"        // how-to-create-a-java-date-object-of-midnight-today-and-midnight-tomorrow","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"        LocalTime midnight \u003d LocalTime.MIDNIGHT;","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"        LocalDate today \u003d LocalDate.now(ZoneId.of(\"Europe/Berlin\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"        LocalDateTime todayMidnight \u003d LocalDateTime.of(today, midnight);","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"        LocalDateTime tomorrowMidnight \u003d todayMidnight.plusDays(1);","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"        return new AppointmentHasOverlapPredicate(new Timeslot(todayMidnight, tomorrowMidnight));","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"        return appointment.hasOverlap(this.timeslot);","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"zxisatree"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"zxisatree"},"content":"            || (other instanceof AppointmentHasOverlapPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"zxisatree"},"content":"            \u0026\u0026 timeslot.equals(((AppointmentHasOverlapPredicate) other).timeslot)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"zxisatree":77}},{"path":"src/main/java/seedu/address/model/appointment/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":" * Represents an Appointment\u0027s description in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"public class Description {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"        \"The description should not be blank\";","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?!\\\\s*$).+\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"    public final String description;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"     * @param description A valid description.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"    public Description(String description) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"     * Returns true if a given string is a valid Description.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"        return description;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"            || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"            \u0026\u0026 description.equals(((Description) other).description)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"        return description.hashCode();","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"zxisatree":56}},{"path":"src/main/java/seedu/address/model/appointment/Doctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redHat-arko"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"redHat-arko"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"redHat-arko"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"redHat-arko"},"content":" * Represents an Appointment\u0027s doctor in the address book.","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"redHat-arko"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDoctor(String)}","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"redHat-arko"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"redHat-arko"},"content":"public class Doctor {","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"redHat-arko"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"            \"Doctor names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"redHat-arko"},"content":"    /*","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"redHat-arko"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"redHat-arko"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"redHat-arko"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"redHat-arko"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"redHat-arko"},"content":"    public final String doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"redHat-arko"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"redHat-arko"},"content":"     * Constructs a {@code Doctor}.","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"redHat-arko"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"redHat-arko"},"content":"     * @param doctor A valid doctor.","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"redHat-arko"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"redHat-arko"},"content":"    public Doctor(String doctor) {","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"redHat-arko"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"redHat-arko"},"content":"        checkArgument(isValidDoctor(doctor), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"redHat-arko"},"content":"        this.doctor \u003d doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"redHat-arko"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"redHat-arko"},"content":"     * Returns true if a given string is a valid Doctor.","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"redHat-arko"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"redHat-arko"},"content":"    public static boolean isValidDoctor(String test) {","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"redHat-arko"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"redHat-arko"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"redHat-arko"},"content":"    public String toString() {","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"redHat-arko"},"content":"        return doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"redHat-arko"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"redHat-arko"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"redHat-arko"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"redHat-arko"},"content":"                || (other instanceof Doctor // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"redHat-arko"},"content":"                \u0026\u0026 doctor.equals(((Doctor) other).doctor)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"redHat-arko"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"redHat-arko"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"redHat-arko"},"content":"        return doctor.hashCode();","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"redHat-arko"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"redHat-arko":55,"zxisatree":1}},{"path":"src/main/java/seedu/address/model/appointment/TimeInTimeslotPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import seedu.address.logic.commands.FindAppointmentCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":" * Tests that a {@code Appointment}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"public class TimeInTimeslotPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"     * Parses the given {@code String} of arguments in the context of the FindAppointmentCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"     * and returns an FindAppointmentCommand object for execution.","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"    public TimeInTimeslotPredicate(String timeStr) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"        if (!Timeslot.isValidDatetime(timeStr)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"        this.time \u003d LocalDateTime.parse(timeStr, Timeslot.getDateTimeFormatter());","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"        return appointment.duringTime(this.time);","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"            || (other instanceof TimeInTimeslotPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"            \u0026\u0026 time.equals(((TimeInTimeslotPredicate) other).time)); // state check","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"zxisatree":43}},{"path":"src/main/java/seedu/address/model/appointment/Timeslot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":" * Represents an Appointment\u0027s starting and ending date and time in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTimeslot(String)}","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"public class Timeslot {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"        \"The starting and ending LocalDateTime should follow the format ddMMyyyy HH:mm (day month year hour minutes),\"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"            + \" and it should not be blank\";","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"    public static final String TIMESLOT_VALIDATION_REGEX \u003d \"\\\\d{8} \\\\d{2}:\\\\d{2},\\\\d{8} \\\\d{2}:\\\\d{2}\";","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"    public static final String DATETIME_VALIDATION_REGEX \u003d \"\\\\d{8} \\\\d{2}:\\\\d{2}\";","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"    private static final DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"ddMMyyyy HH:mm\");","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final DateTimeFormatter displayFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM HH:mm\");","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"    public final LocalDateTime startingDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"    public final LocalDateTime endingDateTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"    public final String timeslotString;","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"     * Constructs a {@code Timeslot}.","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"     * @param timeslot A valid string containing both the start and end time of the timeslot.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"     * @throws IllegalArgumentException if the starting time is not before the ending time.","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"    public Timeslot(String timeslot) throws IllegalArgumentException {","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"        requireNonNull(timeslot);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"        checkArgument(isValidTimeslot(timeslot), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"        String[] dateTimes \u003d splitIntoStartAndEnd(timeslot);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"        this.timeslotString \u003d timeslot;","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"        this.startingDateTime \u003d LocalDateTime.parse(dateTimes[0], dateTimeFormatter);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"        this.endingDateTime \u003d LocalDateTime.parse(dateTimes[1], dateTimeFormatter);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        checkArgument(startingDateTime.isBefore(endingDateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"     * Constructs a {@code Timeslot}.","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"     * @param startingDateTime The start time.","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"     * @param endingDateTime   The end time.","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"    public Timeslot(LocalDateTime startingDateTime, LocalDateTime endingDateTime) {","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"        this.startingDateTime \u003d startingDateTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"        this.endingDateTime \u003d endingDateTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"        this.timeslotString \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            startingDateTime.format(displayFormat) + \" to \" + endingDateTime.format(displayFormat);","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"     * Splits a valid timeslot string into its constituent LocalDateTime strings.","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"     * @param timeslot A valid string for constructing a timeslot.","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"     * @return Array of 2 elements, the starting date time and the ending date time.","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"    private String[] splitIntoStartAndEnd(String timeslot) {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"        return timeslot.split(\",\");","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"zxisatree"},"content":"     * Checks if this timeslot and the provided timeslot overlap.","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"zxisatree"},"content":"     * @param otherTimeslot The timeslot to check for overlaps with.","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"zxisatree"},"content":"     * @return Whether both timeslots clash.","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"zxisatree"},"content":"    public boolean hasOverlap(Timeslot otherTimeslot) {","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"zxisatree"},"content":"        return this.startingDateTime.equals(otherTimeslot.startingDateTime)","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"zxisatree"},"content":"            || (this.startingDateTime.isBefore(otherTimeslot.endingDateTime)","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"zxisatree"},"content":"            \u0026\u0026 otherTimeslot.startingDateTime.isBefore(this.endingDateTime));","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"zxisatree"},"content":"    ///**","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"zxisatree"},"content":"    // * Checks if the first datetime is before or equal to the second datetime.","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"zxisatree"},"content":"    // *","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"zxisatree"},"content":"    // * @param thisTime The first datetime that should be before or equal to the second datetime.","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"zxisatree"},"content":"    // * @param thatTime The second datetime.","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"zxisatree"},"content":"    // * @return if the first datetime is before or equal to the second datetime.","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"zxisatree"},"content":"    // */","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"zxisatree"},"content":"    //private boolean isBeforeOrEqual(LocalDateTime thisTime, LocalDateTime thatTime) {","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"zxisatree"},"content":"    //    return thisTime.isBefore(thatTime) || thisTime.isEqual(thatTime);","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"zxisatree"},"content":"    //}","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"zxisatree"},"content":"     * Returns true if a given string is a valid timeslot.","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"zxisatree"},"content":"    public static boolean isValidTimeslot(String test) {","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"zxisatree"},"content":"        return test.matches(TIMESLOT_VALIDATION_REGEX);","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"zxisatree"},"content":"     * Returns true if a given string is a valid datetime.","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"zxisatree"},"content":"    public static boolean isValidDatetime(String test) {","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"zxisatree"},"content":"        return test.matches(DATETIME_VALIDATION_REGEX);","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"zxisatree"},"content":"     * Returns the date time formatter used for parsing all date time strings.","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"zxisatree"},"content":"     * @return A date time formatter for parsing date time strings.","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"zxisatree"},"content":"    public static DateTimeFormatter getDateTimeFormatter() {","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"zxisatree"},"content":"        return dateTimeFormatter;","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public String getFormattedStartTime() {","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return startingDateTime.format(displayFormat);","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public String getFormattedEndTime() {","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return endingDateTime.format(displayFormat);","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"zxisatree"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return getFormattedStartTime() + \" to \" + getFormattedEndTime();","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"zxisatree"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"zxisatree"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"zxisatree"},"content":"            || (other instanceof Timeslot // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"zxisatree"},"content":"            \u0026\u0026 startingDateTime.equals(((Timeslot) other).startingDateTime)","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"zxisatree"},"content":"            \u0026\u0026 endingDateTime.equals(((Timeslot) other).endingDateTime)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"zxisatree"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"zxisatree"},"content":"        return Objects.hash(startingDateTime, endingDateTime);","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"zxisatree":129,"Jayanth-Balasubramanian":11}},{"path":"src/main/java/seedu/address/model/appointment/UniqueAppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.appointment.exceptions.AppointmentNotFoundException;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A list of appointments that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * An appointment is considered unique by comparing using {@code Appointment#isSameAppointment(Appointment)}.","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * As such, adding and updating of appointments uses Appointment#isSameAppointment(Appointment) for equality to ensure","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * that the appointment being added or updated is unique in terms of identity in the UniqueAppointmentList. However, the","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * removal of an appointment uses Appointment#equals(Object) to ensure that the appointment with exactly the same","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * fields will be removed. Supports a minimal set of list operations.","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" *","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * @see Appointment#isSameAppointment(Appointment)","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class UniqueAppointmentList implements Iterable\u003cAppointment\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final ObservableList\u003cAppointment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final ObservableList\u003cAppointment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns true if the list contains an equivalent appointment as the given argument.","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public boolean contains(Appointment toCheck) {","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return internalList.stream().anyMatch(toCheck::isSameAppointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"     * Adds an appointment to the list.","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * The appointment must not already exist in the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void add(Appointment toAdd) {","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Replaces the appointment {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * The appointment identity of {@code editedAppointment} must not be the same as another","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * existing appointment in the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (!target.isSameAppointment(editedAppointment) \u0026\u0026 contains(editedAppointment)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        internalList.set(index, editedAppointment);","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Removes the equivalent appointment from the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * The appointment must exist in the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void remove(Appointment toRemove) {","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setAppointments(UniqueAppointmentList replacement) {","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Replaces the contents of this list with {@code appointments}.","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * {@code Appointments} must not contain duplicate appointments.","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireAllNonNull(appointments);","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (!appointmentsAreUnique(appointments)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        internalList.setAll(appointments);","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public ObservableList\u003cAppointment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public Iterator\u003cAppointment\u003e iterator() {","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                || (other instanceof UniqueAppointmentList // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \u0026\u0026 internalList.equals(((UniqueAppointmentList) other).internalList));","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns true if {@code appointments} contains only unique appointments.","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private boolean appointmentsAreUnique(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        for (int i \u003d 0; i \u003c appointments.size() - 1; i++) {","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            for (int j \u003d i + 1; j \u003c appointments.size(); j++) {","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                if (appointments.get(i).isSameAppointment(appointments.get(j))) {","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                    return false;","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                }","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return true;","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"zxisatree":1,"Jayanth-Balasubramanian":136}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/AppointmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Signals that the operation is unable to find the specified appointment.","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class AppointmentNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public AppointmentNotFoundException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(\"Did not find the appointment\");","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"Jayanth-Balasubramanian":10}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/DuplicateAppointmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Signals that the operation will result in duplicate Appointments (Appointments are considered duplicates","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * if they have the same identity).","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class DuplicateAppointmentException extends RuntimeException {","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public DuplicateAppointmentException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(\"Operation would result in duplicate appointments\");","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"Jayanth-Balasubramanian":11}},{"path":"src/main/java/seedu/address/model/patient/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Represents a Patient\u0027s address in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":2,"-":55}},{"path":"src/main/java/seedu/address/model/patient/DetailsContainKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import java.util.List;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":" * Tests that a {@code Patient}\u0027s {@code Name}, {@code Phone}, {@code Email}, {@code Address} or {@code Tag}s matches","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":" * any of the keywords given.","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"public class DetailsContainKeywordsPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"    public DetailsContainKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"        List\u003cString\u003e patientDetails \u003d patient.getDetailsAsList();","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"        patientDetails.retainAll(this.keywords.stream().map(String::toLowerCase).collect(Collectors.toList()));","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"        return patientDetails.size() \u003e 0;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"            || (other instanceof DetailsContainKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"            \u0026\u0026 keywords.equals(((DetailsContainKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"zxisatree":32}},{"path":"src/main/java/seedu/address/model/patient/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Represents a Patient\u0027s email in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":2,"-":69}},{"path":"src/main/java/seedu/address/model/patient/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Represents a Patient\u0027s name in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":2,"-":57}},{"path":"src/main/java/seedu/address/model/patient/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Tests that a {@code Patient}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"            .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(patient.getName().fullName, keyword));","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"zxisatree":1,"Jayanth-Balasubramanian":4,"-":26}},{"path":"src/main/java/seedu/address/model/patient/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Represents a Patient in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"runoutofit"},"content":" * dummy line","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class Patient {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"redHat-arko"},"content":"    private final Remark remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"    public Patient(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"        requireAllNonNull(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"redHat-arko"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"redHat-arko"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"redHat-arko"},"content":"        return remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"zxisatree"},"content":"     * Returns a list of the patient\u0027s details.","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"zxisatree"},"content":"     * @return A list of strings of the patient\u0027s details split into individual words.","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"zxisatree"},"content":"    public List\u003cString\u003e getDetailsAsList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"zxisatree"},"content":"        List\u003cString\u003e patientDetails \u003d new ArrayList\u003c\u003e(Arrays.asList(this.name.fullName.toLowerCase().split(\" \")));","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"zxisatree"},"content":"        patientDetails.add(this.phone.value.toLowerCase());","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"zxisatree"},"content":"        patientDetails.add(this.email.value.toLowerCase());","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"zxisatree"},"content":"        patientDetails.addAll(Arrays.asList(this.address.value.toLowerCase().split(\" \")));","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"zxisatree"},"content":"        patientDetails.addAll(this.tags.stream().map(tag -\u003e tag.tagName.toLowerCase()).collect(Collectors.toSet()));","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"zxisatree"},"content":"        return patientDetails;","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns true if both patients have the same name.","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * This defines a weaker notion of equality between two patients.","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public boolean isSamePatient(Patient otherPatient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (otherPatient \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return otherPatient !\u003d null","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            \u0026\u0026 otherPatient.getName().equals(getName());","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns true if both patients have the same identity and data fields.","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * This defines a stronger notion of equality between two patients.","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient otherPatient \u003d (Patient) other;","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return otherPatient.getName().equals(getName())","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            \u0026\u0026 otherPatient.getPhone().equals(getPhone())","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            \u0026\u0026 otherPatient.getEmail().equals(getEmail())","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            \u0026\u0026 otherPatient.getAddress().equals(getAddress())","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            \u0026\u0026 otherPatient.getTags().equals(getTags());","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"zxisatree"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"redHat-arko"},"content":"            .append(getAddress())","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"redHat-arko"},"content":"            .append(\"; Remark: \")","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"zxisatree"},"content":"            .append(getRemark());","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zxisatree":22,"redHat-arko":8,"Jayanth-Balasubramanian":18,"runoutofit":1,"-":101}},{"path":"src/main/java/seedu/address/model/patient/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Represents a Patient\u0027s phone number in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":2,"-":51}},{"path":"src/main/java/seedu/address/model/patient/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"redHat-arko"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"redHat-arko"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"redHat-arko"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"redHat-arko"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"redHat-arko"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"redHat-arko"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"redHat-arko"},"content":"public class Remark {","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"redHat-arko"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remarks must be valid\";","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"redHat-arko"},"content":"    public static final String VALIDATION_REGEX \u003d \".*\";","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"redHat-arko"},"content":"    public final String value;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"redHat-arko"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"redHat-arko"},"content":"     * Parameterized constructor to create a new Remark.","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"redHat-arko"},"content":"     * @param remark The remark to wrap.","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"redHat-arko"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"redHat-arko"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"redHat-arko"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"redHat-arko"},"content":"        value \u003d remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"redHat-arko"},"content":"    public static boolean isValidRemark(String test) {","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"redHat-arko"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"redHat-arko"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"redHat-arko"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"redHat-arko"},"content":"        return value;","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"redHat-arko"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"redHat-arko"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"redHat-arko"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"redHat-arko"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"redHat-arko"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"redHat-arko"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"redHat-arko"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"redHat-arko"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"redHat-arko"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"redHat-arko":44}},{"path":"src/main/java/seedu/address/model/patient/UniquePatientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.exceptions.DuplicatePatientException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.exceptions.PatientNotFoundException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A list of patients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A patient is considered unique by comparing using {@code Patient#isSamePatient(Patient)}. As such, adding","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * and updating of patients uses Patient#isSamePatient(Patient) for equality to ensure that the patient being added","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * or updated is unique in terms of identity in the UniquePatientList. However, the removal of a patient uses","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Patient#equals(Object) to ensure that the patient with exactly the same fields will be removed.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" *","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * @see Patient#isSamePatient(Patient)","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class UniquePatientList implements Iterable\u003cPatient\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final ObservableList\u003cPatient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final ObservableList\u003cPatient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns true if the list contains an equivalent patient as the given argument.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public boolean contains(Patient toCheck) {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Adds a patient to the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * The patient must not already exist in the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void add(Patient toAdd) {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Replaces the patient {@code target} in the list with {@code editedPatient}.","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another existing patient in the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"     * Does not change the name of the patient.","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireAllNonNull(target, editedPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new PatientNotFoundException();","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (!target.isSamePatient(editedPatient) \u0026\u0026 contains(editedPatient)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        internalList.set(index, editedPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Removes the equivalent patient from the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * The patient must exist in the list.","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void remove(Patient toRemove) {","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new PatientNotFoundException();","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setPatients(UniquePatientList replacement) {","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Replaces the contents of this list with {@code patients}.","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * {@code patients} must not contain duplicate patients.","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        requireAllNonNull(patients);","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (!patientsAreUnique(patients)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        internalList.setAll(patients);","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public ObservableList\u003cPatient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public Iterator\u003cPatient\u003e iterator() {","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                || (other instanceof UniquePatientList // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                        \u0026\u0026 internalList.equals(((UniquePatientList) other).internalList));","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns true if {@code patients} contains only unique patients.","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private boolean patientsAreUnique(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        for (int i \u003d 0; i \u003c patients.size() - 1; i++) {","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            for (int j \u003d i + 1; j \u003c patients.size(); j++) {","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                if (patients.get(i).isSamePatient(patients.get(j))) {","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                    return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                }","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"zxisatree":1,"Jayanth-Balasubramanian":136}},{"path":"src/main/java/seedu/address/model/patient/exceptions/DuplicatePatientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model.patient.exceptions;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Signals that the operation will result in duplicate Patients (Patients are considered duplicates","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * if they have the same identity).","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class DuplicatePatientException extends RuntimeException {","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public DuplicatePatientException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(\"Operation would result in duplicate patients\");","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Jayanth-Balasubramanian":11}},{"path":"src/main/java/seedu/address/model/patient/exceptions/PatientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model.patient.exceptions;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Signals that the operation is unable to find the specified patient.","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class PatientNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Jayanth-Balasubramanian":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.AppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyAppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyPatientList;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Description;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.appointment.Doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Timeslot;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"redHat-arko"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static Patient[] getSamplePatients() {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return new Patient[] {","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"            new Patient(new Name(\"Alex Yeoh\"),","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"runoutofit"},"content":"                        new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"redHat-arko"},"content":"                        new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_REMARK,","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                        getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"            new Patient(new Name(\"Bernice Yu\"),","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"runoutofit"},"content":"                        new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"redHat-arko"},"content":"                        new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_REMARK,","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                        getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"            new Patient(new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"runoutofit"},"content":"                        new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"redHat-arko"},"content":"                        new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_REMARK,","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"            new Patient(new Name(\"David Li\"),","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"runoutofit"},"content":"                        new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"redHat-arko"},"content":"                        new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_REMARK,","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                        getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"            new Patient(new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"runoutofit"},"content":"                        new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"redHat-arko"},"content":"                        new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_REMARK,","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                        getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"            new Patient(new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"runoutofit"},"content":"                        new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"redHat-arko"},"content":"                        new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_REMARK,","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                        getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"    public static ReadOnlyPatientList getSampleAddressBook() {","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        for (Patient samplePatient : getSamplePatients()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            sampleAb.addPatient(samplePatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"    public static Appointment[] getSampleAppointments() {","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"        return new Appointment[] {","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"            new Appointment(new Name(\"Alex Yeoh\"),","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"redHat-arko"},"content":"                        new Timeslot(\"19032023 08:00,19032023 09:00\"), new Description(\"Regular checkup\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"redHat-arko"},"content":"                        new Doctor(\"Xiao Lu\")),","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"zxisatree"},"content":"            new Appointment(new Name(\"Bernice Yu\"),","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"redHat-arko"},"content":"                        new Timeslot(\"26032023 11:00,26032023 13:00\"), new Description(\"Consultation\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"redHat-arko"},"content":"                        new Doctor(\"Sidharth Rajesh\")),","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"zxisatree"},"content":"        };","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"zxisatree"},"content":"    public static ReadOnlyAppointmentList getSampleAppointmentList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"zxisatree"},"content":"        AppointmentList sampleAl \u003d new AppointmentList();","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"zxisatree"},"content":"        for (Appointment sampleAppointment : getSampleAppointments()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"zxisatree"},"content":"            sampleAl.addAppointment(sampleAppointment);","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"zxisatree"},"content":"        return sampleAl;","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"zxisatree":28,"redHat-arko":13,"Jayanth-Balasubramanian":9,"runoutofit":6,"-":37}},{"path":"src/main/java/seedu/address/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyPatientList;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.AddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"     * Returns AddressBook data as a {@link ReadOnlyPatientList}.","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"    Optional\u003cReadOnlyPatientList\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"    Optional\u003cReadOnlyPatientList\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"     * Saves the given {@link ReadOnlyPatientList} to the storage.","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"    void saveAddressBook(ReadOnlyPatientList addressBook) throws IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"     * @see #saveAddressBook(ReadOnlyPatientList)","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"    void saveAddressBook(ReadOnlyPatientList addressBook, Path filePath) throws IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"zxisatree":8,"-":37}},{"path":"src/main/java/seedu/address/storage/AppointmentListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyAppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":" * Represents a storage for {@link seedu.address.model.AppointmentList}.","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"public interface AppointmentListStorage {","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"    Path getAppointmentListFilePath();","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"     * Returns AppointmentList data as a {@link ReadOnlyAppointmentList}.","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"    Optional\u003cReadOnlyAppointmentList\u003e readAppointmentList() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"     * @see #getAppointmentListFilePath()","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"    Optional\u003cReadOnlyAppointmentList\u003e readAppointmentList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"     * Saves the given {@link ReadOnlyAppointmentList} to the storage.","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"     * @param appointmentList cannot be null.","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"    void saveAppointmentList(ReadOnlyAppointmentList appointmentList) throws IOException;","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"     * @see #saveAppointmentList(ReadOnlyAppointmentList)","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"    void saveAppointmentList(ReadOnlyAppointmentList appointmentList, Path filePath) throws IOException;","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"zxisatree":45}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Description;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.appointment.Doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Timeslot;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":" * Jackson-friendly version of {@link Appointment}.","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"class JsonAdaptedAppointment {","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Appointment\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"redHat-arko"},"content":"    private final String patientName;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"    private final String timeslot;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"    private final String description;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"redHat-arko"},"content":"    private final String doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"     * Constructs a {@code JsonAdaptedAppointment} with the given patient details.","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"    public JsonAdaptedAppointment(@JsonProperty(\"timeslot\") String timeslot,","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"                                  @JsonProperty(\"description\") String description,","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"                                  @JsonProperty(\"name\") String patientName,","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"redHat-arko"},"content":"                                  @JsonProperty(\"doctor\") String doctor) {","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"        this.timeslot \u003d timeslot;","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"redHat-arko"},"content":"        this.patientName \u003d patientName;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"redHat-arko"},"content":"        this.doctor \u003d doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"     * Converts a given {@code Appointment} into this class for Jackson use.","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"        timeslot \u003d source.getTimeslot().timeslotString;","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"        description \u003d source.getDescription().description;","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"redHat-arko"},"content":"        patientName \u003d source.getPatientName().fullName;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"redHat-arko"},"content":"        doctor \u003d source.getDoctor().doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"     * Converts this Jackson-friendly adapted appointment object into the model\u0027s {@code Appointment} object.","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted appointment.","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"    public Appointment toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"redHat-arko"},"content":"        if (patientName \u003d\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"redHat-arko"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"redHat-arko"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"redHat-arko"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"redHat-arko"},"content":"        if (!Name.isValidName(patientName)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"redHat-arko"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"redHat-arko"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"redHat-arko"},"content":"        final Name modelPatientName \u003d new Name(patientName);","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"        if (timeslot \u003d\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Timeslot.class.getSimpleName()));","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"        if (!Timeslot.isValidTimeslot(timeslot)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"zxisatree"},"content":"            throw new IllegalValueException(Timeslot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"zxisatree"},"content":"        final Timeslot modelTimeslot \u003d new Timeslot(timeslot);","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"zxisatree"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"zxisatree"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"zxisatree"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName()));","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"zxisatree"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"zxisatree"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"zxisatree"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"redHat-arko"},"content":"        if (doctor \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"redHat-arko"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"redHat-arko"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Doctor.class.getSimpleName()));","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"redHat-arko"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"redHat-arko"},"content":"        if (!Doctor.isValidDoctor(doctor)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"redHat-arko"},"content":"            throw new IllegalValueException(Doctor.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"redHat-arko"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"redHat-arko"},"content":"        final Doctor modelDoctor \u003d new Doctor(doctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"zxisatree"},"content":"        return new Appointment(modelPatientName, modelTimeslot, modelDescription, modelDoctor);","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"zxisatree":69,"redHat-arko":25}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPatient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Jackson-friendly version of {@link Patient}.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"class JsonAdaptedPatient {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Patient\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"redHat-arko"},"content":"    private final String remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Constructs a {@code JsonAdaptedPatient} with the given patient details.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"    public JsonAdaptedPatient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"                              @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"redHat-arko"},"content":"                              @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                              @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"redHat-arko"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Converts a given {@code Patient} into this class for Jackson use.","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public JsonAdaptedPatient(Patient source) {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"redHat-arko"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Converts this Jackson-friendly adapted patient object into the model\u0027s {@code Patient} object.","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted patient.","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public Patient toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        final List\u003cTag\u003e patientTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            patientTags.add(tag.toModelType());","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"redHat-arko"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"redHat-arko"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"redHat-arko"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"redHat-arko"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(patientTags);","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"zxisatree"},"content":"        return new Patient(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags);","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"redHat-arko":10,"zxisatree":3,"Jayanth-Balasubramanian":17,"runoutofit":1,"-":89}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyPatientList;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"    public Optional\u003cReadOnlyPatientList\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"    public Optional\u003cReadOnlyPatientList\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"    public void saveAddressBook(ReadOnlyPatientList addressBook) throws IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyPatientList)}.","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"    public void saveAddressBook(ReadOnlyPatientList addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zxisatree":6,"-":74}},{"path":"src/main/java/seedu/address/storage/JsonAppointmentListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyAppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":" * A class to access appointment list data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"public class JsonAppointmentListStorage implements AppointmentListStorage {","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAppointmentListStorage.class);","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"    public JsonAppointmentListStorage(Path filePath) {","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"    public Path getAppointmentListFilePath() {","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"        return filePath;","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"    public Optional\u003cReadOnlyAppointmentList\u003e readAppointmentList() throws DataConversionException {","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"        return readAppointmentList(filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"     * Similar to {@link #readAppointmentList()}.","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"    public Optional\u003cReadOnlyAppointmentList\u003e readAppointmentList(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"        Optional\u003cJsonSerializableAppointmentList\u003e jsonAppointmentList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"            filePath, JsonSerializableAppointmentList.class);","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"        if (!jsonAppointmentList.isPresent()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"            return Optional.of(jsonAppointmentList.get().toModelType());","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"    public void saveAppointmentList(ReadOnlyAppointmentList addressBook) throws IOException {","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"        saveAppointmentList(addressBook, filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"     * Similar to {@link #saveAppointmentList(ReadOnlyAppointmentList)}.","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"zxisatree"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"    public void saveAppointmentList(ReadOnlyAppointmentList appointmentList, Path filePath) throws IOException {","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"zxisatree"},"content":"        requireNonNull(appointmentList);","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"zxisatree"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"zxisatree"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"zxisatree"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAppointmentList(appointmentList), filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"zxisatree":79}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyPatientList;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"Patients list contains duplicate patient(s).\";","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final List\u003cJsonAdaptedPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given patients.","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"patients\") List\u003cJsonAdaptedPatient\u003e patients) {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.patients.addAll(patients);","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"    public JsonSerializableAddressBook(ReadOnlyPatientList source) {","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        patients.addAll(source.getPatientList().stream().map(JsonAdaptedPatient::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        for (JsonAdaptedPatient jsonAdaptedPatient : patients) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            Patient patient \u003d jsonAdaptedPatient.toModelType();","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            if (addressBook.hasPatient(patient)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            addressBook.addPatient(patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zxisatree":2,"Jayanth-Balasubramanian":12,"-":46}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"import java.util.List;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.AppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyAppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":" * An immutable Appointment List that is serializable to JSON format.","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"@JsonRootName(value \u003d \"appointmentlist\")","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"class JsonSerializableAppointmentList {","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"Appointment list contains duplicate appointment(s).\";","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"     * Constructs a {@code JsonSerializableAppointmentList} with the given appointments.","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"    public JsonSerializableAppointmentList(@JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointments) {","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"        this.appointments.addAll(appointments);","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"     * Converts a given {@code ReadOnlyAppointmentList} into this class for Jackson use.","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAppointmentList}.","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"    public JsonSerializableAppointmentList(ReadOnlyAppointmentList source) {","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"        appointments.addAll(","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"            source.getAppointmentList().stream().map(JsonAdaptedAppointment::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"     * Converts this address book into the model\u0027s {@code AppointmentList} object.","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"    public AppointmentList toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"        AppointmentList addressBook \u003d new AppointmentList();","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"        for (JsonAdaptedAppointment jsonAdaptedAppointment : appointments) {","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"            Appointment appointment \u003d jsonAdaptedAppointment.toModelType();","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"            if (addressBook.hasAppointment(appointment)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"            addressBook.addAppointment(appointment);","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"        return addressBook;","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"zxisatree":61}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyAppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyPatientList;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"public interface Storage extends AddressBookStorage, AppointmentListStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"    Optional\u003cReadOnlyPatientList\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"    void saveAddressBook(ReadOnlyPatientList addressBook) throws IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"    Optional\u003cReadOnlyAppointmentList\u003e readAppointmentList() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"    void saveAppointmentList(ReadOnlyAppointmentList appointmentList) throws IOException;","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"zxisatree":10,"-":29}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyAppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyPatientList;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"    private AppointmentListStorage appointmentListStorage;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, AppointmentListStorage appointmentListStorage,","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"        this.appointmentListStorage \u003d appointmentListStorage;","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"    public Optional\u003cReadOnlyPatientList\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"    public Optional\u003cReadOnlyPatientList\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"    public void saveAddressBook(ReadOnlyPatientList addressBook) throws IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"zxisatree"},"content":"    public void saveAddressBook(ReadOnlyPatientList addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"zxisatree"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AppointmentList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"zxisatree"},"content":"    public Path getAppointmentListFilePath() {","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"zxisatree"},"content":"        return appointmentListStorage.getAppointmentListFilePath();","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"zxisatree"},"content":"    public Optional\u003cReadOnlyAppointmentList\u003e readAppointmentList() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"zxisatree"},"content":"        return readAppointmentList(appointmentListStorage.getAppointmentListFilePath());","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"zxisatree"},"content":"    public Optional\u003cReadOnlyAppointmentList\u003e readAppointmentList(Path filePath)","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"zxisatree"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"zxisatree"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"zxisatree"},"content":"        return appointmentListStorage.readAppointmentList(filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"zxisatree"},"content":"    public void saveAppointmentList(ReadOnlyAppointmentList addressBook) throws IOException {","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"zxisatree"},"content":"        saveAppointmentList(addressBook, appointmentListStorage.getAppointmentListFilePath());","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"zxisatree"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"zxisatree"},"content":"    public void saveAppointmentList(ReadOnlyAppointmentList addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"zxisatree"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"zxisatree"},"content":"        appointmentListStorage.saveAppointmentList(addressBook, filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zxisatree":39,"-":72}},{"path":"src/main/java/seedu/address/ui/AppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.ReadOnlyPatientList;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * UI component that displays information of an {@code Appointment}.","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class AppointmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final String FXML \u003d \"AppointmentCard.fxml\";","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public final Appointment appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private HBox appointmentCardPane;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Label id;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Label patientName;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Label timeSlot;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Label description;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"redHat-arko"},"content":"    private Label doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Creates an {@code AppointmentCard} with the given {@code Appointment} and index to display.","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public AppointmentCard(ReadOnlyPatientList patientList, Appointment appointment, int displayedIndex) {","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(FXML);","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"        //System.out.println(appointment.toString());","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        /*","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient thisPatient \u003d patientList","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                .getPatientList()","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                .stream()","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                .filter(patient -\u003e patient.getId().equals(appointment.getPatientId()))","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                .findFirst().orElseThrow();","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        */","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        // temporary workaround for buggy id","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"redHat-arko"},"content":"        patientName.setText(appointment.getPatientName().toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"redHat-arko"},"content":"        timeSlot.setText(appointment.getTimeslot().toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"redHat-arko"},"content":"        description.setText(appointment.getDescription().toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"redHat-arko"},"content":"        doctor.setText(\"Doctor: \" + appointment.getDoctor().toString());","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (!(other instanceof PatientCard)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        AppointmentCard card \u003d (AppointmentCard) other;","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \u0026\u0026 appointment.equals(card.appointment);","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"redHat-arko":5,"zxisatree":1,"Jayanth-Balasubramanian":66}},{"path":"src/main/java/seedu/address/ui/AppointmentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.ReadOnlyPatientList;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Panel containing the list of appointments.","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class AppointmentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final String FXML \u003d \"AppointmentListPanel.fxml\";","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final ReadOnlyPatientList patientList;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private ListView\u003cAppointment\u003e appointmentListView;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Creates an {@code AppointmentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public AppointmentListPanel(ObservableList\u003cAppointment\u003e appointments, ReadOnlyPatientList patientList) {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(FXML);","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.patientList \u003d patientList;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        appointmentListView.setItems(appointments);","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        appointmentListView.setCellFactory(listView -\u003e new AppointmentListViewCell());","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    class AppointmentListViewCell extends ListCell\u003cAppointment\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        protected void updateItem(Appointment appointment, boolean empty) {","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            super.updateItem(appointment, empty);","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            if (empty || appointment \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                setText(null);","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                setGraphic(new AppointmentCard(patientList, appointment, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"Jayanth-Balasubramanian":47}},{"path":"src/main/java/seedu/address/ui/CalendarCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import com.calendarfx.model.Calendar;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import com.calendarfx.model.CalendarSource;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import com.calendarfx.model.Entry;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import com.calendarfx.view.YearMonthView;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"import com.calendarfx.view.popover.DatePopOver;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"import javafx.scene.input.InputEvent;","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.ReadOnlyAppointmentList;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A Calendar card that displays appointments in the appointment list.","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Adapted from `CalendarPanel.java` written by ChoChihTun, from","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * \u003ca href\u003d\"https://github.com/CS2103JAN2018-T11-B1/main/blob/master/src/main/java/seedu/address/ui/CalendarPanel.java\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Tuition Connect \u003c/a\u003e.","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class CalendarCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final CalendarSource source \u003d new CalendarSource(\"Schedule\");","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static Calendar calendar \u003d new Calendar(\"Task\");","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static YearMonthView calendarView \u003d new YearMonthView();","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final String FXML \u003d \"CalendarCard.fxml\";","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CalendarCard.class);","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"    private DatePopOver datePopOver \u003d null;","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Creates a {@code CalendarCard}.","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public CalendarCard() {","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(FXML);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        calendarView.setRequestedTime(LocalTime.now());","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        calendarView.setToday(LocalDate.now());","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"        calendarView.setShowWeekNumbers(false);","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        source.getCalendars().add(calendar);","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        calendarView.getCalendarSources().add(source);","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        calendarView.setClickBehaviour(YearMonthView.ClickBehaviour.SHOW_DETAILS);","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"        calendarView.setDateDetailsCallback(param -\u003e {","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"            InputEvent evt \u003d param.getInputEvent();","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"            if (evt instanceof MouseEvent) {","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"                MouseEvent mouseEvent \u003d (MouseEvent) evt;","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"                if (mouseEvent.getClickCount() \u003d\u003d 1) {","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"                    if (datePopOver !\u003d null) {","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"                        datePopOver.hide();","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"zxisatree"},"content":"                    }","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"                    datePopOver \u003d new DatePopOver(calendarView, param.getLocalDate());","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"                    datePopOver.show(param.getOwner());","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"                    return true;","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"                }","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"            }","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"            return false;","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"        });","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Adds appointments to the calendar.","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param appointmentList The appointment list to be added to the calendar.","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static void addAppointmentsToCalendar(ReadOnlyAppointmentList appointmentList) {","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (source.getCalendars() !\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            source.getCalendars().clear();","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Calendar calendar \u003d new Calendar(\"Task\");","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        for (int i \u003d 0; i \u003c appointmentList.getAppointmentList().size(); i++) {","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            String entryTitle \u003d appointmentList.getAppointmentList().get(i).getPatientName().fullName + \", \"","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                + appointmentList.getAppointmentList().get(i).getTimeslot().toString();","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            Entry\u003cString\u003e entry \u003d new Entry\u003c\u003e(entryTitle);","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            entry.setInterval(appointmentList.getAppointmentList().get(i).getTimeslot().startingDateTime,","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                appointmentList.getAppointmentList().get(i).getTimeslot().endingDateTime);","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            calendar.addEntry(entry);","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        source.getCalendars().add(calendar);","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public YearMonthView getRoot() {","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return calendarView;","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"zxisatree":22,"Jayanth-Balasubramanian":68}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-w12-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"zxisatree":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private PatientListPanel patientListPanel;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private AppointmentListPanel appointmentListPanel;","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"runoutofit"},"content":"    private PatientViewCard patientViewCard;","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private StackPane patientListPanelPlaceholder;","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private StackPane appointmentListPanelPlaceholder;","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private StackPane calendarPlaceholder;","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"runoutofit"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"runoutofit"},"content":"    private StackPane patientCardPLaceHolder;","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"runoutofit"},"content":"        //patientViewCard \u003d new PatientViewCard();","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        patientListPanel \u003d new PatientListPanel(logic.getFilteredPatientList());","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        patientListPanelPlaceholder.getChildren().add(patientListPanel.getRoot());","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        appointmentListPanel \u003d new AppointmentListPanel(logic.getFilteredAppointmentList(), logic.getAddressBook());","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        appointmentListPanelPlaceholder.getChildren().add(appointmentListPanel.getRoot());","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        CalendarCard.addAppointmentsToCalendar(logic.getAppointmentList());","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        CalendarCard calendarCard \u003d new CalendarCard();","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        calendarPlaceholder.getChildren().add(calendarCard.getRoot());","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"runoutofit"},"content":"    void handleView(int index) {","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"runoutofit"},"content":"        patientViewCard \u003d new PatientViewCard(logic.getFilteredPatientList().get(index), new Stage());","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"runoutofit"},"content":"        if (!patientViewCard.isShowing()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"runoutofit"},"content":"            patientViewCard.show();","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"runoutofit"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"runoutofit"},"content":"            patientViewCard.focus();","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"runoutofit"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"runoutofit"},"content":"        //patientViewCard \u003d new PatientViewCard(logic.getFilteredPatientList().get(index));","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"runoutofit"},"content":"        //patientCardPLaceHolder.getChildren().add(patientViewCard.getRoot());","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"runoutofit"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":193,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public PatientListPanel getPatientListPanel() {","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return patientListPanel;","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"runoutofit"},"content":"            if (commandResult.isView()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":217,"author":{"gitId":"runoutofit"},"content":"                handleView(commandResult.getIndex());","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"runoutofit"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Jayanth-Balasubramanian":17,"runoutofit":21,"-":189}},{"path":"src/main/java/seedu/address/ui/PatientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A UI component that displays information of a {@code Patient}.","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class PatientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final String FXML \u003d \"PatientCard.fxml\";","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public final Patient patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"redHat-arko"},"content":"    private Label remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"redHat-arko"},"content":"    @FXML","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Creates a {@code PatientCode} with the given {@code Patient} and index to display.","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public PatientCard(Patient patient, int displayedIndex) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        name.setText(patient.getName().fullName);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        phone.setText(patient.getPhone().value);","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        address.setText(patient.getAddress().value);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        email.setText(patient.getEmail().value);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"redHat-arko"},"content":"        remark.setText(patient.getRemark().value);","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        patient.getTags().stream()","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"     * Creates a {@code PatientCode} with the given {@code Patient} without an index to display.","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"    public PatientCard(Patient patient) {","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"        super(FXML);","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"zxisatree"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"zxisatree"},"content":"        name.setText(patient.getName().fullName);","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"zxisatree"},"content":"        phone.setText(patient.getPhone().value);","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"        address.setText(patient.getAddress().value);","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"zxisatree"},"content":"        email.setText(patient.getEmail().value);","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"zxisatree"},"content":"        remark.setText(patient.getRemark().value);","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"zxisatree"},"content":"        patient.getTags().stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"zxisatree"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"zxisatree"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"zxisatree"},"content":"     * Make this patient card resize along with the window.","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"zxisatree"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"zxisatree"},"content":"     * @param stage The window to resize with.","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"zxisatree"},"content":"     * @return This patient card to chain methods on.","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"zxisatree"},"content":"    public PatientCard bindPrefProperty(Stage stage) {","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"zxisatree"},"content":"        this.cardPane.prefHeightProperty().bind(stage.heightProperty());","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"zxisatree"},"content":"        this.cardPane.prefWidthProperty().bind(stage.widthProperty());","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"zxisatree"},"content":"        return this;","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (!(other instanceof PatientCard)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        PatientCard card \u003d (PatientCard) other;","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \u0026\u0026 patient.equals(card.patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"zxisatree":29,"redHat-arko":3,"Jayanth-Balasubramanian":16,"-":61}},{"path":"src/main/java/seedu/address/ui/PatientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Panel containing the list of patients.","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class PatientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final String FXML \u003d \"PatientListPanel.fxml\";","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PatientListPanel.class);","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private ListView\u003cPatient\u003e patientListView;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Creates a {@code PatientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public PatientListPanel(ObservableList\u003cPatient\u003e patientList) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(FXML);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        patientListView.setItems(patientList);","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        patientListView.setCellFactory(listView -\u003e new PatientListViewCell());","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"        patientListView.setPrefHeight(2000);","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Patient} using a {@code PatientCard}.","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    class PatientListViewCell extends ListCell\u003cPatient\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        protected void updateItem(Patient patient, boolean empty) {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            super.updateItem(patient, empty);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            if (empty || patient \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                setText(null);","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                setGraphic(new PatientCard(patient, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"zxisatree":1,"Jayanth-Balasubramanian":49}},{"path":"src/main/java/seedu/address/ui/PatientViewCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"runoutofit"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"runoutofit"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"runoutofit"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"runoutofit"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"runoutofit"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"runoutofit"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"runoutofit"},"content":" * A UI component that pops up and displays information of an individual {@code Patient}.","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"runoutofit"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"runoutofit"},"content":"public class PatientViewCard extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"runoutofit"},"content":"    private static final String FXML \u003d \"PatientViewCard.fxml\";","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"runoutofit"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"runoutofit"},"content":"    private Label patientViewCard;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"runoutofit"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"runoutofit"},"content":"     * Creates a card to view details of the {@code Patient}.","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"runoutofit"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"runoutofit"},"content":"    public PatientViewCard(Patient patient, Stage root) {","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"runoutofit"},"content":"        super(FXML, root);","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"runoutofit"},"content":"        if (patient \u003d\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"runoutofit"},"content":"            patientViewCard.setText(\"\");","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"runoutofit"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"            patientViewCard.setGraphic(new PatientCard(patient).bindPrefProperty(root).getRoot());","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"runoutofit"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"runoutofit"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"runoutofit"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"runoutofit"},"content":"     * Shows the patientCard window.","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"runoutofit"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"runoutofit"},"content":"    public void show() {","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"runoutofit"},"content":"        getRoot().show();","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"runoutofit"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"runoutofit"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"runoutofit"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"runoutofit"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"runoutofit"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"runoutofit"},"content":"    public boolean isShowing() {","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"runoutofit"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"runoutofit"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"runoutofit"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"runoutofit"},"content":"     * Focuses on the help window.","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"runoutofit"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"runoutofit"},"content":"    public void focus() {","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"runoutofit"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"runoutofit"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"runoutofit"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"zxisatree":1,"runoutofit":52}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"            primaryStage.setMinHeight(650);","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"zxisatree":1,"-":87}},{"path":"src/main/resources/view/AppointmentCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003cHBox id\u003d\"appointmentCardPane\" fx:id\u003d\"appointmentCardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \u003cLabel fx:id\u003d\"patientName\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"            \u003cLabel fx:id\u003d\"timeSlot\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$timeslot\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"            \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"            \u003cLabel fx:id\u003d\"doctor\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$doctor\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"zxisatree":3,"Jayanth-Balasubramanian":31}},{"path":"src/main/resources/view/AppointmentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"    \u003cLabel fx:id\u003d\"patientListLabel\" styleClass\u003d\"list_label\" text\u003d\"Appointments\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    \u003cListView fx:id\u003d\"appointmentListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"zxisatree":2,"Jayanth-Balasubramanian":8}},{"path":"src/main/resources/view/CalendarCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8.0.121\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        \u003cStackPane fx:id\u003d\"calendarPane\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"Jayanth-Balasubramanian":9}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"zxisatree"},"content":".view-card {","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"zxisatree"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"zxisatree"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"zxisatree"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"zxisatree"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"zxisatree"},"content":".view-card:filled:even {","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"zxisatree"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"zxisatree"},"content":".view-card:filled:odd {","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"zxisatree"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"zxisatree"},"content":".view-card:filled:selected {","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"zxisatree"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"zxisatree"},"content":".view-card:filled:selected #cardPane {","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"zxisatree"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"zxisatree"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"zxisatree"},"content":".view-card .label {","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"zxisatree"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":316,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":338,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":380,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":381,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":382,"author":{"gitId":"zxisatree"},"content":".list_label {","lastModifiedDate":"2023-03-31"},{"lineNumber":383,"author":{"gitId":"zxisatree"},"content":"    -fx-font-size: 32;","lastModifiedDate":"2023-03-31"},{"lineNumber":384,"author":{"gitId":"zxisatree"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-31"},{"lineNumber":385,"author":{"gitId":"zxisatree"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2023-03-31"},{"lineNumber":386,"author":{"gitId":"zxisatree"},"content":"    -fx-max-width: 1000px;","lastModifiedDate":"2023-03-31"},{"lineNumber":387,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"zxisatree":35,"-":352}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"         title\u003d\"MediMeet\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            \u003cVBox fx:id\u003d\"patientList\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"              \u003cStackPane fx:id\u003d\"patientListPanelPlaceholder\" HBox.hgrow\u003d\"SOMETIMES\"/\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            \u003cVBox HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                  \u003cStackPane fx:id\u003d\"calendarPlaceholder\" VBox.vgrow\u003d\"SOMETIMES\"/\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \u003cVBox fx:id\u003d\"appointmentList\" styleClass\u003d\"pane-with-border\"  minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                    \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                  \u003cStackPane fx:id\u003d\"appointmentListPanelPlaceholder\" VBox.vgrow\u003d\"SOMETIMES\"/\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":65,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"              \u003c/children\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"zxisatree":1,"Jayanth-Balasubramanian":19,"-":56}},{"path":"src/main/resources/view/PatientCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zxisatree":4,"-":33}},{"path":"src/main/resources/view/PatientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"    \u003cLabel fx:id\u003d\"patientListLabel\" styleClass\u003d\"list_label\" text\u003d\"Patients\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    \u003cListView fx:id\u003d\"patientListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zxisatree":2,"Jayanth-Balasubramanian":1,"-":7}},{"path":"src/main/resources/view/PatientViewCard.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"runoutofit"},"content":"#patientViewCard {","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"runoutofit"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"runoutofit"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"runoutofit"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"runoutofit"},"content":"#patientContainer {","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"runoutofit"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"runoutofit"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"runoutofit":8}},{"path":"src/main/resources/view/PatientViewCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"runoutofit"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"runoutofit"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"runoutofit"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"runoutofit"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"runoutofit"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"runoutofit"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"runoutofit"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"runoutofit"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"runoutofit"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"runoutofit"},"content":"\u003cfx:root resizable\u003d\"true\" title\u003d\"View\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"runoutofit"},"content":"    \u003cscene\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"runoutofit"},"content":"        \u003cScene\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"            \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"patientContainer\" styleClass\u003d\"view-card\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"runoutofit"},"content":"                \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"runoutofit"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"                    \u003cLabel fx:id\u003d\"patientViewCard\" wrapText\u003d\"true\" textOverrun\u003d\"CLIP\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"runoutofit"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"runoutofit"},"content":"                            \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"runoutofit"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"runoutofit"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"runoutofit"},"content":"                \u003c/children\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"runoutofit"},"content":"                \u003c/GridPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"runoutofit"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"runoutofit"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"runoutofit"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"runoutofit"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"runoutofit"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"runoutofit"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"runoutofit"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"runoutofit"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"runoutofit"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"runoutofit"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"zxisatree":6,"runoutofit":31}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyAppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyPatientList;","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"import seedu.address.storage.JsonAppointmentListStorage;","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"        JsonAppointmentListStorage appointmentListStorage \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"            new JsonAppointmentListStorage(temporaryFolder.resolve(\"appointmentList.json\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, appointmentListStorage, userPrefsStorage);","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"        String deleteCommand \u003d DeleteCommand.COMMAND_WORD + \" 9\";","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"zxisatree"},"content":"        JsonAppointmentListStorage appointmentListStorage \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"zxisatree"},"content":"            new JsonAppointmentListIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAppointmentList.json\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":85,"author":{"gitId":"zxisatree"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, appointmentListStorage, userPrefsStorage);","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient expectedPatient \u003d new PatientBuilder(AMY).withTags().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        expectedModel.addPatient(expectedPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void getFilteredPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPatientList().remove(0));","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"zxisatree"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getAppointmentList(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"zxisatree"},"content":"        public void saveAddressBook(ReadOnlyPatientList addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":170,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":171,"author":{"gitId":"zxisatree"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2023-03-19"},{"lineNumber":172,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":173,"author":{"gitId":"zxisatree"},"content":"    private static class JsonAppointmentListIoExceptionThrowingStub extends JsonAppointmentListStorage {","lastModifiedDate":"2023-03-19"},{"lineNumber":174,"author":{"gitId":"zxisatree"},"content":"        private JsonAppointmentListIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-03-19"},{"lineNumber":175,"author":{"gitId":"zxisatree"},"content":"            super(filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":176,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":177,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":178,"author":{"gitId":"zxisatree"},"content":"        @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":179,"author":{"gitId":"zxisatree"},"content":"        public void saveAppointmentList(ReadOnlyAppointmentList appointmentList, Path filePath) throws IOException {","lastModifiedDate":"2023-03-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2023-03-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"zxisatree":24,"Jayanth-Balasubramanian":9,"-":150}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalAppointmentList(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void execute_newPatient_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getAppointmentList(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        expectedModel.addPatient(validPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertCommandSuccess(new AddCommand(validPatient), model,","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPatient), expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void execute_duplicatePatient_throwsCommandException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient patientInList \u003d model.getAddressBook().getPatientList().get(0);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertCommandFailure(new AddCommand(patientInList), model, AddCommand.MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"zxisatree":3,"Jayanth-Balasubramanian":11,"-":32}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.ReadOnlyAppointmentList;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyPatientList;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void constructor_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void execute_patientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        ModelStubAcceptingPatientAdded modelStub \u003d new ModelStubAcceptingPatientAdded();","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        CommandResult commandResult \u003d new AddCommand(validPatient).execute(modelStub);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPatient), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(Arrays.asList(validPatient), modelStub.patientsAdded);","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void execute_duplicatePatient_throwsCommandException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        AddCommand addCommand \u003d new AddCommand(validPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        ModelStub modelStub \u003d new ModelStubWithPatient(validPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PATIENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient alice \u003d new PatientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient bob \u003d new PatientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public Path getAppointmentListPath() {","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public void setAppointmentListPath(Path appointmentListPath) {","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public void addPatient(Patient patient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"zxisatree"},"content":"        public void setAddressBook(ReadOnlyPatientList newData) {","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"zxisatree"},"content":"        public ReadOnlyPatientList getAddressBook() {","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"redHat-arko"},"content":"        public boolean hasPatientName(Name patientName) {","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public void deletePatient(Patient target) {","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":169,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":170,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public void setAppointmentList(ReadOnlyAppointmentList appointmentList) {","lastModifiedDate":"2023-03-16"},{"lineNumber":171,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":172,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":173,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":174,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":175,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public ReadOnlyAppointmentList getAppointmentList() {","lastModifiedDate":"2023-03-16"},{"lineNumber":176,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":177,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":178,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":179,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":180,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-16"},{"lineNumber":181,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":182,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":183,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":184,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":185,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-16"},{"lineNumber":186,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":187,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":188,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":189,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":190,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-16"},{"lineNumber":191,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":192,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":193,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":194,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":195,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-03-16"},{"lineNumber":196,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":197,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":198,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":199,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":200,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-03-16"},{"lineNumber":201,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":202,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":203,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":204,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":205,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2023-03-16"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * A Model stub that contains a single patient.","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private class ModelStubWithPatient extends ModelStub {","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        private final Patient patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        ModelStubWithPatient(Patient patient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":217,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            this.patient \u003d patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":224,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return this.patient.isSamePatient(patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * A Model stub that always accept the patient being added.","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private class ModelStubAcceptingPatientAdded extends ModelStub {","lastModifiedDate":"2023-03-08"},{"lineNumber":232,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        final ArrayList\u003cPatient\u003e patientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return patientsAdded.stream().anyMatch(patient::isSamePatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public void addPatient(Patient patient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":242,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":243,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            patientsAdded.add(patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"zxisatree"},"content":"        public ReadOnlyPatientList getAddressBook() {","lastModifiedDate":"2023-03-17"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"zxisatree":4,"redHat-arko":2,"Jayanth-Balasubramanian":83,"-":163}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalAppointmentList(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalAppointmentList(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"zxisatree":3,"Jayanth-Balasubramanian":1,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"runoutofit"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false, 0)));","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"runoutofit"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false, 0)));","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"runoutofit"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false, 0)));","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"runoutofit"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false, 0).hashCode());","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"runoutofit"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false, 0).hashCode());","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"runoutofit":5,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"redHat-arko"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Amy is a teacher.\";","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"redHat-arko"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Bob builds.\";","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final EditCommand.EditPatientDescriptor DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final EditCommand.EditPatientDescriptor DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        DESC_AMY \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        DESC_BOB \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * - the address book, filtered patient list and selected patient in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        List\u003cPatient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPatientList());","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPatientList());","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":117,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Updates {@code model}\u0027s filtered list to show only the patient at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static void showPatientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPatientList().size());","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient patient \u003d model.getFilteredPatientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        final String[] splitName \u003d patient.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        model.updateFilteredPatientList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(1, model.getFilteredPatientList().size());","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"redHat-arko":2,"Jayanth-Balasubramanian":17,"-":111}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalAppointmentList(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient patientToDelete \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete);","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"        ModelManager expectedModel \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"            new ModelManager(model.getAddressBook(), model.getAppointmentList(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        expectedModel.deletePatient(patientToDelete);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient patientToDelete \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete);","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"zxisatree"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getAppointmentList(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        expectedModel.deletePatient(patientToDelete);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        showNoPatient(expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPatientList().size());","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PATIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private void showNoPatient(Model model) {","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        model.updateFilteredPatientList(p -\u003e false);","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertTrue(model.getFilteredPatientList().isEmpty());","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"zxisatree":5,"Jayanth-Balasubramanian":28,"-":78}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.AppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalAppointmentList(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"        String patientName \u003d model.getFilteredPatientList().get(0).getName().fullName;","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"        Patient editedPatient \u003d new PatientBuilder().withName(patientName).build();","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(editedPatient).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PATIENT, descriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"            new ModelManager(new AddressBook(model.getAddressBook()), new AppointmentList(model.getAppointmentList()),","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        expectedModel.setPatient(model.getFilteredPatientList().get(0), editedPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Index indexLastPatient \u003d Index.fromOneBased(model.getFilteredPatientList().size());","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient lastPatient \u003d model.getFilteredPatientList().get(indexLastPatient.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        PatientBuilder patientInList \u003d new PatientBuilder(lastPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"        Patient editedPatient \u003d patientInList.withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"        EditCommand.EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder()","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPatient, descriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"zxisatree"},"content":"            new ModelManager(new AddressBook(model.getAddressBook()), new AppointmentList(model.getAppointmentList()),","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"zxisatree"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        expectedModel.setPatient(lastPatient, editedPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PATIENT, new EditCommand.EditPatientDescriptor());","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient editedPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"zxisatree"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"zxisatree"},"content":"            new ModelManager(new AddressBook(model.getAddressBook()), new AppointmentList(model.getAppointmentList()),","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"zxisatree"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient patientInFilteredList \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"zxisatree"},"content":"        Patient editedPatient \u003d new PatientBuilder(patientInFilteredList).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"zxisatree"},"content":"            new EditPatientDescriptorBuilder().withAddress(VALID_ADDRESS_BOB).build());","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS, editedPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"zxisatree"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"zxisatree"},"content":"            new ModelManager(new AddressBook(model.getAddressBook()), new AppointmentList(model.getAppointmentList()),","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"zxisatree"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        expectedModel.setPatient(model.getFilteredPatientList().get(0), editedPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void execute_invalidPatientIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        EditCommand.EditPatientDescriptor descriptor \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void execute_invalidPatientIndexFilteredList_failure() {","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPatientList().size());","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PATIENT, DESC_AMY);","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        EditCommand.EditPatientDescriptor copyDescriptor \u003d new EditPatientDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PATIENT, copyDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PATIENT, DESC_AMY)));","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PATIENT, DESC_BOB)));","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"zxisatree":22,"Jayanth-Balasubramanian":42,"-":101}},{"path":"src/test/java/seedu/address/logic/commands/EditPatientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class EditPatientDescriptorTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        EditPatientDescriptor descriptorWithSameValues \u003d new EditPatientDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"        EditPatientDescriptor editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"zxisatree":1,"Jayanth-Balasubramanian":7,"-":45}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"runoutofit"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false, 0);","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"runoutofit":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.CARL;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.ELLE;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.FIONA;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalAppointmentList(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"    private Model expectedModel \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"        new ModelManager(getTypicalAddressBook(), getTypicalAppointmentList(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void execute_zeroKeywords_noPatientFound() {","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PATIENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        expectedModel.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPatientList());","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void execute_multipleKeywords_multiplePatientsFound() {","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PATIENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        expectedModel.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPatientList());","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"zxisatree":4,"Jayanth-Balasubramanian":15,"-":66}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"runoutofit"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, 0);","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"runoutofit":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalAppointmentList(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getAppointmentList(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"zxisatree":3,"Jayanth-Balasubramanian":4,"-":33}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"redHat-arko"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"redHat-arko"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"redHat-arko"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"redHat-arko"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.AppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"redHat-arko"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"redHat-arko"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"redHat-arko"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"redHat-arko"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"redHat-arko"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalAppointmentList(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"redHat-arko"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"redHat-arko"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"redHat-arko"},"content":"        Patient firstPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"redHat-arko"},"content":"        Patient editedPatient \u003d new PatientBuilder(firstPatient).withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"redHat-arko"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"redHat-arko"},"content":"            new Remark(editedPatient.getRemark().value));","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"redHat-arko"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPatient);","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"            new ModelManager(new AddressBook(model.getAddressBook()), new AppointmentList(model.getAppointmentList()),","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"redHat-arko"},"content":"        expectedModel.setPatient(firstPatient, editedPatient);","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"redHat-arko"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"redHat-arko"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"redHat-arko"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"redHat-arko"},"content":"        Patient firstPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"redHat-arko"},"content":"        Patient editedPatient \u003d new PatientBuilder(firstPatient).withRemark(\"\").build();","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"redHat-arko"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"redHat-arko"},"content":"            new Remark(editedPatient.getRemark().toString()));","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"redHat-arko"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, editedPatient);","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"            new ModelManager(new AddressBook(model.getAddressBook()), new AppointmentList(model.getAppointmentList()),","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"redHat-arko"},"content":"        expectedModel.setPatient(firstPatient, editedPatient);","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"redHat-arko"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"redHat-arko"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"redHat-arko"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"redHat-arko"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"redHat-arko"},"content":"        Patient firstPatient \u003d model.getFilteredPatientList().get(INDEX_FIRST_PATIENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"redHat-arko"},"content":"        Patient editedPatient \u003d new PatientBuilder(model.getFilteredPatientList().get(","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"redHat-arko"},"content":"            INDEX_FIRST_PATIENT.getZeroBased())).withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"redHat-arko"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"redHat-arko"},"content":"            new Remark(editedPatient.getRemark().value));","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"redHat-arko"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPatient);","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"zxisatree"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"zxisatree"},"content":"            new ModelManager(new AddressBook(model.getAddressBook()), new AppointmentList(model.getAppointmentList()),","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"zxisatree"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"redHat-arko"},"content":"        expectedModel.setPatient(firstPatient, editedPatient);","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"redHat-arko"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"redHat-arko"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"redHat-arko"},"content":"    public void execute_invalidPatientIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"redHat-arko"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPatientList().size() + 1);","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"redHat-arko"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"redHat-arko"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"redHat-arko"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"redHat-arko"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"redHat-arko"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"redHat-arko"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"redHat-arko"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"redHat-arko"},"content":"    public void execute_invalidPatientIndexFilteredList_failure() {","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"redHat-arko"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"redHat-arko"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"redHat-arko"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"redHat-arko"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPatientList().size());","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"redHat-arko"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"redHat-arko"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"redHat-arko"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"redHat-arko"},"content":"    public void equals() {","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"redHat-arko"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"redHat-arko"},"content":"            new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"redHat-arko"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"redHat-arko"},"content":"        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"redHat-arko"},"content":"            new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"redHat-arko"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"redHat-arko"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"redHat-arko"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"redHat-arko"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"redHat-arko"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"redHat-arko"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"redHat-arko"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"redHat-arko"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"redHat-arko"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_PATIENT,","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"redHat-arko"},"content":"            new Remark(VALID_REMARK_AMY))));","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"redHat-arko"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"redHat-arko"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_FIRST_PATIENT,","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"redHat-arko"},"content":"            new Remark(VALID_REMARK_BOB))));","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"redHat-arko"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"redHat-arko":133,"zxisatree":12}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"        Patient expectedPatient \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"            new PatientBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"runoutofit"},"content":"            + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPatient));","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPatient));","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"runoutofit"},"content":"            + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPatient));","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"runoutofit"},"content":"            + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPatient));","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"zxisatree"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"runoutofit"},"content":"            + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPatient));","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"zxisatree"},"content":"        Patient expectedPatientMultipleTags \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"zxisatree"},"content":"            new PatientBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":78,"author":{"gitId":"zxisatree"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"runoutofit"},"content":"            + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPatientMultipleTags));","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient expectedPatient \u003d new PatientBuilder(AMY).withTags().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"zxisatree"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"runoutofit"},"content":"            + EMAIL_DESC_AMY + ADDRESS_DESC_AMY, new AddCommand(expectedPatient));","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"zxisatree"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"runoutofit"},"content":"            + EMAIL_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"zxisatree"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"runoutofit"},"content":"            + EMAIL_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"zxisatree"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"runoutofit"},"content":"            + VALID_EMAIL_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"zxisatree"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"runoutofit"},"content":"            + EMAIL_DESC_BOB + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"zxisatree"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"runoutofit"},"content":"            + VALID_EMAIL_BOB + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"zxisatree"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"runoutofit"},"content":"            + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"zxisatree"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"runoutofit"},"content":"            + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"zxisatree"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"runoutofit"},"content":"            + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"zxisatree"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"runoutofit"},"content":"            + INVALID_ADDRESS_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"zxisatree"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"runoutofit"},"content":"            + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"zxisatree"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"runoutofit"},"content":"            + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"zxisatree"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"runoutofit"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"zxisatree":22,"Jayanth-Balasubramanian":14,"runoutofit":18,"-":93}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.testutil.PatientUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PatientUtil.getAddCommand(patient));","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(new AddCommand(patient), command);","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PATIENT.getOneBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PATIENT), command);","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(patient).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                + INDEX_FIRST_PATIENT.getOneBased() + \" \" + PatientUtil.getEditPatientDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PATIENT, descriptor), command);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":16,"-":85}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PATIENT));","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Jayanth-Balasubramanian":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Patient} being edited,","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"zxisatree"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"zxisatree"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Index targetIndex \u003d INDEX_SECOND_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":109,"author":{"gitId":"zxisatree"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"zxisatree"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder()","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        EditCommand.EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Index targetIndex \u003d INDEX_THIRD_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"zxisatree"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"zxisatree"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":161,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        EditCommand.EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Index targetIndex \u003d INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        EditCommand.EditPatientDescriptor descriptor \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":195,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Index targetIndex \u003d INDEX_THIRD_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"zxisatree":6,"Jayanth-Balasubramanian":24,"-":173}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Jayanth-Balasubramanian":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(INDEX_FIRST_PATIENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(INDEX_FIRST_PATIENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Jayanth-Balasubramanian":7,"-":189}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.exceptions.DuplicatePatientException;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPatientList());","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void resetData_withDuplicatePatients_throwsDuplicatePatientException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        // Two patients with the same identity fields","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        List\u003cPatient\u003e newPatients \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPatients);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(DuplicatePatientException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void hasPatient_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPatient(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void hasPatient_patientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertFalse(addressBook.hasPatient(ALICE));","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void hasPatient_patientInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        addressBook.addPatient(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertTrue(addressBook.hasPatient(ALICE));","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void hasPatient_patientWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        addressBook.addPatient(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertTrue(addressBook.hasPatient(editedAlice));","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void getPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPatientList().remove(0));","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * A stub ReadOnlyAddressBook whose patients list can violate interface constraints.","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"zxisatree"},"content":"    private static class AddressBookStub implements ReadOnlyPatientList {","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        private final ObservableList\u003cPatient\u003e patients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        AddressBookStub(Collection\u003cPatient\u003e patients) {","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            this.patients.setAll(patients);","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return patients;","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"zxisatree":1,"Jayanth-Balasubramanian":31,"-":70}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.testutil.TypicalAppointments.FIRST_APPOINTMENT;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"import seedu.address.testutil.AppointmentListBuilder;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void hasPatient_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPatient(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void hasPatient_patientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertFalse(modelManager.hasPatient(ALICE));","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void hasPatient_patientInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        modelManager.addPatient(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertTrue(modelManager.hasPatient(ALICE));","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void getFilteredPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPatientList().remove(0));","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPatient(ALICE).withPatient(BENSON).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"zxisatree"},"content":"        AppointmentList appointmentList \u003d new AppointmentListBuilder().withAppointment(FIRST_APPOINTMENT).build();","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"zxisatree"},"content":"        AppointmentList differentAppointmentList \u003d new AppointmentList();","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"zxisatree"},"content":"        modelManager \u003d new ModelManager(addressBook, appointmentList, userPrefs);","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"zxisatree"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, appointmentList, userPrefs);","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"zxisatree"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, differentAppointmentList, userPrefs)));","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":125,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        modelManager.updateFilteredPatientList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"zxisatree"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, appointmentList, userPrefs)));","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        modelManager.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":134,"author":{"gitId":"zxisatree"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, appointmentList, differentUserPrefs)));","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"zxisatree":9,"Jayanth-Balasubramanian":16,"-":111}},{"path":"src/test/java/seedu/address/model/appointment/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"public class DescriptionTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"zxisatree":18}},{"path":"src/test/java/seedu/address/model/appointment/TimeslotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"public class TimeslotTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Timeslot(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"        String invalidTimeslot \u003d \"\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Timeslot(invalidTimeslot));","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"zxisatree":18}},{"path":"src/test/java/seedu/address/model/patient/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Jayanth-Balasubramanian":1,"-":35}},{"path":"src/test/java/seedu/address/model/patient/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Jayanth-Balasubramanian":1,"-":67}},{"path":"src/test/java/seedu/address/model/patient/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Jayanth-Balasubramanian":9,"-":61}},{"path":"src/test/java/seedu/address/model/patient/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Jayanth-Balasubramanian":1,"-":39}},{"path":"src/test/java/seedu/address/model/patient/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class PatientTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e patient.getTags().remove(0));","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void isSamePatient() {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertTrue(ALICE.isSamePatient(ALICE));","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertFalse(ALICE.isSamePatient(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertTrue(ALICE.isSamePatient(editedAlice));","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertFalse(ALICE.isSamePatient(editedAlice));","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient editedBob \u003d new PatientBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertFalse(BOB.isSamePatient(editedBob));","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        editedBob \u003d new PatientBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertFalse(BOB.isSamePatient(editedBob));","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient aliceCopy \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Jayanth-Balasubramanian":25,"-":66}},{"path":"src/test/java/seedu/address/model/patient/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"Jayanth-Balasubramanian":1,"-":39}},{"path":"src/test/java/seedu/address/model/patient/UniquePatientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.exceptions.DuplicatePatientException;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.exceptions.PatientNotFoundException;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class UniquePatientListTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final UniquePatientList uniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void contains_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.contains(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void contains_patientNotInList_returnsFalse() {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertFalse(uniquePatientList.contains(ALICE));","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void contains_patientInList_returnsTrue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertTrue(uniquePatientList.contains(ALICE));","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void contains_patientWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertTrue(uniquePatientList.contains(editedAlice));","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void add_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.add(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void add_duplicatePatient_throwsDuplicatePatientException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(DuplicatePatientException.class, () -\u003e uniquePatientList.add(ALICE));","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setPatient_nullTargetPatient_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setPatient(null, ALICE));","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setPatient_nullEditedPatient_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setPatient(ALICE, null));","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setPatient_targetPatientNotInList_throwsPatientNotFoundException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(PatientNotFoundException.class, () -\u003e uniquePatientList.setPatient(ALICE, ALICE));","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setPatient_editedPatientIsSamePatient_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        uniquePatientList.setPatient(ALICE, ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        expectedUniquePatientList.add(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setPatient_editedPatientHasSameIdentity_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                .build();","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        uniquePatientList.setPatient(ALICE, editedAlice);","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        expectedUniquePatientList.add(editedAlice);","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setPatient_editedPatientHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        uniquePatientList.setPatient(ALICE, BOB);","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        expectedUniquePatientList.add(BOB);","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setPatient_editedPatientHasNonUniqueIdentity_throwsDuplicatePatientException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        uniquePatientList.add(BOB);","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(DuplicatePatientException.class, () -\u003e uniquePatientList.setPatient(ALICE, BOB));","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void remove_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.remove(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void remove_patientDoesNotExist_throwsPatientNotFoundException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(PatientNotFoundException.class, () -\u003e uniquePatientList.remove(ALICE));","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void remove_existingPatient_removesPatient() {","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        uniquePatientList.remove(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setPatients_nullUniquePatientList_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setPatients((UniquePatientList) null));","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setPatients_uniquePatientList_replacesOwnListWithProvidedUniquePatientList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        expectedUniquePatientList.add(BOB);","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        uniquePatientList.setPatients(expectedUniquePatientList);","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setPatients_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setPatients((List\u003cPatient\u003e) null));","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setPatients_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        List\u003cPatient\u003e patientList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        uniquePatientList.setPatients(patientList);","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        expectedUniquePatientList.add(BOB);","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setPatients_listWithDuplicatePatients_throwsDuplicatePatientException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        List\u003cPatient\u003e listWithDuplicatePatients \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(DuplicatePatientException.class, () -\u003e uniquePatientList.setPatients(listWithDuplicatePatients));","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            -\u003e uniquePatientList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"Jayanth-Balasubramanian":170}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.storage.JsonAdaptedPatient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class JsonAdaptedPatientTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"redHat-arko"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void toModelType_validPatientDetails_returnsPatient() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(BENSON);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(BENSON, patient.toModelType());","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"                new JsonAdaptedPatient(INVALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"runoutofit"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_REMARK,","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"redHat-arko"},"content":"                        VALID_TAGS);","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(null,","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"runoutofit"},"content":"             VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"redHat-arko"},"content":"                VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"                new JsonAdaptedPatient(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"redHat-arko"},"content":"                        VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"zxisatree"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"runoutofit"},"content":"            VALID_ADDRESS,","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"redHat-arko"},"content":"                VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"zxisatree"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"redHat-arko"},"content":"                        VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"zxisatree"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"runoutofit"},"content":"                null, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"zxisatree"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"redHat-arko"},"content":"                        VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"zxisatree"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"redHat-arko"},"content":"                VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"zxisatree"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"redHat-arko"},"content":"                        VALID_REMARK, invalidTags);","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(IllegalValueException.class, patient::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"redHat-arko":9,"zxisatree":9,"Jayanth-Balasubramanian":24,"runoutofit":4,"-":77}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.HOON;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.IDA;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyPatientList;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"    private java.util.Optional\u003cReadOnlyPatientList\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void readAddressBook_invalidPatientAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPatientAddressBook.json\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void readAddressBook_invalidAndValidPatientAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPatientAddressBook.json\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"zxisatree"},"content":"        ReadOnlyPatientList readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        original.addPatient(HOON);","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        original.removePatient(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        original.addPatient(IDA);","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"zxisatree"},"content":"    private void saveAddressBook(ReadOnlyPatientList addressBook, String filePath) {","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zxisatree":4,"Jayanth-Balasubramanian":11,"-":95}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.testutil.TypicalPatients;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final Path TYPICAL_PATIENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPatientsAddressBook.json\");","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final Path INVALID_PATIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPatientAddressBook.json\");","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final Path DUPLICATE_PATIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePatientAddressBook.json\");","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void toModelType_typicalPatientsFile_success() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PATIENTS_FILE,","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        AddressBook typicalPatientsAddressBook \u003d TypicalPatients.getTypicalAddressBook();","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(addressBookFromFile, typicalPatientsAddressBook);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void toModelType_invalidPatientFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PATIENT_FILE,","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void toModelType_duplicatePatients_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PATIENT_FILE,","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PATIENT,","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Jayanth-Balasubramanian":13,"-":34}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.ReadOnlyPatientList;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"        JsonAppointmentListStorage appointmentListStorage \u003d new JsonAppointmentListStorage(getTempFilePath(\"al\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, appointmentListStorage, userPrefsStorage);","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"        ReadOnlyPatientList retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zxisatree":4,"Jayanth-Balasubramanian":1,"-":64}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPatient(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Adds a new {@code Patient} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public AddressBookBuilder withPatient(Patient patient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        addressBook.addPatient(patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jayanth-Balasubramanian":5,"-":29}},{"path":"src/test/java/seedu/address/testutil/AppointmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Description;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.appointment.Doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Timeslot;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":" * A utility class to help with building Appointment objects.","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"public class AppointmentBuilder {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"redHat-arko"},"content":"    public static final String DEFAULT_NAME \u003d \"Alex Yeoh\";","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"    public static final String DEFAULT_TIMESLOT \u003d \"01012023 00:00,01012023 01:00\";","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Regular checkup\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"    public static final String DEFAULT_APPOINTMENT_ID \u003d \"1\";","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"redHat-arko"},"content":"    public static final String DEFAULT_DOCTOR \u003d \"Xiao Lu\";","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"redHat-arko"},"content":"    private Name patientName;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"    private Timeslot timeslot;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"    private Description description;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"redHat-arko"},"content":"    private Doctor doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"     * Creates a {@code AppointmentBuilder} with the default details.","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"    public AppointmentBuilder() {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"        timeslot \u003d new Timeslot(DEFAULT_TIMESLOT);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"redHat-arko"},"content":"        patientName \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"redHat-arko"},"content":"        doctor \u003d new Doctor(DEFAULT_DOCTOR);","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"     * Sets the {@code Timeslot} of the {@code Appointment} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"    public AppointmentBuilder withTimeslot(String timeslot) {","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"        this.timeslot \u003d new Timeslot(timeslot);","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"        return this;","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"     * Sets the {@code Description} of the {@code Appointment} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"zxisatree"},"content":"    public AppointmentBuilder withDescription(String description) {","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"        return this;","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"redHat-arko"},"content":"     * Sets the {@code Name} of the {@code Appointment} that we are building.","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"redHat-arko"},"content":"    public AppointmentBuilder withPatientName(String patientName) {","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"redHat-arko"},"content":"        this.patientName \u003d new Name(patientName);","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"        return this;","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"redHat-arko"},"content":"     * Parses the {@code doctor} of the {@code Appointment} that we are building.","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"redHat-arko"},"content":"    public AppointmentBuilder withDoctor(String doctor) {","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"redHat-arko"},"content":"        this.doctor \u003d new Doctor(doctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"zxisatree"},"content":"        return this;","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"zxisatree"},"content":"    public Appointment build() {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"        return new Appointment(patientName, timeslot, description, doctor);","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"zxisatree":55,"redHat-arko":14}},{"path":"src/test/java/seedu/address/testutil/AppointmentListBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.AppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":" * A utility class to help with building AppointmentList objects.","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":" *     {@code AppointmentList al \u003d new AppointmentListBuilder().withAppointment().build();}","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":"public class AppointmentListBuilder {","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"    private AppointmentList appointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"zxisatree"},"content":"    public AppointmentListBuilder() {","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"zxisatree"},"content":"        appointmentList \u003d new AppointmentList();","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"zxisatree"},"content":"    public AppointmentListBuilder(AppointmentList appointmentList) {","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"        this.appointmentList \u003d appointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"     * Adds a new {@code Appointment} to the {@code AppointmentList} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"    public AppointmentListBuilder withAppointment(Appointment appointment) {","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"        appointmentList.addAppointment(appointment);","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"        return this;","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"    public AppointmentList build() {","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"        return appointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"zxisatree":34}},{"path":"src/test/java/seedu/address/testutil/EditPatientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A utility class to help with building EditPatientDescriptor objects.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class EditPatientDescriptorBuilder {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"redHat-arko"},"content":"    private EditPatientDescriptor descriptor;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public EditPatientDescriptorBuilder() {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"redHat-arko"},"content":"        descriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public EditPatientDescriptorBuilder(EditPatientDescriptor descriptor) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.descriptor \u003d new EditPatientDescriptor(descriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns an {@code EditPatientDescriptor} with fields containing {@code patient}\u0027s details","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public EditPatientDescriptorBuilder(Patient patient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"redHat-arko"},"content":"        descriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        descriptor.setPhone(patient.getPhone());","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        descriptor.setEmail(patient.getEmail());","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        descriptor.setAddress(patient.getAddress());","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"redHat-arko"},"content":"        descriptor.setRemark(patient.getRemark());","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        descriptor.setTags(patient.getTags());","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Sets the {@code Name} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"     * Should not be called since edit commands cannot edit names of patients.","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public EditPatientDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Sets the {@code Phone} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public EditPatientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Sets the {@code Email} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public EditPatientDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Sets the {@code Address} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public EditPatientDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"redHat-arko"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"redHat-arko"},"content":"     * Sets the {@code Remark} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"redHat-arko"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"redHat-arko"},"content":"    public EditPatientDescriptorBuilder withRemark(String remark) {","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"redHat-arko"},"content":"        descriptor.setRemark(new Remark(remark));","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"redHat-arko"},"content":"        return this;","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPatientDescriptor}","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public EditPatientDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"redHat-arko"},"content":"    public EditPatientDescriptor build() {","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return descriptor;","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"redHat-arko":14,"zxisatree":1,"Jayanth-Balasubramanian":80}},{"path":"src/test/java/seedu/address/testutil/PatientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"redHat-arko"},"content":"import seedu.address.model.patient.Remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A utility class to help with building Patient objects.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class PatientBuilder {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"    public static final String DEFAULT_ID \u003d \"1\";","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"redHat-arko"},"content":"    public static final String DEFAULT_REMARK \u003d \"\";","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Name name;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Phone phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Email email;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Address address;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"redHat-arko"},"content":"    private Remark remark;","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Creates a {@code PatientBuilder} with the default details.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public PatientBuilder() {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"redHat-arko"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Initializes the PatientBuilder with the data of {@code patientToCopy}.","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public PatientBuilder(Patient patientToCopy) {","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        name \u003d patientToCopy.getName();","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        phone \u003d patientToCopy.getPhone();","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        email \u003d patientToCopy.getEmail();","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        address \u003d patientToCopy.getAddress();","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"redHat-arko"},"content":"        remark \u003d patientToCopy.getRemark();","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        tags \u003d new HashSet\u003c\u003e(patientToCopy.getTags());","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Sets the {@code Name} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public PatientBuilder withName(String name) {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Patient} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public PatientBuilder withTags(String ... tags) {","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Sets the {@code Address} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public PatientBuilder withAddress(String address) {","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Sets the {@code Phone} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public PatientBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Sets the {@code Email} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public PatientBuilder withEmail(String email) {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"redHat-arko"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"redHat-arko"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"redHat-arko"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"redHat-arko"},"content":"    public PatientBuilder withRemark(String remark) {","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"redHat-arko"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"redHat-arko"},"content":"        return this;","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"redHat-arko"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"redHat-arko"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public Patient build() {","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"zxisatree"},"content":"        return new Patient(name, phone, email, address, remark, tags);","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"redHat-arko":13,"zxisatree":2,"Jayanth-Balasubramanian":95}},{"path":"src/test/java/seedu/address/testutil/PatientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"redHat-arko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A utility class for Patient.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class PatientUtil {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns an add command string for adding the {@code patient}.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static String getAddCommand(Patient patient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPatientDetails(patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns the part of command string for the given {@code patient}\u0027s details.","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static String getPatientDetails(Patient patient) {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        sb.append(PREFIX_NAME + patient.getName().fullName + \" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        sb.append(PREFIX_PHONE + patient.getPhone().value + \" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        sb.append(PREFIX_EMAIL + patient.getEmail().value + \" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        sb.append(PREFIX_ADDRESS + patient.getAddress().value + \" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        patient.getTags().stream().forEach(","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns the part of command string for the given {@code EditPatientDescriptor}\u0027s details.","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static String getEditPatientDescriptorDetails(EditPatientDescriptor descriptor) {","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"redHat-arko"},"content":"        descriptor.getRemark().ifPresent(remark -\u003e sb.append(PREFIX_REMARK).append(remark.value).append(\" \"));","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"redHat-arko":2,"Jayanth-Balasubramanian":16,"-":45}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns the middle index of the patient in the {@code model}\u0027s patient list.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return Index.fromOneBased(model.getFilteredPatientList().size() / 2);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns the last index of the patient in the {@code model}\u0027s patient list.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return Index.fromOneBased(model.getFilteredPatientList().size());","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns the patient in the {@code model}\u0027s patient list at {@code index}.","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static Patient getPatient(Model model, Index index) {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return model.getFilteredPatientList().get(index.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jayanth-Balasubramanian":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalAppointments.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zxisatree"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"zxisatree"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"zxisatree"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"zxisatree"},"content":"import java.util.List;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.AppointmentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"zxisatree"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"zxisatree"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"zxisatree"},"content":" * A utility class containing a list of {@code Appointment} objects to be used in tests.","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"zxisatree"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"zxisatree"},"content":"public class TypicalAppointments {","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"zxisatree"},"content":"    public static final Appointment FIRST_APPOINTMENT \u003d new AppointmentBuilder()","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"redHat-arko"},"content":"            .withPatientName(\"Alex Yeoh\").withTimeslot(\"19032023 08:00,19032023 09:00\")","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"redHat-arko"},"content":"            .withDescription(\"First appointment\").withDoctor(\"Xiao Lu\").build();","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"zxisatree"},"content":"    public static final Appointment IMPORTANT_APPOINTMENT \u003d new AppointmentBuilder()","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"redHat-arko"},"content":"            .withPatientName(\"Bernice Yu\").withTimeslot(\"26032023 11:00,26032023 13:00\")","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"redHat-arko"},"content":"            .withDescription(\"This is important!\").withDoctor(\"Sidharth Rajesh\").build();","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"zxisatree"},"content":"    // TODO: Manually added appointments","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"zxisatree"},"content":"    // TODO: Manually added - Appointment\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"zxisatree"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"    private TypicalAppointments() {","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"zxisatree"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"     * Returns an {@code AddressBook} with all the typical patients.","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"    public static AppointmentList getTypicalAppointmentList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"zxisatree"},"content":"        AppointmentList al \u003d new AppointmentList();","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"        for (Appointment appointment : getTypicalAppointments()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"            al.addAppointment(appointment);","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"zxisatree"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"        return al;","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"zxisatree"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"    public static List\u003cAppointment\u003e getTypicalAppointments() {","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(FIRST_APPOINTMENT));","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"zxisatree"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"zxisatree":39,"redHat-arko":4}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final Index INDEX_FIRST_PATIENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final Index INDEX_SECOND_PATIENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final Index INDEX_THIRD_PATIENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Jayanth-Balasubramanian":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalPatients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A utility class containing a list of {@code Patient} objects to be used in tests.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class TypicalPatients {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"zxisatree"},"content":"    public static final Patient ALICE \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"zxisatree"},"content":"        new PatientBuilder().withName(\"Alice Pauline\").withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"zxisatree"},"content":"            .withEmail(\"alice@example.com\").withPhone(\"94351253\").withRemark(\"My name was not Alice.\")","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"zxisatree"},"content":"    public static final Patient BENSON \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"zxisatree"},"content":"        new PatientBuilder().withName(\"Benson Meier\").withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"zxisatree"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withRemark(\"I like rice.\")","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"zxisatree"},"content":"    public static final Patient CARL \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"zxisatree"},"content":"        new PatientBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"zxisatree"},"content":"    public static final Patient DANIEL \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"zxisatree"},"content":"        new PatientBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"zxisatree"},"content":"    public static final Patient ELLE \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"zxisatree"},"content":"        new PatientBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"zxisatree"},"content":"    public static final Patient FIONA \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"zxisatree"},"content":"        new PatientBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"zxisatree"},"content":"    public static final Patient GEORGE \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"zxisatree"},"content":"        new PatientBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":51,"author":{"gitId":"zxisatree"},"content":"    public static final Patient HOON \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"zxisatree"},"content":"        new PatientBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"zxisatree"},"content":"    public static final Patient IDA \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"zxisatree"},"content":"        new PatientBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":58,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    // Manually added - Patient\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final Patient AMY \u003d new PatientBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final Patient BOB \u003d new PatientBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":67,"author":{"gitId":"zxisatree"},"content":"    private TypicalPatients() {","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"zxisatree"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Returns an {@code AddressBook} with all the typical patients.","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        for (Patient patient : getTypicalPatients()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            ab.addPatient(patient);","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":81,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static List\u003cPatient\u003e getTypicalPatients() {","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"zxisatree":22,"Jayanth-Balasubramanian":10,"-":52}}]
