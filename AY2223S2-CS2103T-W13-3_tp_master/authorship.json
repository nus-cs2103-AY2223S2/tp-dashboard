[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W13-3/tp/actions)","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"* This is **Clock-Work**.\u003cbr\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  * as a starting point of a course project (as opposed to writing everything from scratch)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  * as a case study","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* The project builds on an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"* It is now called `Clock-Work`. Clock-Work is a **desktop application for managing tasks, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"* For the detailed documentation of this project, see **[Clock-Work product website](https://ay2223s2-cs2103t-w13-3.github.io/tp/)**.","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lywich":2,"-":10,"joyngjr":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"mainClassName \u003d \u0027seedu.task.Main\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"    archiveFileName \u003d \u0027taskbook.jar\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"run {","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lywich":4,"-":72,"joyngjr":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"### Lee Yu Heng","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"\u003cimg src\u003d\"images/huggenguggen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"[[homepage](https://www.yuhenglee.com)]","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"[[github](https://github.com/Huggenguggen)]","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"[[portfolio](team/huggenguggen.md)]","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"* Role: Developer","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"* Responsibilities: TBC","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"### Ong Chong Yang","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"\u003cimg src\u003d\"images/lywich.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"[[github](http://github.com/lywich)]","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"[[portfolio](team/lywich.md)]","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"* Responsibilities: tbc","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"### Hao Zeyu","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"\u003cimg src\u003d\"images/programmerhao.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"[[github](https://github.com/PROGRAMMERHAO)] [[portfolio](team/programmerhao.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"* Responsibilities: tbc","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"### Joy Ng Jing Ru","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"\u003cimg src\u003d\"images/joyngjr.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"[[github](http://github.com/joyngjr)]","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"[[portfolio](team/joyngjr.md)]","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"* Role: tbc","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"* Responsibilities: tbc","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Huggenguggen":7,"lywich":5,"PROGRAMMERHAO":4,"-":28,"joyngjr":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"  * [1. Introduction](#1-introduction)","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"    * [1.1 Acknowledgements](#11-acknowledgements)","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"    * [1.2 Setting up, getting started](#12-setting-up-getting-started)","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"  * [2. Design](#2-design)","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"    * [2.1 Architecture](#21-architecture)","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"    * [2.2 UI Component](#22-ui-component)","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"    * [2.3 Logic Component](#23-logic-component)","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"    * [2.4 Model Component](#24-model-component)","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"    * [2.5 Storage Component](#25-storage-component)","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"    * [2.6 Common Classes](#26-common-classes)","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"  * [3. Implementation](#3-implementation)","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"    * [3.1 Add Feature](#31-add-feature)","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"      * [3.1.1 Add a subsection](#311-add-a-subsection)","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"      * [3.1.2 Delete a subsection](#312-delete-a-subsection)","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"    * [3.2 Clear Feature](#32-clear-feature)","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"    * [3.3 Delete Feature](#33-delete-feature)","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"    * [3.4 Edit Feature](#34-edit-feature)","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"    * [3.5 Find Feature](#35-find-feature)","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"    * [3.6 List Feature](#36-list-feature)","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"    * [3.7 Help Feature](#37-help-feature)","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"    * [3.8 Stats Feature](#38-stats-feature)","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"    * [3.9 Sort Feature](#39-sort-feature)","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"    * [3.10 Alert Feature](#310-alert-feature)","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"    * [3.11 Schedule Feature](#311-schedule-feature)","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"      * [3.11.1 How it works](#3111-how-it-works) ","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"      * [3.11.2 Generating a new plan](#3112-generating-a-new-plan)","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"    * [3.12 Tag Color Codes](#312-tag-color-codes)","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"  * [4. Documentation, Logging, Testing, Configuration, DevOps](#4-documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"  * [5. Appendix: Requirements](#5-appendix-requirements)","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"  * [6. Appendix: Instructions for manual testing](#6-appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"  * [7. Appendix: Planned Enhancements](#7-appendix-planned-enhancements)","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"    * [7.1 Accommodating long inputs](#71-accommodating-long-inputs)","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * [7.2 Enabling find by subsection](#72-enabling-find-by-subsection)","lastModifiedDate":"2023-04-08"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * [7.3 Enabling edit by subsection](#73-enabling-edit-by-subsection)","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * [7.4 Enabling schedule by subsection](#74-enabling-schedule-by-subsection)","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * [7.5 Enabling sort by subsection](#75-enabling-sort-by-subsection)","lastModifiedDate":"2023-04-08"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * [7.6 Better error messages](#76-better-error-messages)","lastModifiedDate":"2023-04-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"## 1. Introduction","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"This Developer Guide details Clock-Work\u0027s design and implementation details.","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"Clock-Work is a **desktop application for managing tasks, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"It is an application curated for the average Computer Science student, and supports basic commands like `add`, `edit`, `delete`, and advanced commands like `alert`, `schedule`, `find`.","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"By helping Computer Science students plan their time more efficiently, Clock-Work aims to make the busy Computing life a little more manageable.","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"This guide is meant for developers who are interested in Clock-Work, and want to contribute to it.","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"If you are only interested in using the application, do take a look at our [User Guide](UserGuide.md) instead.","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"If you would like to contact the development team, we can be contacted at our [About Us](AboutUs.md).","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"### 1.1 **Acknowledgements**","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"* This project is built from the AddressBook-Level3 project created by the SE-EDU initiative.","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"* Tag\u0027s color code examples courtesy of [Sasha Trubetskoy](https://sashamaps.net/docs/resources/20-colors/).","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"### 1.2 **Setting up, getting started**","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"lywich"},"content":"## 2. **Design**","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"**This section provides an overview of the classes used within Clock-Work. The general interactions between components, and the internal structure of a component is explained here.","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"A good understanding of the content in this section is useful in understanding how the individual features are implements in [3 - Implementation](#3-implementation)**","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S2-CS2103T-W13-3/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"### 2.1 Architecture","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103T-W13-3/tp/blob/master/src/main/java/seedu/task/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103T-W13-3/tp/blob/master/src/main/java/seedu/task/MainApp.java). It is responsible for,","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"lywich"},"content":"[**`Commons`**](#26-common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"lywich"},"content":"* [**`UI`**](#22-ui-component): The UI of the App.","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"lywich"},"content":"* [**`Logic`**](#23-logic-component): The command executor.","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"lywich"},"content":"* [**`Model`**](#24-model-component): Holds the data of the App in memory.","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"lywich"},"content":"* [**`Storage`**](#25-storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"lywich"},"content":"### 2.2 UI component","lastModifiedDate":"2023-03-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"lywich"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103T-W13-3/tp/blob/master/src/main/java/seedu/task/ui/Ui.java)","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"lywich"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `TaskListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"joyngjr"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of [`MainWindow`](https://github.com/AY2223S2-CS2103T-W13-3/tp/blob/master/src/main/java/seedu/task/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103T-W13-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-04-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"lywich"},"content":"* depends on some classes in the `Model` component, as it displays `Task` object residing in the `Model`.","lastModifiedDate":"2023-02-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"lywich"},"content":"### 2.3 Logic component","lastModifiedDate":"2023-03-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"lywich"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103T-W13-3/tp/blob/master/src/main/java/seedu/task/logic/Logic.java)","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"joyngjr"},"content":"1. When `Logic` is called upon to execute a command, it uses the `TaskBookParser` class to parse the user command.","lastModifiedDate":"2023-03-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"lywich"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a task).","lastModifiedDate":"2023-02-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"lywich"},"content":"* When called upon to parse a user command, the `TaskBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `TaskBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"joyngjr"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-04-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"lywich"},"content":"### 2.4 Model component","lastModifiedDate":"2023-03-21"},{"lineNumber":169,"author":{"gitId":"lywich"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103T-W13-3/tp/blob/master/src/main/java/seedu/task/model/Model.java)","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"lywich"},"content":"* stores the task book data i.e., all `Task` objects (which are contained in a `UniqueTaskList` object).","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"lywich"},"content":"* stores the currently \u0027selected\u0027 `Task` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cTask\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-02-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"joyngjr"},"content":"* * stores the generated plan, i.e. all `DailyPlan` objects (which are contained within a `MonthlyPlan` object)","lastModifiedDate":"2023-03-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":182,"author":{"gitId":"lywich"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `TaskBook`, which `Task` references. This allows `TaskBook` to only require one `Tag` object per unique tag, instead of each `Task` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"lywich"},"content":"### 2.5 Storage component","lastModifiedDate":"2023-03-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"lywich"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103T-W13-3/tp/blob/master/src/main/java/seedu/task/storage/Storage.java)","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"joyngjr"},"content":"* can save task book, user preference, and planner data in json format, and read them back into corresponding objects.","lastModifiedDate":"2023-04-07"},{"lineNumber":197,"author":{"gitId":"lywich"},"content":"* inherits from `TaskBookStorage`, `UserPrefStorage` and `PlannerStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"lywich"},"content":"### 2.6 Common classes","lastModifiedDate":"2023-03-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"joyngjr"},"content":"Classes used by multiple components are in the `seedu.task.commons` package.","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"lywich"},"content":"## 3. **Implementation**","lastModifiedDate":"2023-03-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"joyngjr"},"content":"**This section describes some noteworthy details on how certain features are implemented.**","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":210,"author":{"gitId":"joyngjr"},"content":"**You are encouraged to look at the documentation for individual features before making any changes to prevent unintended behaviour.**","lastModifiedDate":"2023-03-28"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"lywich"},"content":"### 3.1 Add Feature","lastModifiedDate":"2023-03-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":214,"author":{"gitId":"joyngjr"},"content":"The add feature now supports three types of additions: simple tasks, events and deadlines. The `AddCommandParser` will handle the prefixes in the input before the `AddCommand` adds a list of tasks into the taskbook.","lastModifiedDate":"2023-04-07"},{"lineNumber":215,"author":{"gitId":"PROGRAMMERHAO"},"content":"Also, our feature allows the user to input multiple tasks with the same descriptions and tags but with different names. This makes it easier for user to add repetitive tasks with similar details.","lastModifiedDate":"2023-03-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":217,"author":{"gitId":"lywich"},"content":"You can find the specific implementation in the `AddCommandParser` class and the `AddCommand` class","lastModifiedDate":"2023-03-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":219,"author":{"gitId":"PROGRAMMERHAO"},"content":"Given below is a scenario of how the add command is used and behaves.","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"lywich"},"content":"Step 1. The user inputs an `add` Command with parameters `n/CS2109S n/CS2103T n/homework`.","lastModifiedDate":"2023-03-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":223,"author":{"gitId":"lywich"},"content":"Step 2. The `AddCommandParser` recognises that the input command has two names and one description as the parameters. Since there is no deadline prefix \u0027D\u0027 and event prefixes \u0027f\u0027 and \u0027t\u0027, the parser will create tasks that are simple tasks. The tasks will have the same description but different names","lastModifiedDate":"2023-03-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":225,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 3. All the tasks are added to a temporary task list and the list is stored in the add command.","lastModifiedDate":"2023-03-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":227,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 4. The add command is returned to the logic manager for execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":229,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 5. For each of the task in the temporary task list, we add them to the task list in the model.","lastModifiedDate":"2023-03-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":231,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 6. The result of execution is returned to the logic manager and the UI will display the result as a message.","lastModifiedDate":"2023-03-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":233,"author":{"gitId":"PROGRAMMERHAO"},"content":"The following diagram summarises the sequence of events happening during the execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":234,"author":{"gitId":"PROGRAMMERHAO"},"content":"![AddCommandSequenceDiagram](images/AddCommand.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":236,"author":{"gitId":"PROGRAMMERHAO"},"content":"The following diagram summarises how the activities unfold after the user types \u0027Find\u0027 Command.","lastModifiedDate":"2023-03-23"},{"lineNumber":237,"author":{"gitId":"PROGRAMMERHAO"},"content":"![AddCommandActivityDiagram](images/AddActivityDiagram.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":239,"author":{"gitId":"PROGRAMMERHAO"},"content":"#### 3.1.1 Add a Subsection","lastModifiedDate":"2023-03-28"},{"lineNumber":240,"author":{"gitId":"PROGRAMMERHAO"},"content":"Our app supports adding a subsection to a parent task. The command word is `subsection` and the parameters are `index`, `n/name` and `d/description`. Note that the description here is optional.","lastModifiedDate":"2023-03-28"},{"lineNumber":241,"author":{"gitId":"PROGRAMMERHAO"},"content":"A user may wish to add a subsection to a task named \"Do homework\" with index 1 in the list currently shown to the user, and the user can do so by entering `subsection 1 n/CS2100 d/Lab 1`.","lastModifiedDate":"2023-03-28"},{"lineNumber":242,"author":{"gitId":"PROGRAMMERHAO"},"content":"Note that subsection only contains a name and description, unlike the parent task that contains more fields.","lastModifiedDate":"2023-03-28"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":244,"author":{"gitId":"PROGRAMMERHAO"},"content":"Given below is an example usage scenario and how `subsection` is executed.","lastModifiedDate":"2023-03-28"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 1. The user inputs a `subsection` command with parameter `1 n/CS2100 d/Lab 1`. The parser recognises the command word and calls AddSubtaskParser.","lastModifiedDate":"2023-03-28"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":248,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 2. The `AddSubtaskParser` interprets the index and create a new subtask class with input name and description.","lastModifiedDate":"2023-03-28"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 3. `AddSubtaskParser` calls `AddSubtaskCommand`.","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 4. `AddSubtaskCommand` is executed and a new parent task with the new subtask added to the `subtaskList` is created.","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":254,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 5. The new parent task replaces the old parent task.","lastModifiedDate":"2023-03-28"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 6. Results are shown immediately on UI.","lastModifiedDate":"2023-03-28"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":258,"author":{"gitId":"PROGRAMMERHAO"},"content":"The following diagram summarises the sequence of events happening during the execution.","lastModifiedDate":"2023-03-28"},{"lineNumber":259,"author":{"gitId":"PROGRAMMERHAO"},"content":"![SubsectionSequenceDiagram](images/SubsectionSequenceDiagram.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":261,"author":{"gitId":"PROGRAMMERHAO"},"content":"The following diagram summarises how the activities unfold after the user types \u0027Find\u0027 Command.","lastModifiedDate":"2023-03-28"},{"lineNumber":262,"author":{"gitId":"PROGRAMMERHAO"},"content":"![SubsectionActivityDiagram](images/SubsectionActivityDiagram.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":264,"author":{"gitId":"PROGRAMMERHAO"},"content":"#### 3.1.2 Delete a Subsection","lastModifiedDate":"2023-03-28"},{"lineNumber":265,"author":{"gitId":"PROGRAMMERHAO"},"content":"The user can delete a subsection from a parent task by entering `remove-subsection` command.","lastModifiedDate":"2023-03-28"},{"lineNumber":266,"author":{"gitId":"PROGRAMMERHAO"},"content":"A user may wish to delete a subsection from a task with index 1 in the list currently displayed to the user, and the user can do so by entering `remove-subsection 1 I/1`, where the first index is the index of ","lastModifiedDate":"2023-03-28"},{"lineNumber":267,"author":{"gitId":"PROGRAMMERHAO"},"content":"the parent task, and the index after the `I` parameter refers to the index of the subsection in the parent task.","lastModifiedDate":"2023-03-28"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":269,"author":{"gitId":"PROGRAMMERHAO"},"content":"Given below is an example usage scenario and how `subsection` is executed.","lastModifiedDate":"2023-03-28"},{"lineNumber":270,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":271,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 1. The user inputs a `remove-subsection` command with parameter `1 I/1`. The parser recognises the command word and calls DeleteSubtaskParser.","lastModifiedDate":"2023-03-28"},{"lineNumber":272,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":273,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 2. The `DeleteSubtaskParser` interprets the indexes.","lastModifiedDate":"2023-03-28"},{"lineNumber":274,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":275,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 3. `DeleteSubtaskParser` calls `DeleteSubtaskCommand` and passes the two indexes to the command.","lastModifiedDate":"2023-03-28"},{"lineNumber":276,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":277,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 4. `DeleteSubtaskCommand` is executed and a new parent task with the updated `subtaskList` after deleting the subtask at index 1 is created.","lastModifiedDate":"2023-03-28"},{"lineNumber":278,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":279,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 5. The new parent task replaces the old parent task.","lastModifiedDate":"2023-03-28"},{"lineNumber":280,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":281,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 6. Results are shown immediately on UI.","lastModifiedDate":"2023-03-28"},{"lineNumber":282,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":283,"author":{"gitId":"PROGRAMMERHAO"},"content":"The following diagram summarises the sequence of events happening during the execution.","lastModifiedDate":"2023-03-28"},{"lineNumber":284,"author":{"gitId":"PROGRAMMERHAO"},"content":"![RemoveSubsectionCommandSequenceDiagram](images/RemoveSubsectionSequenceDiagram.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":285,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":286,"author":{"gitId":"PROGRAMMERHAO"},"content":"The following diagram summarises how the activities unfold after the user types \u0027Find\u0027 Command.","lastModifiedDate":"2023-03-28"},{"lineNumber":287,"author":{"gitId":"PROGRAMMERHAO"},"content":"![RemoveSubsectionCommandActivityDiagram](images/RemoveSubsectionActivityDiagram.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":288,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":289,"author":{"gitId":"lywich"},"content":"### 3.2 Clear Feature","lastModifiedDate":"2023-03-21"},{"lineNumber":290,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":291,"author":{"gitId":"lywich"},"content":"Replaces the current taskBook to be a completely new TaskBook with no tasks.","lastModifiedDate":"2023-03-28"},{"lineNumber":292,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":293,"author":{"gitId":"lywich"},"content":"Given below is an example usage scenario and how clear is executed.","lastModifiedDate":"2023-03-28"},{"lineNumber":294,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":295,"author":{"gitId":"lywich"},"content":"Step 1. The user inputs `clear` command. The parser recognises the command word and calls `ClearCommand`.","lastModifiedDate":"2023-03-28"},{"lineNumber":296,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":297,"author":{"gitId":"lywich"},"content":"Step 2. `ClearCommand` is executed, and a fresh new TaskBook replaces the current TaskBook.","lastModifiedDate":"2023-03-28"},{"lineNumber":298,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":299,"author":{"gitId":"lywich"},"content":"Step 3. Results are shown immediately on UI.","lastModifiedDate":"2023-03-28"},{"lineNumber":300,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":301,"author":{"gitId":"lywich"},"content":"The following diagram summarises the sequence of events happening during the execution.","lastModifiedDate":"2023-03-28"},{"lineNumber":302,"author":{"gitId":"lywich"},"content":"![ClearCommandSequenceDiagram](images/ClearCommandSequenceDiagram.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":303,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":304,"author":{"gitId":"lywich"},"content":"### 3.3 Delete Feature","lastModifiedDate":"2023-03-21"},{"lineNumber":305,"author":{"gitId":"joyngjr"},"content":"Deletes a task based on index(es) of tasks from the list currently being shown to users.","lastModifiedDate":"2023-03-23"},{"lineNumber":306,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":307,"author":{"gitId":"joyngjr"},"content":"Previously in AB3, deletion of task must be done 1 index at a time, but this feature is extended to support deletion at multiple indices in Clock-Work to improve the efficiency of the program.","lastModifiedDate":"2023-03-28"},{"lineNumber":308,"author":{"gitId":"lywich"},"content":"Input index(es) is checked for validity (has a task at supposed index and is entered in ascending order) within `DeleteCommandParser`, and an error prompt will be displayed to users should the input be invalid.","lastModifiedDate":"2023-03-29"},{"lineNumber":309,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":310,"author":{"gitId":"joyngjr"},"content":"Multiple deletions within a single command must be done in the following manner:","lastModifiedDate":"2023-03-22"},{"lineNumber":311,"author":{"gitId":"joyngjr"},"content":"1. Indices must be separated by whitespace, such as `delete 1 2 3`","lastModifiedDate":"2023-03-22"},{"lineNumber":312,"author":{"gitId":"joyngjr"},"content":"2. Indices must be entered in ascending order","lastModifiedDate":"2023-03-22"},{"lineNumber":313,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":314,"author":{"gitId":"joyngjr"},"content":"In the event where one of the multiple indices entered is invalid, the entire command is rejected and no deletion is executed, and users will be informed about the non-execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":315,"author":{"gitId":"joyngjr"},"content":"This is to enforce atomicity and date safety, as deletion is irreversible, so it should only be executed when it is certain that the user is clear about the intended behavior of the command.","lastModifiedDate":"2023-03-23"},{"lineNumber":316,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":317,"author":{"gitId":"joyngjr"},"content":"Given below is an example usage scenario and how `delete` is executed.","lastModifiedDate":"2023-03-23"},{"lineNumber":318,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":319,"author":{"gitId":"joyngjr"},"content":"Step 1. The user inputs a `delete` command with parameter `1 2`. The parser recognises the command word and calls _DeleteCommandParser_.","lastModifiedDate":"2023-03-28"},{"lineNumber":320,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":321,"author":{"gitId":"lywich"},"content":"Step 2. The `DeleteCommandParser` interprets the indices and saves it as an IndexList.","lastModifiedDate":"2023-03-29"},{"lineNumber":322,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":323,"author":{"gitId":"lywich"},"content":"Step 3. `DeleteCommandParser` calls `DeleteCommand`.","lastModifiedDate":"2023-03-29"},{"lineNumber":324,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":325,"author":{"gitId":"lywich"},"content":"Step 4. `DeleteCommandParser` is executed and all relevant tasks are removed from TaskBook.","lastModifiedDate":"2023-03-29"},{"lineNumber":326,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":327,"author":{"gitId":"joyngjr"},"content":"Step 5. Results are shown immediately on UI.","lastModifiedDate":"2023-03-23"},{"lineNumber":328,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":329,"author":{"gitId":"joyngjr"},"content":"The following sequence diagram summarizes what happens in this example usage scenario:","lastModifiedDate":"2023-03-23"},{"lineNumber":330,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":331,"author":{"gitId":"joyngjr"},"content":"![DeleteCommandSequenceDiagram](images/DeleteCommandSequenceDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":332,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":333,"author":{"gitId":"joyngjr"},"content":"The following activity diagram summarizes what happens when a user executes a `delete`:","lastModifiedDate":"2023-03-28"},{"lineNumber":334,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":335,"author":{"gitId":"joyngjr"},"content":"![DeleteCommandSequenceDiagram](images/DeleteCommandActivityDiagram.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":336,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":337,"author":{"gitId":"joyngjr"},"content":"#### 3.3.1 Design Consideration","lastModifiedDate":"2023-03-28"},{"lineNumber":338,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":339,"author":{"gitId":"joyngjr"},"content":"#### Option 1: Allow multiple deletions","lastModifiedDate":"2023-03-28"},{"lineNumber":340,"author":{"gitId":"joyngjr"},"content":"Pros: Saves user some time as they do not need to enter `delete` multiple times.","lastModifiedDate":"2023-03-28"},{"lineNumber":341,"author":{"gitId":"joyngjr"},"content":"Cons: Entire command must be rejected if one of the input is wrong to avoid unintended behaviours.","lastModifiedDate":"2023-03-28"},{"lineNumber":342,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":343,"author":{"gitId":"joyngjr"},"content":"#### Option 2: Only allow single deletion","lastModifiedDate":"2023-03-28"},{"lineNumber":344,"author":{"gitId":"joyngjr"},"content":"Pros: User can pinpoint which index is causing the rejection.","lastModifiedDate":"2023-03-28"},{"lineNumber":345,"author":{"gitId":"joyngjr"},"content":"Cons: Takes more time to delete multiple task at once.","lastModifiedDate":"2023-03-28"},{"lineNumber":346,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":347,"author":{"gitId":"joyngjr"},"content":"#### Eventual Decision","lastModifiedDate":"2023-03-28"},{"lineNumber":348,"author":{"gitId":"joyngjr"},"content":"Option 1 is chosen as a more experienced user will know what types of input are accepted by Clock-Work. Our target users, Computer Science students, should be quick on the uptake of syntax, and should be able to reap the efficiency benefits of multiple deletions.","lastModifiedDate":"2023-03-28"},{"lineNumber":349,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":350,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":351,"author":{"gitId":"lywich"},"content":"### 3.4 Edit Feature","lastModifiedDate":"2023-03-21"},{"lineNumber":352,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":353,"author":{"gitId":"PROGRAMMERHAO"},"content":"The edit feature now can edit many possible fields of a task, including the task\u0027s name, description, tags and effort. The editing is based on the index of the task in the list currently shown to the user. Entering `edit` with ","lastModifiedDate":"2023-03-28"},{"lineNumber":354,"author":{"gitId":"PROGRAMMERHAO"},"content":"prefixes after it, such as `n/homework` will change the name of the original task to homework.","lastModifiedDate":"2023-03-28"},{"lineNumber":355,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":356,"author":{"gitId":"PROGRAMMERHAO"},"content":"You can find the specific implementation in the `EditCommandParser` and `EditCommand` class.","lastModifiedDate":"2023-03-28"},{"lineNumber":357,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":358,"author":{"gitId":"PROGRAMMERHAO"},"content":"Given below is an example usage scenario and how the edit mechanism behaves.","lastModifiedDate":"2023-03-28"},{"lineNumber":359,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":360,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 1. The user inputs a `edit` command with parameter `1 n/homework`. The parser recognises the command word and calls the EditCommandParser.","lastModifiedDate":"2023-03-28"},{"lineNumber":361,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":362,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 2. The `EditCommandParser` recognises that the parameter being changed is the name field and the index of the task is 1.","lastModifiedDate":"2023-03-28"},{"lineNumber":363,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":364,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 3. The `EditCommandParser` creates an `EditTaskDescriptor` that stores the changed parameter value, which is `homework` in this case.","lastModifiedDate":"2023-03-28"},{"lineNumber":365,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":366,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 4. The `EditCommandParser` calls `EditCommand` with the index of the task and the `EditTaskDescriptor`. ","lastModifiedDate":"2023-03-28"},{"lineNumber":367,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":368,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 5. The `EditCommand` is executed and a new task is created, with the name parameter changed to \"homework\". The new task replaces the original task in the task list.","lastModifiedDate":"2023-03-28"},{"lineNumber":369,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":370,"author":{"gitId":"PROGRAMMERHAO"},"content":"Step 6. The result of the filtered list is passed back to the UI.","lastModifiedDate":"2023-03-28"},{"lineNumber":371,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":372,"author":{"gitId":"PROGRAMMERHAO"},"content":"The following sequence diagram summarizes what happens in this example usage scenario:","lastModifiedDate":"2023-03-28"},{"lineNumber":373,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":374,"author":{"gitId":"PROGRAMMERHAO"},"content":"![EditSequenceDiagram](images/EditSequenceDiagram.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":375,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":376,"author":{"gitId":"PROGRAMMERHAO"},"content":"The following activity diagram summarizes what happens when a user executes a new `edit` command:","lastModifiedDate":"2023-03-28"},{"lineNumber":377,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":378,"author":{"gitId":"PROGRAMMERHAO"},"content":"![EditActivityDiagram](images/EditActivityDiagram.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":379,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":380,"author":{"gitId":"lywich"},"content":"### 3.5 Find Feature","lastModifiedDate":"2023-03-21"},{"lineNumber":381,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":382,"author":{"gitId":"Huggenguggen"},"content":"Before, the `find` feature on AB3 would find persons whose names contain any of the given keywords. This limited the search functionality to purely names. With our new enhancement, `find` can now search via any field.","lastModifiedDate":"2023-03-22"},{"lineNumber":383,"author":{"gitId":"Huggenguggen"},"content":"The FindCommandParser does the heavy lifting where it will automatically create appropriate predicates based on user input.","lastModifiedDate":"2023-03-22"},{"lineNumber":384,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":385,"author":{"gitId":"Huggenguggen"},"content":"You can find the specific implementation in the `FindCommandParser` class and the `FindCommand` class.","lastModifiedDate":"2023-03-22"},{"lineNumber":386,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":387,"author":{"gitId":"Huggenguggen"},"content":"Given below is an example usage scenario and how the find mechanism behaves.","lastModifiedDate":"2023-03-22"},{"lineNumber":388,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":389,"author":{"gitId":"Huggenguggen"},"content":"Step 1. The user inputs a `find` command with parameter `n/read`. The parser recognises the command word and calls the FindCommandParser.","lastModifiedDate":"2023-03-22"},{"lineNumber":390,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":391,"author":{"gitId":"Huggenguggen"},"content":"Step 2. The `FindCommandParser` recognises that the parameter is being searched is the name field.","lastModifiedDate":"2023-03-22"},{"lineNumber":392,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":393,"author":{"gitId":"Huggenguggen"},"content":"Step 3. `FindCommandParser` calls `FindCommand` with appropriate predicate (`NameContainsAllKeywordsPredicate`).","lastModifiedDate":"2023-03-22"},{"lineNumber":394,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":395,"author":{"gitId":"Huggenguggen"},"content":"Step 4. `FindCommand` is executed and model filters with the predicate passed.","lastModifiedDate":"2023-03-22"},{"lineNumber":396,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":397,"author":{"gitId":"Huggenguggen"},"content":"Step 5. The result of the filtered list is passed back to the UI.","lastModifiedDate":"2023-03-22"},{"lineNumber":398,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":399,"author":{"gitId":"Huggenguggen"},"content":"The following sequence diagram summarizes what happens in this example usage scenario:","lastModifiedDate":"2023-03-22"},{"lineNumber":400,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":401,"author":{"gitId":"PROGRAMMERHAO"},"content":"![FindCommandSequenceDiagram](images/FindSequenceDiagram.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":402,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":403,"author":{"gitId":"Huggenguggen"},"content":"The following activity diagram summarizes what happens when a user executes a new `find` command:","lastModifiedDate":"2023-03-22"},{"lineNumber":404,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":405,"author":{"gitId":"PROGRAMMERHAO"},"content":"![FindCommandActivityDiagram](images/FindActivityDiagram.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":406,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":407,"author":{"gitId":"Huggenguggen"},"content":"#### 3.5.1 Design Consideration","lastModifiedDate":"2023-03-22"},{"lineNumber":408,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":409,"author":{"gitId":"Huggenguggen"},"content":"#### Option 1 (current choice):","lastModifiedDate":"2023-03-22"},{"lineNumber":410,"author":{"gitId":"Huggenguggen"},"content":"* Find can search any attribute","lastModifiedDate":"2023-03-22"},{"lineNumber":411,"author":{"gitId":"Huggenguggen"},"content":"* It searches via matched substring","lastModifiedDate":"2023-03-22"},{"lineNumber":412,"author":{"gitId":"Huggenguggen"},"content":"* In the case of a sample search term `n/read book`, the whole string must be in the name of the task.","lastModifiedDate":"2023-03-22"},{"lineNumber":413,"author":{"gitId":"Huggenguggen"},"content":"* Only accepts 1 attribute at a time.","lastModifiedDate":"2023-03-22"},{"lineNumber":414,"author":{"gitId":"Huggenguggen"},"content":"* Can accept multiple of same attribute search terms along with a flag to indicate type of searching.","lastModifiedDate":"2023-03-22"},{"lineNumber":415,"author":{"gitId":"Huggenguggen"},"content":"* e.g. `all/`","lastModifiedDate":"2023-03-22"},{"lineNumber":416,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":417,"author":{"gitId":"Huggenguggen"},"content":"Pros: Simple for users while still being flexible and powerful.","lastModifiedDate":"2023-03-22"},{"lineNumber":418,"author":{"gitId":"Huggenguggen"},"content":"Cons: Cannot find by multiple attributes at a time for more powerful functionality.","lastModifiedDate":"2023-03-22"},{"lineNumber":419,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":420,"author":{"gitId":"Huggenguggen"},"content":"#### Option 2:","lastModifiedDate":"2023-03-22"},{"lineNumber":421,"author":{"gitId":"Huggenguggen"},"content":"* Allow mix-and-matching of attributes for searching","lastModifiedDate":"2023-03-22"},{"lineNumber":422,"author":{"gitId":"Huggenguggen"},"content":"* Can still have a flag to indicate any or all search term matching","lastModifiedDate":"2023-03-22"},{"lineNumber":423,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":424,"author":{"gitId":"Huggenguggen"},"content":"Pros: More powerful functionality","lastModifiedDate":"2023-03-22"},{"lineNumber":425,"author":{"gitId":"Huggenguggen"},"content":"Cons: More complicated to implement and unwieldy for users.","lastModifiedDate":"2023-03-22"},{"lineNumber":426,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":427,"author":{"gitId":"lywich"},"content":"### 3.6 List Feature","lastModifiedDate":"2023-03-21"},{"lineNumber":428,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":429,"author":{"gitId":"lywich"},"content":"The list feature shows every task and its associated fields to the user. In scenarios whereby the user has used commands like `sort` or `find`, The user will use `list` to get back to the original page.","lastModifiedDate":"2023-03-28"},{"lineNumber":430,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":431,"author":{"gitId":"lywich"},"content":"Given below is an example usage scenario for the `list` command.","lastModifiedDate":"2023-03-28"},{"lineNumber":432,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":433,"author":{"gitId":"lywich"},"content":"Step 1. The user inputs `list` command. The parser recognises the command word and calls `listCommand`.","lastModifiedDate":"2023-03-28"},{"lineNumber":434,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":435,"author":{"gitId":"lywich"},"content":"Step 2. `listCommand` is executed. A full list of all tasks are displayed.","lastModifiedDate":"2023-03-28"},{"lineNumber":436,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":437,"author":{"gitId":"lywich"},"content":"Step 3. Results are shown immediately on UI.","lastModifiedDate":"2023-03-28"},{"lineNumber":438,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":439,"author":{"gitId":"lywich"},"content":"![ListCommandSequenceDiagram](images/ListCommandSequenceDiagram.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":440,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":441,"author":{"gitId":"lywich"},"content":"### 3.7 Help Feature","lastModifiedDate":"2023-03-21"},{"lineNumber":442,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":443,"author":{"gitId":"lywich"},"content":"In a scenario whereby the user does not know how to proceed, `help` is intended to assist the user by giving them the link to the User Guide for the project.","lastModifiedDate":"2023-03-28"},{"lineNumber":444,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":445,"author":{"gitId":"lywich"},"content":"Given below is an example usage scenario for the `help` command.","lastModifiedDate":"2023-03-28"},{"lineNumber":446,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":447,"author":{"gitId":"lywich"},"content":"Step 1. The user inputs `help` command. The parser recognises the command word and calls `HelpCommand`.","lastModifiedDate":"2023-03-28"},{"lineNumber":448,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":449,"author":{"gitId":"lywich"},"content":"Step 2. `HelpCommand` is executed. A pop-up with the link to our User Guide is shown.","lastModifiedDate":"2023-03-28"},{"lineNumber":450,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":451,"author":{"gitId":"lywich"},"content":"Step 3. Results are shown immediately on UI.","lastModifiedDate":"2023-03-28"},{"lineNumber":452,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":453,"author":{"gitId":"lywich"},"content":"The sequence diagram below summarizes what happens during this usage scenario:","lastModifiedDate":"2023-03-28"},{"lineNumber":454,"author":{"gitId":"lywich"},"content":"![HelpCommandSequenceDiagram](images/HelpCommandSequenceDiagram.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":455,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":456,"author":{"gitId":"lywich"},"content":"### 3.8 Stats Feature","lastModifiedDate":"2023-03-21"},{"lineNumber":457,"author":{"gitId":"joyngjr"},"content":"Statistics is a useful way for users to get an overview of all open tasks in the TaskBook. Currently, `stats` supports 1 view - categorise by tags.","lastModifiedDate":"2023-03-23"},{"lineNumber":458,"author":{"gitId":"joyngjr"},"content":"Entering `stats` counts the number of tasks that fall under each tag, and displays the count in descending order, for up to a maximum of 10 tags.","lastModifiedDate":"2023-03-28"},{"lineNumber":459,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":460,"author":{"gitId":"joyngjr"},"content":"Given below is an example usage scenario for `stats`.","lastModifiedDate":"2023-03-28"},{"lineNumber":461,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":462,"author":{"gitId":"joyngjr"},"content":"Step 1. User inputs `stats` and presses enter.","lastModifiedDate":"2023-03-26"},{"lineNumber":463,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":464,"author":{"gitId":"joyngjr"},"content":"Step 2. The application displays a list of tags and the corresponding number of times it appears in the application.","lastModifiedDate":"2023-03-26"},{"lineNumber":465,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":466,"author":{"gitId":"joyngjr"},"content":"The following sequence diagram provides an overview of how `stats` works:","lastModifiedDate":"2023-03-26"},{"lineNumber":467,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":468,"author":{"gitId":"joyngjr"},"content":"![StatsCommandSequenceDiagram](images/StatsCommandSequenceDiagram.png)","lastModifiedDate":"2023-03-26"},{"lineNumber":469,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":470,"author":{"gitId":"joyngjr"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-03-26"},{"lineNumber":471,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":472,"author":{"gitId":"joyngjr"},"content":"![StatsCommandActivityDiagram](images/StatsCommandActivityDiagram.png)","lastModifiedDate":"2023-03-26"},{"lineNumber":473,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":474,"author":{"gitId":"joyngjr"},"content":"#### 3.8.1 Design Consideration","lastModifiedDate":"2023-04-07"},{"lineNumber":475,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":476,"author":{"gitId":"joyngjr"},"content":"What type of information should be displayed by `stats`","lastModifiedDate":"2023-03-28"},{"lineNumber":477,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":478,"author":{"gitId":"joyngjr"},"content":"#### Option 1: Number of tasks per tag","lastModifiedDate":"2023-03-28"},{"lineNumber":479,"author":{"gitId":"joyngjr"},"content":"Pros: Assuming user uses tags to categorise tasks into subject folders, this will be useful in showing the user which subject requires more time on.","lastModifiedDate":"2023-03-28"},{"lineNumber":480,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":481,"author":{"gitId":"joyngjr"},"content":"#### Option 2: Number of completed tasks","lastModifiedDate":"2023-03-28"},{"lineNumber":482,"author":{"gitId":"joyngjr"},"content":"Pros: Motivational for users to know their progress","lastModifiedDate":"2023-03-28"},{"lineNumber":483,"author":{"gitId":"joyngjr"},"content":"Cons: May have a reverse effect as users feel complacent about their progress","lastModifiedDate":"2023-03-28"},{"lineNumber":484,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":485,"author":{"gitId":"joyngjr"},"content":"#### Option 3: Number of tasks under each category (_SimpleTask, Deadline, Event_)","lastModifiedDate":"2023-03-28"},{"lineNumber":486,"author":{"gitId":"joyngjr"},"content":"Pros: Users can get an overview of their task composition","lastModifiedDate":"2023-03-28"},{"lineNumber":487,"author":{"gitId":"joyngjr"},"content":"Cons: Does not improve productivity","lastModifiedDate":"2023-03-28"},{"lineNumber":488,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":489,"author":{"gitId":"joyngjr"},"content":"#### Eventual Decision","lastModifiedDate":"2023-03-28"},{"lineNumber":490,"author":{"gitId":"joyngjr"},"content":"As Clock-Work is an application to help Computer Science students improve their productivity, option 1 is chosen, as it can provide the most benefit to our target user group.","lastModifiedDate":"2023-03-28"},{"lineNumber":491,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":492,"author":{"gitId":"joyngjr"},"content":"### 3.9 Sort Feature","lastModifiedDate":"2023-03-22"},{"lineNumber":493,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":494,"author":{"gitId":"lywich"},"content":"Given below is an example usage scenario and how the sort command behaves at each step","lastModifiedDate":"2023-03-21"},{"lineNumber":495,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":496,"author":{"gitId":"lywich"},"content":"Step 1. The user launches the application.","lastModifiedDate":"2023-03-21"},{"lineNumber":497,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":498,"author":{"gitId":"lywich"},"content":"Step 2. The application displays a list of tasks (that can also be empty).","lastModifiedDate":"2023-03-21"},{"lineNumber":499,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":500,"author":{"gitId":"lywich"},"content":"Step 2. The user executes `sort` command to sort the list. Look at [Sort Design Consideration](#391-design-consideration) for the sorting logic.","lastModifiedDate":"2023-03-21"},{"lineNumber":501,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":502,"author":{"gitId":"lywich"},"content":"Step 3. The sequence diagram below shows how the sort operation works:","lastModifiedDate":"2023-03-21"},{"lineNumber":503,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":504,"author":{"gitId":"lywich"},"content":"![SortCommandSequenceDiagram](images/SortCommandSequenceDiagram.png)","lastModifiedDate":"2023-03-21"},{"lineNumber":505,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":506,"author":{"gitId":"lywich"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-03-21"},{"lineNumber":507,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":508,"author":{"gitId":"lywich"},"content":"![SortCommandActivityDiagram](images/SortCommandActivityDiagram.png)","lastModifiedDate":"2023-03-21"},{"lineNumber":509,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":510,"author":{"gitId":"lywich"},"content":"#### 3.9.1 Design Consideration","lastModifiedDate":"2023-03-21"},{"lineNumber":511,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":512,"author":{"gitId":"lywich"},"content":"Sorts the list using the following format:","lastModifiedDate":"2023-03-21"},{"lineNumber":513,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":514,"author":{"gitId":"lywich"},"content":"Aspect: How are tasks sorted:","lastModifiedDate":"2023-03-21"},{"lineNumber":515,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":516,"author":{"gitId":"lywich"},"content":"#### Option 1(current choice):","lastModifiedDate":"2023-03-27"},{"lineNumber":517,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":518,"author":{"gitId":"lywich"},"content":"* SimpleTask is listed above Deadline and Event.","lastModifiedDate":"2023-03-21"},{"lineNumber":519,"author":{"gitId":"lywich"},"content":"* Deadline is  listed below SimpleTask and above Event.","lastModifiedDate":"2023-03-21"},{"lineNumber":520,"author":{"gitId":"lywich"},"content":"* Event is  listed below SimpleTask and Event.","lastModifiedDate":"2023-03-21"},{"lineNumber":521,"author":{"gitId":"lywich"},"content":"* When comparing 2 tasks of the same class:","lastModifiedDate":"2023-03-21"},{"lineNumber":522,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":523,"author":{"gitId":"lywich"},"content":"  * SimpleTask","lastModifiedDate":"2023-03-21"},{"lineNumber":524,"author":{"gitId":"lywich"},"content":"    * The task with lesser tags is listed above the task with more tags.","lastModifiedDate":"2023-03-21"},{"lineNumber":525,"author":{"gitId":"lywich"},"content":"    * Else if both tasks have the same number of tags, the task with a smaller lexicographical name is listed above the other.","lastModifiedDate":"2023-03-21"},{"lineNumber":526,"author":{"gitId":"lywich"},"content":"  * Deadline","lastModifiedDate":"2023-03-21"},{"lineNumber":527,"author":{"gitId":"lywich"},"content":"    * The task with the earlier deadline is listed above the task with later deadline.","lastModifiedDate":"2023-03-21"},{"lineNumber":528,"author":{"gitId":"lywich"},"content":"    * Else if both tasks have the same deadline, the task with lesser tags is listed above the task with more tags.","lastModifiedDate":"2023-03-21"},{"lineNumber":529,"author":{"gitId":"lywich"},"content":"    * Else if both tasks have the same number of tags, the task with a smaller lexicographical name is listed above the other.","lastModifiedDate":"2023-03-21"},{"lineNumber":530,"author":{"gitId":"lywich"},"content":"  * Event","lastModifiedDate":"2023-03-21"},{"lineNumber":531,"author":{"gitId":"lywich"},"content":"    * The task with the earlier `from` attribute is listed above the task with a later `from` attribute.","lastModifiedDate":"2023-03-21"},{"lineNumber":532,"author":{"gitId":"lywich"},"content":"    * Else if both task have the same `from` attribute, the task with the earlier `to` attribute is listed above the task with later `to` attribute.","lastModifiedDate":"2023-03-21"},{"lineNumber":533,"author":{"gitId":"lywich"},"content":"    * Else if both task have the same `to` attribute, the task with lesser tags is listed above the task with more tags.","lastModifiedDate":"2023-03-21"},{"lineNumber":534,"author":{"gitId":"lywich"},"content":"    * Else if both tasks have the same number of tags, the task with a smaller lexicgraphical name is listed above the other.","lastModifiedDate":"2023-03-21"},{"lineNumber":535,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":536,"author":{"gitId":"lywich"},"content":"Pros: Neater and more intuitive","lastModifiedDate":"2023-03-21"},{"lineNumber":537,"author":{"gitId":"lywich"},"content":"Cons: Will have to scroll down to see the order for Events if there are too many SimpleTasks.","lastModifiedDate":"2023-03-21"},{"lineNumber":538,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":539,"author":{"gitId":"lywich"},"content":"#### Option 2:","lastModifiedDate":"2023-03-27"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":541,"author":{"gitId":"lywich"},"content":"Same as above, but:","lastModifiedDate":"2023-03-21"},{"lineNumber":542,"author":{"gitId":"lywich"},"content":"* Event is listed above SimpleTask and Deadline.","lastModifiedDate":"2023-03-21"},{"lineNumber":543,"author":{"gitId":"lywich"},"content":"* Deadline is  listed below Event and above SimpleTask.","lastModifiedDate":"2023-03-21"},{"lineNumber":544,"author":{"gitId":"lywich"},"content":"* SimpleTask is listed below Deadline and Event.","lastModifiedDate":"2023-03-21"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":546,"author":{"gitId":"lywich"},"content":"Pros: Able to see the Events happening close to date.","lastModifiedDate":"2023-03-21"},{"lineNumber":547,"author":{"gitId":"lywich"},"content":"Cons: Have to scroll down to see SimpleTasks.","lastModifiedDate":"2023-03-21"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":549,"author":{"gitId":"lywich"},"content":"### 3.10 Alert Feature","lastModifiedDate":"2023-03-21"},{"lineNumber":550,"author":{"gitId":"Huggenguggen"},"content":"The `alert` feature is a new feature that when called will display tasks which fall within the specified **alert window**.","lastModifiedDate":"2023-03-28"},{"lineNumber":551,"author":{"gitId":"Huggenguggen"},"content":"You can find the specific implementation in the `AlertCommandParser` class and the `AlertCommand` class.","lastModifiedDate":"2023-03-28"},{"lineNumber":552,"author":{"gitId":"Huggenguggen"},"content":":bulb: Note: The addition of the `alert` feature includes a new attribute to all tasks `alertWindow`.","lastModifiedDate":"2023-03-28"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":554,"author":{"gitId":"Huggenguggen"},"content":"Given below is an example usage scenario and how the find mechanism behaves.","lastModifiedDate":"2023-03-28"},{"lineNumber":555,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":556,"author":{"gitId":"Huggenguggen"},"content":"Step 1. The user inputs a `alert` command with parameter `48`. The parser recognises the command word and calls the AlertCommandParser.","lastModifiedDate":"2023-03-28"},{"lineNumber":557,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":558,"author":{"gitId":"Huggenguggen"},"content":"Step 2. The `AlertCommandParser` processes the parameter and notices it is not empty.","lastModifiedDate":"2023-03-28"},{"lineNumber":559,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":560,"author":{"gitId":"Huggenguggen"},"content":"Step 3. `AlertCommandParser` calls `AlertCommand` with the timeframe specified.","lastModifiedDate":"2023-03-28"},{"lineNumber":561,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":562,"author":{"gitId":"Huggenguggen"},"content":"Step 4. `AlertCommand` is executed and model filters the `AlertTaskList` with the predicate `TaskWithinTimelinePredicate(timeframe)`.","lastModifiedDate":"2023-03-28"},{"lineNumber":563,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":564,"author":{"gitId":"Huggenguggen"},"content":"Step 5. The result of the filtered list is passed back to the UI.","lastModifiedDate":"2023-03-28"},{"lineNumber":565,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":566,"author":{"gitId":"Huggenguggen"},"content":"The following sequence diagram summarizes what happens in this example usage scenario:","lastModifiedDate":"2023-03-28"},{"lineNumber":567,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":568,"author":{"gitId":"Huggenguggen"},"content":"![SortCommandSequenceDiagram](images/AlertSequenceDiagram.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":569,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":570,"author":{"gitId":"Huggenguggen"},"content":"The following activity diagram summarizes what happens when a user executes a new `alert` command:","lastModifiedDate":"2023-03-28"},{"lineNumber":571,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":572,"author":{"gitId":"Huggenguggen"},"content":"![SortCommandSequenceDiagram](images/AlertActivityDiagram.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":573,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":574,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":575,"author":{"gitId":"joyngjr"},"content":"### 3.11 Schedule Feature","lastModifiedDate":"2023-03-28"},{"lineNumber":576,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":577,"author":{"gitId":"joyngjr"},"content":"`schedule` displays a planned daily schedule according to the tasks currently stored. It takes in a compulsory input, `D/SHORTDATE`, and an optional input, `E/EFFORT`.","lastModifiedDate":"2023-03-28"},{"lineNumber":578,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":579,"author":{"gitId":"joyngjr"},"content":"#### 3.11.1 How it Works","lastModifiedDate":"2023-03-28"},{"lineNumber":580,"author":{"gitId":"joyngjr"},"content":"Entering `schedule D/SHORTDATE E/EFFORT` generates a new 30-day plan for users based on their intended `E/EFFORT`, and display a list of tasks to be done on `D/SHORTDATE`.","lastModifiedDate":"2023-03-28"},{"lineNumber":581,"author":{"gitId":"joyngjr"},"content":"Entering `schedule D/SHORTDATE` displays a list of tasks to be done on `D/SHORTDATE` based on the previously generated plan.","lastModifiedDate":"2023-03-28"},{"lineNumber":582,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":583,"author":{"gitId":"joyngjr"},"content":"#### 3.11.2 Generating a New Plan","lastModifiedDate":"2023-03-28"},{"lineNumber":584,"author":{"gitId":"joyngjr"},"content":"When the schedule command is ran with an `E/EFFORT` flag, an internal planning algorithm is run, and all tasks will be allocated to a 30-day plan starting from the day the command is run.","lastModifiedDate":"2023-03-28"},{"lineNumber":585,"author":{"gitId":"joyngjr"},"content":"As much as possible, tasks allocated to a day should not exceed the intended `E/EFFORT` level indicated by users.","lastModifiedDate":"2023-03-28"},{"lineNumber":586,"author":{"gitId":"joyngjr"},"content":"However, if the need arises (as specified below), the algorithm allows the effort required for a particular day to exceed the user preferred `E/EFFORT` level.","lastModifiedDate":"2023-03-28"},{"lineNumber":587,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":588,"author":{"gitId":"joyngjr"},"content":"The algorithm allocates tasks as such:","lastModifiedDate":"2023-03-28"},{"lineNumber":589,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":590,"author":{"gitId":"joyngjr"},"content":"Step 1: Allocate all events to the day(s) it is supposed to be happening. Events will be allocated, even if the effort required exceeds the user preferred effort.","lastModifiedDate":"2023-03-28"},{"lineNumber":591,"author":{"gitId":"joyngjr"},"content":"\u003cdetails\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":592,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":593,"author":{"gitId":"joyngjr"},"content":"\u003csummary\u003eMore about scheduling for Events\u003c/summary\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":594,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":595,"author":{"gitId":"joyngjr"},"content":"After getting a list of _Events_ from all tasks within _TaskBook_, a scheduling algorithm for events will be run. The following diagram shows its behaviour.","lastModifiedDate":"2023-03-28"},{"lineNumber":596,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":597,"author":{"gitId":"joyngjr"},"content":"\u003cimg src\u003d\"images/EventAllocation.png\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":598,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":599,"author":{"gitId":"joyngjr"},"content":"\u003cb\u003eSome Rules\u003c/b\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":600,"author":{"gitId":"joyngjr"},"content":"* Events are allocated to the date they are scheduled to happen, regardless of time.","lastModifiedDate":"2023-03-28"},{"lineNumber":601,"author":{"gitId":"joyngjr"},"content":"* Effort for event is added every day the event is scheduled to happen","lastModifiedDate":"2023-03-28"},{"lineNumber":602,"author":{"gitId":"joyngjr"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":603,"author":{"gitId":"joyngjr"},"content":"\u003cb\u003eAllocation Example\u003c/b\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":604,"author":{"gitId":"joyngjr"},"content":"* Event A is allocated every day from 5 Mar 2023 to 2 June 2023, and its effort count of 10 is added to each of the 4 days.","lastModifiedDate":"2023-03-28"},{"lineNumber":605,"author":{"gitId":"joyngjr"},"content":"* Event B is allocated to 31 May 2023, and its effort count of 5 is added to the existing effort count of 10 (from event A).","lastModifiedDate":"2023-03-28"},{"lineNumber":606,"author":{"gitId":"joyngjr"},"content":"* Event C is allocated to 1 Jun 2023 and 2 Jun 2023 even though this means that the workload allocated to those days (28 units of effort) are greater than the workload user planned (20 units of effort).","lastModifiedDate":"2023-03-28"},{"lineNumber":607,"author":{"gitId":"joyngjr"},"content":"* No event is scheduled to occur on 3 Jun 2023. It is left empty","lastModifiedDate":"2023-03-28"},{"lineNumber":608,"author":{"gitId":"joyngjr"},"content":"\u003c/details\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":609,"author":{"gitId":"joyngjr"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":610,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":611,"author":{"gitId":"joyngjr"},"content":"Step 2: Allocate all deadlines to the first free day before it is due (exclusive of due date), as we assume that it is better to complete a time-sensitive task as soon as possible. If it is not possible to find a free day, the algorithm will allocate task to a day before deadline with the least amount of work allocated (in terms of effort). If multiple of such days exist, the algorithm chooses the first of such days.","lastModifiedDate":"2023-03-28"},{"lineNumber":612,"author":{"gitId":"joyngjr"},"content":"\u003cdetails\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":613,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":614,"author":{"gitId":"joyngjr"},"content":"\u003csummary\u003eMore about scheduling for Deadlines\u003c/summary\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":615,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":616,"author":{"gitId":"joyngjr"},"content":"After getting a list of _Deadlines_ from all tasks within _TaskBook_, a scheduling algorithm for events will be run. The following diagram shows its behaviour.","lastModifiedDate":"2023-03-28"},{"lineNumber":617,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":618,"author":{"gitId":"joyngjr"},"content":"\u003cimg src\u003d\"images/DeadlineAllocation.png\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":619,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":620,"author":{"gitId":"joyngjr"},"content":"\u003cb\u003eSome Rules\u003c/b\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":621,"author":{"gitId":"joyngjr"},"content":"* Overdue deadlines still in the TaskBook is not considered in the algorithm","lastModifiedDate":"2023-03-28"},{"lineNumber":622,"author":{"gitId":"joyngjr"},"content":"* Deadlines are allocated to one of the days before the deadline","lastModifiedDate":"2023-03-28"},{"lineNumber":623,"author":{"gitId":"joyngjr"},"content":"* If there are multiple free days, Deadline will be added to the earliest free day","lastModifiedDate":"2023-03-28"},{"lineNumber":624,"author":{"gitId":"joyngjr"},"content":"* If there are no free days before the deadline, Deadline will be added to the least busy day (in terms of effort)","lastModifiedDate":"2023-03-28"},{"lineNumber":625,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":626,"author":{"gitId":"joyngjr"},"content":"\u003cb\u003eAllocation Example\u003c/b\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":627,"author":{"gitId":"joyngjr"},"content":"* Deadline D is due on 31 May 2023, so the only date it can be allocated to is 30 May 2023. Thus, it is allocated to 30 May 2023 even though this means that the workload for 30 May is greater than the desired workload.","lastModifiedDate":"2023-03-28"},{"lineNumber":628,"author":{"gitId":"joyngjr"},"content":"* Deadline E is allocated to 31 May 2023 because there are no free dates (30 May and 31 May) before 1 Jun 2023. Among the two possible dates, 31 May has a lower current workload. Thus, it is allocated to 31 May.","lastModifiedDate":"2023-03-28"},{"lineNumber":629,"author":{"gitId":"joyngjr"},"content":"* Deadline F is allocated to 30 May 2023 as adding task to any dates before the deadline will result in exceeding the desired workload, and it is the date with the lowest workload among all possible dates.","lastModifiedDate":"2023-03-28"},{"lineNumber":630,"author":{"gitId":"joyngjr"},"content":"\u003c/details\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":631,"author":{"gitId":"joyngjr"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":632,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":633,"author":{"gitId":"joyngjr"},"content":"Step 3: Allocate all SimpleTasks in descending order of effort required. As we assume that SimpleTasks are not time-sensitive, the algorithm allocates each task to the most busy free day (greedy approach). If such a day is not available, the algorithm will allocate the task to a day with the least amount of work allocated (in terms of effort). If multiple of such days exist, the algorithm chooses the first of such days.","lastModifiedDate":"2023-03-28"},{"lineNumber":634,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":635,"author":{"gitId":"joyngjr"},"content":"\u003cdetails\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":636,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":637,"author":{"gitId":"joyngjr"},"content":"\u003csummary\u003eMore about scheduling for Simple Tasks\u003c/summary\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":638,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":639,"author":{"gitId":"joyngjr"},"content":"After getting a list of _Simple Tasks_ from all tasks within _TaskBook_, a scheduling algorithm for simple tasks will be run. The following diagram shows its behaviour.","lastModifiedDate":"2023-03-28"},{"lineNumber":640,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":641,"author":{"gitId":"joyngjr"},"content":"\u003cimg src\u003d\"images/SimpleTaskAllocation.png\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":642,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":643,"author":{"gitId":"joyngjr"},"content":"\u003cb\u003eSome Rules\u003c/b\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":644,"author":{"gitId":"joyngjr"},"content":"* SimpleTasks will be allocated to the most busy free day, which is a day with highest current workload where adding a simple task does not result in workload exceeding intended workload. If multiple of such days are available, allocate to the first of such days.","lastModifiedDate":"2023-03-28"},{"lineNumber":645,"author":{"gitId":"joyngjr"},"content":"* If there are no such days, assigned workload will be allowed to exceed intended workload. Algorithm allocates simple task to a day with the lowest current workload.","lastModifiedDate":"2023-03-28"},{"lineNumber":646,"author":{"gitId":"joyngjr"},"content":"* SimpleTasks are allocated in descending order of effort.","lastModifiedDate":"2023-03-28"},{"lineNumber":647,"author":{"gitId":"joyngjr"},"content":"* SimpleTasks are assumed to be non-time-sensitive","lastModifiedDate":"2023-03-28"},{"lineNumber":648,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":649,"author":{"gitId":"joyngjr"},"content":"\u003cb\u003eAllocation Example\u003c/b\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":650,"author":{"gitId":"joyngjr"},"content":"* Task I is the first task to be allocated because it has the highest effort required. It will be allocated to 3 Jun 2023 because there are 2 free days (3 Jun and 4 Jun) with the same current workload, and 3 Jun is before 4 Jun.","lastModifiedDate":"2023-03-28"},{"lineNumber":651,"author":{"gitId":"joyngjr"},"content":"* Task H is the second to be allocated since it has the next highest effort required. It will be allocated to 4 Jun 2023 because it is the only free day, such that adding task H does not result in exceeding the desired workload.","lastModifiedDate":"2023-03-28"},{"lineNumber":652,"author":{"gitId":"joyngjr"},"content":"* Task G is then allocated to 3 Jun. Among the 2 days that Task G can be added to without exceeding desired workload (3 Jun and 4 Jun), 3 Jun has a higher workload. Thus, task G will be allocated to 3 Jun.","lastModifiedDate":"2023-03-28"},{"lineNumber":653,"author":{"gitId":"joyngjr"},"content":"\u003c/details\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":654,"author":{"gitId":"joyngjr"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":655,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":656,"author":{"gitId":"joyngjr"},"content":"Given below is an example usage scenario for viewing a generated plan and how the schedule command behaves at each step:","lastModifiedDate":"2023-03-28"},{"lineNumber":657,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":658,"author":{"gitId":"joyngjr"},"content":"Step 1. The user launches the application.","lastModifiedDate":"2023-03-28"},{"lineNumber":659,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":660,"author":{"gitId":"joyngjr"},"content":"Step 2. The application displays a list of tasks (that can also be empty).","lastModifiedDate":"2023-03-28"},{"lineNumber":661,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":662,"author":{"gitId":"joyngjr"},"content":"Step 2. The user executes `schedule D/TODAY\u0027S DATE` command to sort the list.","lastModifiedDate":"2023-03-28"},{"lineNumber":663,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":664,"author":{"gitId":"joyngjr"},"content":"Step 3. The sequence diagram below shows how the sort operation works:","lastModifiedDate":"2023-03-28"},{"lineNumber":665,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":666,"author":{"gitId":"joyngjr"},"content":"![ScheduleCommandNoPlanSequenceDiagram](images/ScheduleCommandNoPlanSequenceDiagram.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":667,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":668,"author":{"gitId":"joyngjr"},"content":"Given below is an example usage scenario for generating and viewing a plan and how the schedule command behaves at each step:","lastModifiedDate":"2023-03-28"},{"lineNumber":669,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":670,"author":{"gitId":"joyngjr"},"content":"Step 1. The user launches the application.","lastModifiedDate":"2023-03-28"},{"lineNumber":671,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":672,"author":{"gitId":"joyngjr"},"content":"Step 2. The application displays a list of tasks (that can also be empty).","lastModifiedDate":"2023-03-28"},{"lineNumber":673,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":674,"author":{"gitId":"joyngjr"},"content":"Step 2. The user executes `schedule D/TODAY\u0027S DATE E/EFFORT` command to sort the list.","lastModifiedDate":"2023-03-28"},{"lineNumber":675,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":676,"author":{"gitId":"joyngjr"},"content":"Step 3. The sequence diagram below shows how the sort operation works:","lastModifiedDate":"2023-03-28"},{"lineNumber":677,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":678,"author":{"gitId":"joyngjr"},"content":"![ScheduleCommandHavePlanSequenceDiagram](images/ScheduleCommandHavePlanSequenceDiagram.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":680,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-03-28"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":682,"author":{"gitId":"joyngjr"},"content":"![ScheduleCommandActivityDiagram](images/ScheduleCommandActivityDiagram.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"joyngjr"},"content":"#### 3.11.3 Design Consideration","lastModifiedDate":"2023-04-07"},{"lineNumber":685,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":686,"author":{"gitId":"joyngjr"},"content":"#### Option 1: Combine Schedule and Plan into a Single Command","lastModifiedDate":"2023-04-07"},{"lineNumber":687,"author":{"gitId":"joyngjr"},"content":"Allow users to generate a new plan by adding a parameter to the schedule command.","lastModifiedDate":"2023-04-07"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":689,"author":{"gitId":"joyngjr"},"content":"Pros: Faster for users to create a plan and see generated plan.","lastModifiedDate":"2023-04-07"},{"lineNumber":690,"author":{"gitId":"joyngjr"},"content":"Cons: More features attached to a single command may confuse new users.","lastModifiedDate":"2023-04-07"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":692,"author":{"gitId":"joyngjr"},"content":"#### Option 2: Separate Schedule and Plan","lastModifiedDate":"2023-04-07"},{"lineNumber":693,"author":{"gitId":"joyngjr"},"content":"Users will have to use a separate command to generate a plan, before using `schedule` to view daily schedule.","lastModifiedDate":"2023-04-07"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":695,"author":{"gitId":"joyngjr"},"content":"Pros: Clearer separation of features may be easier for new users to understand.","lastModifiedDate":"2023-04-07"},{"lineNumber":696,"author":{"gitId":"joyngjr"},"content":"Cons: Slower in regular usage as two commands are needed for feature to work, instead of one.","lastModifiedDate":"2023-04-07"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":698,"author":{"gitId":"joyngjr"},"content":"#### Eventual Decision","lastModifiedDate":"2023-04-07"},{"lineNumber":699,"author":{"gitId":"joyngjr"},"content":"In the long run, users should be familiar with the usage scenarios of the commands, so the efficiency benefits of a chained command outweighs the costs of command complexity.","lastModifiedDate":"2023-04-07"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":701,"author":{"gitId":"lywich"},"content":"### 3.12 Tag color codes","lastModifiedDate":"2023-03-28"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":703,"author":{"gitId":"lywich"},"content":"Color coded tags are a new feature aimed at providing a better User experience such that users are able to identify similar tags easily.","lastModifiedDate":"2023-03-28"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":705,"author":{"gitId":"lywich"},"content":"It is important to note that there are currently only 20 colors available and colors are assigned by the program (within TaskCard.java) and not the user.","lastModifiedDate":"2023-03-28"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":707,"author":{"gitId":"lywich"},"content":"The color is decided by calculating the hashcode of the tag\u0027s name then module 20 (the current size of the available colors).","lastModifiedDate":"2023-03-28"},{"lineNumber":708,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":709,"author":{"gitId":"lywich"},"content":"The color of this tag is then decided by looking up the result in an array of colors and taking its corresponding color.","lastModifiedDate":"2023-03-28"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":711,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"lywich"},"content":"## 4. **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2023-03-21"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"joyngjr"},"content":"**This section contains some links to the guides that are used when developing Clock-Work. You are highly encouraged to adhere to these guides when working on Clock-Work.**","lastModifiedDate":"2023-03-28"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":717,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":718,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":719,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":720,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":721,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"lywich"},"content":"## 5. **Appendix: Requirements**","lastModifiedDate":"2023-03-21"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"joyngjr"},"content":"**This section documents project requirements written by the Clock-Work development team.**","lastModifiedDate":"2023-03-28"},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":729,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"joyngjr"},"content":"* needs to manage a significant number of assignments/tasks.","lastModifiedDate":"2023-03-20"},{"lineNumber":734,"author":{"gitId":"joyngjr"},"content":"* prefer desktop apps over other types (eg. mobile apps)","lastModifiedDate":"2023-03-20"},{"lineNumber":735,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":737,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"joyngjr"},"content":"* gains familiarity with specific command input formats easily","lastModifiedDate":"2023-03-20"},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"Huggenguggen"},"content":"**Value proposition**: manage tasks faster than a typical mouse/GUI driven app and has convenient features bundled in.","lastModifiedDate":"2023-02-18"},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"| Priority | As a …​         | I want to …​                                  | So that I can…​                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"joyngjr"},"content":"|----------|-----------------|-----------------------------------------------|-------------------------------------------------|","lastModifiedDate":"2023-03-20"},{"lineNumber":749,"author":{"gitId":"Huggenguggen"},"content":"| `* * *`  | user            | add a task                                    |                                                 |","lastModifiedDate":"2023-02-18"},{"lineNumber":750,"author":{"gitId":"Huggenguggen"},"content":"| `* * *`  | user            | delete a task                                 | delete a task that I erroneously added          |","lastModifiedDate":"2023-02-18"},{"lineNumber":751,"author":{"gitId":"Huggenguggen"},"content":"| `* * *`  | user            | find a task                                   | perform queries more efficiently                |","lastModifiedDate":"2023-02-18"},{"lineNumber":752,"author":{"gitId":"Huggenguggen"},"content":"| `* * *`  | user            | view my tasks                                 | plan my time more efficiently                   |","lastModifiedDate":"2023-02-18"},{"lineNumber":753,"author":{"gitId":"Huggenguggen"},"content":"| `* *`    | user            | sort my tasks by deadline                     | So that I can see which tasks are due sooner    |","lastModifiedDate":"2023-02-18"},{"lineNumber":754,"author":{"gitId":"Huggenguggen"},"content":"| `* *`    | fickle user     | edit a task                                   | correct mistakes without deleting a task        |","lastModifiedDate":"2023-02-18"},{"lineNumber":755,"author":{"gitId":"Huggenguggen"},"content":"| `* *`    | user            | have a project folder                         | look at only my projects at a glance            |","lastModifiedDate":"2023-02-18"},{"lineNumber":756,"author":{"gitId":"Huggenguggen"},"content":"| `* *`    | organized user  | add tags to tasks                             | organize them better                            |","lastModifiedDate":"2023-02-18"},{"lineNumber":757,"author":{"gitId":"Huggenguggen"},"content":"| `* *`    | indecisive user | know what tasks to prioritise                 | not have to dedicate time to thinking about it  |","lastModifiedDate":"2023-02-18"},{"lineNumber":758,"author":{"gitId":"Huggenguggen"},"content":"| `* *`    | user            | keep track of how many tasks I have completed | keep track of my projects                       |","lastModifiedDate":"2023-02-18"},{"lineNumber":759,"author":{"gitId":"Huggenguggen"},"content":"| `* *`    | forgetful user  | be prompted when assignments are due          | don\u0027t miss deadlines                            |","lastModifiedDate":"2023-02-18"},{"lineNumber":760,"author":{"gitId":"Huggenguggen"},"content":"| `*`      | organized user  | organize tasks by modules/subjects            | easily find my tasks                            |","lastModifiedDate":"2023-02-18"},{"lineNumber":761,"author":{"gitId":"Huggenguggen"},"content":"| `*`      | user            | see motivational quotes                       | be motivated to do my tasks                     |","lastModifiedDate":"2023-02-18"},{"lineNumber":762,"author":{"gitId":"Huggenguggen"},"content":"| `*`      | lazy user       | automate typing in repetitive tasks           | save time entering similar entries              |","lastModifiedDate":"2023-02-18"},{"lineNumber":763,"author":{"gitId":"Huggenguggen"},"content":"| `*`      | lazy user       | have a schedule planned out for me            | not have to dedicate time to administration     |","lastModifiedDate":"2023-02-18"},{"lineNumber":764,"author":{"gitId":"Huggenguggen"},"content":"| `*`      | busy user       | add colour codes                              | easily identify my tasks at a glance            |","lastModifiedDate":"2023-02-18"},{"lineNumber":765,"author":{"gitId":"joyngjr"},"content":"| `*`      | forgetful user  | view my previously generated schedule         | continue working on what i was doing previously |","lastModifiedDate":"2023-03-20"},{"lineNumber":766,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"Huggenguggen"},"content":"(For all use cases below, the **System** is the `Clock-Work` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-28"},{"lineNumber":773,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":774,"author":{"gitId":"Huggenguggen"},"content":"**Use case: Add a task**","lastModifiedDate":"2023-03-28"},{"lineNumber":775,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":776,"author":{"gitId":"Huggenguggen"},"content":"**MSS**","lastModifiedDate":"2023-03-28"},{"lineNumber":777,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":778,"author":{"gitId":"Huggenguggen"},"content":"1. User requests to add a task","lastModifiedDate":"2023-03-28"},{"lineNumber":779,"author":{"gitId":"Huggenguggen"},"content":"2. TaskBook adds a task based on parameters supplied.","lastModifiedDate":"2023-03-28"},{"lineNumber":780,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":781,"author":{"gitId":"Huggenguggen"},"content":"    Use case ends.","lastModifiedDate":"2023-03-28"},{"lineNumber":782,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":783,"author":{"gitId":"Huggenguggen"},"content":"**Extensions**","lastModifiedDate":"2023-03-28"},{"lineNumber":784,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":785,"author":{"gitId":"Huggenguggen"},"content":"* 1a. The input syntax is invalid","lastModifiedDate":"2023-03-28"},{"lineNumber":786,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":787,"author":{"gitId":"Huggenguggen"},"content":"    * 1a1. TaskBook shows an error message.","lastModifiedDate":"2023-03-28"},{"lineNumber":788,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":789,"author":{"gitId":"Huggenguggen"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-28"},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":791,"author":{"gitId":"Huggenguggen"},"content":"* 1b. The supplied name already exists in the TaskBook.","lastModifiedDate":"2023-03-28"},{"lineNumber":792,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":793,"author":{"gitId":"Huggenguggen"},"content":"    * 3a2. TaskBook shows an error message","lastModifiedDate":"2023-03-28"},{"lineNumber":794,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":795,"author":{"gitId":"Huggenguggen"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-28"},{"lineNumber":796,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"lywich"},"content":"**Use case: Delete a task**","lastModifiedDate":"2023-02-18"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"lywich"},"content":"1.  User requests to list tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":803,"author":{"gitId":"joyngjr"},"content":"2.  TaskBook shows a list of tasks","lastModifiedDate":"2023-03-28"},{"lineNumber":804,"author":{"gitId":"lywich"},"content":"3.  User requests to delete a specific task in the list","lastModifiedDate":"2023-02-18"},{"lineNumber":805,"author":{"gitId":"joyngjr"},"content":"4.  TaskBook deletes the task","lastModifiedDate":"2023-03-28"},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"joyngjr"},"content":"    * 3a1. TaskBook shows an error message.","lastModifiedDate":"2023-03-28"},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":821,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":822,"author":{"gitId":"lywich"},"content":"**Use case: Edit a task**","lastModifiedDate":"2023-03-27"},{"lineNumber":823,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":824,"author":{"gitId":"lywich"},"content":"**MSS**","lastModifiedDate":"2023-03-27"},{"lineNumber":825,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":826,"author":{"gitId":"lywich"},"content":"1.  User requests to list tasks","lastModifiedDate":"2023-03-27"},{"lineNumber":827,"author":{"gitId":"lywich"},"content":"2.  TaskBook shows a list of tasks","lastModifiedDate":"2023-03-27"},{"lineNumber":828,"author":{"gitId":"lywich"},"content":"3.  User requests to edit a specific task in the list","lastModifiedDate":"2023-03-27"},{"lineNumber":829,"author":{"gitId":"lywich"},"content":"4.  TaskBook edits the task based on the parameters supplied.","lastModifiedDate":"2023-03-27"},{"lineNumber":830,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":831,"author":{"gitId":"lywich"},"content":"    Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":832,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":833,"author":{"gitId":"lywich"},"content":"**Extensions**","lastModifiedDate":"2023-03-27"},{"lineNumber":834,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":835,"author":{"gitId":"lywich"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-27"},{"lineNumber":836,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":837,"author":{"gitId":"lywich"},"content":"  Use case ends.","lastModifiedDate":"2023-03-27"},{"lineNumber":838,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":839,"author":{"gitId":"lywich"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-03-27"},{"lineNumber":840,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":841,"author":{"gitId":"lywich"},"content":"  * 3a1. TaskBook shows an error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":842,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":843,"author":{"gitId":"lywich"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-03-27"},{"lineNumber":844,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"lywich"},"content":"* 3b. The input syntax is invalid","lastModifiedDate":"2023-03-27"},{"lineNumber":846,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":847,"author":{"gitId":"lywich"},"content":"  * 3a2. TaskBook shows an error message","lastModifiedDate":"2023-03-27"},{"lineNumber":848,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":849,"author":{"gitId":"lywich"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-03-27"},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":851,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":852,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":853,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":854,"author":{"gitId":"lywich"},"content":"2.  Should be able to hold up to 1000 tasks without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-02-18"},{"lineNumber":855,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":856,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":857,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":858,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":859,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":860,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":861,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":862,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":863,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":864,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":865,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":866,"author":{"gitId":"lywich"},"content":"## 6. **Appendix: Instructions for manual testing**","lastModifiedDate":"2023-03-21"},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"joyngjr"},"content":"**This section contains instructions to test Clock-Work manually. Here are some ways you can test Clock-Work.**","lastModifiedDate":"2023-03-28"},{"lineNumber":869,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":870,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":871,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":872,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":873,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":874,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":875,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":876,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":877,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":879,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":880,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":881,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":882,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":883,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":884,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":885,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":886,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":887,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":888,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":889,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":890,"author":{"gitId":"lywich"},"content":"### Deleting a task","lastModifiedDate":"2023-02-18"},{"lineNumber":891,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":892,"author":{"gitId":"lywich"},"content":"1. Deleting a task while all tasks are being shown","lastModifiedDate":"2023-02-18"},{"lineNumber":893,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"lywich"},"content":"   1. Prerequisites: List all tasks using the `list` command. Multiple tasks in the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":895,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":896,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":897,"author":{"gitId":"Huggenguggen"},"content":"      Expected: First task is deleted from the list. Details of the deleted task shown in the status message. ","lastModifiedDate":"2023-04-08"},{"lineNumber":898,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":899,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":900,"author":{"gitId":"lywich"},"content":"      Expected: No task is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-02-18"},{"lineNumber":901,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"Huggenguggen"},"content":"### Set an alert window","lastModifiedDate":"2023-04-08"},{"lineNumber":906,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":907,"author":{"gitId":"Huggenguggen"},"content":"1. Add a task that starts or ends within 24 hours","lastModifiedDate":"2023-04-08"},{"lineNumber":908,"author":{"gitId":"Huggenguggen"},"content":"   1. Prerequisites: It is the first start-up of Clock-Work with no `alert` command calls. OR \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":909,"author":{"gitId":"Huggenguggen"},"content":"    User has already called `alert 24`.","lastModifiedDate":"2023-04-08"},{"lineNumber":910,"author":{"gitId":"Huggenguggen"},"content":"   1. Test case: `add n/Test D/2023-04-08 0900` assuming that is it currently `2023-04-07 1000` \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":911,"author":{"gitId":"Huggenguggen"},"content":"    Expected: Task added to the task list. Details of added task shown in status message. \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":912,"author":{"gitId":"Huggenguggen"},"content":"    If it is first time start up of Clock-Work or alert window already set to 24, the task should already appear in the alert window.","lastModifiedDate":"2023-04-08"},{"lineNumber":913,"author":{"gitId":"Huggenguggen"},"content":"2. Add a task that starts or ends within 48 hours","lastModifiedDate":"2023-04-08"},{"lineNumber":914,"author":{"gitId":"Huggenguggen"},"content":"   1. Prerequisites: It is the first start-up of Clock-Work with no changes `alert` command calls. OR \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":915,"author":{"gitId":"Huggenguggen"},"content":"      User has already called `alert` with an alert window less than 48 hours.","lastModifiedDate":"2023-04-08"},{"lineNumber":916,"author":{"gitId":"Huggenguggen"},"content":"   1. Set up: `add n/Test D/2023-04-09 0900` assuming that is it currently `2023-04-07 1000` \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":917,"author":{"gitId":"Huggenguggen"},"content":"      Expected: Task added to the task list. Details of added task shown in status message. \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":918,"author":{"gitId":"Huggenguggen"},"content":"   1. Test case: `alert 48`. \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":919,"author":{"gitId":"Huggenguggen"},"content":"   Expected: The task should already appear in the alert window.","lastModifiedDate":"2023-04-08"},{"lineNumber":920,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":921,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":922,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":925,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":928,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":929,"author":{"gitId":"Huggenguggen"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":930,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":931,"author":{"gitId":"Huggenguggen"},"content":"## 7. **Appendix: Planned Enhancements**","lastModifiedDate":"2023-04-04"},{"lineNumber":932,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":933,"author":{"gitId":"Huggenguggen"},"content":"**This section contains future enhancements to be implemented past v1.4.**","lastModifiedDate":"2023-04-04"},{"lineNumber":934,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":935,"author":{"gitId":"Huggenguggen"},"content":"### 7.1 Accommodating long inputs","lastModifiedDate":"2023-04-04"},{"lineNumber":936,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":937,"author":{"gitId":"Huggenguggen"},"content":"- As brought up by issue [#193](https://github.com/AY2223S2-CS2103T-W13-3/tp/issues/193) and [#168](https://github.com/AY2223S2-CS2103T-W13-3/tp/issues/168), ","lastModifiedDate":"2023-04-04"},{"lineNumber":938,"author":{"gitId":"Huggenguggen"},"content":"long inputs, whether it be for `n/[NAME]` or `d/[DESCRIPTION]` or `t/[TAG]` causes the user to not be able to see the parameter.","lastModifiedDate":"2023-04-04"},{"lineNumber":939,"author":{"gitId":"Huggenguggen"},"content":"#### Possible Solution","lastModifiedDate":"2023-04-04"},{"lineNumber":940,"author":{"gitId":"Huggenguggen"},"content":"- One **possible** fix would be for us to limit the length of parameters to a reasonable length (we considered 50 chars)","lastModifiedDate":"2023-04-04"},{"lineNumber":941,"author":{"gitId":"Huggenguggen"},"content":"- However, this does not fully solve the issue as tags numerous.","lastModifiedDate":"2023-04-04"},{"lineNumber":942,"author":{"gitId":"Huggenguggen"},"content":"- A better solution we plan to implement is to make use of `JavaFX wrap-around` attribute.","lastModifiedDate":"2023-04-04"},{"lineNumber":943,"author":{"gitId":"Huggenguggen"},"content":"- Specifically, to use it in the `TaskListCard.fxml`","lastModifiedDate":"2023-04-04"},{"lineNumber":944,"author":{"gitId":"Huggenguggen"},"content":"- This would have the effect of making each `TaskCard` have a dynamic height to allow all text to be shown.","lastModifiedDate":"2023-04-04"},{"lineNumber":945,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":946,"author":{"gitId":"Huggenguggen"},"content":"#### Pros","lastModifiedDate":"2023-04-04"},{"lineNumber":947,"author":{"gitId":"Huggenguggen"},"content":"- This solves the problem at it\u0027s root as it should theoretically allow any length input to still be viewable by the user.","lastModifiedDate":"2023-04-04"},{"lineNumber":948,"author":{"gitId":"Huggenguggen"},"content":"- Combined with the limiting of parameter length, it should work for most reasonably sized inputs.","lastModifiedDate":"2023-04-04"},{"lineNumber":949,"author":{"gitId":"Huggenguggen"},"content":"- This solution should be relatively easy to implement with only 1-2 files to edit.","lastModifiedDate":"2023-04-04"},{"lineNumber":950,"author":{"gitId":"Huggenguggen"},"content":"- Another benefit to this solution would be that it solves another issue brought up [#182](https://github.com/AY2223S2-CS2103T-W13-3/tp/issues/182)","lastModifiedDate":"2023-04-04"},{"lineNumber":951,"author":{"gitId":"Huggenguggen"},"content":"- Since the `AlertListPanel` is also made up of a `TaskListPanel` and hence `TaskCard` instances, the wrap-text if applied to all parameters would make it so all text is visible.","lastModifiedDate":"2023-04-04"},{"lineNumber":952,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":953,"author":{"gitId":"Huggenguggen"},"content":"#### Cons","lastModifiedDate":"2023-04-04"},{"lineNumber":954,"author":{"gitId":"Huggenguggen"},"content":"- This solution results in different possible heights for each `TaskCard` which might look slightly unpleasant.","lastModifiedDate":"2023-04-04"},{"lineNumber":955,"author":{"gitId":"Huggenguggen"},"content":"- If there are too many tags/the text is too long, the user would have to scroll much more to get past that `TaskCard`.","lastModifiedDate":"2023-04-04"},{"lineNumber":956,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":957,"author":{"gitId":"Huggenguggen"},"content":"#### Mock-up","lastModifiedDate":"2023-04-04"},{"lineNumber":958,"author":{"gitId":"Huggenguggen"},"content":"- Here is a few sample images of how the UI might look like with a simpler implementation of this fix (only on the name attribute).","lastModifiedDate":"2023-04-04"},{"lineNumber":959,"author":{"gitId":"Huggenguggen"},"content":"![text-wrap0](images/text-wrap0.png)","lastModifiedDate":"2023-04-04"},{"lineNumber":960,"author":{"gitId":"Huggenguggen"},"content":"![text-wrap1](images/text-wrap1.png)","lastModifiedDate":"2023-04-04"},{"lineNumber":961,"author":{"gitId":"Huggenguggen"},"content":"![text-wrap2](images/text-wrap2.png)","lastModifiedDate":"2023-04-04"},{"lineNumber":962,"author":{"gitId":"Huggenguggen"},"content":"- Ideally, this wrap-text would be implemented on all text fields","lastModifiedDate":"2023-04-04"},{"lineNumber":963,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":964,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":965,"author":{"gitId":"PROGRAMMERHAO"},"content":"### 7.2 Enabling `find` by subsection","lastModifiedDate":"2023-04-08"},{"lineNumber":966,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":967,"author":{"gitId":"PROGRAMMERHAO"},"content":"- As brought up by issue [#173](https://github.com/AY2223S2-CS2103T-W13-3/tp/issues/173), the application currently does not support finding","lastModifiedDate":"2023-04-05"},{"lineNumber":968,"author":{"gitId":"PROGRAMMERHAO"},"content":"a task by its subsection name or description.","lastModifiedDate":"2023-04-05"},{"lineNumber":969,"author":{"gitId":"PROGRAMMERHAO"},"content":"#### Possible Solution","lastModifiedDate":"2023-04-05"},{"lineNumber":970,"author":{"gitId":"PROGRAMMERHAO"},"content":"- One possible solution is to add a predicate in the `model.task` package that allows the list to be filtered based on whether the task has a certain subsection name/description.","lastModifiedDate":"2023-04-05"},{"lineNumber":971,"author":{"gitId":"PROGRAMMERHAO"},"content":"- The find command parser also needs to be modified to take in prefixes such as `sub-n/` and `sub-d/`.","lastModifiedDate":"2023-04-07"},{"lineNumber":972,"author":{"gitId":"PROGRAMMERHAO"},"content":"- Inside the predicates, we go through each task\u0027s subsections and see whether at least one subsection contains the user\u0027s input name or description. ","lastModifiedDate":"2023-04-05"},{"lineNumber":973,"author":{"gitId":"PROGRAMMERHAO"},"content":"- The new command will look something like `find sub-n/NAME`, which finds a task by its subsection name. Find by subsection description command can look like ","lastModifiedDate":"2023-04-08"},{"lineNumber":974,"author":{"gitId":"PROGRAMMERHAO"},"content":"`find sub-d/DESCRIPTION`.","lastModifiedDate":"2023-04-08"},{"lineNumber":975,"author":{"gitId":"PROGRAMMERHAO"},"content":"- An example call could be `find sub-n/homework` or `find sub-d/chapter 1`.","lastModifiedDate":"2023-04-08"},{"lineNumber":976,"author":{"gitId":"PROGRAMMERHAO"},"content":"- The result of the command will be a  displayed list of tasks found:","lastModifiedDate":"2023-04-05"},{"lineNumber":977,"author":{"gitId":"PROGRAMMERHAO"},"content":"![text-wrap0](images/find-bysubsectionname.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":978,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":979,"author":{"gitId":"PROGRAMMERHAO"},"content":"#### Pros","lastModifiedDate":"2023-04-08"},{"lineNumber":980,"author":{"gitId":"PROGRAMMERHAO"},"content":"- This gives the user more options for searching a task. ","lastModifiedDate":"2023-04-08"},{"lineNumber":981,"author":{"gitId":"PROGRAMMERHAO"},"content":"- User can find a task even if the user only remembers the subsection\u0027s name or description.","lastModifiedDate":"2023-04-08"},{"lineNumber":982,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":983,"author":{"gitId":"PROGRAMMERHAO"},"content":"#### Cons","lastModifiedDate":"2023-04-08"},{"lineNumber":984,"author":{"gitId":"PROGRAMMERHAO"},"content":"- The flaw of this approach is that user needs to specify whether he/she is searching for the task by its main name or subsection name. Sometimes the user might not remember exactly","lastModifiedDate":"2023-04-08"},{"lineNumber":985,"author":{"gitId":"PROGRAMMERHAO"},"content":"whether the name of the task he/she wants to find is in the parent task or subsection. ","lastModifiedDate":"2023-04-08"},{"lineNumber":986,"author":{"gitId":"PROGRAMMERHAO"},"content":"- The user also needs to remember that `sub-n` means subsection name and `sub-d` means subsection description.","lastModifiedDate":"2023-04-08"},{"lineNumber":987,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":988,"author":{"gitId":"PROGRAMMERHAO"},"content":"### 7.3 Enabling `edit` by subsection","lastModifiedDate":"2023-04-05"},{"lineNumber":989,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":990,"author":{"gitId":"PROGRAMMERHAO"},"content":"- The application currently does not support editing a task\u0027s subsection name, description and other future fields.","lastModifiedDate":"2023-04-08"},{"lineNumber":991,"author":{"gitId":"PROGRAMMERHAO"},"content":"#### Possible Solution","lastModifiedDate":"2023-04-05"},{"lineNumber":992,"author":{"gitId":"PROGRAMMERHAO"},"content":"- One possible solution is to modify the edit command and its parser so that the user can edit a subsection field.","lastModifiedDate":"2023-04-08"},{"lineNumber":993,"author":{"gitId":"PROGRAMMERHAO"},"content":"- Inside the `execute` method of the `EditCommand`, we will create a new task with the subsection specified by the user changed to a new name/description, or any other field in the subsection.","lastModifiedDate":"2023-04-08"},{"lineNumber":994,"author":{"gitId":"PROGRAMMERHAO"},"content":"- This is extendable to all fields in subsections, such as effort level, deadline, from date and to date.","lastModifiedDate":"2023-04-08"},{"lineNumber":995,"author":{"gitId":"PROGRAMMERHAO"},"content":"- The new command will look something like `edit INDEX I/INDEX sub-n/NAME`, which edits a task\u0027s subsection name. Edit by subsection description command can look like","lastModifiedDate":"2023-04-08"},{"lineNumber":996,"author":{"gitId":"PROGRAMMERHAO"},"content":"  `edit INDEX I/INDEX sub-d/DESCRIPTION`. Here, the first index corresponds to the main task\u0027s index in the current task list displayed and the index after","lastModifiedDate":"2023-04-08"},{"lineNumber":997,"author":{"gitId":"PROGRAMMERHAO"},"content":"prefix `I/` corresponds to the index of the subsection in the parent task. ","lastModifiedDate":"2023-04-05"},{"lineNumber":998,"author":{"gitId":"PROGRAMMERHAO"},"content":"- An example could be `edit 1 I/1 sub-n/lab` or `edit 1 I/1 sub-d/chapter 1`.","lastModifiedDate":"2023-04-08"},{"lineNumber":999,"author":{"gitId":"PROGRAMMERHAO"},"content":"- Other proposed command prefixes include `sub-e/`, `sub-D/`, `sub-F/`, and `sub-T/` for editing subsections\u0027 effort level, deadline, from dates and to dates respectively.","lastModifiedDate":"2023-04-08"},{"lineNumber":1000,"author":{"gitId":"PROGRAMMERHAO"},"content":"- The result of the command will be the following text on success: `Edited Task: cs2103t tasks, edited subsection: name: milestone 1  description: build homepage`","lastModifiedDate":"2023-04-08"},{"lineNumber":1001,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1002,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1003,"author":{"gitId":"PROGRAMMERHAO"},"content":"#### Pros","lastModifiedDate":"2023-04-08"},{"lineNumber":1004,"author":{"gitId":"PROGRAMMERHAO"},"content":"- This is easy to implement, with the standard edit command already in place.","lastModifiedDate":"2023-04-08"},{"lineNumber":1005,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1006,"author":{"gitId":"PROGRAMMERHAO"},"content":"#### Cons","lastModifiedDate":"2023-04-08"},{"lineNumber":1007,"author":{"gitId":"PROGRAMMERHAO"},"content":"- Same as the above command, user needs to remember what does `sub-n` and `sub-d` refers to, as well as other prefixes\u0027 meaning.","lastModifiedDate":"2023-04-08"},{"lineNumber":1008,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1009,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1010,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1011,"author":{"gitId":"PROGRAMMERHAO"},"content":"### 7.4 Enabling `schedule` by subsection","lastModifiedDate":"2023-04-05"},{"lineNumber":1012,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1013,"author":{"gitId":"PROGRAMMERHAO"},"content":"- The application currently does not support scheduling subsections so that they can be completed on different days.","lastModifiedDate":"2023-04-05"},{"lineNumber":1014,"author":{"gitId":"PROGRAMMERHAO"},"content":"#### Possible Solution","lastModifiedDate":"2023-04-05"},{"lineNumber":1015,"author":{"gitId":"PROGRAMMERHAO"},"content":"- One possible solution is to allocate the main task\u0027s effort level to the subsection and allow the subsection to be one of a simple task, deadline or event. The scheduling algorithm will allocate big tasks by putting them across different days with different subsections on each day.","lastModifiedDate":"2023-04-06"},{"lineNumber":1016,"author":{"gitId":"PROGRAMMERHAO"},"content":"- The new `subsection` command will look something like `subsection n/NAME [d/DESCRIPTION] [E/EFFORT LEVEL] [D/DEADLINE] [F/FROM DATE] [T/TO DATE]`. If the effort level is not specified, then the effort level of the main task will be evenly distributed among the subsections.","lastModifiedDate":"2023-04-08"},{"lineNumber":1017,"author":{"gitId":"PROGRAMMERHAO"},"content":"- The `schedule` command will still look like `schedule E/EFFORT D/DATE` but the result will be the parent tasks along with only part of the subsections that is set to be completed on that day.","lastModifiedDate":"2023-04-06"},{"lineNumber":1018,"author":{"gitId":"PROGRAMMERHAO"},"content":"- For example, if the task list only contains a parent task that has an effort level of 50, with two subsections called \"homework A\" and \"homework B\" with 25 effort level each, when the user enters `schedule E/25 D/2023-05-04` and today is 2023-05-04, the displayed result ","lastModifiedDate":"2023-04-06"},{"lineNumber":1019,"author":{"gitId":"PROGRAMMERHAO"},"content":"will only be the parent task and the subsection \"homework A\". If the user enters `schedule E/25 D/2023-05-05` then, the same parent task with subsection \"homework B\" will be displayed.","lastModifiedDate":"2023-04-06"},{"lineNumber":1020,"author":{"gitId":"PROGRAMMERHAO"},"content":"- The effort level will be checked when user creates a subsection because user may enter an effort level that is higher than the main task\u0027s effort level. If the user specifies an effort level for a subsection, and the new total effort level of subsections is smaller than or equal ","lastModifiedDate":"2023-04-08"},{"lineNumber":1021,"author":{"gitId":"PROGRAMMERHAO"},"content":"to the effort level of the main task, the remaining effort level of a main task will just belong to the main task and the main task will be scheduled again on some day without any subsection. The same checks will happen if the user edits the subsection\u0027s effort level, i.e. making sure","lastModifiedDate":"2023-04-08"},{"lineNumber":1022,"author":{"gitId":"PROGRAMMERHAO"},"content":"that the total effort level is smaller than the main task\u0027s.","lastModifiedDate":"2023-04-08"},{"lineNumber":1023,"author":{"gitId":"PROGRAMMERHAO"},"content":"- This method ensures that each subsection is treated as a somewhat individual task when scheduling, so that the main task\u0027s workload can be spread out. The scheduling algorithm will allocate the deadlines\u0027 subsections before the deadline date, even if that may result in ","lastModifiedDate":"2023-04-06"},{"lineNumber":1024,"author":{"gitId":"PROGRAMMERHAO"},"content":"the total effort on a certain date exceeding daily effort level. Also, the events\u0027 subsections should occur between the events\u0027 start and end time. ","lastModifiedDate":"2023-04-06"},{"lineNumber":1025,"author":{"gitId":"PROGRAMMERHAO"},"content":"- Moreover, allowing parent tasks to have deadlines and events as subsections will allow deadlines to be broken down into multiple deadlines and events to contain multiple events. Those components will be scheduled individually and displayed along with the parent tasks. ","lastModifiedDate":"2023-04-06"},{"lineNumber":1026,"author":{"gitId":"PROGRAMMERHAO"},"content":"This ensures that the user have more flexibility in handling subsections.","lastModifiedDate":"2023-04-06"},{"lineNumber":1027,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1028,"author":{"gitId":"PROGRAMMERHAO"},"content":"#### Pros","lastModifiedDate":"2023-04-08"},{"lineNumber":1029,"author":{"gitId":"PROGRAMMERHAO"},"content":"- This gives user more flexibility in terms of managing subsections, as the subsections can now take the type of deadlines and events.","lastModifiedDate":"2023-04-08"},{"lineNumber":1030,"author":{"gitId":"PROGRAMMERHAO"},"content":"- User can now determine subsections\u0027 effort levels so that they can break down complex tasks better.","lastModifiedDate":"2023-04-08"},{"lineNumber":1031,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1032,"author":{"gitId":"PROGRAMMERHAO"},"content":"#### Cons","lastModifiedDate":"2023-04-08"},{"lineNumber":1033,"author":{"gitId":"PROGRAMMERHAO"},"content":"- This makes subsection unwieldy to add.","lastModifiedDate":"2023-04-08"},{"lineNumber":1034,"author":{"gitId":"PROGRAMMERHAO"},"content":"- The user needs to calculate himself how he/she would like to arrange the effort levels. For example, if the current subsections\u0027 total effort level \u003d main task\u0027s effort level, the user needs to plan well and reduce some subsections\u0027 effort level before increasing other subsections\u0027.","lastModifiedDate":"2023-04-08"},{"lineNumber":1035,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1036,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1037,"author":{"gitId":"PROGRAMMERHAO"},"content":"### 7.5 Enabling `sort` by subsection","lastModifiedDate":"2023-04-08"},{"lineNumber":1038,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1039,"author":{"gitId":"PROGRAMMERHAO"},"content":"- The application currently does not support sorting subsections.","lastModifiedDate":"2023-04-08"},{"lineNumber":1040,"author":{"gitId":"PROGRAMMERHAO"},"content":"#### Possible Solution","lastModifiedDate":"2023-04-05"},{"lineNumber":1041,"author":{"gitId":"PROGRAMMERHAO"},"content":"- One possible solution is to implement a `compareTo` function in the `Subtask` class. This is so that we can call `list.sort()` for the list of subsections in a task with a custom `compareTo` method.","lastModifiedDate":"2023-04-05"},{"lineNumber":1042,"author":{"gitId":"PROGRAMMERHAO"},"content":"- The command will now look like `sort-sub INDEX`, where the index is the index of the main task in the task list currently displayed to the user. The result of the command will be all the subsections","lastModifiedDate":"2023-04-08"},{"lineNumber":1043,"author":{"gitId":"PROGRAMMERHAO"},"content":"of the selected parent task sorted. The sorting will sort subsections in the order of simple task \u003e deadlines \u003e events, followed by the effort level of the subsections, breaking ties using the subsection names\u0027 alphabetical order. This order is similar to the main tasks\u0027 sorting method.","lastModifiedDate":"2023-04-08"},{"lineNumber":1044,"author":{"gitId":"PROGRAMMERHAO"},"content":"- The result of the sorted subtasks will be displayed with new indexes inside the parent task.","lastModifiedDate":"2023-04-05"},{"lineNumber":1045,"author":{"gitId":"PROGRAMMERHAO"},"content":"- To sort all the tasks, use `sort-sub all/` and the command will call the sorting function on the subsection list of each of the main tasks displayed.","lastModifiedDate":"2023-04-05"},{"lineNumber":1046,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1047,"author":{"gitId":"PROGRAMMERHAO"},"content":"#### Pros","lastModifiedDate":"2023-04-08"},{"lineNumber":1048,"author":{"gitId":"PROGRAMMERHAO"},"content":"- With sorting enabled, user will be able to see `SimpleTask`, `Event` and `Deadlines` being grouped together with same type of tasks. This gives user a better overview of what subsections are there.","lastModifiedDate":"2023-04-08"},{"lineNumber":1049,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1050,"author":{"gitId":"PROGRAMMERHAO"},"content":"#### Cons","lastModifiedDate":"2023-04-08"},{"lineNumber":1051,"author":{"gitId":"PROGRAMMERHAO"},"content":"- The sorting simply sorts the subsections according to their type and fields such as name and dates, it would not really benefit user in planning.  ","lastModifiedDate":"2023-04-08"},{"lineNumber":1052,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1053,"author":{"gitId":"PROGRAMMERHAO"},"content":"### 7.6 Better error messages","lastModifiedDate":"2023-04-08"},{"lineNumber":1054,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1055,"author":{"gitId":"PROGRAMMERHAO"},"content":"- Currently, there are still some error messages that are not specific enough. For example, for the edit command, if the user enters an index that is out of bounds, i.e. the index is negative or the index is larger than the maximum index currently displayed in the list, the error message will be:","lastModifiedDate":"2023-04-07"},{"lineNumber":1056,"author":{"gitId":"PROGRAMMERHAO"},"content":"  ![text-wrap0](images/index-error.png)","lastModifiedDate":"2023-04-07"},{"lineNumber":1057,"author":{"gitId":"PROGRAMMERHAO"},"content":"However, a more specific error would be `The index provided is invalid`. In the future, the error message will be changed to `The index provided is invalid` for index errors.","lastModifiedDate":"2023-04-07"},{"lineNumber":1058,"author":{"gitId":"PROGRAMMERHAO"},"content":"- Moreover, there is another minor bug about index inputs when the user enters the index `0` in all sorts of commands, such as `delete`, `edit`, `subsection`, and `remove-subsection`. The error message will show each command\u0027s expected usage, such as the one shown in the example above. However, a more","lastModifiedDate":"2023-04-07"},{"lineNumber":1059,"author":{"gitId":"PROGRAMMERHAO"},"content":"specific usage will still be `The index provided is invalid`, which will be the standard behaviour for index errors in the future.","lastModifiedDate":"2023-04-07"},{"lineNumber":1060,"author":{"gitId":"PROGRAMMERHAO"},"content":"- Perhaps we can add an `IndexOutOfBoundsException` for all the above errors, such that when the catcher catches the exception, error message will always be `The index provided is invalid`.","lastModifiedDate":"2023-04-08"},{"lineNumber":1061,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1062,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1063,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1064,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":1065,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1066,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1067,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1068,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1069,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"Huggenguggen":161,"lywich":220,"PROGRAMMERHAO":190,"-":270,"joyngjr":228}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"   1. Run the `seedu.task.Main` and try a few commands.","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"lywich":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"   e.g. `seedu.task.commons.StringUtilTest`","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"   e.g. `seedu.task.storage.StorageManagerTest`","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"   e.g. `seedu.task.logic.LogicManagerTest`","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"lywich":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":":alarm_clock: Tick-tock. Tick-tock. Time is ticking. :alarm_clock:","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":":scream: Are you stressed about the programming lab assignment you can\u0027t seem to make any progress with? Worried about the endless list of assignments to do? :scream:","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":":bellhop_bell: If a quick organisation tool is what you need to get your life together, you\u0027re at the right place! :bellhop_bell:","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"Introducing, Clock-Work!","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"Clock-Work is a **desktop application for managing tasks, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Clock-Work can get your assignment management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"With basic commands like `add`, `delete`, `edit`, and special commands like `alert`, `find`, `schedule`, Clock-Work is your one-stop application to organise your busy Computing life :computer:.","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"**Get started with Clock-Work with this guide!**","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"This guide is meant for the average Computer Science student, who is interested in using Clock-Work.","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"Table of Contents","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"* [1. Quick start](#1-quick-start)","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"* [2. Introducing a Task](#2-a-task-in-clock-work)","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"* [3. Features and commands](#3-features-and-commands)","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"  * [3.1 add](#31-adding-a-task--add)","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"  * [3.2 edit](#32-editing-a-task--edit)","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"  * [3.3 delete](#33-deleting-a-task--delete)","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"  * [3.4 list](#34-listing-all-tasks--list)","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"  * [3.5 sort](#35-sorting-tasks--sort)","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"  * [3.6 find](#36-locating-tasks-by-name--find)","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"  * [3.7 stats](#37-getting-statistics--stats)","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"  * [3.8 alert](#38-get-alerts--alert-alert-window)","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"  * [3.9 schedule](#39-schedule-of-the-day--schedule-dshortdate-eeffort)","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"  * [3.10 subsection](#310-subsections)","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"    * [3.10.1 subsection](#3101-adding-a-subsection-to-a-task--subsection)","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"    * [3.10.2 remove-subsection](#3102-deleting-a-subsection-from-a-task--remove-subsection)","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"  * [3.11 help](#311-viewing-help--help)","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"  * [3.12 clear](#312-clearing-all-entries--clear)","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"  * [3.13 exit](#313-exiting-the-program--exit)","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"* [4. Storage](#4-storage)","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"  * [4.1 saving the data](#41-saving-the-data)","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"  * [4.2 editing the data](#42-editing-the-data-file)","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"* [5. FAQ](#5-faq)","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"* [6. Command summary](#6-command-summary)","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"* [7. Glossary](#7-glossary)","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"If you like our product and want to contribute to it, consider looking at the [Developer Guide](DeveloperGuide.md) instead.","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"## 1. Quick start","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"2. Download the latest `clockwork.jar` from [here](https://github.com/AY2223S2-CS2103T-W13-3/tp/releases).","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your Clock-Work.","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"4. Open a command terminal (e.g. Ubuntu)","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"5. Navigate to the directory with `clockwork.jar` file downloaded in (Downloads folder in most cases).","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"6. Enter the command `java -jar clockwork.jar` to run the application or double-click on the jar file.","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"7. A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"8. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"   * `add n/Meeting d/CSXXXX project meeting` : Adds a task named Meeting to task book.","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"   * `delete 3` : Deletes the 3rd task shown in the current list.","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"9. Refer to the [Features and Commands](#2-features-and-commands) below for details of each command.","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"## 2. A Task in Clock-Work","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"The life of student is busy, but also vibrant and filled with a variety of activities. Clock-Work helps students achieve their maximum potential by supporting 3 types of tasks to cater to their varying needs.","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"They are: Simple Tasks, Deadlines, and Events. As their name suggests, a simple task is a time-insensitive task that can be done at any time, a deadline is a time-sensitive task which must be done before the specified deadline, and an event is a time-sensitive task that must be done during the specified period of time.","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"### Basic Information about Tasks","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"* A Task can be:","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"joyngjr"},"content":"    * A \u003cspan style\u003d\"color:#4285F4\"\u003esimpleTask\u003c/span\u003e, which does not have a _long date_ attached to it. ([What is a Long Date?](#q4-what-is-a-valid-long-date))","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"joyngjr"},"content":"    * A \u003cspan style\u003d\"color:#34A853\"\u003edeadline\u003c/span\u003e, which has a _long date_ known as `deadline`.","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"joyngjr"},"content":"    * An \u003cspan style\u003d\"color:#FBBC05\"\u003eevent\u003c/span\u003e, which has 2 _long dates_ known as a `from` and a `to`.","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"joyngjr"},"content":"* A task can have the following additional **Optional** fields attached to it:","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"joyngjr"},"content":"    * Tags","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"joyngjr"},"content":"    * Description","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"joyngjr"},"content":"    * Effort level","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"joyngjr"},"content":"    * Alert window","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"joyngjr"},"content":"    * Subsection","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"joyngjr"},"content":"This is what a task looks like in Clock-Work.","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"joyngjr"},"content":"![Sample Task](images/SampleTask.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"joyngjr"},"content":"This is what each component mean:","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"joyngjr"},"content":"| Component | Meaning | How to use it | Usage Specifications                                                                       |","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"joyngjr"},"content":"|--| --------- | ------------- |--------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"joyngjr"},"content":"| [Name](#q2-what-is-a-valid-name) | Name of task | Use it to identify task | Must be unique, Case-insensitive                                                           |","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"joyngjr"},"content":"| [Tag](#q3-what-is-a-valid-tag) | Labels / Folders | Use it to group related tasks | Must be a single word, Colour randomly generated, limit to 45 characters                   |","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"joyngjr"},"content":"| [Time](#q4-what-is-a-valid-long-date) | Type of task | Keep track of time-related information here | A simple task has no specified time, a deadline has 1 long date, an event has 2 long dates |","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"joyngjr"},"content":"| [Effort](#q7-what-is-an-effort-level) | Estimated amount of work to complete task | Set realistic effort estimates to help with scheduling | Default value of 24                                                                        |","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"joyngjr"},"content":"| [Description](#q8-what-is-a-valid-description) | Good-to-know | Useful things to remember | Text with at least 1 character                                                             |","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"joyngjr"},"content":"| [Subsection](#q9-what-is-a-valid-subsection) | Smaller tasks to complete | Split a larger task into more manageable pieces | Has its own name and description                                                           |","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"joyngjr"},"content":"## 3. Features and Commands","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"joyngjr"},"content":"### Conventions used in this document","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"joyngjr"},"content":"For easy reference and understanding, this guide utilizes some special formatting of text. The conventions used are as follows:","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"joyngjr"},"content":"| Convention | Meaning | Sample Usage |","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"joyngjr"},"content":"| --- |-----------------------------------------------------------------------------|--------------|","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"joyngjr"},"content":"| `lowercaseword` | Valid Clock-Work command words. They may or may not be used with additional inputs. | `plan`       |","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"joyngjr"},"content":"| `UPPERCASEWORD` | Compulsory inputs which must be supplied by user in order for the command to work. | `n/NAME`     |","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"joyngjr"},"content":"| `[UPPERCASEWORD]` | Optional inputs which user can supply for a command.                        |  `[d/DESCRIPTION]` |","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"joyngjr"},"content":"| `…`​ | Inputs can be used multiple times, including zero times | `[t/TAG]…​` |","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"joyngjr"},"content":"| Emoji              | Meaning |","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"joyngjr"},"content":"|--------------------| --- |","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"joyngjr"},"content":"| :man_technologist: | Short messages from us to you |","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"joyngjr"},"content":"| :bulb:             | Tips on how to enhance your user experience |","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"joyngjr"},"content":"| :warning:          | Important things to note to avoid unintended behaviour |","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"joyngjr"},"content":"### Inputs into Clock-Work","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"joyngjr"},"content":"Clock-Work provides some flexibility regarding the types of inputs it accepts. These are some information about inputting commands you may find useful.","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"joyngjr"},"content":"1. First word is assumed to be a command word (add/delete/list/find).","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"joyngjr"},"content":"2. Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"Huggenguggen"},"content":"  e.g. if the command specifies `n/Task A d/A\u0027s sample description`, `d/A\u0027s sample description n/Task A` is also acceptable.","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"joyngjr"},"content":"3. If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"Huggenguggen"},"content":"  e.g. if you specify `d/do it fast d/do it slow`, only `d/do it slow` will be taken.","lastModifiedDate":"2023-02-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":157,"author":{"gitId":"joyngjr"},"content":"4. Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"joyngjr"},"content":"### 3.1 Adding a task : `add`","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"joyngjr"},"content":":man_technologist: **Congratulations on reaching this part of the user guide. You should have Clock-Work started and running at this point. You are now ready to add your first task!** :tada:","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"joyngjr"},"content":"You can create different types of tasks depending on the input parameters you enter.","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"Huggenguggen"},"content":"Format:","lastModifiedDate":"2023-03-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":170,"author":{"gitId":"lywich"},"content":"* \u003cspan style\u003d\"color:#4285F4\"\u003eSimpleTask\u003c/span\u003e: `add n/TASKNAME [d/DESCRIPTION] [t/TAGS]…​ [E/EFFORT]`","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":172,"author":{"gitId":"lywich"},"content":"* \u003cspan style\u003d\"color:#34A853\"\u003eDeadline\u003c/span\u003e: `add n/TASKNAME D/DEADLINE [d/DESCRIPTION] [t/TAGS]…​ [E/EFFORT]`","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":174,"author":{"gitId":"lywich"},"content":"* \u003cspan style\u003d\"color:#FBBC05\"\u003eEvent\u003c/span\u003e: `add n/TASKNAME F/FROMDATE T/TODATE [d/DESCRIPTION] [t/TAGS]…​ [E/EFFORT]`","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":176,"author":{"gitId":"lywich"},"content":"Examples:","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"lywich"},"content":"* `add n/Read Book d/Make sure to take notes t/Leisure`","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"lywich"},"content":"* `add n/Return Book d/NUS library t/Urgent D/2023-01-01 1800`","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"Huggenguggen"},"content":":warning: You are unable to add any tasks (\u003cspan style\u003d\"color:#4285F4\"\u003esimpleTask\u003c/span\u003e, \u003cspan style\u003d\"color:#34A853\"\u003eDeadline\u003c/span\u003e, \u003cspan style\u003d\"color:#FBBC05\"\u003eEvent\u003c/span\u003e) of the same name.","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"lywich"},"content":":warning: Tags will be automatically sorted lexicographically!","lastModifiedDate":"2023-04-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":185,"author":{"gitId":"Huggenguggen"},"content":":warning: Adding multiple **Tags** of the same tag name will only result in one tag!","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"lywich"},"content":"e.g. `add n/SampleTask t/CS2102 t/CS2102` will only register t/CS2102 once!","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"lywich"},"content":":warning: Adding more than 1 **Description** or **Effort** is accepted but only the last instance will be processed.","lastModifiedDate":"2023-03-29"},{"lineNumber":190,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":191,"author":{"gitId":"Huggenguggen"},"content":":warning: There are reserved CLI syntax like `n/`, `d/`, `t/`, `D/`, `F/`, `T/`, `all/`, `E/`, `I/`. Input fields will have unexpected behaviour when it contains these characters.","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"lywich"},"content":"e.g. `add n/Sample d/Why can\u0027t I add n/?`","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"joyngjr"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"joyngjr"},"content":":man_technologist: **If you are a pro user, you may consider adding multiple tasks at once with this hack!**","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"joyngjr"},"content":"Add multiple tasks with the same parameters except for name with this command:`add n/TASKNAME1 n/TASKNAME2 d/DESCRIPTION [t/TAGS]…​`","lastModifiedDate":"2023-03-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"joyngjr"},"content":":bulb: **PRO TIP**: You can add multiple \u003cspan style\u003d\"color:#FBBC05\"\u003eEvents\u003c/span\u003e and \u003cspan style\u003d\"color:#34A853\"\u003eDeadlines\u003c/span\u003e as well! However, they have to share the same timings. Use this to add tasks that occur at the same time!","lastModifiedDate":"2023-03-30"},{"lineNumber":204,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"joyngjr"},"content":":bulb: **PRO TIP**: Parameters that comes after the command can be in any order!","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"lywich"},"content":":bulb: **PRO TIP**: A task can have any number of tags (including 0). Each tag will be automatically assigned a color. [Why are my different tags same color?](#q10-why-does-two-different-tags-have-the-same-tag-color)","lastModifiedDate":"2023-04-03"},{"lineNumber":208,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":209,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":210,"author":{"gitId":"joyngjr"},"content":"### 3.2 Editing a task : `edit`","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"joyngjr"},"content":":man_technologist: **Hmm, have a task that you want to modify but find that it takes too much effort to create and delete a task? Try this command.**","lastModifiedDate":"2023-03-30"},{"lineNumber":213,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":214,"author":{"gitId":"lywich"},"content":"Edits an existing task in the task book.","lastModifiedDate":"2023-03-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"lywich"},"content":"Format: `edit INDEX [n/TASKNAME] [d/DESCRIPTION] [E/EFFORT] [t/TAG]…​`","lastModifiedDate":"2023-04-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"lywich"},"content":"* Edits the task at the specified `INDEX`. The index refers to the index number shown in the displayed task list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-02-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"lywich"},"content":"* When editing tags, the existing tags of the task will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2023-02-18"},{"lineNumber":222,"author":{"gitId":"lywich"},"content":"* You can remove all the task’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"lywich"},"content":"* You can remove a description with `d/` without specifying any tags after it.","lastModifiedDate":"2023-03-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"lywich"},"content":"*  `edit 1 t/CS2102 t/URGENT` Edits the tags of the first task to now be `CS2102` and `URGENT`","lastModifiedDate":"2023-03-20"},{"lineNumber":227,"author":{"gitId":"lywich"},"content":"*  `edit 2 n/CS2102 Finals t/` Edits the name of the 2nd task to be `CS2102 Finals` and clears all existing tags.","lastModifiedDate":"2023-03-20"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"lywich"},"content":":warning: When editing the tags of a task, multiple tags of the same name is ignored!","lastModifiedDate":"2023-03-27"},{"lineNumber":230,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"lywich"},"content":"e.g. `edit 1 t/CS2102 t/CS2102` will only register t/CS2102 once!","lastModifiedDate":"2023-03-27"},{"lineNumber":232,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"joyngjr"},"content":"### 3.3 Deleting a task : `delete`","lastModifiedDate":"2023-03-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"joyngjr"},"content":":man_technologist: **Congratulations! You have completed a task. Now, you can remove it by using this command.**","lastModifiedDate":"2023-03-30"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":238,"author":{"gitId":"lywich"},"content":"Deletes the specified task from the task  book.","lastModifiedDate":"2023-03-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"lywich"},"content":"Format: `delete INDEX [INDEX]…​`","lastModifiedDate":"2023-03-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"lywich"},"content":"* Deletes the task at the specified `INDEX`.","lastModifiedDate":"2023-02-18"},{"lineNumber":243,"author":{"gitId":"lywich"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":244,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"joyngjr"},"content":"* If multiple indices are entered, they must be written in ascending order.","lastModifiedDate":"2023-02-20"},{"lineNumber":246,"author":{"gitId":"joyngjr"},"content":"* The command will reject all specified indices if one of them is invalid.","lastModifiedDate":"2023-02-20"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"lywich"},"content":"* `list` followed by `delete 2` deletes the 2nd task in the task book.","lastModifiedDate":"2023-03-29"},{"lineNumber":250,"author":{"gitId":"lywich"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st task in the results of the `find` command.","lastModifiedDate":"2023-02-18"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":253,"author":{"gitId":"joyngjr"},"content":"### 3.4 Listing all tasks : `list`","lastModifiedDate":"2023-03-30"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":255,"author":{"gitId":"joyngjr"},"content":":man_technologist: **Want to have an overview of all your tasks? Try this!**","lastModifiedDate":"2023-03-30"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":257,"author":{"gitId":"lywich"},"content":"Shows a list of all tasks in the task book.","lastModifiedDate":"2023-03-29"},{"lineNumber":258,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":259,"author":{"gitId":"joyngjr"},"content":"Format: `list`","lastModifiedDate":"2023-03-27"},{"lineNumber":260,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":261,"author":{"gitId":"joyngjr"},"content":":bulb: PRO TIP: Some commands (e.g. find) will trigger the UI to display a subset of tasks. Use `list` to return back to the original list.","lastModifiedDate":"2023-03-27"},{"lineNumber":262,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":263,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":264,"author":{"gitId":"joyngjr"},"content":"### 3.5 Sorting tasks : `sort`","lastModifiedDate":"2023-03-30"},{"lineNumber":265,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":266,"author":{"gitId":"joyngjr"},"content":":man_technologist: **Is the displayed list too messy for your liking? Sort is here to help.**","lastModifiedDate":"2023-03-30"},{"lineNumber":267,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":268,"author":{"gitId":"lywich"},"content":"Sorts the list using the following format:","lastModifiedDate":"2023-03-06"},{"lineNumber":269,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":270,"author":{"gitId":"joyngjr"},"content":"* \u003cspan style\u003d\"color:#4285F4\"\u003eSimpleTask\u003c/span\u003e is listed above Deadline and Event.","lastModifiedDate":"2023-03-28"},{"lineNumber":271,"author":{"gitId":"joyngjr"},"content":"* \u003cspan style\u003d\"color:#34A853\"\u003eDeadline\u003c/span\u003e is  listed below SimpleTask and above Event.","lastModifiedDate":"2023-03-28"},{"lineNumber":272,"author":{"gitId":"joyngjr"},"content":"* \u003cspan style\u003d\"color:#FBBC05\"\u003eEvent\u003c/span\u003e is  listed below SimpleTask and Event.","lastModifiedDate":"2023-03-28"},{"lineNumber":273,"author":{"gitId":"lywich"},"content":"* When comparing 2 tasks of the same class:","lastModifiedDate":"2023-03-23"},{"lineNumber":274,"author":{"gitId":"joyngjr"},"content":"    * \u003cspan style\u003d\"color:#4285F4\"\u003eSimpleTask\u003c/span\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":275,"author":{"gitId":"lywich"},"content":"        * The task with lesser tags is listed above the task with more tags.","lastModifiedDate":"2023-03-23"},{"lineNumber":276,"author":{"gitId":"lywich"},"content":"        * Else if both tasks have the same number of tags, the task with a smaller lexicographical name is listed above the other.","lastModifiedDate":"2023-03-23"},{"lineNumber":277,"author":{"gitId":"joyngjr"},"content":"    * \u003cspan style\u003d\"color:#34A853\"\u003eDeadline\u003c/span\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":278,"author":{"gitId":"lywich"},"content":"        * The task with the earlier deadline is listed above the task with later deadline.","lastModifiedDate":"2023-03-23"},{"lineNumber":279,"author":{"gitId":"lywich"},"content":"        * Else if both tasks have the same deadline, the task with lesser tags is listed above the task with more tags.","lastModifiedDate":"2023-03-23"},{"lineNumber":280,"author":{"gitId":"lywich"},"content":"        * Else if both tasks have the same number of tags, the task with a smaller lexicographical name is listed above the other.","lastModifiedDate":"2023-03-23"},{"lineNumber":281,"author":{"gitId":"joyngjr"},"content":"    * \u003cspan style\u003d\"color:#FBBC05\"\u003eEvent\u003c/span\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":282,"author":{"gitId":"lywich"},"content":"        * The task with the earlier `from` attribute is listed above the task with a later `from` attribute.","lastModifiedDate":"2023-03-23"},{"lineNumber":283,"author":{"gitId":"lywich"},"content":"        * Else if both task have the same `from` attribute, the task with the earlier `to` attribute is listed above the task with later `to` attribute.","lastModifiedDate":"2023-03-23"},{"lineNumber":284,"author":{"gitId":"lywich"},"content":"        * Else if both task have the same `to` attribute, the task with lesser tags is listed above the task with more tags.","lastModifiedDate":"2023-03-23"},{"lineNumber":285,"author":{"gitId":"lywich"},"content":"        * Else if both tasks have the same number of tags, the task with a smaller lexicgraphical name is listed above the other.","lastModifiedDate":"2023-03-23"},{"lineNumber":286,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":287,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":288,"author":{"gitId":"lywich"},"content":"Format: `sort`","lastModifiedDate":"2023-03-06"},{"lineNumber":289,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":290,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":291,"author":{"gitId":"joyngjr"},"content":"### 3.6 Locating tasks by name : `find`","lastModifiedDate":"2023-03-30"},{"lineNumber":292,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":293,"author":{"gitId":"joyngjr"},"content":":man_technologist: **Oops! Are you unable to locate a task? Try find.**","lastModifiedDate":"2023-03-30"},{"lineNumber":294,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":295,"author":{"gitId":"Huggenguggen"},"content":"Find **Tasks** whose attribute best match the user input string.","lastModifiedDate":"2023-03-28"},{"lineNumber":296,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":297,"author":{"gitId":"joyngjr"},"content":"Format: `find n/NAME` OR `find d/DESCRIPTION` OR `find t/TAG...`","lastModifiedDate":"2023-03-27"},{"lineNumber":298,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":299,"author":{"gitId":"Huggenguggen"},"content":"* The search is **case-insensitive**. e.g `book` will match `Book`","lastModifiedDate":"2023-03-28"},{"lineNumber":300,"author":{"gitId":"Huggenguggen"},"content":"* **Substrings** will be matched e.g. `book` will match `Books`","lastModifiedDate":"2023-03-28"},{"lineNumber":301,"author":{"gitId":"Huggenguggen"},"content":"* For \u003cspan style\u003d\"color:#34A853\"\u003eDeadline\u003c/span\u003e, you can only use a valid date(without the time input) such as `2023-03-10` to search for deadlines on that day.","lastModifiedDate":"2023-03-28"},{"lineNumber":302,"author":{"gitId":"Huggenguggen"},"content":"    * e.g. `find D/2023-03-10` will give you all the deadlines on 2023-01-01.","lastModifiedDate":"2023-03-28"},{"lineNumber":303,"author":{"gitId":"Huggenguggen"},"content":"* For \u003cspan style\u003d\"color:#FBBC05\"\u003eEvent\u003c/span\u003e, you may either use `F/` or `T/` prefix(without the time input as well) to search for event that starts or ends on a certain date.","lastModifiedDate":"2023-03-28"},{"lineNumber":304,"author":{"gitId":"Huggenguggen"},"content":"    * e.g. `find F/2023-03-10` will give you all the events starting from 2023-03-10.","lastModifiedDate":"2023-03-28"},{"lineNumber":305,"author":{"gitId":"Huggenguggen"},"content":"    * e.g. `find T/2023-03-10` will give you all the event ending on 2023-03-10.","lastModifiedDate":"2023-03-28"},{"lineNumber":306,"author":{"gitId":"PROGRAMMERHAO"},"content":"* :warning: Our application currently does not support find by subsections\u0027 names or descriptions, the functionality will be implemented in future versions.","lastModifiedDate":"2023-04-05"},{"lineNumber":307,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":308,"author":{"gitId":"Huggenguggen"},"content":"Examples:","lastModifiedDate":"2023-03-28"},{"lineNumber":309,"author":{"gitId":"Huggenguggen"},"content":"* `find n/book` finds **Tasks** with name `read book` and `return books`","lastModifiedDate":"2023-03-28"},{"lineNumber":310,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":311,"author":{"gitId":"Huggenguggen"},"content":":bulb: Here are some **PRO TIPS**:","lastModifiedDate":"2023-03-28"},{"lineNumber":312,"author":{"gitId":"joyngjr"},"content":"* For names and descriptions, you may use the `all/` prefix to search for a task that contains all of your inputs. Repeated inputs are only considered once.","lastModifiedDate":"2023-03-29"},{"lineNumber":313,"author":{"gitId":"joyngjr"},"content":"    * e.g. `find all/ n/do n/homework` will match a task with a name called \"do math homework.","lastModifiedDate":"2023-03-27"},{"lineNumber":314,"author":{"gitId":"joyngjr"},"content":"    * e.g. `find all/ n/try n/try n/lab` is interpreted as `find all/ n/try n/lab`","lastModifiedDate":"2023-03-29"},{"lineNumber":315,"author":{"gitId":"joyngjr"},"content":"* For tags, if you do not specify the `all/` prefix, as long as one tag matches with one of the tags you are searching for, it will be considered matched.","lastModifiedDate":"2023-03-27"},{"lineNumber":316,"author":{"gitId":"joyngjr"},"content":"  However, adding `all/` means that a task which contains all your tag inputs will be displayed.","lastModifiedDate":"2023-03-27"},{"lineNumber":317,"author":{"gitId":"joyngjr"},"content":"    * e.g. `find t/very urgent t/important` will match with tags `t/very very urgent t/math t/hard` since it has `very urgent`.","lastModifiedDate":"2023-03-27"},{"lineNumber":318,"author":{"gitId":"joyngjr"},"content":"    * e.g. `find all/ t/very urgent t/important` will match with tags `t/very urgent t/important` since it has both tags.","lastModifiedDate":"2023-03-27"},{"lineNumber":319,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":320,"author":{"gitId":"Huggenguggen"},"content":":warning: When searching for a description `find d/DESCRIPTION`, Tasks without user\u0027s input description will not show up!","lastModifiedDate":"2023-03-28"},{"lineNumber":321,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":322,"author":{"gitId":"lywich"},"content":"e.g. `add n/Homework` and `add n/Project d/No Description` followed by `find d/No Description` will return a list with only the latter task.","lastModifiedDate":"2023-03-29"},{"lineNumber":323,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":324,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":325,"author":{"gitId":"joyngjr"},"content":"### 3.7 Getting statistics : `stats`","lastModifiedDate":"2023-03-30"},{"lineNumber":326,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":327,"author":{"gitId":"joyngjr"},"content":":man_technologist: **Some statistics will do no harm. Stats is here to help you visualise your tasks in numbers!**","lastModifiedDate":"2023-03-30"},{"lineNumber":328,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":329,"author":{"gitId":"joyngjr"},"content":"Prints the top 10 tags (if applicable) and its corresponding number of occurrences in the tasks.","lastModifiedDate":"2023-03-27"},{"lineNumber":330,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":331,"author":{"gitId":"joyngjr"},"content":"Format: `stats`","lastModifiedDate":"2023-03-27"},{"lineNumber":332,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":333,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":334,"author":{"gitId":"joyngjr"},"content":"### 3.8 Get alerts : `alert [ALERT WINDOW]`","lastModifiedDate":"2023-03-30"},{"lineNumber":335,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":336,"author":{"gitId":"joyngjr"},"content":":man_technologist: **Beep! Beep! Well, not really, but alert is here to warn you about tasks which are due soon!**","lastModifiedDate":"2023-03-30"},{"lineNumber":337,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":338,"author":{"gitId":"Huggenguggen"},"content":"Displays in the tasks that fall within the window specified on the right panel. If not supplied, assumed to be 24 hours.","lastModifiedDate":"2023-03-30"},{"lineNumber":339,"author":{"gitId":"Huggenguggen"},"content":"On opening of app, the **alert panel** will open to show **Tasks** which **start or have deadlines** within the **latest** window specified.","lastModifiedDate":"2023-04-08"},{"lineNumber":340,"author":{"gitId":"Huggenguggen"},"content":"Have to specify `ALERT WINDOW` in hours and only integers.","lastModifiedDate":"2023-03-13"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":342,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-13"},{"lineNumber":343,"author":{"gitId":"Huggenguggen"},"content":"- `alert` followed by `48` will show the alert window with all tasks which **start or end** within 48 hours.","lastModifiedDate":"2023-04-02"},{"lineNumber":344,"author":{"gitId":"Huggenguggen"},"content":"- `alert` alone will show the alert window with all tasks which **start or end** within 24 hours.","lastModifiedDate":"2023-04-02"},{"lineNumber":345,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":346,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":347,"author":{"gitId":"joyngjr"},"content":"### 3.9 Schedule of the day : `schedule D/SHORTDATE [E/EFFORT]`","lastModifiedDate":"2023-03-30"},{"lineNumber":348,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":349,"author":{"gitId":"joyngjr"},"content":":man_technologist: **Wouldn\u0027t it be great if you can have your life planned out for you? Schedule can help!**","lastModifiedDate":"2023-03-30"},{"lineNumber":350,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":351,"author":{"gitId":"joyngjr"},"content":"`schedule` displays a planned daily schedule according to the tasks currently stored.","lastModifiedDate":"2023-03-28"},{"lineNumber":352,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":353,"author":{"gitId":"joyngjr"},"content":"Entering `schedule D/SHORTDATE E/EFFORT` generates a new 30-day plan for users based on their intended `E/EFFORT`, and display a list of tasks to be done on `D/SHORTDATE`.","lastModifiedDate":"2023-03-26"},{"lineNumber":354,"author":{"gitId":"lywich"},"content":"Entering `schedule D/SHORTDATE` displays a list of tasks to be done on `D/SHORTDATE` based on the previously generated plan. [What is a short date?](#q6-what-is-the-difference-between-a-longdate-and-a-shortdate)","lastModifiedDate":"2023-04-03"},{"lineNumber":355,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":356,"author":{"gitId":"joyngjr"},"content":"\u003cdetails\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":357,"author":{"gitId":"joyngjr"},"content":"\u003csummary\u003eHow are my plans generated?\u003c/summary\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":358,"author":{"gitId":"joyngjr"},"content":"When the schedule command is ran with an \u003ccode\u003eE/EFFORT\u003c/code\u003e flag, a new 30-day plan is generated, starting from the day the command is run.","lastModifiedDate":"2023-04-07"},{"lineNumber":359,"author":{"gitId":"joyngjr"},"content":"Tasks allocated to a day should not exceed the intended `E/EFFORT` level indicated.","lastModifiedDate":"2023-04-07"},{"lineNumber":360,"author":{"gitId":"joyngjr"},"content":"However, if the need arises, the effort allocated for a day can exceed your preferred \u003ccode\u003eE/EFFORT\u003c/code\u003e level.","lastModifiedDate":"2023-04-07"},{"lineNumber":361,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":362,"author":{"gitId":"joyngjr"},"content":"Task book allocates tasks as such:","lastModifiedDate":"2023-04-07"},{"lineNumber":363,"author":{"gitId":"joyngjr"},"content":"1. Allocate all events to the day(s) it is supposed to be happening.","lastModifiedDate":"2023-03-28"},{"lineNumber":364,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":365,"author":{"gitId":"joyngjr"},"content":"2. Allocate all deadlines to the first [free day](#q11-what-is-a-free-day) before it is due (exclusive of due date). Otherwise, allocate task to any day before deadline with the least amount of work allocated (in terms of effort).","lastModifiedDate":"2023-04-07"},{"lineNumber":366,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":367,"author":{"gitId":"joyngjr"},"content":"3. Allocates each SimpleTask to the most busy day without exceeding desired workload. If such a day is not available, allocate the task to a day with the least amount of work allocated (in terms of effort).","lastModifiedDate":"2023-03-29"},{"lineNumber":368,"author":{"gitId":"joyngjr"},"content":"\u003c/details\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":369,"author":{"gitId":"joyngjr"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":370,"author":{"gitId":"joyngjr"},"content":"\u003cdetails\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":371,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":372,"author":{"gitId":"joyngjr"},"content":"\u003csummary\u003eNeed more help?\u003c/summary\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":373,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":374,"author":{"gitId":"joyngjr"},"content":"Displaying Daily Plans","lastModifiedDate":"2023-03-30"},{"lineNumber":375,"author":{"gitId":"joyngjr"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":376,"author":{"gitId":"joyngjr"},"content":"Daily Plans can be viewed by entering \u003ccode\u003eschedule D/SHORT_DATE\u003c/code\u003e or \u003ccode\u003eschedule D/SHORT_DATE E/EFFORT\u003c/code\u003e, with the former showing an old plan, and the latter showing a newly generated plan.","lastModifiedDate":"2023-04-07"},{"lineNumber":377,"author":{"gitId":"joyngjr"},"content":"As plans are only valid for 30 days from the last time it was generated, users are encouraged to regenerate a plan with an \u003ccode\u003eE/EFFORT\u003c/code\u003e flag if they do not remember when they last generated their plan.","lastModifiedDate":"2023-04-07"},{"lineNumber":378,"author":{"gitId":"joyngjr"},"content":"If no tasks are shown, it means that there are no tasks planned for that day.","lastModifiedDate":"2023-03-26"},{"lineNumber":379,"author":{"gitId":"joyngjr"},"content":"An error message that prompts users to re-generate a plan will be shown if the entered date is out of range (either too far in the future, or a date before the start date of generated plan).","lastModifiedDate":"2023-03-26"},{"lineNumber":380,"author":{"gitId":"joyngjr"},"content":"\u003c/details\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":381,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":382,"author":{"gitId":"joyngjr"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":383,"author":{"gitId":"joyngjr"},"content":":warning: Valid `D/SHORTDATE` are 30-days from the day plan was generated. Re-scheduling plans multiple times would not make an invalid date become valid.","lastModifiedDate":"2023-03-28"},{"lineNumber":384,"author":{"gitId":"joyngjr"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":385,"author":{"gitId":"joyngjr"},"content":":warning: Select an effort estimate that you can realistically complete in a day. Having abnormally high desired effort levels in comparison to effort per task (eg. desired workload of 10000 and each task has effort 1) may result in undesired behaviour where all tasks are allocated to the same day.","lastModifiedDate":"2023-03-29"},{"lineNumber":386,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":387,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":388,"author":{"gitId":"Huggenguggen"},"content":"Examples:","lastModifiedDate":"2023-03-19"},{"lineNumber":389,"author":{"gitId":"joyngjr"},"content":"- Assuming today is 2023-03-26, `schedule D/2023-04-01 E/5` will plan a 30-day schedule starting from today (March 26, 2023) according to a desired effort level of 5, and display tasks planned for April 1.","lastModifiedDate":"2023-03-26"},{"lineNumber":390,"author":{"gitId":"joyngjr"},"content":"- `schedule D/2023-04-02` will show tasks which should be completed on April 2, 2023, based on a previously generated schedule (which should be generated between 3 Mar 2023, and 2 Apr 2023).","lastModifiedDate":"2023-03-26"},{"lineNumber":391,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":392,"author":{"gitId":"joyngjr"},"content":"## 3.10 Subsections","lastModifiedDate":"2023-03-30"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":394,"author":{"gitId":"joyngjr"},"content":":man_technologist: **Have a task that is really long? Want to organise it in smaller sections? Why not use subsection?**","lastModifiedDate":"2023-03-30"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":396,"author":{"gitId":"joyngjr"},"content":"### 3.10.1 Adding a Subsection to a Task : `subsection`","lastModifiedDate":"2023-03-30"},{"lineNumber":397,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":398,"author":{"gitId":"PROGRAMMERHAO"},"content":"Adds a subsection to a task in the task book. The subsection added will appear as in the corresponding task\u0027s task card.","lastModifiedDate":"2023-03-27"},{"lineNumber":399,"author":{"gitId":"PROGRAMMERHAO"},"content":"You can do so by entering `subsection index n/name d/description`, and the description prefix `d/` is optional.","lastModifiedDate":"2023-03-27"},{"lineNumber":400,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":401,"author":{"gitId":"PROGRAMMERHAO"},"content":"Examples:","lastModifiedDate":"2023-03-27"},{"lineNumber":402,"author":{"gitId":"PROGRAMMERHAO"},"content":"- Assuming your current task list has a task with index 1, `subsection 1 n/homework d/Math` will add a subsection to the main task at index 1 with a subsection with the name \"homework\" and description \"Math\".","lastModifiedDate":"2023-03-27"},{"lineNumber":403,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":404,"author":{"gitId":"joyngjr"},"content":"### 3.10.2 Deleting a Subsection From a Task : `remove-subsection`","lastModifiedDate":"2023-03-30"},{"lineNumber":405,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":406,"author":{"gitId":"PROGRAMMERHAO"},"content":"Deletes a subsection from a task, assuming you have one in the task. You can do so by entering `remove-subsection index I/subsection index`, where the first index is the main task\u0027s index, and the latter is the subsection\u0027s.","lastModifiedDate":"2023-03-27"},{"lineNumber":407,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":408,"author":{"gitId":"PROGRAMMERHAO"},"content":"Examples:","lastModifiedDate":"2023-03-27"},{"lineNumber":409,"author":{"gitId":"PROGRAMMERHAO"},"content":"- Assuming your current task list has a task with index 1, which in turn contains a subsection with index 1. You can delete it with `remove-subsection 1 I/1`. The newly updated task will be shown.","lastModifiedDate":"2023-03-27"},{"lineNumber":410,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":411,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":412,"author":{"gitId":"joyngjr"},"content":"### 3.11 Viewing help : `help`","lastModifiedDate":"2023-03-30"},{"lineNumber":413,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":414,"author":{"gitId":"joyngjr"},"content":":man_technologist: **For the beginner user who is still unfamiliar with the commands. Welcome!**","lastModifiedDate":"2023-03-30"},{"lineNumber":415,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":416,"author":{"gitId":"joyngjr"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-03-27"},{"lineNumber":417,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":418,"author":{"gitId":"joyngjr"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":419,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":420,"author":{"gitId":"joyngjr"},"content":"Format: `help`","lastModifiedDate":"2023-03-27"},{"lineNumber":421,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":422,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":423,"author":{"gitId":"joyngjr"},"content":"### 3.12 Clearing all entries : `clear`","lastModifiedDate":"2023-03-30"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"joyngjr"},"content":":man_technologist: **Think twice before using this. This action is not reversible.**","lastModifiedDate":"2023-03-30"},{"lineNumber":426,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":427,"author":{"gitId":"lywich"},"content":"Clears all entries from the task book.","lastModifiedDate":"2023-03-29"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"joyngjr"},"content":"### 3.13 Exiting the program : `exit`","lastModifiedDate":"2023-03-30"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"joyngjr"},"content":":man_technologist: **We hope to see you again!**","lastModifiedDate":"2023-03-30"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":435,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"joyngjr"},"content":"## 4. Storage","lastModifiedDate":"2023-03-30"},{"lineNumber":440,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":441,"author":{"gitId":"joyngjr"},"content":"### 4.1 Saving the data","lastModifiedDate":"2023-03-30"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"lywich"},"content":"TaskBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-03-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"joyngjr"},"content":"### 4.2 Editing the data file","lastModifiedDate":"2023-03-30"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":447,"author":{"gitId":"lywich"},"content":"TaskBook data are saved as a JSON file `[JAR file location]/data/taskbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-03-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":449,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":450,"author":{"gitId":"joyngjr"},"content":"If your changes to the data file make its format invalid, taskBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-04-07"},{"lineNumber":451,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":453,"author":{"gitId":"joyngjr"},"content":"### 4.3 Archiving data files `[coming in v2.0]`","lastModifiedDate":"2023-03-30"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"joyngjr"},"content":"## 5. FAQ","lastModifiedDate":"2023-03-30"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"lywich"},"content":"### Q1 How do I transfer my data to another Computer?","lastModifiedDate":"2023-03-23"},{"lineNumber":462,"author":{"gitId":"lywich"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous TaskBook home folder.","lastModifiedDate":"2023-03-29"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"joyngjr"},"content":"### Q2 What is a valid Name?","lastModifiedDate":"2023-03-30"},{"lineNumber":465,"author":{"gitId":"joyngjr"},"content":"**A**: A valid Name has a minimum of 1 character, and does not have **/** in it. It can have multiple words, and there is no limit to the number of characters it accept. However, for a better user experience, we recommend limiting the number of character in name to 35 characters.","lastModifiedDate":"2023-03-30"},{"lineNumber":466,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":467,"author":{"gitId":"joyngjr"},"content":"### Q3 What is a valid Tag?","lastModifiedDate":"2023-03-30"},{"lineNumber":468,"author":{"gitId":"joyngjr"},"content":"**A**: A valid tag consists of only alphanumeric characters, and has minimum length of 1 character. Tags are case-sensitive, which means that **STUDY** and **study** are treated as different tags.","lastModifiedDate":"2023-03-30"},{"lineNumber":469,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":470,"author":{"gitId":"joyngjr"},"content":"### Q4 What is a valid Long Date?","lastModifiedDate":"2023-03-30"},{"lineNumber":471,"author":{"gitId":"lywich"},"content":"**A**: A valid LongDate must be in the format of `YYYY-MM-DD HHMM` such as `2023-07-13 1800` (13 July 2023, 6PM). A valid LongDate must have a valid time. A minimum of 4 characters must be supplied and only a maximum of 4 character will be parsed","lastModifiedDate":"2023-03-29"},{"lineNumber":472,"author":{"gitId":"lywich"},"content":"  e.g. `2023-07-13 180` is invalid and `2023-07-13 18000000000` is understood as `2023-07-13 1800`","lastModifiedDate":"2023-03-23"},{"lineNumber":473,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":474,"author":{"gitId":"joyngjr"},"content":"### Q5 What is a valid Short Date?","lastModifiedDate":"2023-03-30"},{"lineNumber":475,"author":{"gitId":"joyngjr"},"content":"**A**: A valid ShortDate must be in the format of `YYYY-MM-DD` such as `2023-07-15` (15 July 2023).","lastModifiedDate":"2023-03-29"},{"lineNumber":476,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":477,"author":{"gitId":"joyngjr"},"content":"### Q6 What is the difference between a LongDate and a ShortDate?","lastModifiedDate":"2023-03-30"},{"lineNumber":478,"author":{"gitId":"joyngjr"},"content":"**A**: A `ShortDate` omits the `HHMM` component of a `LongDate`.","lastModifiedDate":"2023-03-30"},{"lineNumber":479,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":480,"author":{"gitId":"joyngjr"},"content":"### Q7 What is an effort level?","lastModifiedDate":"2023-03-30"},{"lineNumber":481,"author":{"gitId":"joyngjr"},"content":"**A**: The effort level is a user estimate of the amount of work required to complete a task. Users are free to select any value between 0 and 2147483647 for their estimate.","lastModifiedDate":"2023-03-30"},{"lineNumber":482,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":483,"author":{"gitId":"joyngjr"},"content":"### Q8 What is a valid Description?","lastModifiedDate":"2023-03-30"},{"lineNumber":484,"author":{"gitId":"lywich"},"content":"**A**: A valid Description is a text input that has at least one character.","lastModifiedDate":"2023-03-23"},{"lineNumber":485,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":486,"author":{"gitId":"joyngjr"},"content":"### Q9 What is a valid Subsection?","lastModifiedDate":"2023-03-30"},{"lineNumber":487,"author":{"gitId":"joyngjr"},"content":"**A**: A valid Subsection has a name and an optional description. Within a task, all subsection names must be unique, and it is case-insensitive. This means that **study** and **STUDY** are treated as the same name.","lastModifiedDate":"2023-03-30"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":489,"author":{"gitId":"joyngjr"},"content":"### Q10 Why does two different tags have the same tag color?","lastModifiedDate":"2023-03-30"},{"lineNumber":490,"author":{"gitId":"joyngjr"},"content":"**A**: Clock-Work randomly assigns 1 of 20 available colors to tags. As the number of tags users use increases, the chances of multiple tags being allocated the same colour increases. More colors will be added in future iterations.","lastModifiedDate":"2023-03-30"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":492,"author":{"gitId":"joyngjr"},"content":"### Q11 What is a free day?","lastModifiedDate":"2023-04-07"},{"lineNumber":493,"author":{"gitId":"joyngjr"},"content":"**A**: The sum of allocated effort in a free day does not exceed the user preferred workload.","lastModifiedDate":"2023-04-07"},{"lineNumber":494,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"joyngjr"},"content":"## 6. Command summary","lastModifiedDate":"2023-03-30"},{"lineNumber":497,"author":{"gitId":"joyngjr"},"content":"\u003ctable\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":498,"author":{"gitId":"joyngjr"},"content":"    \u003cthead\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":499,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":500,"author":{"gitId":"joyngjr"},"content":"            \u003cth\u003eCommand\u003c/th\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":501,"author":{"gitId":"joyngjr"},"content":"            \u003cth\u003eInputs\u003c/th\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":502,"author":{"gitId":"joyngjr"},"content":"            \u003cth\u003eExamples\u003c/th\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":503,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":504,"author":{"gitId":"joyngjr"},"content":"    \u003c/thead\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":505,"author":{"gitId":"joyngjr"},"content":"    \u003ctbody\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":506,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":507,"author":{"gitId":"joyngjr"},"content":"            \u003ctd rowspan\u003d6\u003e\u003cb\u003eAdd\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":508,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003en/TASKNAME\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":509,"author":{"gitId":"joyngjr"},"content":"            \u003ctd rowspan\u003d4\u003eadd n/Read Book d/Lord of The Flies t/Reading t/Literature E/10\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":510,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":511,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":512,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[d/DESCRIPTION]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":513,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":514,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":515,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[t/TAG]...\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":516,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":517,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":518,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[E/EFFORT]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":519,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":520,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":521,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[D/DEADLINE]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":522,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eadd n/CS2103T v1.4 D/2023-04-10 1200\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":523,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":524,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":525,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[F/FROM] [T/TO]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":526,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eadd n/Sleep v1.4 F/2023-04-08 2300 T/2023-04-09 0800\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":527,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":528,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":529,"author":{"gitId":"joyngjr"},"content":"            \u003ctd rowspan\u003d8\u003e\u003cb\u003eEdit\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":530,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eINDEX\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":531,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":532,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":533,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":534,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[n/TASKNAME]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":535,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eedit 1 n/Read Newspaper\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":536,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":537,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":538,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[d/DESCRIPTION]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":539,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eedit 1 d/Read Newspaper\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":540,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":541,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":542,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[t/TAGS]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":543,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eedit 1 t/\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":544,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":545,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":546,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[E/EFFORT]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":547,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eedit 1 E/7\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":548,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":549,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":550,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[D/DEADLINE]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":551,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eedit 1 D/2023-04-25 1200\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":552,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":553,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":554,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[F/FROM]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":555,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eedit 2 F/2023-03-10 1900\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":556,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":557,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":558,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[T/TO]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":559,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eedit 2 T/2023-03-10 2100\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":560,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":561,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":562,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e\u003cb\u003eDelete\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":563,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eINDEX[ES]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":564,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003edelete 1 2\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":565,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":566,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":567,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e\u003cb\u003eList\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":568,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e-\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":569,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003elist\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":570,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":571,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":572,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e\u003cb\u003eSort\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":573,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e-\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":574,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003esort\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":575,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":576,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":577,"author":{"gitId":"joyngjr"},"content":"            \u003ctd rowspan\u003d8\u003e\u003cb\u003eFind\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":578,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[n/TASKNAME]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":579,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003efind n/read\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":580,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":581,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":582,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[d/DESCRIPTION]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":583,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003efind d/Straits Times\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":584,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":585,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":586,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[t/TAGS]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":587,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003efind t/Books\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":588,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":589,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":590,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[E/EFFORT]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":591,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003efind E/15\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":592,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":593,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":594,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[D/DEADLINE]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":595,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003efind D/2023-12-25\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":596,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":597,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":598,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[F/FROM]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":599,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003efind F/2023-05-12\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":600,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":601,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":602,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[T/TO]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":603,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003efind T/2023-05-13\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":604,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":605,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":606,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[all/] [n/TASKNAME]...\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":607,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003efind all/ n/read n/book\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":608,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":609,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":610,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e\u003cb\u003eStats\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":611,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e-\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":612,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003estats\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":613,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":614,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":615,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e\u003cb\u003eAlert\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":616,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eHOURS\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":617,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003ealert 50\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":618,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":619,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":620,"author":{"gitId":"joyngjr"},"content":"            \u003ctd rowspan\u003d2\u003e\u003cb\u003eSchedule\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":621,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eD/DATE\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":622,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eschedule D/2023-04-04\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":623,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":624,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":625,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[E/EFFORT]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":626,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eschedule D/2023-04-04 E/10\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":627,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":628,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":629,"author":{"gitId":"joyngjr"},"content":"            \u003ctd rowspan\u003d3\u003e\u003cb\u003eSubsection\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":630,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eINDEX\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":631,"author":{"gitId":"joyngjr"},"content":"            \u003ctd rowspan\u003d3\u003esubsection 1 n/page 1-5 d/finance\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":632,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":633,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":634,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003en/SUBSECTION_NAME\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":635,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":636,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":637,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e[d/DESCRIPTION]\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":638,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":639,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":640,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e\u003cb\u003eRemove-Subsection\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":641,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eTASK_INDEX I/SUBSECTION_INDEX\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":642,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eremove-subsection 1 I/1\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":643,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":644,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":645,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e\u003cb\u003eHelp\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":646,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e-\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":647,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003ehelp\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":648,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":649,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":650,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e\u003cb\u003eClear\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":651,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e-\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":652,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eclear\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":653,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":654,"author":{"gitId":"joyngjr"},"content":"        \u003ctr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":655,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e\u003cb\u003eExit\u003c/b\u003e\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":656,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003e-\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":657,"author":{"gitId":"joyngjr"},"content":"            \u003ctd\u003eexit\u003c/td\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":658,"author":{"gitId":"joyngjr"},"content":"        \u003c/tr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":659,"author":{"gitId":"joyngjr"},"content":"    \u003c/tbody\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":660,"author":{"gitId":"joyngjr"},"content":"\u003c/table\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":661,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":662,"author":{"gitId":"joyngjr"},"content":"## 7. Glossary","lastModifiedDate":"2023-03-30"},{"lineNumber":663,"author":{"gitId":"PROGRAMMERHAO"},"content":"1. Free day: Allocating a task to this day will not result in total allocated effort exceeding preferred effort level.","lastModifiedDate":"2023-04-08"},{"lineNumber":664,"author":{"gitId":"PROGRAMMERHAO"},"content":"2. Long date: Date in the format YYYY-MM-DD HHMM","lastModifiedDate":"2023-04-08"},{"lineNumber":665,"author":{"gitId":"PROGRAMMERHAO"},"content":"3. Short date: Date in the format YYYY-MM-DD","lastModifiedDate":"2023-04-08"},{"lineNumber":666,"author":{"gitId":"PROGRAMMERHAO"},"content":"4. Overload: When the sum of effort for all tasks allocated to a particular day exceeds the preferred daily effort level.","lastModifiedDate":"2023-04-08"}],"authorContributionMap":{"Huggenguggen":32,"lywich":76,"PROGRAMMERHAO":18,"-":120,"joyngjr":420}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"PROGRAMMERHAO"},"content":"    content: \"Clock-Work\";","lastModifiedDate":"2023-02-18"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"PROGRAMMERHAO":1,"-":294}},{"path":"docs/diagrams/AddActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"start","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":":User executes add command;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"if ()  then ([input contains Deadline])","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"     :Creates a Deadline;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"     :Save the Deadline to the taskbook;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"elseif () then ([input contains event duration])","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"    :Creates an Event;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"    :Save the Event to the taskbook;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"else ([else])","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"    :Creates a Simple Task;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"    :Save the Simple Task to taskbook;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"endif","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":":Update UI to show the added task(s);","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"stop","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"PROGRAMMERHAO":27}},{"path":"docs/diagrams/AddCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"participant \":TaskBookParser\" as TaskBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \"l:TaskList\" as TaskList LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"[-\u003e LogicManager : execute(\"Add n/CS210ST n/CS2109S d/homework\")","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"LogicManager -\u003e TaskBookParser : parseCommand(\"Add n/CS210ST n/CS2109S d/homework\")","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"activate TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"create AddCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"TaskBookParser -\u003eAddCommandParser","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate AddCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"AddCommandParser --\u003e TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"TaskBookParser -\u003e AddCommandParser : parse(n/CS210ST n/CS2109S d/homework)","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate AddCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"create TaskList","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"AddCommandParser -\u003e TaskList","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate TaskList","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"TaskList --\u003e AddCommandParser: l","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate TaskList","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"create AddCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"AddCommandParser -\u003e AddCommand: l","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate AddCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"AddCommand --\u003e AddCommandParser : a","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate AddCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"AddCommandParser --\u003e TaskBookParser : a","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"AddCommandParser -[hidden]-\u003e TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"destroy AddCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"TaskBookParser --\u003e LogicManager : a","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"deactivate TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate AddCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"loop until list size is 0","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"        AddCommand -\u003e Model: addTask()","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"        activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Model --\u003e AddCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"        deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"    end","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"create CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"PROGRAMMERHAO"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"PROGRAMMERHAO"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"AddCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate AddCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"PROGRAMMERHAO"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"lywich":10,"PROGRAMMERHAO":79}},{"path":"docs/diagrams/AlertActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"@startuml","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"start","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":":User uses alert command;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"if (input)  then ([input is empty])","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"     :Uses default 24hr alert window;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"else([input includes timeframe])","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"    :Uses input timeframe as alert window;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"endif","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":":alert command executed;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":":model updates alert task filtered list;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":":Update UI to show user alert list;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"stop","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"@enduml","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"Huggenguggen":17}},{"path":"docs/diagrams/AlertSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"@startuml","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"!include style.puml","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"participant \":TaskBookParser\" as TaskBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"participant \"a:AlertCommand\" as AlertCommand LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"end box","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"end box","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"[-\u003e LogicManager : execute(\"alert 48\")","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"activate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"LogicManager -\u003e TaskBookParser : parseCommand(\"alert 48\")","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"activate TaskBookParser","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"create AlertCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"TaskBookParser -\u003e AlertCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"activate AlertCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"AlertCommand --\u003e TaskBookParser : a","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"deactivate AlertCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"TaskBookParser --\u003e LogicManager : a","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"deactivate TaskBookParser","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"LogicManager -\u003e AlertCommand : execute(model)","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"activate AlertCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"AlertCommand -\u003e Model : updateAlertTaskList","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"activate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"Model --\u003e AlertCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"deactivate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"create CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"AlertCommand -\u003e CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"activate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"CommandResult --\u003e AlertCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"AlertCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"deactivate AlertCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"@enduml","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"Huggenguggen":53}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteTask(p)","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveTaskBook(taskBook)","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lywich":1,"-":36,"joyngjr":1}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"taskBook *-right-\u003e \"1\" UniqueTaskList","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"taskBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"UniqueTagList -[hidden]down- UniqueTaskList","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"UniqueTagList -[hidden]down- UniqueTaskList","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"UniqueTaskList -right-\u003e Task","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"Task -up-\u003e \"*\" Tag","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"Task *--\u003e Name","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"Task *--\u003e Phone","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"Task *--\u003e Email","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"Task *--\u003e Address","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lywich":10,"-":11}},{"path":"docs/diagrams/ClearSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"@startuml","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"!include style.puml","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"participant \":TaskBookParser\" as TaskBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"participant \"c:ClearCommand\" as ClearCommand LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"end box","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"end box","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"[-\u003e LogicManager : execute(\"clear\")","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"activate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"LogicManager -\u003e TaskBookParser : parseCommand(\"clear\")","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"activate TaskBookParser","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"create ClearCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"TaskBookParser -\u003e ClearCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"activate ClearCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"ClearCommand --\u003e TaskBookParser : c","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"deactivate ClearCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"TaskBookParser --\u003e LogicManager : c","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"deactivate TaskBookParser","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"LogicManager -\u003e ClearCommand : execute(model)","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"activate ClearCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"ClearCommand -\u003e Model : setTaskBook(new Taskbook())","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"activate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"Model --\u003e ClearCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"deactivate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"create CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"ClearCommand -\u003e CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"activate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"CommandResult --\u003e ClearCommand : result","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"ClearCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"deactivate ClearCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"@enduml","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"lywich":52}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"if () then ([command commits TaskBook])","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"    :Save TaskBook to","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"    taskBookStateList;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lywich":3,"-":12}},{"path":"docs/diagrams/DeleteCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"start","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":":Delete command is detected;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"if () then ([parse data])","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"    :Instantiate DeleteCommand with relevant indices;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"    :Removes tasks from TaskBook and saves changes;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"    :Removes task from UI;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"else ([else])","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"endif","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"stop","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"joyngjr":13}},{"path":"docs/diagrams/DeleteCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"participant \":TaskBookParser\" as TaskBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"box Commons COMMONS_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"participant \"i:IndexList\" as IndexList COMMONS_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"end box","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"[-\u003e LogicManager : execute(\"delete 1 2\")","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"activate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"LogicManager -\u003e TaskBookParser : parseCommand(\"delete 1 2\")","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"activate TaskBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"create DeleteCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"TaskBookParser -\u003e DeleteCommandParser : DeleteCommandParser()","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"activate DeleteCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"DeleteCommandParser --\u003e TaskBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"TaskBookParser -\u003e DeleteCommandParser : parse(\"1 2\")","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"activate DeleteCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"DeleteCommandParser -\u003e ParserUtil : parseIndexList(\"1 2\")","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"activate ParserUtil","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"create IndexList","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"ParserUtil -\u003e IndexList : IndexList()","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"activate IndexList","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"IndexList --\u003e ParserUtil : i","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"deactivate IndexList","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"ParserUtil --\u003e DeleteCommandParser : i","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"create DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"DeleteCommandParser -\u003e DeleteCommand : DeleteCommand(i)","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"activate DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"deactivate DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"DeleteCommandParser --\u003e TaskBookParser : d","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"DeleteCommandParser -[hidden]-\u003e TaskBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"TaskBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"deactivate TaskBookParser","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"LogicManager -\u003e DeleteCommand : execute(model)","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"activate DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"loop all indices in IndexList","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"DeleteCommand -\u003e IndexList : get(index)","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"activate IndexList","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"IndexList --\u003e DeleteCommand : taskToDelete","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"deactivate IndexList","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"DeleteCommand -\u003e Model : deleteTask(taskToDelete)","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"activate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"deactivate Model","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"end","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"create CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"DeleteCommand -\u003e CommandResult : CommandResult(successMessage)","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"activate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"CommandResult --\u003e DeleteCommand : result","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"joyngjr"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"joyngjr"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"joyngjr"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"joyngjr"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"joyngjr"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"joyngjr":97}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"participant \":TaskBookParser\" as TaskBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"LogicManager -\u003e TaskBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"activate TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"TaskBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"DeleteCommandParser --\u003e TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"TaskBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"DeleteCommandParser --\u003e TaskBookParser : d","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"DeleteCommandParser -[hidden]-\u003e TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"TaskBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"deactivate TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"DeleteCommand -\u003e Model : deleteTask(1)","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lywich":11,"-":58}},{"path":"docs/diagrams/EditActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"@startuml","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"start","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":":User executes edit command;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":":Extracts all the parameters from the command;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":":Gets the task at the corresponding index in the task list;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":":Creates a new task with updated parameters;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":":Set the old task in the task list with the new task;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":":Update UI to show the added task(s);","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"stop","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"@enduml","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"PROGRAMMERHAO":15}},{"path":"docs/diagrams/EditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"@startuml","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"!include style.puml","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"participant \":TaskBookParser\" as TaskBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \"d:EditTaskDescriptor\" as EditTaskDescriptor LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \"e:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \"t:SimpleTask\" as SimpleTask LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \"l:Deadline\" as Deadline LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \"v:Event\" as Event LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"end box","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"end box","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"[-\u003e LogicManager : execute(\"edit 1 n/homework\")","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"LogicManager -\u003e TaskBookParser : parseCommand(\"edit 1 n/homework\")","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"activate TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"create EditCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"TaskBookParser -\u003e EditCommandParser","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate EditCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"EditCommandParser --\u003e TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate EditCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"TaskBookParser -\u003e EditCommandParser : parse(\"1 n/homework\")","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate EditCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"create EditTaskDescriptor","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"EditCommandParser -\u003e EditTaskDescriptor","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate EditTaskDescriptor","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"EditTaskDescriptor --\u003e EditCommandParser : d","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate EditTaskDescriptor","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"create EditCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"EditCommandParser -\u003e EditCommand : (1, d)","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate EditCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"EditCommand --\u003e EditCommandParser : e","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate EditCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"EditCommandParser --\u003e TaskBookParser : e","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate EditCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"EditCommandParser -[hidden]-\u003e TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"destroy EditCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"TaskBookParser --\u003e LogicManager : e","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"deactivate TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"LogicManager -\u003e EditCommand : execute()","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate EditCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"alt old task is SimpleTask","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"    EditCommand -\u003e SimpleTask","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"    activate SimpleTask","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"    SimpleTask --\u003e EditCommand : t (new task)","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"    deactivate SimpleTask","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"else old task is Deadline","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"    EditCommand -\u003e Deadline","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"    activate Deadline","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"    Deadline --\u003e EditCommand : l (new task)","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"    deactivate Deadline","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"else old task is Event","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"    EditCommand -\u003e Event","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"PROGRAMMERHAO"},"content":"    activate Event","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"    Event --\u003e EditCommand : v (new task)","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"    deactivate Event","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"end","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"PROGRAMMERHAO"},"content":"EditCommand -\u003e Model : setTask()","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"PROGRAMMERHAO"},"content":"create CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"PROGRAMMERHAO"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"PROGRAMMERHAO"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"PROGRAMMERHAO"},"content":"EditCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate EditCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"PROGRAMMERHAO"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"PROGRAMMERHAO"},"content":"@enduml","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"lywich":10,"PROGRAMMERHAO":95}},{"path":"docs/diagrams/FindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"@startuml","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"start","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":":User uses find command;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":":find command executed;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":":model updates filtered list;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":":Update UI to show user filtered list;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"stop","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"@enduml","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Huggenguggen":12}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"@startuml","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"!include style.puml","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"participant \":TaskBookParser\" as TaskBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"participant \"f:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"end box","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"end box","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"[-\u003e LogicManager : execute(\"find n/read\")","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"activate LogicManager","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"LogicManager -\u003e TaskBookParser : parseCommand(\"find n/read\")","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"activate TaskBookParser","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"create FindCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"TaskBookParser -\u003e FindCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"activate FindCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"FindCommand --\u003e TaskBookParser : f","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"deactivate FindCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"TaskBookParser --\u003e LogicManager : f","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"deactivate TaskBookParser","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"LogicManager -\u003e FindCommand : execute()","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"activate FindCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"FindCommand -\u003e Model : updateFilteredTaskList","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"activate Model","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"deactivate Model","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"create CommandResult","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"activate CommandResult","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"deactivate FindCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"@enduml","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Huggenguggen":52,"joyngjr":1}},{"path":"docs/diagrams/HelpCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"@startuml","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"!include style.puml","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"participant \":TaskBookParser\" as TaskBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"participant \"h:HelpCommand\" as HelpCommand LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"end box","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"[-\u003e LogicManager : execute(\"Help\")","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"activate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"LogicManager -\u003e TaskBookParser : parseCommand(\"Help\")","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"activate TaskBookParser","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"create HelpCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"TaskBookParser -\u003e HelpCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"activate HelpCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"HelpCommand --\u003e TaskBookParser : h","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"deactivate HelpCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"TaskBookParser --\u003e LogicManager : h","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"deactivate TaskBookParser","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"LogicManager -\u003e HelpCommand : execute(model)","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"activate HelpCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"create CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"HelpCommand -\u003e CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"activate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"CommandResult --\u003e HelpCommand : result","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"HelpCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"deactivate HelpCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"@enduml","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"lywich":42}},{"path":"docs/diagrams/ListCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"@startuml","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"!include style.puml","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"participant \":TaskBookParser\" as TaskBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"participant \"l:ListCommand\" as ListCommand LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"end box","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"end box","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"[-\u003e LogicManager : execute(\"List\")","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"activate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"LogicManager -\u003e TaskBookParser : parseCommand(\"List\")","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"activate TaskBookParser","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"create ListCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"TaskBookParser -\u003e ListCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"activate ListCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"ListCommand --\u003e TaskBookParser : l","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"deactivate ListCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"TaskBookParser --\u003e LogicManager : l","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"deactivate TaskBookParser","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"LogicManager -\u003e ListCommand : execute(model)","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"activate ListCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"ListCommand -\u003e Model : updateFilteredTaskList(SHOW_ALL_TASKS)","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"activate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"Model --\u003e ListCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"deactivate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"create CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"ListCommand -\u003e CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"activate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"CommandResult --\u003e ListCommand : result","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"ListCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"deactivate ListCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"@enduml","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"lywich":52}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"Class TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"LogicManager -right-\u003e\"1\" TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"TaskBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lywich":3,"-":43}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyTaskBook\" as ReadOnlyTaskBook","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"Class \"{abstract}\\nTask\" as Task","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"Class TaskBook","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"Class UniqueTaskList","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"Class UniqueSubtaskList","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"Class Subtask","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"Class SimpleTask","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"Class Deadline","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"Class Event","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"TaskBook .up.|\u003e ReadOnlyTaskBook","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"Model .left.\u003e ReadOnlyTaskBook","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"ModelManager -left-\u003e \"1\" TaskBook","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"TaskBook *--\u003e \"1\" UniqueTaskList","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"UniqueTaskList --\u003e \"~* all\" Task","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"Task *--\u003e \"1\" UniqueSubtaskList","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"Deadline -right|\u003e Task","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"Event -left|\u003e Task","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"SimpleTask -up-|\u003e Task","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"UniqueSubtaskList --\u003e \"~* all\" Subtask","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"ModelManager --\u003e\"~* filtered\" Task","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lywich":9,"PROGRAMMERHAO":15,"-":28}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"Class TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"HiddenOutside ..\u003e TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"TaskBookParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"TaskBookParser ..\u003e Command : returns \u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"lywich":4,"-":34}},{"path":"docs/diagrams/RemoveSubsectionActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"@startuml","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"start","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":":User executes remove-subsection command;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":":Extracts all the parameters from the command;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":":Gets the task at the corresponding index in the task list;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":":Creates a new task with the subtask deleted from old task\u0027s subtask list;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":":Set the old task in the task list with the new task;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":":Update UI to show the added task(s);","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"stop","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"@enduml","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"PROGRAMMERHAO":15}},{"path":"docs/diagrams/RemoveSubsectionSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"@startuml","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"!include style.puml","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"participant \":TaskBookParser\" as TaskBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \":DeleteSubtaskParser\" as DeleteSubtaskParser LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \"d:DeleteSubtaskCommand\" as DeleteSubtaskCommand LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \"t:SimpleTask\" as SimpleTask LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \"l:Deadline\" as Deadline LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \"v:Event\" as Event LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"end box","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"end box","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"[-\u003e LogicManager : execute(\"remove-subsection 1 I/1\")","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"LogicManager -\u003e TaskBookParser : parseCommand(\"remove-subsection 1 I/1\")","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"activate TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"create DeleteSubtaskParser","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"TaskBookParser -\u003e DeleteSubtaskParser","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate DeleteSubtaskParser","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"DeleteSubtaskParser --\u003e TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate DeleteSubtaskParser","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"TaskBookParser -\u003e DeleteSubtaskParser : parse(\"1 I/1\")","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate DeleteSubtaskParser","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"create DeleteSubtaskCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"DeleteSubtaskParser -\u003e DeleteSubtaskCommand : (1, 1)","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate DeleteSubtaskCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"DeleteSubtaskCommand --\u003e DeleteSubtaskParser : d","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate DeleteSubtaskCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"DeleteSubtaskParser --\u003e TaskBookParser : d","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate DeleteSubtaskParser","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"DeleteSubtaskParser -[hidden]-\u003e TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"destroy DeleteSubtaskParser","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"TaskBookParser --\u003e LogicManager : a","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"deactivate TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"LogicManager -\u003e DeleteSubtaskCommand : execute()","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate DeleteSubtaskCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"alt old task is SimpleTask","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"    DeleteSubtaskCommand -\u003e SimpleTask","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"    activate SimpleTask","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"    SimpleTask --\u003e DeleteSubtaskCommand : t (new task)","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"    deactivate SimpleTask","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"else old task is Deadline","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"    DeleteSubtaskCommand -\u003e Deadline","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"    activate Deadline","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"    Deadline --\u003e DeleteSubtaskCommand : l (new task)","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"    deactivate Deadline","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"else old task is Event","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"    DeleteSubtaskCommand -\u003e Event","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"    activate Event","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"    Event --\u003e DeleteSubtaskCommand : v (new task)","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"    deactivate Event","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"end","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"DeleteSubtaskCommand -\u003e Model : setTask()","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"Model --\u003e DeleteSubtaskCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"create CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"DeleteSubtaskCommand -\u003e CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"CommandResult --\u003e DeleteSubtaskCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"PROGRAMMERHAO"},"content":"DeleteSubtaskCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate DeleteSubtaskCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"PROGRAMMERHAO"},"content":"@enduml","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"lywich":10,"PROGRAMMERHAO":87}},{"path":"docs/diagrams/ScheduleCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"@startuml","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"start","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":":User executes schedule command;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"if ()  then ([input contains effort])","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"     :Creates a Plan Command;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"     :Saves plan to storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"else ([else])","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"endif","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":":Retrieve saved plan from storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":":Update UI to show tasks on entered date;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"stop","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"@enduml","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"joyngjr":17}},{"path":"docs/diagrams/ScheduleCommandHavePlanSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"@startuml","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"!include style.puml","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"participant \":TaskBookParser\" as TaskBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"participant \":ScheduleCommandParser\" as ScheduleCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"participant \"s:ScheduleCommand\" as ScheduleCommand LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"participant \"p:PlanCommand\" as PlanCommand LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"end box","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"end box","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"[-\u003e LogicManager : execute(\"schedule D/2023-06-28 E/50\")","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"activate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"LogicManager -\u003e TaskBookParser : parseCommand(\"schedule D/2023-06-28 E/50\")","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"activate TaskBookParser","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"create ScheduleCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"TaskBookParser -\u003e ScheduleCommandParser : ScheduleCommandParser()","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"activate ScheduleCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"ScheduleCommandParser --\u003e TaskBookParser","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"deactivate ScheduleCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"TaskBookParser -\u003e ScheduleCommandParser : parse(\"D/2023-06-28 E/50\")","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"activate ScheduleCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"create ScheduleCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"ScheduleCommandParser -\u003e ScheduleCommand : ScheduleCommand(date, effort)","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"activate ScheduleCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"ScheduleCommand --\u003e ScheduleCommandParser : s","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"deactivate ScheduleCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"ScheduleCommandParser --\u003e TaskBookParser : s","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"deactivate ScheduleCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"TaskBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"deactivate TaskBookParser","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"LogicManager -\u003e ScheduleCommand : execute(model)","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"activate ScheduleCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"create PlanCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"ScheduleCommand -\u003e PlanCommand : PlanCommand(effort)","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"activate PlanCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"PlanCommand --\u003e ScheduleCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"deactivate PlanCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"ScheduleCommand -\u003e PlanCommand : execute(model)","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"activate PlanCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"PlanCommand -\u003e Model : plan(workload)","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"activate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"Model --\u003e PlanCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"deactivate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"PlanCommand --\u003e ScheduleCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"deactivate PlanCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"ScheduleCommand -\u003e Model : schedule(date)","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"activate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"Model --\u003e ScheduleCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"deactivate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"create CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"ScheduleCommand -\u003e CommandResult : CommandResult(successMessage)","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"activate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"CommandResult --\u003e ScheduleCommand : result","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"ScheduleCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"@enduml","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"joyngjr":87}},{"path":"docs/diagrams/ScheduleCommandNoPlanSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"@startuml","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"!include style.puml","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"participant \":TaskBookParser\" as TaskBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"participant \":ScheduleCommandParser\" as ScheduleCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"participant \"s:ScheduleCommand\" as ScheduleCommand LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"end box","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"end box","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"[-\u003e LogicManager : execute(\"schedule D/2023-06-28\")","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"activate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"LogicManager -\u003e TaskBookParser : parseCommand(\"schedule D/2023-06-28\")","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"activate TaskBookParser","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"create ScheduleCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"TaskBookParser -\u003e ScheduleCommandParser : ScheduleCommandParser()","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"activate ScheduleCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"ScheduleCommandParser --\u003e TaskBookParser","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"deactivate ScheduleCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"TaskBookParser -\u003e ScheduleCommandParser : parse(\"D/2023-06-28\")","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"activate ScheduleCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"create ScheduleCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"ScheduleCommandParser -\u003e ScheduleCommand : ScheduleCommand(date)","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"activate ScheduleCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"ScheduleCommand --\u003e ScheduleCommandParser : s","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"deactivate ScheduleCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"ScheduleCommandParser --\u003e TaskBookParser : s","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"deactivate ScheduleCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"TaskBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"deactivate TaskBookParser","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"LogicManager -\u003e ScheduleCommand : execute(model)","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"activate ScheduleCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"ScheduleCommand -\u003e Model : schedule(date)","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"activate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"Model --\u003e ScheduleCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"deactivate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"create CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"ScheduleCommand -\u003e CommandResult : CommandResult(successMessage)","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"activate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"CommandResult --\u003e ScheduleCommand : result","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"ScheduleCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"@enduml","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"joyngjr":67}},{"path":"docs/diagrams/SortCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"@startuml","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"start","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":":User executes a Sort Command;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":":Instantiate a SortCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":":Sorts tasks in internalList using FXCollections;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":":Update UI to inform user List is successfully sorted;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"stop","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"@enduml","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"lywich":10}},{"path":"docs/diagrams/SortCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"@startuml","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"!include style.puml","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"participant \":TaskBookParser\" as TaskBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"participant \"s:SortCommand\" as SortCommand LOGIC_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"end box","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"end box","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"[-\u003e LogicManager : execute(\"sort\")","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"activate LogicManager","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"LogicManager -\u003e TaskBookParser : parseCommand(\"sort\")","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"activate TaskBookParser","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"create SortCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"TaskBookParser -\u003e SortCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"activate SortCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"SortCommand --\u003e TaskBookParser : s","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"deactivate SortCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"TaskBookParser --\u003e LogicManager : s","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"deactivate TaskBookParser","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"LogicManager -\u003e SortCommand : execute(model)","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"activate SortCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"SortCommand -\u003e Model : sortTask()","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"activate Model","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"Model --\u003e SortCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"deactivate Model","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"create CommandResult","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"SortCommand -\u003e CommandResult","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"activate CommandResult","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"CommandResult --\u003e SortCommand : result","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"SortCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"deactivate SortCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"@enduml","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"lywich":53}},{"path":"docs/diagrams/StatsCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"start","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":":User executes a Stats Command;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":":Instantiate a StatsCommand;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":":Count tags in TaskByTagTracker;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":":Converts findings into String to display to user;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"stop","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"joyngjr":10}},{"path":"docs/diagrams/StatsCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"!include style.puml","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"participant \":TaskBookParser\" as TaskBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"participant \"s:StatsCommand\" as StatsCommand LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"participant \":TaskByTagTracker\" as TaskByTagTracker MODEL_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"[-\u003e LogicManager : execute(\"stats\")","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"activate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"LogicManager -\u003e TaskBookParser : parseCommand(\"stats\")","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"activate TaskBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"create StatsCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"TaskBookParser -\u003e StatsCommand : statsCommand()","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"activate StatsCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"StatsCommand --\u003e TaskBookParser : s","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"deactivate StatsCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"TaskBookParser --\u003e LogicManager : s","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"deactivate TaskBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"LogicManager -\u003e StatsCommand : execute(model)","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"activate StatsCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"StatsCommand -\u003e TaskByTagTracker : sort(model)","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"activate TaskByTagTracker","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"TaskByTagTracker -\u003e Model : getFilteredTaskList()","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"activate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"Model --\u003e TaskByTagTracker","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"deactivate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"TaskByTagTracker --\u003e StatsCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"deactivate TaskByTagTracker","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"create CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"StatsCommand -\u003e CommandResult : CommandResult(ordering)","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"activate CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"CommandResult --\u003e StatsCommand : result","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"StatsCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"deactivate StatsCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"joyngjr":60}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"package \"TaskBook Storage\" #F4F6F6{","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nTaskBookStorage\" as TaskBookStorage","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"Class JsonTaskBookStorage","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"Class JsonSerializableTaskBook","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"Class JsonAdaptedTask","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"Class JsonAdaptedSubtask","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"package \"Planner Storage\" #F4F6F6{","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nPlannerStorage\" as PlannerStorage","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"Class JsonPlannerStorage","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"Class JsonSerializablePlanner","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"Class JsonAdaptedDailyPlan","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"Class JsonAdaptedTask","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"StorageManager -up-\u003e \"1\" TaskBookStorage","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"Storage -right-|\u003e TaskBookStorage","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"Storage -right-|\u003e PlannerStorage","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"UserPrefsStorage -[hidden]down|\u003eStorageManager","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"JsonTaskBookStorage .up.|\u003e TaskBookStorage","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"JsonTaskBookStorage ..\u003e JsonSerializableTaskBook","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"JsonSerializableTaskBook --\u003e \"*\" JsonAdaptedTask","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"JsonAdaptedTask --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"JsonAdaptedTask --\u003e \"*\" JsonAdaptedSubtask","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"TaskBookStorage -[hidden]up|\u003e PlannerStorage","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"StorageManager -down-\u003e \"1\" PlannerStorage","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"JsonPlannerStorage .up.|\u003e PlannerStorage","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"JsonPlannerStorage ..\u003e JsonSerializablePlanner","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"JsonSerializablePlanner --\u003e \"*\" JsonAdaptedDailyPlan","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"JsonAdaptedDailyPlan --\u003e \"*\" JsonAdaptedTask","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lywich":2,"PROGRAMMERHAO":28,"-":34}},{"path":"docs/diagrams/SubsectionActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"@startuml","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"start","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":":User executes subsection command;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":":Extracts all the parameters from the command;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":":Gets the task at the corresponding index in the task list;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":":Creates a new task with the new subsection added to the task\u0027s subsection list;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":":Set the old task in the task list with the new task;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":":Update UI to show the added task(s);","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"stop","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"@enduml","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"PROGRAMMERHAO":15}},{"path":"docs/diagrams/SubsectionSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"@startuml","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"!include style.puml","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"participant \":TaskBookParser\" as TaskBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \":AddSubtaskParser\" as AddSubtaskParser LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \"a:AddSubtaskCommand\" as AddSubtaskCommand LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \"t:SimpleTask\" as SimpleTask LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \"l:Deadline\" as Deadline LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \"v:Event\" as Event LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"end box","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"end box","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"[-\u003e LogicManager : execute(\"Subsection 1 n/CS2100 d/Lab 1\")","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"LogicManager -\u003e TaskBookParser : parseCommand(\"Subsection 1 n/homework d/Lab 1\")","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"activate TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"create AddSubtaskParser","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"TaskBookParser -\u003e AddSubtaskParser","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate AddSubtaskParser","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"AddSubtaskParser --\u003e TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate AddSubtaskParser","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"TaskBookParser -\u003e AddSubtaskParser : parse(\"1 n/CS2100 d/Lab 1\")","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate AddSubtaskParser","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"create AddSubtaskCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"AddSubtaskParser -\u003e AddSubtaskCommand : (1, newTask)","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate AddSubtaskCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"AddSubtaskCommand --\u003e AddSubtaskParser : a","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate AddSubtaskCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"AddSubtaskParser --\u003e TaskBookParser : a","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate AddSubtaskParser","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"AddSubtaskParser -[hidden]-\u003e TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"destroy AddSubtaskParser","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"TaskBookParser --\u003e LogicManager : a","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"deactivate TaskBookParser","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"LogicManager -\u003e AddSubtaskCommand : execute()","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate AddSubtaskCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"alt old task is SimpleTask","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"    AddSubtaskCommand -\u003e SimpleTask","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"    activate SimpleTask","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"    SimpleTask --\u003e AddSubtaskCommand : t (new task)","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"    deactivate SimpleTask","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"else old task is Deadline","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"    AddSubtaskCommand -\u003e Deadline","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"    activate Deadline","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"    Deadline --\u003e AddSubtaskCommand : l (new task)","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"    deactivate Deadline","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"else old task is Event","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"    AddSubtaskCommand -\u003e Event","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"    activate Event","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"    Event --\u003e AddSubtaskCommand : v (new task)","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"    deactivate Event","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"end","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"AddSubtaskCommand -\u003e Model : setTask()","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"Model --\u003e AddSubtaskCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"create CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"AddSubtaskCommand -\u003e CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"PROGRAMMERHAO"},"content":"activate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"CommandResult --\u003e AddSubtaskCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"PROGRAMMERHAO"},"content":"AddSubtaskCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate AddSubtaskCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"PROGRAMMERHAO"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"PROGRAMMERHAO"},"content":"@enduml","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"lywich":10,"PROGRAMMERHAO":87}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"Class AlertListPanel","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"Class TaskListPanel","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"Class TaskCard","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"MainWindow -down-\u003e \"1\" AlertListPanel","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"MainWindow *-down-\u003e \"1\" TaskListPanel","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"AlertListPanel --\u003e \"*\" TaskCard","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"TaskListPanel -down-\u003e \"*\" TaskCard","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"AlertListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"TaskListPanel --|\u003e UiPart","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"TaskCard --|\u003e UiPart","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"TaskCard ..\u003e Model","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"TaskListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Huggenguggen":4,"lywich":8,"-":52}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"!define COMMONS_COLOR #FFB0B0","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"!define COMMONS_COLOR_T1 #FF8B8B","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"!define COMMONS_COLOR_T2 #FF6464","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"!define COMMONS_COLOR_T3 #A3000F","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"!define COMMONS_COLOR_T4 #73000A","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":75,"joyngjr":6}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"ecp -\u003e ec ++: index, editTaskDescriptor","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"lywich":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"title: Clock-Work","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-W13-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-W13-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"**Clock-Work is a desktop application for managing your tasks.**","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"* If you are interested in using Clock-Work, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"* If you are interested about developing Clock-Work, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"* Credits for tag color codes goes to: [Sasha Trubetskoy](https://sashamaps.net/docs/resources/20-colors/)","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"-":13,"joyngjr":8}},{"path":"docs/team/huggenguggen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"layout: page","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"title: Lee Yu Heng\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"### Project: Clock-Work","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"Clock-Work is a desktop application for managing tasks and assignments, optimised for use via a Command Line Interface","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"(CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Clock-Work can get your","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"assignment management tasks done faster than traditional GUI applications.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dhuggenguggen)","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"    * `find` command enhancement [PR#48](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/48)","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"      * Previously, `find` only by name","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"      * Now it will find by most attributes","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"      * The aim was to make the find command complete","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"        * This means that a user should be able to find by most attributes","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"        * This has major implications for future attributes if we choose to add them","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"    * Add support for different types of `Tasks` [PR#59](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/59)","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"      * Added 3 subclasses, SimpleTask, Deadline, and Event.","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"      * Add support in addCommandParser to add different type of tasks dynamically. ","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"      * Change representation in JsonAdaptedTask such that it can represent new types of task and still parse them.","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"    * `alert` command [PR#78](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/78)","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"      * Adding `alert` command","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"      * The `alert` command was inspired by the reminder systems on phones.","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"      * Setting an alert for `Deadlines` and `Events` felt like a natural function.","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"      * With alert, we thought a pop-up UI similar to `help` made sense.","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"      * We realized this gets in the way of users who want to continue typing and was counter to CLI restraint.","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"      * I then remade the UI so that `alerts` would appear on the right instead. [PR#155](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/155)","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"      * This made it unobtrusive but still useful.","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"      * A challenge faced was for alerts to be persistent over app usage.","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"        * I decided on making alert a attribute of tasks that users cannot directly access.","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"        * When setting an alert window, the user implicitly sets the alertWindow attribute of all tasks.","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"        * This way on load I can immediately check if any task is due + if the user calls alert it will be","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"based on the last call.","lastModifiedDate":"2023-04-02"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"      * Implement GUI for alert","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"    * Contributions to the User Guide:","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"        * GUI screenshot  ","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"![UI](../images/Ui.png)","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"        * Fix typos","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"        * `find` command section  ","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"![findDoc](../images/findDoc.png)","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"        * `alert` command section  ","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"![alertDoc](../images/alertDoc.png)","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"    * Contributions to the Developer Guide:","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"        * Updating of the UI component","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"![uiPuml](../images/UiClassDiagram.png)","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"        * Write-up for `find` command","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"          * This includes the sequence diagram and activity diagram.","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"![findSequence](../images/FindSequenceDiagram.png)","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"![findActivity](../images/FindActivityDiagram.png)","lastModifiedDate":"2023-04-02"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"        * Write-up for `alert` command","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"          * This includes the sequence diagram and the activity diagram.","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"![alertSequence](../images/AlertSequenceDiagram.png)","lastModifiedDate":"2023-04-02"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"![alertActivity](../images/AlertActivityDiagram.png)","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"        * Write-up for Use Case: add a task","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"![usecaseAdd](../images/usecaseAdd.png)","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"* **Community**:","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"    * Review/mentoring contributions","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"      * Reviewed 27/69 Pull Requests","lastModifiedDate":"2023-04-02"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"      * Frequently at least 1 comment if not more","lastModifiedDate":"2023-04-02"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"Huggenguggen":69}},{"path":"docs/team/joyngjr.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"layout: page","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"title: Joy Ng Jing Ru\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"### Project: Clock-Work","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"Clock-Work is a desktop application for managing tasks and assignments, optimised for use via a Command Line Interface","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"(CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Clock-Work can get your","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"assignment management tasks done faster than traditional GUI applications.","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"* **Refactoring** Added `Effort` component into Task [#85](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/85)","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"  * What it does: Effort serves as an estimate for students to gauge the amount of work required to complete a task.","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"  * Highlights: ","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"    * Created classes for `Effort` and integrated it into TaskBook, refactoring relevant files and components as needed.","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"    * Modify UI of a Task so that effort for each task can be seen.","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"    * Modify `add` command and `edit` command to support `Effort`.","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"    * Add relevant unit testing for new classes.","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"* **New Feature** Added `Schedule` feature [#86](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/86)","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"  * What it does: `Schedule` creates a 30-day work plan for students based on tasks they entered in Clock-Work.","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"  * Highlights:","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"    * Created relevant classes for `Schedule`, from handling user input to data manipulation in storage.","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    * Created `Plan` command and linked it to automatically run with `Schedule` as needed.","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"    * Created new Json files and storage classes `JsonPlannerStorage`, `JsonSerializablePlanner`, etc. to store generated plans so users can reload them.","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    * Add relevant unit testing for newly created classes and integration testing for newly created storage.","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"* **New Feature** Added `Stats` feature [#63](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/63)","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"  * What it does: `Stats` displays the number of tasks for tag has in descending order, up to a maximum of 10.","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"  * Highlights:","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"    * Created relevant classes for `Stats`.","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"    * Add relevant unit testing for new classes.","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"* **Enhancements Implemented** Increased capability of `Delete` Feature [#46](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/46)","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"  * Original: Only allow deletion at specified index.","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"  * Current: Allow `Delete` to delete tasks from multiple indices at once.","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"  * Highlights:","lastModifiedDate":"2023-04-02"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"    * Create new `IndexList` class to support feature.","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"    * Add relevant unit testing for new features.","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"    * User Guide:","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"        * Add pre-amble in introduction [#142](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/142)","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"        * Add feature introduction [#142](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/142)","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"        * Add \u0027A Task in Clock-Work\u0027 section [#156](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/156)","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"        * Wrote feature guide for `Stats` command.","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"        * Wrote feature guide for `Schedule` command.","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"        * Update feature guide for `Delete` command.","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"        * Add section on `Stats` command [#138](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/138)","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"          * Section consists of: Write-up, Sequence diagram, Activity diagram","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"        * Add section on `Schedule` command [#145](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/145)","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"          * Section consists of: Write-up, Sequence diagram, Activity diagram","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"        * Add section on `Delete` command [#113](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/113)","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"          * Section consists of: Write-up, Sequence diagram, Activity diagram","lastModifiedDate":"2023-04-02"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"        * Add MSS for `Delete` command [#145](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/145)","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"        * Update class diagram for Storage to include Planner component [#152](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/152)","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"* **Project management**:","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"  * PRs reviewed (with non-trivial comment reviews): [#48](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/48), [#51](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/51)/[#53](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/53), [#118](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/118).","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"  * Product demo slides for v1.2 and v1.3","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"* **Community**:","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"  * Reported [bugs and suggestions](https://github.com/joyngjr/ped/issues) another team.","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003djoyngjr)","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"joyngjr":68}},{"path":"docs/team/lywich.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"layout: page","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"title: Ong Chong Yang\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"### Project: Clock-Work","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"Clock-Work is a desktop application for managing tasks and assignments, optimised for use via a Command Line Interface","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"(CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Clock-Work can get your","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"assignment management tasks done faster than traditional GUI applications.","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dlywich)","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"* **Project management**:","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"    * Refactor original AB3 to fit our project needs.","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"      * Remove `address`, `email`, `phone`. [#38](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/38)","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"      * Refactor testcases to be valid according to our project needs. [#38](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/38)","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"      * Create `Description` class. [#38](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/38)","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"        * `Description` is a field for `Task` objects.","lastModifiedDate":"2023-04-03"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"        * `Description` abstracts the \"description\" of a task away from `Task` to encourage decoupling for maintainability.","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"      * Create `Date` class. [#50](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/50)","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"          * `Date` is a field for `Deadline` and `Event` objects.","lastModifiedDate":"2023-04-03"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"          * `Date` abstracts the \"date\" function away from `Task` to encourage decoupling for maintainability.","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"      * Remove images from AB3 that are not reused. [#149](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/149)","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"    * `sort` command enhancement. [#61](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/61)","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"      * `sort` is meant to organise the task list for the users to have a clearer image of the tasks at hand. ","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"      * This is such that a user can see all `Event`, `Deadline`, `SimpleTask` objects adjacent to each other rather than scattered according to input sequence.","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"    * Color code UI enhancement. [#74](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/74)","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"      * AB3 has all its tags of the same color background, which impacts the users ability to sieve out different `Task` with the same tags.","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"      * From a 20 predefined colors, a color is assigned to a tag based on the tag\u0027s name.","lastModifiedDate":"2023-04-03"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"        * This ensures tags with the same name will have the same color.","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"      * Some other alternatives thought up during the process: ","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"        * A `Task`\u0027s `R`, `G`, `B` values calculated independent of each other.","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"          * This gives us 256^3 colors to choose from, but this does not guarantee visually appealing combinations.","lastModifiedDate":"2023-04-03"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"        * Randomized `R`, `G`, `B` values calculated on new tag and store it somewhere.","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"          * This suffers from the same problem of having combinations that are visually unappealing.","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"    * User Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"        * Add table of contents and indexing. [#116](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/116)","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"        * Write-up for `sort` command. [#64](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/64)","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"        * Write-up for color codes. [#144](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/144)","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"        * Add new image for `help` window. [#149](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/149)","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"      ","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"        * Add table of contents and indexing. [#94](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/94)","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"        * Write-up for `sort` command. [#94](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/94)","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"        * Write-up for color codes. [#144](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/144)","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"        * Write-up for `clear` command (including sequence and activity diagram). [#144](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/144)","lastModifiedDate":"2023-04-03"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"        * Write-up for `list` command (including sequence and activity diagram). [#144](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/144)","lastModifiedDate":"2023-04-03"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"        * Write-up for `help` command (including sequence and activity diagram). [#144](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/144)","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"        * Edit existing diagrams to refer to our project(`Task`) rather than AB3(`Address`). [#149](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/149)","lastModifiedDate":"2023-04-03"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"        * MSS for `edit` command. [#140](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/140/files)","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"* **Community**:","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"    * Released v1.3.trial jar.","lastModifiedDate":"2023-04-03"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"    * Released v1.3 jar.","lastModifiedDate":"2023-04-03"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"    * Enabled assertions in team repo. [#114](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/114/files)","lastModifiedDate":"2023-04-03"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"    * Reviewed 20/71 Pull Requests.","lastModifiedDate":"2023-04-03"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"    * Gave suggestion comments on reviews as needed. ","lastModifiedDate":"2023-04-03"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"lywich":65}},{"path":"docs/team/programmerhao.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"layout: page","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"title: Hao Zeyu\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"### Project:Clock-Work","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"Clock-Work is a desktop application for managing tasks and assignments, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Clock-Work can get your assignment management tasks done faster than traditional GUI applications.","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dprogrammerhao\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"* **New Feature**:`subsection` command that adds a subsection to a task [#135](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/135)","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"  * What it does: The command will add a subsection to an existing task. Each task will have a list of subsections.","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"  * Justification: We wish to allow the user to break down complex tasks into smaller sections to better plan the task.","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"  * Highlights:","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * Each of the task will be initialised with an empty list of subsections.","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * User can add to each task\u0027s subsections using `subsection INDEX n/Name d/Description`.","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * I also created a storage for the subsection, so that now each json file of task has a list of subsections.","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * Each subsection comes with an index for easier reference during deletion.","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * Added tests for the `JsonAdaptedSutask`.","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * Added unit tests for the command.","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * Created relevant classes for the command, such as using parser to handle user input.","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"* **New Feature**: `remove-subsection` command that removes a subsection from a task [#135](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/135)","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"  * What it does: Removes a subsection from the list of subsections of a task.","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"  * Highlights:","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * The user could remove the subsection by specifying the index of the main task followed by the index of the subsection inside.","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * Added unit tests for the command.","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * Created relevant classes for the command, such as using parser to handle user input.","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"* **Enhancements to existing features**: `find` command enhancements [#65](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/65)","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"  * What it does: Enables the user to find a task by either matching all inputs or one input.","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"  * Highlights:","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * The user can now use the `all/` prefix followed by `d/urgent d/homework` so that only a task whose description contains both \"urgent\" and \"homework\" will be displayed to the user.","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * I modified parser class to accommodate for the `all/` prefix.","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"* **Enhancements to existing features**: `add` command enhancements [#52](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/52)","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"  * What it does: Enables the user to add a task with different names but same descriptions, tags.....","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"  * Justification: We wish to make task creation more efficient by allowing user to create repetitive tasks such as homework for two subjects in one single command line.","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"  * Highlights:","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * Change the task in the `AddCommand` to a list of tasks so that multiple tasks can be created for a single command execution.","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * Modified the parser to accept multiple names.","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * Created parser tests to test the success of the modified `AddCommandParser`.","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"* **Enhancements to existing features**: `edit` command enhancements [#151](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/151)","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"  * What it does: Allows the user to edit all of `SimpleTask`, `Event` and `Deadline`. Previously the edit only applied to simple tasks.","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"  * Highlights:","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * previously the edit command only creates a new simple task to replace the old task, now it will accommodate for `Event` and `Deadline`.","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"  ","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"  * Contribution to the user guide:","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * Subsection command [#135](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/135)","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * Remove-subsection command [#135](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/135)","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"  * Contribution to the developer guide:","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * Add a section on `edit` command [#146](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/146)","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"      * Section includes activity diagram and sequence diagram, as well as the write-up.","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * Add a section on `subsection` command [#146](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/146)","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"      * Section includes activity diagram and sequence diagram, as well as the write-up.","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * Add a section on `remove-subsection` command [#146](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/146)","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"      * Section includes activity diagram and sequence diagram, as well as the write-up.","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * Modify the `model`\u0027s class diagram [#146](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/146)","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"      * The diagram now reflects how each task can contain one or more subsections","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * Add a section on `add` command [#119](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/119)","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"      * Section includes activity diagram and sequence diagram, as well as the write-up.","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"* **Community**:","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"  * PRs reviewed:","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * [#36](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/36)","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * [#61](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/61)","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * [#68](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/68)","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * [#74](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/74)","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * [#138](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/138)","lastModifiedDate":"2023-04-05"},{"lineNumber":81,"author":{"gitId":"PROGRAMMERHAO"},"content":"    * [#147](https://github.com/AY2223S2-CS2103T-W13-3/tp/pull/147)","lastModifiedDate":"2023-04-05"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"* **Tools**:","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"  * Java 11","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"  * PlantUML","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"PROGRAMMERHAO":86}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":" * Changes the remark of an existing task in the address book.","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"            + \": Edits the remark of the task identified \"","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"            + \"by the index number used in the last task listing. \"","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"lywich"},"content":"     * @param index of the task in the filtered task list to edit the remark","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"lywich"},"content":"     * @param remark of the task to be updated to","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"lywich"},"content":"Create a `RemarkCommandParser` class in the `seedu.task.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"lywich"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of task data. We achieve that by working with the `Task` model. Each field in a Task is implemented as a separate class (e.g. a `Name` object represents the task’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a task.","lastModifiedDate":"2023-02-18"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"lywich"},"content":"Create a new `Remark` in `seedu.task.model.task`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-02-18"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"lywich"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each task.","lastModifiedDate":"2023-02-18"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"lywich"},"content":"Simply add the following to [`seedu.task.ui.TaskCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-02-18"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"lywich"},"content":"**`TaskCard.java`:**","lastModifiedDate":"2023-02-18"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"lywich"},"content":"Then insert the following into [`main/resources/view/TaskListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2023-02-18"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"lywich"},"content":"**`TaskListCard.fxml`:**","lastModifiedDate":"2023-02-18"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"lywich"},"content":"## Modify `Task` to support a `Remark` field","lastModifiedDate":"2023-02-18"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"lywich"},"content":"Since `TaskCard` displays data from a `Task`, we need to update `Task` to get our `Remark` displayed!","lastModifiedDate":"2023-02-18"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"lywich"},"content":"### Modify `Task`","lastModifiedDate":"2023-02-18"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"lywich"},"content":"We change the constructor of `Task` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2023-02-18"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"lywich"},"content":"### Update other usages of `Task`","lastModifiedDate":"2023-02-18"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"lywich"},"content":"Unfortunately, a change to `Task` will cause other commands to break, you will have to modify these commands to use the updated `Task`!","lastModifiedDate":"2023-02-18"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"lywich"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Task` class to find these commands.","lastModifiedDate":"2023-02-18"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"lywich"},"content":"AddressBook stores data by serializing `JsonAdaptedTask` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedTask` to work with our new `Task`!","lastModifiedDate":"2023-02-18"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"lywich"},"content":"Now that we have finalized the `Task` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2023-02-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"lywich"},"content":"**`TaskCard.java`:**","lastModifiedDate":"2023-02-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"lywich"},"content":"public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2023-02-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"lywich"},"content":"    remark.setText(task.getRemark().value);","lastModifiedDate":"2023-02-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"lywich"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Task`. Since all fields in a `Task` are immutable, we create a new instance of a `Task` with the values that we want and","lastModifiedDate":"2023-02-18"},{"lineNumber":329,"author":{"gitId":"lywich"},"content":"save it with `Model#setTask()`.","lastModifiedDate":"2023-02-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"lywich"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Task: %1$s\";","lastModifiedDate":"2023-02-18"},{"lineNumber":336,"author":{"gitId":"lywich"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Task: %1$s\";","lastModifiedDate":"2023-02-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"lywich"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-02-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"lywich"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_Task_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"lywich"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-02-18"},{"lineNumber":347,"author":{"gitId":"lywich"},"content":"        Task editedTask \u003d new Task(","lastModifiedDate":"2023-02-18"},{"lineNumber":348,"author":{"gitId":"lywich"},"content":"                taskToEdit.getName(), taskToEdit.getPhone(), taskToEdit.getEmail(),","lastModifiedDate":"2023-02-18"},{"lineNumber":349,"author":{"gitId":"lywich"},"content":"                taskToEdit.getAddress(), remark, taskToEdit.getTags());","lastModifiedDate":"2023-02-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"lywich"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":352,"author":{"gitId":"lywich"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TaskS);","lastModifiedDate":"2023-02-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"lywich"},"content":"        return new CommandResult(generateSuccessMessage(editedTask));","lastModifiedDate":"2023-02-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"lywich"},"content":"     * {@code taskToEdit}.","lastModifiedDate":"2023-02-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"lywich"},"content":"    private String generateSuccessMessage(Task taskToEdit) {","lastModifiedDate":"2023-02-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"lywich"},"content":"        return String.format(message, taskToEdit);","lastModifiedDate":"2023-02-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"lywich":44,"-":357}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Task` class.","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"The `address` field in `Task` is actually an instance of the `seedu.task.model.task.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditTaskDescriptor` may require more careful inspection.","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"Let’s try removing references to `Address` in `EditTaskDescriptor`.","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"1. Safe delete the field `address` in `EditTaskDescriptor`.","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Task` class will require you to modify its constructor.","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `TaskCard` that has not been removed nor identified.","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"A quick look at the `TaskCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"**`TaskCard.java`**","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"**`TaskCard.fxml`**","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"lywich"},"content":"**`invalidTaskAddressBook.json`:**","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"lywich"},"content":"  \"tasks\": [ {","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"lywich"},"content":"    \"name\": \"Task with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lywich":13,"-":99}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.task.logic.Logic`.","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"A quick look at the `seedu.task.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"lywich"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditTaskDescriptor`. Recall that we can verify the contents of `editTaskDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"lywich"},"content":"       Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-02-18"},{"lineNumber":193,"author":{"gitId":"lywich"},"content":"       Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2023-02-18"},{"lineNumber":194,"author":{"gitId":"lywich"},"content":"       if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":195,"author":{"gitId":"lywich"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_Task);","lastModifiedDate":"2023-02-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"lywich"},"content":"       model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":198,"author":{"gitId":"lywich"},"content":"       model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TaskS);","lastModifiedDate":"2023-02-18"},{"lineNumber":199,"author":{"gitId":"lywich"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_Task_SUCCESS, editedTask));","lastModifiedDate":"2023-02-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"lywich"},"content":"   * it uses the `setTask()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the task data.","lastModifiedDate":"2023-02-18"},{"lineNumber":205,"author":{"gitId":"lywich"},"content":"   * it uses the `updateFilteredTaskList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ tasks.\u003cbr\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":206,"author":{"gitId":"lywich"},"content":"     FYI, The \u0027filtered list\u0027 is the list of tasks resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the tasks so that the user can see the edited task along with all other tasks. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":207,"author":{"gitId":"lywich"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of tasks is being tracked.","lastModifiedDate":"2023-02-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"lywich"},"content":"        tasks.addAll(","lastModifiedDate":"2023-02-18"},{"lineNumber":235,"author":{"gitId":"lywich"},"content":"            source.getTaskList()","lastModifiedDate":"2023-02-18"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"lywich"},"content":"                  .map(JsonAdaptedTask::new)","lastModifiedDate":"2023-02-18"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"lywich"},"content":"1. It appears that a `JsonAdaptedTask` is created for each `Task` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2023-02-18"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"lywich"},"content":"    5.  Add a new field to `Task`","lastModifiedDate":"2023-02-18"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lywich":19,"-":282}},{"path":"src/main/java/seedu/task/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.LogsCenter;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.util.FileUtil;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"lywich":3,"-":61}},{"path":"src/main/java/seedu/task/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"lywich":1,"PROGRAMMERHAO":1,"-":25}},{"path":"src/main/java/seedu/task/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.Config;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.LogsCenter;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.Version;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.util.ConfigUtil;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.util.StringUtil;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.Logic;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.LogicManager;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ModelManager;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.Planner;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.ReadOnlyPlanner;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"import seedu.task.model.TaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"import seedu.task.model.UserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"import seedu.task.model.util.SampleDataUtil;","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"import seedu.task.storage.JsonPlannerStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"import seedu.task.storage.JsonTaskBookStorage;","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"import seedu.task.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"import seedu.task.storage.PlannerStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"import seedu.task.storage.Storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"import seedu.task.storage.StorageManager;","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"import seedu.task.storage.TaskBookStorage;","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"import seedu.task.storage.UserPrefsStorage;","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"import seedu.task.ui.Ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"import seedu.task.ui.UiManager;","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing TaskBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"        TaskBookStorage taskBookStorage \u003d new JsonTaskBookStorage(userPrefs.getTaskBookFilePath());","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"        PlannerStorage plannerStorage \u003d new JsonPlannerStorage(userPrefs.getPlannerFilePath());","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"        storage \u003d new StorageManager(taskBookStorage, userPrefsStorage, plannerStorage);","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s task book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"     * The data from the sample task book will be used instead if {@code storage}\u0027s task book is not found,","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"     * or an empty task book will be used instead if errors occur when reading {@code storage}\u0027s task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"        Optional\u003cReadOnlyTaskBook\u003e taskBookOptional;","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"lywich"},"content":"        ReadOnlyTaskBook initialData;","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"        Optional\u003cReadOnlyPlanner\u003e plannerOptional;","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"        ReadOnlyPlanner plannerData;","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"            taskBookOptional \u003d storage.readTaskBook();","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"lywich"},"content":"            if (!taskBookOptional.isPresent()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"                logger.info(\"Task Data file not found. Will be starting with a sample TaskBook\");","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"            initialData \u003d taskBookOptional.orElseGet(SampleDataUtil::getSampleTaskBook);","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"joyngjr"},"content":"            logger.warning(\"Task data file not in the correct format. Will be starting with an empty TaskBook\");","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"lywich"},"content":"            initialData \u003d new TaskBook();","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":97,"author":{"gitId":"joyngjr"},"content":"            logger.warning(\"Problem while reading from the task file. Will be starting with an empty TaskBook\");","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"            initialData \u003d new TaskBook();","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"joyngjr"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"joyngjr"},"content":"            plannerOptional \u003d storage.readPlanner();","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"joyngjr"},"content":"            if (!plannerOptional.isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"joyngjr"},"content":"                logger.info(\"Planner Data file not found. Will be starting with a sample Planner\");","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"joyngjr"},"content":"            plannerData \u003d plannerOptional.orElseGet(SampleDataUtil::getSamplePlanner);","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"joyngjr"},"content":"            logger.warning(\"Planner data file not in the correct format. Will be starting with an empty Planner\");","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"joyngjr"},"content":"            plannerData \u003d new Planner();","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"joyngjr"},"content":"            logger.warning(\"Problem while reading from the planner file. Will be starting with an empty Planner\");","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"joyngjr"},"content":"            plannerData \u003d new Planner();","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"joyngjr"},"content":"        return new ModelManager(initialData, userPrefs, plannerData);","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"lywich"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TaskBook\");","lastModifiedDate":"2023-02-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"lywich"},"content":"        logger.info(\"Starting TaskBook \" + MainApp.VERSION);","lastModifiedDate":"2023-02-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"lywich"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Task Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-02-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lywich":40,"-":142,"joyngjr":23}},{"path":"src/main/java/seedu/task/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.core;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lywich":1,"-":62}},{"path":"src/main/java/seedu/task/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.core;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lywich":1,"-":78}},{"path":"src/main/java/seedu/task/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.core;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"    private static final String LOG_FILE \u003d \"taskbook.log\";","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lywich":2,"-":110}},{"path":"src/main/java/seedu/task/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.core;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"    public static final String MESSAGE_INVALID_DURATION \u003d \"You can only check for a positive duration\";","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"    public static final String MESSAGE_INVALID_EFFORT \u003d \"Effort entered must be non-negative\";","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"    public static final String MESSAGE_INVALID_EVENT_DATES \u003d \"An event\u0027s end date must be before or equal to its start\";","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Huggenguggen":1,"lywich":3,"-":10,"joyngjr":2}},{"path":"src/main/java/seedu/task/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.core;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lywich":1,"-":115}},{"path":"src/main/java/seedu/task/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.core.index;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"    public void modifyIndex(int x) {","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"        this.zeroBasedIndex \u003d this.zeroBasedIndex + x;","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"lywich":1,"-":53,"joyngjr":3}},{"path":"src/main/java/seedu/task/commons/core/index/IndexList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.commons.core.index;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.core.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":" * A list of indices to support commands that can take in multiple indices.","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"public class IndexList {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"    private ArrayList\u003cIndex\u003e indexList;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"    public IndexList() {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"        this.indexList \u003d new ArrayList\u003cIndex\u003e();","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"    public void add(Index parseIndex) {","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"        indexList.add(parseIndex);","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"    public int size() {","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"        return indexList.size();","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    public int getZeroBasedIndex(int position) {","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"        return indexList.get(position).getZeroBased();","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"     * Checks that every index keyed in is a valid index","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"     * @param lastIndex invalid index value","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"     * @throws CommandException invalid index detected","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"    public boolean isValidIndex(int lastIndex) throws CommandException {","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"        int n \u003d this.indexList.size();","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"            if (this.indexList.get(i).getZeroBased() \u003e\u003d lastIndex) {","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c n - 1; i++) {","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"            if (this.indexList.get(i).getZeroBased() \u003e\u003d this.indexList.get(i + 1).getZeroBased()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"        return true;","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"     * Prepares indices to be deleted by accounting for shifts in indices after deletion.","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"    public void modifyForDelete() {","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"        int n \u003d this.indexList.size();","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"            this.indexList.get(i).modifyIndex(-i);","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"     * Takes in a list of user int and change it to zero-based for program to interpret.","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"     * @param numbers indices user keys in","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"     * @return encapsulated zero-based indices","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"    public static IndexList fromOneBasedList(int[] numbers) {","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"        IndexList il \u003d new IndexList();","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"        int n \u003d numbers.length;","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"            il.add(Index.fromOneBased(numbers[i]));","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"        return il;","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"            return true;","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"        } else if (other instanceof IndexList) {","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"            IndexList checked \u003d (IndexList) other;","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"            int n \u003d checked.size();","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"            if (n !\u003d this.indexList.size()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"                return false;","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"            for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"                if (!checked.indexList.get(i).equals(this.indexList.get(i))) {","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"                    return false;","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"joyngjr"},"content":"            return true;","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"joyngjr"},"content":"        return false;","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"joyngjr":96}},{"path":"src/main/java/seedu/task/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.exceptions;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lywich":1,"-":10}},{"path":"src/main/java/seedu/task/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.exceptions;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lywich":1,"-":20}},{"path":"src/main/java/seedu/task/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.util;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import seedu.task.MainApp;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lywich":2,"-":40}},{"path":"src/main/java/seedu/task/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.util;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lywich":1,"-":34}},{"path":"src/main/java/seedu/task/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.util;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.Config;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"lywich":3,"-":20}},{"path":"src/main/java/seedu/task/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.util;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lywich":1,"-":82}},{"path":"src/main/java/seedu/task/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.util;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.LogsCenter;","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lywich":3,"-":140}},{"path":"src/main/java/seedu/task/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.util;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"     *  Ignores case, and substring matching is supported.","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"     *  \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"     *      containsIgnoreCase(\"ABc def\", \"abc) \u003d\u003d true","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"     *      containsIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"     *      containsIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true //substring still matches","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"     *  \u003c/pre\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"     * @param word cannot be null, cannot be empty","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"    public static boolean containsIgnoreCase(String sentence, String word) {","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"        requireNonNull(word);","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"        return preppedSentence.toLowerCase().contains(preppedWord.toLowerCase());","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Huggenguggen":23,"lywich":2,"-":66}},{"path":"src/main/java/seedu/task/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.GuiSettings;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.CommandResult;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"     * Returns the TaskBook.","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"     * @see seedu.task.model.Model#getTaskBook()","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"    ReadOnlyTaskBook getTaskBook();","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"    /** Returns an unmodifiable view of the upcoming alert list of tasks */","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"    ObservableList\u003cTask\u003e getAlertTaskList();","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"     * Returns the user prefs\u0027 task book file path.","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Huggenguggen":2,"lywich":14,"-":37}},{"path":"src/main/java/seedu/task/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.GuiSettings;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.LogsCenter;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.Command;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.CommandResult;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.parser.TaskBookParser;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.StartupTaskWithinTimelinePredicate;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.storage.Storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"    private final TaskBookParser taskBookParser;","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"        taskBookParser \u003d new TaskBookParser();","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"        Command command \u003d taskBookParser.parseCommand(commandText);","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"            storage.saveTaskBook(model.getTaskBook());","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"            storage.savePlanner(model.getPlanner());","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"    public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"        return model.getTaskBook();","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"    public ObservableList\u003cTask\u003e getAlertTaskList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"        model.updateAlertTaskList(new StartupTaskWithinTimelinePredicate());","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"Huggenguggen"},"content":"        return model.getAlertTaskList();","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"        return model.getTaskBookFilePath();","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Huggenguggen":6,"lywich":22,"-":60,"joyngjr":1}},{"path":"src/main/java/seedu/task/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_EFFORT;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.List;","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":" * Adds a task to the task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the task book. \"","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"            + \"[\" + PREFIX_EFFORT + \"EFFORT] \\n\"","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"            + PREFIX_NAME + \"Read Book \"","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"            + PREFIX_DESCRIPTION + \"Make sure to take notes \"","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"            + PREFIX_TAG + \"leisure \"","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"            + PREFIX_TAG + \"relaxing \"","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"            + PREFIX_EFFORT + \"2 \";","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task book.\";","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private final ArrayList\u003cTask\u003e toAdd;","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Creates an AddCommand to add the specified {@code List\u003cTask\u003e}","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public AddCommand(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireNonNull(taskList);","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"        toAdd \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"        for (Task cur: taskList) {","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"            toAdd.add(cur);","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"     * Creates an AddCommand to add the specified {@code Task}","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"        toAdd \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"        toAdd.add(task);","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"        for (Task cur: toAdd) {","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"            if (model.hasTask(cur)) {","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"        for (Task cur: toAdd) {","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"            model.addTask(cur);","lastModifiedDate":"2023-02-21"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, formatAddedTasks(toAdd)));","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Formats the added tasks to be printed out by UI","lastModifiedDate":"2023-02-21"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param toAdd The arraylist of tasks to add","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return The formatted description of tasks","lastModifiedDate":"2023-02-21"},{"lineNumber":87,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String formatAddedTasks(ArrayList\u003cTask\u003e toAdd) {","lastModifiedDate":"2023-02-21"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String description \u003d \"\";","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-02-21"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"        for (Task task: toAdd) {","lastModifiedDate":"2023-02-21"},{"lineNumber":92,"author":{"gitId":"PROGRAMMERHAO"},"content":"            description +\u003d index + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2023-02-21"},{"lineNumber":93,"author":{"gitId":"PROGRAMMERHAO"},"content":"            index +\u003d 1;","lastModifiedDate":"2023-02-21"},{"lineNumber":94,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return description;","lastModifiedDate":"2023-02-21"},{"lineNumber":96,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lywich":24,"PROGRAMMERHAO":39,"-":34}},{"path":"src/main/java/seedu/task/logic/commands/AddSubtaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Date;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Deadline;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Description;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Effort;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Event;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.SimpleTask;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Subtask;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":" * Adds a task to the task book.","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class AddSubtaskCommand extends Command {","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String COMMAND_WORD \u003d \"subsection\";","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a subsection to a certain task \"","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"        + \"by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"        + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION](Optional)\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"        + PREFIX_NAME + \"do lab \"","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"        + PREFIX_DESCRIPTION + \"lab worksheet needs to be printed\";","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New subsection added: %1$s\";","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This subsection already exists in the task\";","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private final Subtask subtask;","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private final Index index;","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Creates an AddCommand to add the specified {@code Task}","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public AddSubtaskCommand(Index index, Subtask subtask) {","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireNonNull(subtask);","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.subtask \u003d subtask;","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"            || index.getZeroBased() \u003c 0) {","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Task newTask \u003d createNewTask(taskToEdit, subtask);","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"        model.setTask(taskToEdit, newTask);","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, subtask));","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Create a new task to be used for updating the model","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param task The original task in the task list","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param subtask The modified task after adding the subtask inside","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return A {@code Task}","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public Task createNewTask(Task task, Subtask subtask) throws CommandException {","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Name name \u003d task.getName();","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Description description \u003d task.getDescription();","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Set\u003cTag\u003e tags \u003d task.getTags();","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Effort effort \u003d task.getEffort();","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"        List\u003cSubtask\u003e subtasks \u003d task.getSubtasks();","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (task instanceof SimpleTask) {","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"            SimpleTask newSimpleTask \u003d new SimpleTask(name, description, tags, effort, subtasks);","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"PROGRAMMERHAO"},"content":"            try {","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"PROGRAMMERHAO"},"content":"                newSimpleTask.addSubtask(subtask);","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"PROGRAMMERHAO"},"content":"            } catch (DuplicateTaskException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return newSimpleTask;","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"PROGRAMMERHAO"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Date from \u003d event.getFrom();","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Date to \u003d event.getTo();","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Event newEvent \u003d new Event(name, description, tags, from, to, effort, subtasks);","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"PROGRAMMERHAO"},"content":"            try {","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"PROGRAMMERHAO"},"content":"                newEvent.addSubtask(subtask);","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"PROGRAMMERHAO"},"content":"            } catch (DuplicateTaskException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"PROGRAMMERHAO"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return newEvent;","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"PROGRAMMERHAO"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Date deadlineDate \u003d deadline.getDeadline();","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Deadline newDeadline \u003d new Deadline(name, description, tags, deadlineDate, effort, subtasks);","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"PROGRAMMERHAO"},"content":"            try {","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"PROGRAMMERHAO"},"content":"                newDeadline.addSubtask(subtask);","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"PROGRAMMERHAO"},"content":"            } catch (DuplicateTaskException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"PROGRAMMERHAO"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return newDeadline;","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":123,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":125,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":126,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"PROGRAMMERHAO"},"content":"            || (other instanceof AddSubtaskCommand // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":128,"author":{"gitId":"PROGRAMMERHAO"},"content":"            \u0026\u0026 subtask.equals(((AddSubtaskCommand) other).subtask));","lastModifiedDate":"2023-03-21"},{"lineNumber":129,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"PROGRAMMERHAO":131}},{"path":"src/main/java/seedu/task/logic/commands/AlertCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.TaskWithinTimelinePredicate;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":" * Sets the timeframe for the alert of the app and displays alert.","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"public class AlertCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"    public static final String COMMAND_WORD \u003d \"alert\";","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"            + \": Alerts user about upcoming tasks (by default within a 24 hour timeframe).\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"            + \"Parameters: TIMEFRAME (must be a positive integer representing hours)\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"            + \"Example: \" + COMMAND_WORD + \" 48\";","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"    public static final String SHOWING_ALERT_MESSAGE \u003d \"Your alerts are as follows.\";","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"    public static final String ALERT_COMMAND_SUCCESS \u003d SHOWING_ALERT_MESSAGE;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"    private Duration timeframe \u003d Duration.ofHours(24);","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"     * Initializes alert to a default of 24 hours.","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"    public AlertCommand() {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"     * Sets {@code timeframe} to user input in hours.","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"    public AlertCommand(int timeframe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"        this.timeframe \u003d Duration.ofHours(timeframe);","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"        if (this.timeframe.isZero() || this.timeframe.isNegative()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DURATION);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"        model.updateAlertTaskList(new TaskWithinTimelinePredicate(timeframe));","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"        return new CommandResult(SHOWING_ALERT_MESSAGE, false, true, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"                || (other instanceof AlertCommand // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"                \u0026\u0026 timeframe.equals(((AlertCommand) other).timeframe)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Huggenguggen":58}},{"path":"src/main/java/seedu/task/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import seedu.task.model.TaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":" * Clears the task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task book has been cleared!\";","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"        model.setTaskBook(new TaskBook());","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lywich":6,"-":17}},{"path":"src/main/java/seedu/task/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lywich":3,"-":17}},{"path":"src/main/java/seedu/task/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"    /** Alert information should be shown to the user. */","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"    private final boolean showAlert;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"        this(feedbackToUser, showHelp, false, exit);","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean showAlert, boolean exit) {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"        this.showAlert \u003d showAlert;","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"     * Constructs a {@code CommandResult} with the specified chained {@code feedbackToUser},","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"    public CommandResult(CommandResult feedback, String feedbackToUser) {","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"        this(feedback.feedbackToUser + \"\\n\" + feedbackToUser, false, false, false);","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"    public boolean isShowAlert() {","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"        return showAlert;","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Huggenguggen":15,"lywich":1,"-":70,"joyngjr":6}},{"path":"src/main/java/seedu/task/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.core.index.IndexList;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":" * Deletes a task identified using it\u0027s displayed index from the task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task(s):\";","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    private final IndexList targetList;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    public DeleteCommand(IndexList targetList) {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"        this.targetList \u003d targetList;","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"        targetList.isValidIndex(lastShownList.size());","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"        targetList.modifyForDelete();","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"        String output \u003d MESSAGE_DELETE_TASK_SUCCESS;","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"        int n \u003d targetList.size();","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"            Task taskToDelete \u003d lastShownList.get(targetList.getZeroBasedIndex(i));","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"            model.deleteTask(taskToDelete);","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"            output \u003d output + \"\\n\" + taskToDelete;","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"        return new CommandResult(output);","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"                \u0026\u0026 targetList.equals(((DeleteCommand) other).targetList)); // state check","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lywich":8,"-":33,"joyngjr":16}},{"path":"src/main/java/seedu/task/logic/commands/DeleteSubtaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_SUBTASK_INDEX;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.core.Messages;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Date;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Deadline;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Description;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Effort;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Event;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.SimpleTask;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Subtask;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":" * Adds a task to the task book.","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class DeleteSubtaskCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String COMMAND_WORD \u003d \"remove-subsection\";","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes a subsection to a certain task \"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"        + \"by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"        + \"[\" + PREFIX_SUBTASK_INDEX + \"INDEX] \"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"        + PREFIX_SUBTASK_INDEX + \" 1 \";","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Subsection deleted: %1$s\";","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private final Index subtaskIndex;","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private final Index index;","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Creates an AddCommand to add the specified {@code Task}","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public DeleteSubtaskCommand(Index index, Index subtaskIndex) {","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireNonNull(subtaskIndex);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.subtaskIndex \u003d subtaskIndex;","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (subtaskIndex.getZeroBased() \u003c 0","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"            || subtaskIndex.getZeroBased() \u003e\u003d taskToEdit.getSubtasks().size()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Subtask taskToDelete \u003d taskToEdit.getSubtasks().get(subtaskIndex.getZeroBased());","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Task newTask \u003d createNewTask(taskToEdit, subtaskIndex);","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"        model.setTask(taskToEdit, newTask);","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, taskToDelete));","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Create a new task to be used for updating the model","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param task The original task in the task list","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param subtaskIndex The index of the subtask to be deleted","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return A {@code Task}","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public Task createNewTask(Task task, Index subtaskIndex) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Name name \u003d task.getName();","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Description description \u003d task.getDescription();","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Set\u003cTag\u003e tags \u003d task.getTags();","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Effort effort \u003d task.getEffort();","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"        List\u003cSubtask\u003e subtasks \u003d task.getSubtasks();","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (subtaskIndex.getZeroBased() \u003e\u003d task.getSubtaskSize()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (task instanceof SimpleTask) {","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"PROGRAMMERHAO"},"content":"            SimpleTask newSimpleTask \u003d new SimpleTask(name, description, tags, effort, subtasks);","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"PROGRAMMERHAO"},"content":"            newSimpleTask.removeSubtask(subtaskIndex);","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return newSimpleTask;","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"PROGRAMMERHAO"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Date from \u003d event.getFrom();","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Date to \u003d event.getTo();","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Event newEvent \u003d new Event(name, description, tags, from, to, effort, subtasks);","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"PROGRAMMERHAO"},"content":"            newEvent.removeSubtask(subtaskIndex);","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return newEvent;","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"PROGRAMMERHAO"},"content":"        } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Date deadlineDate \u003d deadline.getDeadline();","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Deadline newDeadline \u003d new Deadline(name, description, tags, deadlineDate, effort, subtasks);","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"PROGRAMMERHAO"},"content":"            newDeadline.removeSubtask(subtaskIndex);","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return newDeadline;","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"PROGRAMMERHAO"},"content":"            || (other instanceof DeleteSubtaskCommand // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"PROGRAMMERHAO"},"content":"            \u0026\u0026 this.index.equals(((DeleteSubtaskCommand) other).index)","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"PROGRAMMERHAO"},"content":"            \u0026\u0026 this.subtaskIndex.equals(((DeleteSubtaskCommand) other).subtaskIndex));","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"PROGRAMMERHAO":122}},{"path":"src/main/java/seedu/task/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_EVENT_DATES;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import static seedu.task.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.index.Index;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.util.CollectionUtil;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Date;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Deadline;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Description;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Event;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.SimpleTask;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Subtask;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":" * Edits the details of an existing task in the task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the task identified \"","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"            + \"by the index number used in the displayed task list. \"","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"            + PREFIX_DESCRIPTION + \"Description\";","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task book.\";","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String MESSAGE_DEADLINE_ON_TASK \u003d \"A deadline cannot be added to a simple task.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String MESSAGE_FROM_ON_TASK \u003d \"A from date cannot be added to a simple task.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String MESSAGE_TO_ON_TASK \u003d \"A to date date cannot be added to a simple task.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String MESSAGE_FROM_ON_DEADLINE \u003d \"A from date cannot be added to a deadline.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String MESSAGE_TO_ON_DEADLINE \u003d \"A to date cannot be added to a deadline.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String MESSAGE_DEADLINE_ON_EVENT \u003d \"A deadline cannot be added to an event.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"     * @param index of the task in the filtered task list to edit","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"    public EditCommand(Index index, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"        this.editTaskDescriptor \u003d new EditTaskDescriptor(editTaskDescriptor);","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"lywich"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"        if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"lywich"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"lywich"},"content":"     * Creates and returns a {@code Task} with the details of {@code taskToEdit}","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"     * edited with {@code editTaskDescriptor}.","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private static Task createEditedTask(Task taskToEdit, EditTaskDescriptor editTaskDescriptor) throws","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"PROGRAMMERHAO"},"content":"            CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"lywich"},"content":"        assert taskToEdit !\u003d null;","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"PROGRAMMERHAO"},"content":"        boolean deadlinePresent \u003d editTaskDescriptor.getDeadline().isPresent();","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"PROGRAMMERHAO"},"content":"        boolean fromPresent \u003d editTaskDescriptor.getFrom().isPresent();","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"PROGRAMMERHAO"},"content":"        boolean toPresent \u003d editTaskDescriptor.getTo().isPresent();","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"lywich"},"content":"        Name updatedName \u003d editTaskDescriptor.getName().orElse(taskToEdit.getName());","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"lywich"},"content":"        Description updatedDescription \u003d editTaskDescriptor.getDescription().orElse(taskToEdit.getDescription());","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"lywich"},"content":"        Set\u003cTag\u003e updatedTags \u003d editTaskDescriptor.getTags().orElse(taskToEdit.getTags());","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"joyngjr"},"content":"        Effort updatedEffort \u003d editTaskDescriptor.getEffort().orElse(taskToEdit.getEffort());","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"PROGRAMMERHAO"},"content":"        ObservableList\u003cSubtask\u003e subtaskList \u003d taskToEdit.getSubtasks();","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (taskToEdit instanceof SimpleTask) {","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"PROGRAMMERHAO"},"content":"            if (deadlinePresent) {","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"PROGRAMMERHAO"},"content":"                throw new CommandException(MESSAGE_DEADLINE_ON_TASK);","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"PROGRAMMERHAO"},"content":"            } else if (fromPresent) {","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"PROGRAMMERHAO"},"content":"                throw new CommandException(MESSAGE_FROM_ON_TASK);","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"PROGRAMMERHAO"},"content":"            } else if (toPresent) {","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"PROGRAMMERHAO"},"content":"                throw new CommandException(MESSAGE_TO_ON_TASK);","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return new SimpleTask(updatedName, updatedDescription, updatedTags, updatedEffort, subtaskList);","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"PROGRAMMERHAO"},"content":"        } else if (taskToEdit instanceof Deadline) {","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"PROGRAMMERHAO"},"content":"            if (fromPresent) {","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"PROGRAMMERHAO"},"content":"                throw new CommandException(MESSAGE_FROM_ON_DEADLINE);","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"PROGRAMMERHAO"},"content":"            } else if (toPresent) {","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"PROGRAMMERHAO"},"content":"                throw new CommandException(MESSAGE_TO_ON_DEADLINE);","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Date updatedDeadline \u003d editTaskDescriptor.getDeadline().orElse(((Deadline) taskToEdit).getDeadline());","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return new Deadline(updatedName, updatedDescription, updatedTags, updatedDeadline, updatedEffort,","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"PROGRAMMERHAO"},"content":"                subtaskList);","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"PROGRAMMERHAO"},"content":"        } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"PROGRAMMERHAO"},"content":"            if (deadlinePresent) {","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"PROGRAMMERHAO"},"content":"                throw new CommandException(MESSAGE_DEADLINE_ON_EVENT);","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Date updatedFrom \u003d editTaskDescriptor.getFrom().orElse(((Event) taskToEdit).getFrom());","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Date updatedTo \u003d editTaskDescriptor.getTo().orElse(((Event) taskToEdit).getTo());","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"PROGRAMMERHAO"},"content":"            if (!updatedFrom.isValidEvent(updatedTo)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"PROGRAMMERHAO"},"content":"                throw new CommandException(MESSAGE_INVALID_EVENT_DATES);","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return new Event(updatedName, updatedDescription, updatedTags, updatedFrom, updatedTo,","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"PROGRAMMERHAO"},"content":"                updatedEffort, subtaskList);","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"lywich"},"content":"                \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2023-02-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"lywich"},"content":"     * Stores the details to edit the task with. Each non-empty field value will replace the","lastModifiedDate":"2023-02-18"},{"lineNumber":166,"author":{"gitId":"lywich"},"content":"     * corresponding field value of the task.","lastModifiedDate":"2023-02-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"lywich"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2023-02-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"lywich"},"content":"        private Description description;","lastModifiedDate":"2023-02-18"},{"lineNumber":171,"author":{"gitId":"joyngjr"},"content":"        private Effort effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"PROGRAMMERHAO"},"content":"        private Date deadline;","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"PROGRAMMERHAO"},"content":"        private Date from;","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"PROGRAMMERHAO"},"content":"        private Date to;","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"lywich"},"content":"        public EditTaskDescriptor() {}","lastModifiedDate":"2023-02-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":185,"author":{"gitId":"lywich"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2023-02-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":187,"author":{"gitId":"lywich"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2023-02-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"joyngjr"},"content":"            setEffort(toCopy.effort);","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"PROGRAMMERHAO"},"content":"            setDeadline((toCopy.deadline));","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"PROGRAMMERHAO"},"content":"            setFrom(toCopy.from);","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"PROGRAMMERHAO"},"content":"            setTo(toCopy.to);","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return CollectionUtil.isAnyNonNull(name, description, tags, effort,","lastModifiedDate":"2023-03-28"},{"lineNumber":200,"author":{"gitId":"PROGRAMMERHAO"},"content":"                deadline, from, to);","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"lywich"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2023-02-18"},{"lineNumber":212,"author":{"gitId":"lywich"},"content":"            this.description \u003d description;","lastModifiedDate":"2023-02-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"lywich"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2023-02-18"},{"lineNumber":216,"author":{"gitId":"lywich"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2023-02-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void setDeadline(Date deadline) {","lastModifiedDate":"2023-03-28"},{"lineNumber":237,"author":{"gitId":"PROGRAMMERHAO"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2023-03-28"},{"lineNumber":238,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":239,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":240,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public Optional\u003cDate\u003e getDeadline() {","lastModifiedDate":"2023-03-28"},{"lineNumber":241,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return (Optional.ofNullable(deadline));","lastModifiedDate":"2023-03-28"},{"lineNumber":242,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":243,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":244,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void setFrom(Date from) {","lastModifiedDate":"2023-03-28"},{"lineNumber":245,"author":{"gitId":"PROGRAMMERHAO"},"content":"            this.from \u003d from;","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":247,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":248,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public Optional\u003cDate\u003e getFrom() {","lastModifiedDate":"2023-03-28"},{"lineNumber":249,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return (Optional.ofNullable(from));","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void setTo(Date to) {","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"PROGRAMMERHAO"},"content":"            this.to \u003d to;","lastModifiedDate":"2023-03-28"},{"lineNumber":254,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":255,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public Optional\u003cDate\u003e getTo() {","lastModifiedDate":"2023-03-28"},{"lineNumber":257,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return (Optional.ofNullable(to));","lastModifiedDate":"2023-03-28"},{"lineNumber":258,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":259,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":260,"author":{"gitId":"joyngjr"},"content":"        public void setEffort(Effort e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":261,"author":{"gitId":"joyngjr"},"content":"            this.effort \u003d e;","lastModifiedDate":"2023-03-13"},{"lineNumber":262,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":263,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":264,"author":{"gitId":"joyngjr"},"content":"        public Optional\u003cEffort\u003e getEffort() {","lastModifiedDate":"2023-03-13"},{"lineNumber":265,"author":{"gitId":"joyngjr"},"content":"            return (Optional.ofNullable(this.effort));","lastModifiedDate":"2023-03-13"},{"lineNumber":266,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":267,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":268,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":269,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":270,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":271,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":280,"author":{"gitId":"lywich"},"content":"            if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"lywich"},"content":"            EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2023-02-18"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":288,"author":{"gitId":"lywich"},"content":"                    \u0026\u0026 getDescription().equals(e.getDescription())","lastModifiedDate":"2023-02-18"},{"lineNumber":289,"author":{"gitId":"joyngjr"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2023-03-13"},{"lineNumber":290,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    \u0026\u0026 getEffort().equals(e.getEffort())","lastModifiedDate":"2023-03-28"},{"lineNumber":291,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    \u0026\u0026 getDeadline().equals(e.getDeadline())","lastModifiedDate":"2023-03-28"},{"lineNumber":292,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    \u0026\u0026 getFrom().equals(e.getFrom())","lastModifiedDate":"2023-03-28"},{"lineNumber":293,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    \u0026\u0026 getTo().equals(e.getTo());","lastModifiedDate":"2023-03-28"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"lywich":52,"PROGRAMMERHAO":94,"-":131,"joyngjr":19}},{"path":"src/main/java/seedu/task/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Task Book as requested ...\";","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"lywich":3,"-":14}},{"path":"src/main/java/seedu/task/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.Messages;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":" * Finds and lists all tasks in task book whose name/tag/description matches the argument.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks whose details contain \"","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"            + \"Parameters: (Only use 1 prefix)\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] OR \"","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] OR \"","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"books\";","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public final Predicate\u003cTask\u003e predicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"    public FindCommand(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Huggenguggen":14,"lywich":5,"PROGRAMMERHAO":2,"-":29}},{"path":"src/main/java/seedu/task/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lywich":2,"-":19}},{"path":"src/main/java/seedu/task/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":" * Lists all tasks in the task book to the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lywich":6,"-":18}},{"path":"src/main/java/seedu/task/logic/commands/PlanCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.core.Messages;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Effort;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":" * Creates a work plan for users.","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"public class PlanCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"    public static final String PLAN_SUCCESS_MESSAGE \u003d \"Work Plan Created.\";","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"    private final long workload;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"    public PlanCommand(Effort effort) {","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"        this.workload \u003d effort.getEffort();","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"        if (workload \u003c 0) {","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"            assert false; // checks should have been done in ScheduleCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EFFORT);","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"        model.plan(workload);","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"        return new CommandResult(PLAN_SUCCESS_MESSAGE);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"                || (other instanceof PlanCommand // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"                \u0026\u0026 (workload \u003d\u003d (((PlanCommand) other).workload))); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":36}},{"path":"src/main/java/seedu/task/logic/commands/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_EFFORT;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import java.util.Objects;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Effort;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":" * Gets schedule for a date specified by user (limited to 30 days from when schedule was created)","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":" * Schedule is generated by the plan command (only when initiated by users).","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"    public static final String COMMAND_WORD \u003d \"schedule\";","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": returns a day\u0027s work plan\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"            + PREFIX_EFFORT + \"EFFORT\\n\"","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"            + \"Example: \" + COMMAND_WORD + \" D/2023-04-26\" + \" E/5\";","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    public static final String SCHEDULE_SUCCESS_MESSAGE \u003d \"Daily Plan Displayed.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"    public static final String OUT_OF_RANGE_MESSAGE \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"            \"Date entered is outside of planner date range (30 days from date generated).\\n\"","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"            + \"Try re-planning with \u0027E/\u0027 flag, or entering another date.\";","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    private final Effort effort;","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"     * Creates a new ScheduleCommand instance with empty effort","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"    public ScheduleCommand(LocalDate date) {","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"        this.effort \u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"     * Creates a new scheduleCommand instance with effort field","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"    public ScheduleCommand(LocalDate date, Effort effort) {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"        this.effort \u003d effort;","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"        if (effort \u003d\u003d null) {","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"            model.schedule(date);","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"            return new CommandResult(SCHEDULE_SUCCESS_MESSAGE);","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"        } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"            CommandResult cmdRes \u003d new PlanCommand(effort).execute(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"            model.schedule(date);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"            return new CommandResult(cmdRes, SCHEDULE_SUCCESS_MESSAGE);","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"            return true;","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"        } else if (other instanceof ScheduleCommand) {","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"            ScheduleCommand sd \u003d (ScheduleCommand) other;","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"            if (Objects.isNull(sd.effort) || Objects.isNull(effort)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"                return date.equals(sd.date);","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"            } else {","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"                return date.equals(sd.date) \u0026\u0026 effort.equals(sd.effort);","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"        } else {","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"            return false;","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"joyngjr":76}},{"path":"src/main/java/seedu/task/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":" * Sorts the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": sorts the list.\\n\"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"    public static final String SORT_SUCCESS_MESSAGE \u003d \"List sorted.\";","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"        model.sortTask();","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"        return new CommandResult(SORT_SUCCESS_MESSAGE, false, false);","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"lywich":22}},{"path":"src/main/java/seedu/task/logic/commands/StatsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.tracker.TaskByTagTracker;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":" * Prints out statistics","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"public class StatsCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"    public static final String COMMAND_WORD \u003d \"stats\";","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Prints summary information.\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"    public static final String STATS_SUCCESS_MESSAGE \u003d \"Here is your requested data:\\n\";","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"        String output \u003d TaskByTagTracker.sort(model);","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"        return new CommandResult(STATS_SUCCESS_MESSAGE + output);","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"joyngjr":23}},{"path":"src/main/java/seedu/task/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands.exceptions;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"lywich":1,"-":16}},{"path":"src/main/java/seedu/task/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_EVENT_DATES;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_EFFORT;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_FROM;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.List;","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.AddCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Date;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Deadline;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Description;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Event;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.SimpleTask;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * and returns an AddCommand object for execution with one or more tasks.","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DESCRIPTION,","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"                            PREFIX_TAG, PREFIX_DEADLINE, PREFIX_TO, PREFIX_FROM, PREFIX_EFFORT);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"                || !argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"                || (arePrefixesPresent(argMultimap, PREFIX_DEADLINE)","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"                    \u0026\u0026 areSomePrefixesPresent(argMultimap, PREFIX_FROM, PREFIX_TO))","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"                || ((areSomePrefixesPresent(argMultimap, PREFIX_FROM, PREFIX_TO)","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"                \u0026\u0026 areSomePrefixesAbsent(argMultimap, PREFIX_FROM, PREFIX_TO)))) {","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Set\u003cName\u003e nameList \u003d ParserUtil.parseNames(argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"        Description description \u003d new Description();","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"        Effort effort \u003d new Effort();","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"            description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_EFFORT)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"            effort \u003d ParserUtil.parseEffort(argMultimap.getValue(PREFIX_EFFORT).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"        List\u003cTask\u003e taskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"        // auto-convert to deadline if deadline prefix exists.","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_DEADLINE)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"            Date deadline \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DEADLINE).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"            taskList \u003d addDeadlines(nameList, description, tagList, deadline, effort);","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Huggenguggen"},"content":"            return new AddCommand(taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"Huggenguggen"},"content":"        // auto-convert to event if from and to exist.","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_FROM, PREFIX_TO)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Huggenguggen"},"content":"            Date from \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_FROM).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"            Date to \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_TO).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"            if (!from.isValidEvent(to)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"                throw new ParseException(MESSAGE_INVALID_EVENT_DATES);","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"            taskList \u003d addEvents(nameList, description, tagList, from, to, effort);","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"Huggenguggen"},"content":"            return new AddCommand(taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"        taskList \u003d addSimpleTasks(nameList, description, tagList, effort);","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return new AddCommand(taskList);","lastModifiedDate":"2023-02-21"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":92,"author":{"gitId":"Huggenguggen"},"content":"     * Adds simple tasks to the task list","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param nameList All the names of tasks","lastModifiedDate":"2023-02-21"},{"lineNumber":94,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param description A single description belonging to all tasks","lastModifiedDate":"2023-02-21"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param tagList A single tag belonging to all tasks","lastModifiedDate":"2023-02-21"},{"lineNumber":96,"author":{"gitId":"joyngjr"},"content":"     * @param effort An effort estimating the amount of work required to complete task","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return","lastModifiedDate":"2023-02-21"},{"lineNumber":98,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":99,"author":{"gitId":"joyngjr"},"content":"    public List\u003cTask\u003e addSimpleTasks(Set\u003cName\u003e nameList, Description description, Set\u003cTag\u003e tagList, Effort effort) {","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"Huggenguggen"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"Huggenguggen"},"content":"        for (Name cur: nameList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"joyngjr"},"content":"            taskList.add(new SimpleTask(cur, description, tagList, effort));","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"Huggenguggen"},"content":"        return taskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"Huggenguggen"},"content":"     * Adds deadline tasks to the task list","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"Huggenguggen"},"content":"     * @param nameList All the names of deadlines","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"Huggenguggen"},"content":"     * @param description A single description belonging to all deadlines","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"Huggenguggen"},"content":"     * @param tagList A single tag belonging to all deadlines","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"Huggenguggen"},"content":"     * @param deadline A date representing the deadline of all tasks here","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"joyngjr"},"content":"     * @param effort An effort estimating the amount of work required to complete task","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"Huggenguggen"},"content":"     * @return","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"joyngjr"},"content":"    public List\u003cTask\u003e addDeadlines(Set\u003cName\u003e nameList, Description description,","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"joyngjr"},"content":"                                   Set\u003cTag\u003e tagList, Date deadline, Effort effort) {","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"Huggenguggen"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"Huggenguggen"},"content":"        for (Name cur: nameList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"joyngjr"},"content":"            taskList.add(new Deadline(cur, description, tagList, deadline, effort));","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"Huggenguggen"},"content":"        return taskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"Huggenguggen"},"content":"     * Adds event tasks to the task list","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"Huggenguggen"},"content":"     * @param nameList All the names of events","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"Huggenguggen"},"content":"     * @param description A single description belonging to all events","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"Huggenguggen"},"content":"     * @param tagList A single tag belonging to all events","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"Huggenguggen"},"content":"     * @param from A date representing the start date of all events here","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"joyngjr"},"content":"     * @param to A date representing the end date of all events here","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"joyngjr"},"content":"     * @param effort An effort estimating the amount of work required to complete task","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"Huggenguggen"},"content":"     * @return","lastModifiedDate":"2023-03-01"},{"lineNumber":134,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":135,"author":{"gitId":"joyngjr"},"content":"    public List\u003cTask\u003e addEvents(Set\u003cName\u003e nameList, Description description, Set\u003cTag\u003e tagList,","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"joyngjr"},"content":"                                Date from, Date to, Effort effort) {","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"PROGRAMMERHAO"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":138,"author":{"gitId":"PROGRAMMERHAO"},"content":"        for (Name cur: nameList) {","lastModifiedDate":"2023-02-21"},{"lineNumber":139,"author":{"gitId":"joyngjr"},"content":"            taskList.add(new Event(cur, description, tagList, from, to, effort));","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":141,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return taskList;","lastModifiedDate":"2023-02-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":152,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":153,"author":{"gitId":"Huggenguggen"},"content":"     * Returns true if at least one of the prefixes contains non empty values in the given","lastModifiedDate":"2023-03-26"},{"lineNumber":154,"author":{"gitId":"Huggenguggen"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-26"},{"lineNumber":155,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":156,"author":{"gitId":"Huggenguggen"},"content":"    private static boolean areSomePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-26"},{"lineNumber":157,"author":{"gitId":"Huggenguggen"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-26"},{"lineNumber":158,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":159,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":160,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":161,"author":{"gitId":"Huggenguggen"},"content":"     * Returns true if at least one of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-26"},{"lineNumber":162,"author":{"gitId":"Huggenguggen"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-26"},{"lineNumber":163,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":164,"author":{"gitId":"Huggenguggen"},"content":"    private static boolean areSomePrefixesAbsent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-26"},{"lineNumber":165,"author":{"gitId":"Huggenguggen"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isEmpty());","lastModifiedDate":"2023-03-26"},{"lineNumber":166,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Huggenguggen":67,"lywich":15,"PROGRAMMERHAO":17,"-":35,"joyngjr":33}},{"path":"src/main/java/seedu/task/logic/parser/AddSubtaskParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.logic.commands.AddSubtaskCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Description;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Subtask;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":" * Parse input to create a new AddSubtaskCommand object","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class AddSubtaskParser implements Parser\u003cAddSubtaskCommand\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * and returns an AddCommand object for execution with one or more tasks.","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public AddSubtaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DESCRIPTION);","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Index index;","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSubtaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSubtaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Description description \u003d new Description();","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"            description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Subtask toAdd \u003d new Subtask(name, description);","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return new AddSubtaskCommand(index, toAdd);","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"PROGRAMMERHAO":60}},{"path":"src/main/java/seedu/task/logic/parser/AlertCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.logic.commands.AlertCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":" * Parses input arguments and creates a new AlertCommand object","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"public class AlertCommandParser implements Parser\u003cAlertCommand\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"     * Parses the given {@code String} of arguments in the context of the AlertCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"     * and returns a AlertCommand object for execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"    public AlertCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"            if (args.isBlank()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"                return new AlertCommand();","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"            // assume that args might have multiple integers, of which we should take the last one","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"            String[] timeframes \u003d args.split(\" \");","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"            if (!onlyDigits(timeframes[timeframes.length - 1])) {","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AlertCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"            int timeframe \u003d ParserUtil.parseTimeFrame(timeframes[timeframes.length - 1].trim());","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"            return new AlertCommand(timeframe);","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AlertCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"     * Returns true if the input is only whitespaces and digits, else false.","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"    public boolean onlyDigits(String input) {","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"        String[] inputs \u003d input.split(\" \");","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"        for (String i: inputs) {","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"            if (i.trim().chars().allMatch(Character::isDigit)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"                continue;","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"            return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"        return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Huggenguggen":49}},{"path":"src/main/java/seedu/task/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"lywich":1,"-":59}},{"path":"src/main/java/seedu/task/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"lywich":1,"-":147}},{"path":"src/main/java/seedu/task/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"D/\");","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"    public static final Prefix PREFIX_FROM \u003d new Prefix(\"F/\");","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"    public static final Prefix PREFIX_TO \u003d new Prefix(\"T/\");","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final Prefix PREFIX_ALLMATCH \u003d new Prefix(\"all/\");","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"    public static final Prefix PREFIX_EFFORT \u003d new Prefix(\"E/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final Prefix PREFIX_SUBTASK_INDEX \u003d new Prefix(\"I/\");","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"D/\");","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Huggenguggen":3,"lywich":2,"PROGRAMMERHAO":8,"-":10,"joyngjr":1}},{"path":"src/main/java/seedu/task/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.core.index.IndexList;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.DeleteCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"            IndexList indexlist \u003d ParserUtil.parseIndexList(args);","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"            return new DeleteCommand(indexlist);","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"lywich":4,"-":21,"joyngjr":4}},{"path":"src/main/java/seedu/task/logic/parser/DeleteSubtaskParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_SUBTASK_INDEX;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.logic.commands.DeleteSubtaskCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class DeleteSubtaskParser implements Parser\u003cDeleteSubtaskCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * and returns an AddCommand object for execution with one or more tasks.","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public DeleteSubtaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_SUBTASK_INDEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SUBTASK_INDEX)","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"            || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"                DeleteSubtaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Index index;","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Index subtaskIndex;","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"            subtaskIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_SUBTASK_INDEX).get());","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"                DeleteSubtaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return new DeleteSubtaskCommand(index, subtaskIndex);","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"PROGRAMMERHAO":59}},{"path":"src/main/java/seedu/task/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_EFFORT;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_FROM;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.index.Index;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.EditCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DESCRIPTION, PREFIX_TAG,","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    PREFIX_EFFORT, PREFIX_DEADLINE, PREFIX_FROM, PREFIX_TO);","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"            editTaskDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"            editTaskDescriptor","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"                    .setDescription(ParserUtil.parseEditedDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"        if (argMultimap.getValue(PREFIX_EFFORT).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"            editTaskDescriptor","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"                    .setEffort((ParserUtil.parseEffort(argMultimap.getValue(PREFIX_EFFORT).get())));","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editTaskDescriptor::setTags);","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE).isPresent()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"            editTaskDescriptor","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    .setDeadline((ParserUtil.parseDate(argMultimap.getValue(PREFIX_DEADLINE).get())));","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (argMultimap.getValue(PREFIX_FROM).isPresent()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"            editTaskDescriptor","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"                .setFrom((ParserUtil.parseDate(argMultimap.getValue(PREFIX_FROM).get())));","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (argMultimap.getValue(PREFIX_TO).isPresent()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"            editTaskDescriptor","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"                .setTo((ParserUtil.parseDate(argMultimap.getValue(PREFIX_TO).get())));","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"        return new EditCommand(index, editTaskDescriptor);","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"lywich":15,"PROGRAMMERHAO":17,"-":55,"joyngjr":8}},{"path":"src/main/java/seedu/task/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_ALLMATCH;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_EFFORT;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_FROM;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"import java.util.Collection;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.FindCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Date;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.DeadlineDateContainsKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.DescContainsAllKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.DescContainsKeywordsPredicate;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Description;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.EventFromContainsKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.EventToContainsKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.NameContainsAllKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.SameEffortPredicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.TagsContainsAllKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.TagsContainsKeywordsPredicate;","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DESCRIPTION, PREFIX_TAG, PREFIX_ALLMATCH,","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"                    PREFIX_DEADLINE, PREFIX_FROM, PREFIX_TO, PREFIX_EFFORT);","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"        if (areTooManyPrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DESCRIPTION, PREFIX_TAG, PREFIX_DEADLINE,","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"                PREFIX_FROM, PREFIX_TO, PREFIX_EFFORT)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return parseForFindCommand(PREFIX_NAME, argMultimap);","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return parseForFindCommand(PREFIX_DESCRIPTION, argMultimap);","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"        if (parseTagsForFind(argMultimap.getAllValues(PREFIX_TAG)).isPresent()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return parseForFindCommand(PREFIX_TAG, argMultimap);","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE).isPresent()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return parseForFindCommand(PREFIX_DEADLINE, argMultimap);","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (argMultimap.getValue(PREFIX_FROM).isPresent()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return parseForFindCommand(PREFIX_FROM, argMultimap);","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (argMultimap.getValue(PREFIX_TO).isPresent()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return parseForFindCommand(PREFIX_TO, argMultimap);","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"        if (argMultimap.getValue(PREFIX_EFFORT).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"            return parseForFindCommand(PREFIX_EFFORT, argMultimap);","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Huggenguggen"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"Huggenguggen"},"content":"     * Returns true if more than 1 prefix is present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"Huggenguggen"},"content":"    private static boolean areTooManyPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"Huggenguggen"},"content":"        return Stream.of(prefixes).filter(prefix -\u003e argumentMultimap.getValue(prefix).isPresent()).count() \u003e 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"Huggenguggen"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"Huggenguggen"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"Huggenguggen"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"Huggenguggen"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForFind(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"Huggenguggen"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"Huggenguggen"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"Huggenguggen"},"content":"            return Optional.empty();","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"Huggenguggen"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"Huggenguggen"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private FindCommand parseForFindCommand(Prefix prefix, ArgumentMultimap argMultimap)","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (prefix.equals(PREFIX_NAME)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Set\u003cName\u003e names \u003d ParserUtil.parseNames(argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"PROGRAMMERHAO"},"content":"            if (argMultimap.getValue(PREFIX_ALLMATCH).isPresent()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"PROGRAMMERHAO"},"content":"                return new FindCommand(new NameContainsAllKeywordsPredicate(ParserUtil.parseNamesToList(names)));","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return new FindCommand(new NameContainsKeywordsPredicate(name.toString()));","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"PROGRAMMERHAO"},"content":"        } else if (prefix.equals(PREFIX_DESCRIPTION)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"joyngjr"},"content":"            Set\u003cDescription\u003e descriptions \u003d ParserUtil.parseDescriptions(","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"joyngjr"},"content":"                    argMultimap.getAllValues(PREFIX_DESCRIPTION));","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"joyngjr"},"content":"            Description description \u003d ParserUtil.parseDescription(","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"joyngjr"},"content":"                    argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"PROGRAMMERHAO"},"content":"            if (argMultimap.getValue(PREFIX_ALLMATCH).isPresent()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"PROGRAMMERHAO"},"content":"                return new FindCommand(new DescContainsAllKeywordsPredicate(ParserUtil","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    .parseDescriptionsToList(descriptions)));","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return new FindCommand(new DescContainsKeywordsPredicate(description.toString()));","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"PROGRAMMERHAO"},"content":"        } else if (prefix.equals(PREFIX_TAG)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Set\u003cTag\u003e tags \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"PROGRAMMERHAO"},"content":"            if (argMultimap.getValue(PREFIX_ALLMATCH).isPresent()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"PROGRAMMERHAO"},"content":"                return new FindCommand(new TagsContainsAllKeywordsPredicate(ParserUtil.parseTagsToList(tags)));","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return new FindCommand(new TagsContainsKeywordsPredicate(ParserUtil.parseTagsToList(tags)));","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"PROGRAMMERHAO"},"content":"        } else if (prefix.equals(PREFIX_DEADLINE)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"PROGRAMMERHAO"},"content":"            String date \u003d Date.parseFindDate(argMultimap.getValue(PREFIX_DEADLINE).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return new FindCommand(new DeadlineDateContainsKeywordsPredicate(date));","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"PROGRAMMERHAO"},"content":"        } else if (prefix.equals(PREFIX_FROM)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"PROGRAMMERHAO"},"content":"            String date \u003d Date.parseFindDate(argMultimap.getValue(PREFIX_FROM).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return new FindCommand(new EventFromContainsKeywordsPredicate(date));","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"PROGRAMMERHAO"},"content":"        } else if (prefix.equals(PREFIX_TO)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"PROGRAMMERHAO"},"content":"            String date \u003d Date.parseFindDate(argMultimap.getValue(PREFIX_TO).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return new FindCommand(new EventToContainsKeywordsPredicate(date));","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"joyngjr"},"content":"        } else if (prefix.equals(PREFIX_EFFORT)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"joyngjr"},"content":"            String effort \u003d argMultimap.getValue(PREFIX_EFFORT).get();","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"joyngjr"},"content":"            return new FindCommand(new SameEffortPredicate(ParserUtil.parseEffort(effort)));","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"PROGRAMMERHAO"},"content":"        } else {","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Huggenguggen":41,"lywich":5,"PROGRAMMERHAO":63,"-":21,"joyngjr":15}},{"path":"src/main/java/seedu/task/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.Command;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"lywich":3,"-":13}},{"path":"src/main/java/seedu/task/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.index.Index;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.core.index.IndexList;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.util.StringUtil;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.Date;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Description;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"    public static final String MESSAGE_INVALID_TIME \u003d \"Timeframe is not a non-zero unsigned integer.\";","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    public static final String MESSAGE_INVALID_LOCAL_DATE \u003d \"Format of date entered should be yyyy-mm-dd\";","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"     * Parses {@code oneBasedIndexList} into an {@code IndexList} and returns it. Leading and trailing whitespaces","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"     * will be trimmed.","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"     * @throws ParseException if any of the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"    public static IndexList parseIndexList(String oneBasedIndexList) throws ParseException {","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"        String trimmedIndices \u003d oneBasedIndexList.trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] indices \u003d trimmedIndices.split(\" \");","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"        int num \u003d indices.length;","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"        IndexList list \u003d new IndexList();","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c num; i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"            list.add(parseIndex(indices[i]));","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"        return list;","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it.","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex) || hasIntegerOverflow(trimmedIndex)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"     * Parses {@code hours} into an {@code hours} and returns it.","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"    public static int parseTimeFrame(String hours) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"        String trimmedHours \u003d hours.trim();","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedHours) || hasIntegerOverflow(trimmedHours)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"Huggenguggen"},"content":"            throw new ParseException(MESSAGE_INVALID_TIME);","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"        return Integer.parseInt(trimmedHours);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":94,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Parses {@code Collection\u003cString\u003e names} into a {@code Set\u003cName\u003e}.","lastModifiedDate":"2023-02-21"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":96,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static Set\u003cName\u003e parseNames(Collection\u003cString\u003e names) throws ParseException {","lastModifiedDate":"2023-02-21"},{"lineNumber":97,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireNonNull(names);","lastModifiedDate":"2023-02-21"},{"lineNumber":98,"author":{"gitId":"PROGRAMMERHAO"},"content":"        final Set\u003cName\u003e nameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":99,"author":{"gitId":"PROGRAMMERHAO"},"content":"        for (String name : names) {","lastModifiedDate":"2023-02-21"},{"lineNumber":100,"author":{"gitId":"PROGRAMMERHAO"},"content":"            nameSet.add(parseName(name));","lastModifiedDate":"2023-02-21"},{"lineNumber":101,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":102,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return nameSet;","lastModifiedDate":"2023-02-21"},{"lineNumber":103,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":104,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":105,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Changes a set of names to a list of names","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param names The set of names","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return The corresponding list of names","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static List\u003cString\u003e parseNamesToList(Set\u003cName\u003e names) {","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireNonNull(names);","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"PROGRAMMERHAO"},"content":"        List\u003cString\u003e nameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"PROGRAMMERHAO"},"content":"        for (Name cur: names) {","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"PROGRAMMERHAO"},"content":"            nameList.add(cur.toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return nameList;","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"lywich"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"lywich"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"lywich"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"lywich"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"lywich"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"lywich"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"lywich"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":131,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return new Description(description);","lastModifiedDate":"2023-03-25"},{"lineNumber":132,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":133,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":134,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":135,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2023-03-25"},{"lineNumber":136,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-25"},{"lineNumber":137,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * This function is to be used by the edit command, allowing differentiation of behaviour for empty strings.","lastModifiedDate":"2023-03-25"},{"lineNumber":138,"author":{"gitId":"PROGRAMMERHAO"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":139,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2023-03-25"},{"lineNumber":140,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":141,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static Description parseEditedDescription(String description) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":142,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-03-25"},{"lineNumber":143,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2023-03-25"},{"lineNumber":144,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (trimmedDescription.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-25"},{"lineNumber":145,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return new Description();","lastModifiedDate":"2023-03-25"},{"lineNumber":146,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":147,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":148,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"lywich"},"content":"        return new Description(description);","lastModifiedDate":"2023-02-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Parses a {@code Collection string} into a {@code Set description}","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param descriptions The collection of descriptions","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return The descriptions as a set","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @throws ParseException if the given{@code descriptions is invalid}","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static Set\u003cDescription\u003e parseDescriptions(Collection\u003cString\u003e descriptions) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireNonNull(descriptions);","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"PROGRAMMERHAO"},"content":"        final Set\u003cDescription\u003e descriptionSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"PROGRAMMERHAO"},"content":"        for (String cur: descriptions) {","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"PROGRAMMERHAO"},"content":"            descriptionSet.add(parseDescription(cur));","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return descriptionSet;","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Returns a list of strings from the set of descriptions","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param descriptions The set of descriptions","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return A list of string","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static List\u003cString\u003e parseDescriptionsToList(Set\u003cDescription\u003e descriptions) {","lastModifiedDate":"2023-03-06"},{"lineNumber":174,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireNonNull(descriptions);","lastModifiedDate":"2023-03-06"},{"lineNumber":175,"author":{"gitId":"PROGRAMMERHAO"},"content":"        final List\u003cString\u003e descriptionList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":176,"author":{"gitId":"PROGRAMMERHAO"},"content":"        for (Description cur: descriptions) {","lastModifiedDate":"2023-03-06"},{"lineNumber":177,"author":{"gitId":"PROGRAMMERHAO"},"content":"            descriptionList.add(cur.toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":178,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":179,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return descriptionList;","lastModifiedDate":"2023-03-06"},{"lineNumber":180,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":181,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":182,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":183,"author":{"gitId":"Huggenguggen"},"content":"     * Parses a {@code String Date} into a {@code Date}.","lastModifiedDate":"2023-03-01"},{"lineNumber":184,"author":{"gitId":"Huggenguggen"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-01"},{"lineNumber":185,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":186,"author":{"gitId":"Huggenguggen"},"content":"     * @throws ParseException if the given {@code Date} is invalid.","lastModifiedDate":"2023-03-01"},{"lineNumber":187,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":188,"author":{"gitId":"Huggenguggen"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":189,"author":{"gitId":"Huggenguggen"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-01"},{"lineNumber":190,"author":{"gitId":"Huggenguggen"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":191,"author":{"gitId":"Huggenguggen"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":192,"author":{"gitId":"Huggenguggen"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":193,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":194,"author":{"gitId":"Huggenguggen"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2023-03-01"},{"lineNumber":195,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":196,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":197,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":198,"author":{"gitId":"joyngjr"},"content":"     * Parses a {@code String date} into a {@code LocalDate}.","lastModifiedDate":"2023-03-20"},{"lineNumber":199,"author":{"gitId":"joyngjr"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-20"},{"lineNumber":200,"author":{"gitId":"joyngjr"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":201,"author":{"gitId":"joyngjr"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2023-03-20"},{"lineNumber":202,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":203,"author":{"gitId":"joyngjr"},"content":"    public static LocalDate parseLocalDate(String date) throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":204,"author":{"gitId":"joyngjr"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-20"},{"lineNumber":205,"author":{"gitId":"joyngjr"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-03-20"},{"lineNumber":206,"author":{"gitId":"joyngjr"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":207,"author":{"gitId":"joyngjr"},"content":"            LocalDate localDate \u003d LocalDate.parse(trimmedDate);","lastModifiedDate":"2023-03-20"},{"lineNumber":208,"author":{"gitId":"joyngjr"},"content":"            return localDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":209,"author":{"gitId":"joyngjr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":210,"author":{"gitId":"joyngjr"},"content":"            throw new ParseException(MESSAGE_INVALID_LOCAL_DATE);","lastModifiedDate":"2023-03-20"},{"lineNumber":211,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":212,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":213,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":214,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"joyngjr"},"content":"     * Parses a {@code String Effort} into a {@code Effort}.","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"joyngjr"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-13"},{"lineNumber":217,"author":{"gitId":"joyngjr"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":218,"author":{"gitId":"joyngjr"},"content":"     * @throws ParseException if the given {@code Effort} is invalid.","lastModifiedDate":"2023-03-13"},{"lineNumber":219,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"joyngjr"},"content":"    public static Effort parseEffort(String effort) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":221,"author":{"gitId":"joyngjr"},"content":"        requireNonNull(effort);","lastModifiedDate":"2023-03-13"},{"lineNumber":222,"author":{"gitId":"joyngjr"},"content":"        String trimmedEffort \u003d effort.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":223,"author":{"gitId":"joyngjr"},"content":"        if (!Effort.isValidEffort(trimmedEffort) || hasIntegerOverflow(trimmedEffort)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":224,"author":{"gitId":"joyngjr"},"content":"            throw new ParseException(Effort.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":225,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":226,"author":{"gitId":"joyngjr"},"content":"        long taskEffort \u003d Long.parseLong(trimmedEffort);","lastModifiedDate":"2023-03-22"},{"lineNumber":227,"author":{"gitId":"joyngjr"},"content":"        return new Effort(taskEffort);","lastModifiedDate":"2023-03-22"},{"lineNumber":228,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":229,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":256,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":257,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":258,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code List\u003cString\u003e}.","lastModifiedDate":"2023-03-06"},{"lineNumber":259,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":260,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static List\u003cString\u003e parseTagsToList(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-06"},{"lineNumber":261,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireNonNull(tags);","lastModifiedDate":"2023-03-06"},{"lineNumber":262,"author":{"gitId":"PROGRAMMERHAO"},"content":"        List\u003cString\u003e tagList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":263,"author":{"gitId":"PROGRAMMERHAO"},"content":"        for (Tag cur: tags) {","lastModifiedDate":"2023-03-06"},{"lineNumber":264,"author":{"gitId":"PROGRAMMERHAO"},"content":"            tagList.add(cur.getTagName());","lastModifiedDate":"2023-03-06"},{"lineNumber":265,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":266,"author":{"gitId":"PROGRAMMERHAO"},"content":"        System.out.println(tagList);","lastModifiedDate":"2023-03-06"},{"lineNumber":267,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return tagList;","lastModifiedDate":"2023-03-06"},{"lineNumber":268,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":269,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":270,"author":{"gitId":"joyngjr"},"content":"    private static boolean hasIntegerOverflow(String value) {","lastModifiedDate":"2023-04-04"},{"lineNumber":271,"author":{"gitId":"joyngjr"},"content":"        if (value.length() \u003e 10) {","lastModifiedDate":"2023-04-04"},{"lineNumber":272,"author":{"gitId":"joyngjr"},"content":"            return true;","lastModifiedDate":"2023-04-04"},{"lineNumber":273,"author":{"gitId":"joyngjr"},"content":"        } else if (value.length() \u003c 10) {","lastModifiedDate":"2023-04-04"},{"lineNumber":274,"author":{"gitId":"joyngjr"},"content":"            return false;","lastModifiedDate":"2023-04-04"},{"lineNumber":275,"author":{"gitId":"joyngjr"},"content":"        } else {","lastModifiedDate":"2023-04-04"},{"lineNumber":276,"author":{"gitId":"joyngjr"},"content":"            return Integer.parseInt(value.substring(0, 1)) \u003e 2 || Integer.parseInt(value.substring(1, 2)) \u003e 1","lastModifiedDate":"2023-04-04"},{"lineNumber":277,"author":{"gitId":"joyngjr"},"content":"                    || Integer.parseInt(value.substring(2, 3)) \u003e 4 || Integer.parseInt(value.substring(3, 4)) \u003e 7","lastModifiedDate":"2023-04-04"},{"lineNumber":278,"author":{"gitId":"joyngjr"},"content":"                    || Integer.parseInt(value.substring(4, 5)) \u003e 4 || Integer.parseInt(value.substring(5, 6)) \u003e 8","lastModifiedDate":"2023-04-04"},{"lineNumber":279,"author":{"gitId":"joyngjr"},"content":"                    || Integer.parseInt(value.substring(6, 7)) \u003e 3 || Integer.parseInt(value.substring(7, 8)) \u003e 6","lastModifiedDate":"2023-04-04"},{"lineNumber":280,"author":{"gitId":"joyngjr"},"content":"                    || Integer.parseInt(value.substring(8, 9)) \u003e 4 || Integer.parseInt(value.substring(9)) \u003e 7;","lastModifiedDate":"2023-04-04"},{"lineNumber":281,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":282,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":283,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Huggenguggen":28,"lywich":15,"PROGRAMMERHAO":94,"-":70,"joyngjr":77}},{"path":"src/main/java/seedu/task/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"lywich":1,"-":38}},{"path":"src/main/java/seedu/task/logic/parser/ScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_EFFORT;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import seedu.task.logic.commands.ScheduleCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Effort;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":" * Parses input arguments and creates a new ScheduleCommand object","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"public class ScheduleCommandParser implements Parser\u003cScheduleCommand\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"     * Parses the given {@code String} of arguments in the context of the PlanCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"     * and returns a ScheduleCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"    public ScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_EFFORT);","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"            if (!arePrefixesPresent(argMultimap, PREFIX_DATE) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"            LocalDate date \u003d ParserUtil.parseLocalDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"            if (!arePrefixesPresent(argMultimap, PREFIX_EFFORT)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"                return new ScheduleCommand(date);","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"            } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"                Effort effort \u003d ParserUtil.parseEffort(argMultimap.getValue(PREFIX_EFFORT).get());","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"                return new ScheduleCommand(date, effort);","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"joyngjr":52}},{"path":"src/main/java/seedu/task/logic/parser/TaskBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.AddCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.logic.commands.AddSubtaskCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.logic.commands.AlertCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.ClearCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.Command;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.DeleteCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.logic.commands.DeleteSubtaskCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.EditCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.ExitCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.FindCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.HelpCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.ListCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"import seedu.task.logic.commands.ScheduleCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.SortCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"import seedu.task.logic.commands.StatsCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"public class TaskBookParser {","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"        case AlertCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"            return new AlertCommandParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"            return new SortCommand();","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"        case StatsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"            return new StatsCommand();","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"        case ScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"            return new ScheduleCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"        case AddSubtaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return new AddSubtaskParser().parse(arguments);","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"PROGRAMMERHAO"},"content":"        case DeleteSubtaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return new DeleteSubtaskParser().parse(arguments);","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Huggenguggen":4,"lywich":18,"PROGRAMMERHAO":8,"-":62,"joyngjr":8}},{"path":"src/main/java/seedu/task/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser.exceptions;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"lywich":2,"-":15}},{"path":"src/main/java/seedu/task/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.GuiSettings;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"     * Returns the user prefs\u0027 task book file path.","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"     * Sets the user prefs\u0027 task book file path.","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"    void setTaskBookFilePath(Path taskBookFilePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"    Path getPlannerFilePath();","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"     * Replaces task book data with the data in {@code taskBook}.","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"    void setTaskBook(ReadOnlyTaskBook taskBook);","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"    /** Returns the TaskBook */","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"    ReadOnlyTaskBook getTaskBook();","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"     * Deletes the given task.","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"     * The task must exist in the task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"     * Adds the given task.","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"     * {@code task} must not already exist in the task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"    void addTask(Task task);","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"     * {@code target} must exist in the task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"lywich"},"content":"     * Sorts the list by the task.","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"    void sortTask();","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"    void plan(long workload);","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"Huggenguggen"},"content":"    /** Returns an unmodifiable view of the alert task list */","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"Huggenguggen"},"content":"    ObservableList\u003cTask\u003e getAlertTaskList();","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"lywich"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"Huggenguggen"},"content":"     * Updates the timeframe of the task list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"Huggenguggen"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"Huggenguggen"},"content":"    void updateAlertTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"joyngjr"},"content":"     * Returns the Planner","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"joyngjr"},"content":"    ReadOnlyPlanner getPlanner();","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"joyngjr"},"content":"    void schedule(LocalDate date) throws CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Huggenguggen":9,"lywich":33,"PROGRAMMERHAO":1,"-":59,"joyngjr":13}},{"path":"src/main/java/seedu/task/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.GuiSettings;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.LogsCenter;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"import seedu.task.logic.commands.ScheduleCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.calendar.DailyPlan;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.IsSameTaskPredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":" * Represents the in-memory model of the task book data.","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"    private final TaskBook taskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"    private final Planner planner;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"    private final FilteredList\u003cTask\u003e alertTasks;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"     * Initializes a ModelManager with the given taskBook and userPrefs.","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"    public ModelManager(ReadOnlyTaskBook taskBook, ReadOnlyUserPrefs userPrefs, ReadOnlyPlanner planner) {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"        requireAllNonNull(taskBook, userPrefs);","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"        logger.fine(\"Initializing with task book: \" + taskBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"        this.taskBook \u003d new TaskBook(taskBook);","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"        this.planner \u003d new Planner(planner);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.taskBook.getTaskList());","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"        alertTasks \u003d new FilteredList\u003c\u003e(this.taskBook.getTaskList());","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"        this(new TaskBook(), new UserPrefs(), new Planner());","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"        return userPrefs.getTaskBookFilePath();","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"    public void setTaskBookFilePath(Path taskBookFilePath) {","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"lywich"},"content":"        requireNonNull(taskBookFilePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"        userPrefs.setTaskBookFilePath(taskBookFilePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"    public Path getPlannerFilePath() {","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"        return userPrefs.getPlannerFilePath();","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"lywich"},"content":"    public void setTaskBook(ReadOnlyTaskBook taskBook) {","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"lywich"},"content":"        this.taskBook.resetData(taskBook);","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"lywich"},"content":"    public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"lywich"},"content":"        return taskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"joyngjr"},"content":"    public ReadOnlyPlanner getPlanner() {","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"joyngjr"},"content":"        return planner;","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"lywich"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"lywich"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"lywich"},"content":"        return taskBook.hasTask(task);","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"lywich"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"lywich"},"content":"        taskBook.removeTask(target);","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"joyngjr"},"content":"        planner.removeTask(target);","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"lywich"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"lywich"},"content":"        taskBook.addTask(task);","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"lywich"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"lywich"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"lywich"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"lywich"},"content":"        taskBook.setTask(target, editedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"joyngjr"},"content":"        planner.setTask(target, editedTask);","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"lywich"},"content":"    public void sortTask() {","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"lywich"},"content":"        taskBook.sortTask();","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"joyngjr"},"content":"    public void plan(long workload) {","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"joyngjr"},"content":"        taskBook.plan(workload, planner);","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":145,"author":{"gitId":"joyngjr"},"content":"    public void schedule(LocalDate date) throws CommandException {","lastModifiedDate":"2023-03-20"},{"lineNumber":146,"author":{"gitId":"joyngjr"},"content":"        DailyPlan plans \u003d planner.getDailyPlanOn(date);","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"joyngjr"},"content":"        if (plans \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"joyngjr"},"content":"            throw new CommandException(ScheduleCommand.OUT_OF_RANGE_MESSAGE);","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"joyngjr"},"content":"        List\u003cTask\u003e tasksToBeDisplayed \u003d plans.getTasks();","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"joyngjr"},"content":"        updateFilteredTaskList(new IsSameTaskPredicate(tasksToBeDisplayed));","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":153,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"lywich"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":157,"author":{"gitId":"lywich"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"lywich"},"content":"     * {@code versionedTaskBook}","lastModifiedDate":"2023-02-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"lywich"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-02-18"},{"lineNumber":162,"author":{"gitId":"lywich"},"content":"        return filteredTasks;","lastModifiedDate":"2023-02-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":165,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"Huggenguggen"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"Huggenguggen"},"content":"     * {@code versionedTaskBook}","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":169,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"Huggenguggen"},"content":"    public ObservableList\u003cTask\u003e getAlertTaskList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":171,"author":{"gitId":"Huggenguggen"},"content":"        return alertTasks;","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"lywich"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-02-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":177,"author":{"gitId":"lywich"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2023-02-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":180,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"Huggenguggen"},"content":"    public void updateAlertTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-03-12"},{"lineNumber":182,"author":{"gitId":"Huggenguggen"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"Huggenguggen"},"content":"        alertTasks.setPredicate(predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":184,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":185,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"lywich"},"content":"        return taskBook.equals(other.taskBook)","lastModifiedDate":"2023-02-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":202,"author":{"gitId":"Huggenguggen"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks)","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"Huggenguggen"},"content":"                \u0026\u0026 alertTasks.equals(other.alertTasks);","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Huggenguggen":19,"lywich":47,"-":103,"joyngjr":37}},{"path":"src/main/java/seedu/task/model/Planner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.calendar.DailyPlan;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":" * Wraps all data at the planner level","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"public class Planner implements ReadOnlyPlanner {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"    private List\u003cDailyPlan\u003e plansList;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"    {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"        plansList \u003d new ArrayList\u003cDailyPlan\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"    public Planner() {}","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"     * Creates a Planner using the DailyPlans in the {@code toBeCopied}","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"    public Planner(ReadOnlyPlanner toBeCopied) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"        this();","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"     * Replaces the contents of the DailyPlan list with {@code DailyPlan}","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"    public void setDailyPlans(List\u003cDailyPlan\u003e plans) {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"        plansList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"        this.plansList.addAll(plans);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"     * Resets the existing data of this {@code Planner} with {@code newDailyPlans}.","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"    public void resetData(ReadOnlyPlanner newDailyPlans) {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"        requireNonNull(newDailyPlans);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"        setDailyPlans(newDailyPlans.getDailyPlanList());","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"    public void addDailyPlan(DailyPlan dp) {","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"        plansList.add(dp);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"     * Removes {@code key} from this {@code Planner}.","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"     * {@code key} must exist in the planner.","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"        for (DailyPlan dp : plansList) {","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"            if (dp.hasRemoved(key)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"                break;","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"     * {@code target} must exist in the planner.","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task book.","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"        for (DailyPlan dp: plansList) {","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"            if (dp.hasEdited(target, editedTask)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"                break;","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"    public List\u003cDailyPlan\u003e getDailyPlanList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"        return plansList;","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"    public DailyPlan getDailyPlanOn(LocalDate date) {","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"        int n \u003d plansList.size();","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"            if (plansList.get(i).getDate().isEqual(date)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"                return plansList.get(i);","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"joyngjr"},"content":"        return null;","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"joyngjr"},"content":"    public String toString() {","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"joyngjr"},"content":"        return plansList.size() + \" daily plans\";","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"joyngjr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"joyngjr"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"joyngjr"},"content":"                || (other instanceof Planner","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"joyngjr"},"content":"                \u0026\u0026 plansList.equals(((Planner) other).plansList));","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"joyngjr"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"joyngjr"},"content":"        return plansList.hashCode();","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":112}},{"path":"src/main/java/seedu/task/model/ReadOnlyPlanner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.calendar.DailyPlan;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":" * Unmodifiable view of a Planner","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"public interface ReadOnlyPlanner {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"     * Returns an unmodifiable view of Planner","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"    List\u003cDailyPlan\u003e getDailyPlanList();","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":16}},{"path":"src/main/java/seedu/task/model/ReadOnlyTaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":" * Unmodifiable view of a task book","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"public interface ReadOnlyTaskBook {","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"     * Returns an unmodifiable view of the tasks list.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lywich":6,"-":10,"joyngjr":1}},{"path":"src/main/java/seedu/task/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.GuiSettings;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"    Path getPlannerFilePath();","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"lywich":3,"-":14,"joyngjr":1}},{"path":"src/main/java/seedu/task/model/TaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.UniqueTaskList;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":" * Wraps all data at the task-book level","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":" * Duplicates are not allowed (by .isSameTask comparison)","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"public class TaskBook implements ReadOnlyTaskBook {","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"    public TaskBook() {}","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"     * Creates an TaskBook using the Tasks in the {@code toBeCopied}","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"    public TaskBook(ReadOnlyTaskBook toBeCopied) {","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"     * Resets the existing data of this {@code TaskBook} with {@code newData}.","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"    public void resetData(ReadOnlyTaskBook newData) {","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"    //// task-level operations","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"        return tasks.contains(task);","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"lywich"},"content":"     * Adds a task to the task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"     * The task must not already exist in the task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"    public void addTask(Task p) {","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"        tasks.add(p);","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"     * {@code target} must exist in the task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"lywich"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"lywich"},"content":"     * Removes {@code key} from this {@code TaskBook}.","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"     * {@code key} must exist in the task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"        tasks.remove(key);","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"lywich"},"content":"    public void sortTask() {","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"        tasks.sort();","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"joyngjr"},"content":"    public void plan(long workload, Planner plans) {","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"joyngjr"},"content":"        tasks.plan(workload, plans);","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"lywich"},"content":"        return tasks.asUnmodifiableObservableList().size() + \" tasks\";","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"lywich"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"lywich"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"lywich"},"content":"                || (other instanceof TaskBook // instanceof handles nulls","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"lywich"},"content":"                \u0026\u0026 tasks.equals(((TaskBook) other).tasks));","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"lywich"},"content":"        return tasks.hashCode();","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lywich":47,"PROGRAMMERHAO":1,"-":77,"joyngjr":4}},{"path":"src/main/java/seedu/task/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.GuiSettings;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"    private Path taskBookFilePath \u003d Paths.get(\"data\" , \"taskbook.json\");","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"    private Path plannerFilePath \u003d Paths.get(\"data\", \"planner.json\");","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"        setTaskBookFilePath(newUserPrefs.getTaskBookFilePath());","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"        return taskBookFilePath;","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"    public void setTaskBookFilePath(Path taskBookFilePath) {","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"        requireNonNull(taskBookFilePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"        this.taskBookFilePath \u003d taskBookFilePath;","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"    public Path getPlannerFilePath() {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"        return plannerFilePath;","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"    public void setPlannerFilePath(Path plannerFilePath) {","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"        requireNonNull(plannerFilePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"        this.plannerFilePath \u003d plannerFilePath;","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"                \u0026\u0026 taskBookFilePath.equals(o.taskBookFilePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"        return Objects.hash(guiSettings, taskBookFilePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"        sb.append(\"\\nLocal data file location : \" + taskBookFilePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lywich":12,"-":77,"joyngjr":8}},{"path":"src/main/java/seedu/task/model/calendar/DailyPlan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.calendar;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Event;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.EventList;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":" * Represents a day worth of work planned according to the scheduling algorithm.","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":" * Handles logic in determining if a task should be done in that day.","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"public class DailyPlan {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"    private long desiredWorkload;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"    private long currentWorkload;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"    private LocalDate date;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"     * Instantiates a daily plan for users.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"     * @param workload Amount of work user wants to put in a day","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"     * @param date Date which plan is for","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    public DailyPlan(long workload, LocalDate date) {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"        this.desiredWorkload \u003d workload;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"        this.currentWorkload \u003d 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"     * Constructor used when reading values from JSON","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"    public DailyPlan(ArrayList\u003cTask\u003e taskList, long desiredWorkload, long currentWorkload, LocalDate date) {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"        this.desiredWorkload \u003d desiredWorkload;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"        this.currentWorkload \u003d currentWorkload;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"     * Checks through EventList for events occurring on this date.","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"     * Always add to workload if there is an event happening.","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"     * @param l list of event to check through","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"    public void allocateEvent(EventList l) {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c l.size(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"            Event e \u003d l.get(i);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"            if (isWithinRange(e)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"                currentWorkload +\u003d e.getEffort().getEffort();","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"                taskList.add(e);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"     * Adds task into day\u0027s work plan.","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"     * @param t task to be added","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"        currentWorkload +\u003d t.getEffortValue();","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"        taskList.add(t);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"     * Checks if task to be removed is in this daily plan. Removes task if found.","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"    public boolean hasRemoved(Task t) {","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"            if (taskList.get(i) \u003d\u003d t) {","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"                this.currentWorkload \u003d this.currentWorkload - taskList.get(i).getEffortValue();","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"                taskList.remove(i);","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"                return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"        return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"     * Checks if target task is in this daily plan. Modifies if task is found, do nothing if task is not found.","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"    public boolean hasEdited(Task target, Task editedTask) {","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"            if (taskList.get(i) \u003d\u003d target) {","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"joyngjr"},"content":"                taskList.remove(i);","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"joyngjr"},"content":"                taskList.add(i, editedTask);","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"joyngjr"},"content":"                return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"joyngjr"},"content":"        return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"joyngjr"},"content":"    public long getDesiredWorkload() {","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"joyngjr"},"content":"        return this.desiredWorkload;","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"joyngjr"},"content":"    public long getCurrentWorkload() {","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"joyngjr"},"content":"        return this.currentWorkload;","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"joyngjr"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"joyngjr"},"content":"        return this.taskList;","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"joyngjr"},"content":"     * Calculates the remaining amount of effort user can allocate to for this day","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"joyngjr"},"content":"     * @return effort leftover (can be negative if overloaded)","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"joyngjr"},"content":"    public long getSpareTime() {","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"joyngjr"},"content":"        return this.desiredWorkload - this.currentWorkload;","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"joyngjr"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"joyngjr"},"content":"        return this.date;","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"joyngjr"},"content":"     * Checks if plan\u0027s date fall within event date","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"joyngjr"},"content":"     * @param e event to be checked","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"joyngjr"},"content":"     * @return whether or not task should be added to day\u0027s workload","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"joyngjr"},"content":"    public boolean isWithinRange(Event e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"joyngjr"},"content":"        LocalDate eventStart \u003d e.getFrom().getDate();","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"joyngjr"},"content":"        LocalDate eventEnd \u003d e.getTo().getDate();","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"joyngjr"},"content":"        if (date.isAfter(eventStart) \u0026\u0026 date.isBefore(eventEnd) || date.isEqual(eventStart) || date.isEqual(eventEnd)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"joyngjr"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"joyngjr"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"joyngjr"},"content":"     * Checks if a task can be added into a day\u0027s worth of work without going over the maximum effort user is willing to","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"joyngjr"},"content":"     * put in.","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"joyngjr"},"content":"     * @param work amount of effort associated with the task we are considering to include","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"joyngjr"},"content":"     * @return indicates if we should include task","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"joyngjr"},"content":"    public boolean hasSpareTime(long work) {","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"joyngjr"},"content":"        if (currentWorkload + work \u003c\u003d desiredWorkload) {","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"joyngjr"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"joyngjr"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"joyngjr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"joyngjr"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"joyngjr"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"joyngjr"},"content":"        } else if (!(other instanceof DailyPlan)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"joyngjr"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"joyngjr"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"joyngjr"},"content":"            DailyPlan p \u003d (DailyPlan) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"joyngjr"},"content":"            return p.date.equals(this.date)","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"joyngjr"},"content":"                    \u0026\u0026 p.desiredWorkload \u003d\u003d this.desiredWorkload","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"joyngjr"},"content":"                    \u0026\u0026 p.currentWorkload \u003d\u003d this.currentWorkload;","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":162}},{"path":"src/main/java/seedu/task/model/calendar/MonthlyPlan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.calendar;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static java.time.temporal.ChronoUnit.DAYS;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Deadline;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.DeadlineList;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.EventList;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.SimpleTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.SimpleTaskList;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":" * A 30-day overview of the work left to be done.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"public class MonthlyPlan {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"    private static LocalDate today;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"    private DailyPlan[] dailyPlans \u003d new DailyPlan[30];","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"     * Instantiates 30 days of daily plans starting from the date the command ran","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"     * @param workload amount of work user is willing to put in a day","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"     * @param currentDate date command is ran","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"    public MonthlyPlan(long workload, LocalDate currentDate) {","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"        today \u003d currentDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c 30; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"            dailyPlans[i] \u003d new DailyPlan(workload, currentDate.plusDays(i));","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"     * Overloaded constructor used for testing.","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"     * Should not be called in regular program execution","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"     * @param dp DailyPlan stub","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"     * @param today LocalDate stub","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"    public MonthlyPlan(DailyPlan[] dp, LocalDate today) {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"        this.dailyPlans \u003d dp;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        this.today \u003d today;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"     * Check for events occurring each day and allocate count effort expenditure","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"     * @param list all events currently stored in TaskBook","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"    public void allocateEvents(EventList list) {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c 30; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"            dailyPlans[i].allocateEvent(list);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"     * Checks for days to assign Deadlines to.","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"     * Assign to the first free day, if there is one (add Deadline without exceeding maximum effort).","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"     * Assign to the least busy day before Deadline if assigning Deadline to any day will exceed maximum desired effort.","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"     * Tie-break by assigning to first least busy day before Deadline.","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"     * @param list Deadlines to select from","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"    public void allocateDeadlines(DeadlineList list) {","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"            Deadline d \u003d list.get(i);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"            long daysDueIn \u003d DAYS.between(d.getDeadline().getDate(), today);","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"            int daysFromToday \u003d findFirstFreeDate(d.getEffort().getEffort(), daysDueIn);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"            if (hasTime(daysFromToday)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"                dailyPlans[daysFromToday].addTask(d);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"                int relativelyFreeDay \u003d findMinWorkloadDate();","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"                dailyPlans[relativelyFreeDay].addTask(d);","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"     * Checks for days to assign SimpleTasks to.","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"     * Assign tasks in descending order of effort required.","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"     * Assign to first free day (adding task to date will not exceed maximum effort) if possible","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"     * Assign to most free day if overloading (adding task beyond the minimum workload) is required.","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"     * @param list SimpleTasks to select from","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"    public void allocateSimpleTasks(SimpleTaskList list) {","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"            SimpleTask s \u003d list.get(i);","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"            int daysFromToday \u003d findMostBusyFreeDate(s.getEffort().getEffort());","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"            if (hasTime(daysFromToday)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"                dailyPlans[daysFromToday].addTask(s);","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"                int relativelyFreeDay \u003d findMinWorkloadDate();","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"joyngjr"},"content":"                dailyPlans[relativelyFreeDay].addTask(s);","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"joyngjr"},"content":"     * Finds the most busy date, such that adding the task will not exceed the maximum workload","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"joyngjr"},"content":"     * @param workload effort associated with the task","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"joyngjr"},"content":"     * @return integer representing the relative number of days from the day the command was run","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"joyngjr"},"content":"    public int findMostBusyFreeDate(long workload) {","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"joyngjr"},"content":"        long interval \u003d Long.MAX_VALUE;","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"joyngjr"},"content":"        int date \u003d -1;","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c 30; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"joyngjr"},"content":"            long spareTime \u003d dailyPlans[i].getSpareTime();","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"joyngjr"},"content":"            if (spareTime \u003c interval \u0026\u0026 workload \u003c\u003d spareTime) {","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"joyngjr"},"content":"                interval \u003d spareTime;","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"joyngjr"},"content":"                date \u003d i;","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"joyngjr"},"content":"        return date;","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"joyngjr"},"content":"     * Find first date to do Deadline task without exceeding maximum workload.","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"joyngjr"},"content":"     * @param workload amount of effort required to do the work","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"joyngjr"},"content":"     * @param daysDueIn last day to consider for task","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"joyngjr"},"content":"     * @return number of days relative to the day command is run, -1 if no such date is found.","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"joyngjr"},"content":"    public int findFirstFreeDate(long workload, long daysDueIn) {","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c 30; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"joyngjr"},"content":"            if (daysDueIn \u003c i) {","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"joyngjr"},"content":"                break;","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"joyngjr"},"content":"            if (dailyPlans[i].hasSpareTime(workload)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"joyngjr"},"content":"                return i;","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"joyngjr"},"content":"        return -1;","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"joyngjr"},"content":"     * Helper function to find date with the least work (in terms of effort)","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"joyngjr"},"content":"     * @return number of days relative to the date command is run","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"joyngjr"},"content":"    private int findMinWorkloadDate() {","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"joyngjr"},"content":"        long min \u003d Long.MAX_VALUE;","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"joyngjr"},"content":"        int date \u003d 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c 30; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"joyngjr"},"content":"            long work \u003d dailyPlans[i].getCurrentWorkload();","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"joyngjr"},"content":"            if (work \u003c min) {","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"joyngjr"},"content":"                date \u003d i;","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"joyngjr"},"content":"                min \u003d work;","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"joyngjr"},"content":"        return date;","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"joyngjr"},"content":"     * Converts invalid output into boolean for processing","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"joyngjr"},"content":"     * @param daysFromToday computed relative number of days from other methods","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"joyngjr"},"content":"     * @return boolean representing the validity of input dates","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"joyngjr"},"content":"    private boolean hasTime(int daysFromToday) {","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"joyngjr"},"content":"        if (daysFromToday \u003e\u003d 0) {","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"joyngjr"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"joyngjr"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"joyngjr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"joyngjr"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"joyngjr"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"joyngjr"},"content":"        } else if (!(other instanceof MonthlyPlan)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"joyngjr"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"joyngjr"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"joyngjr"},"content":"            MonthlyPlan mp \u003d (MonthlyPlan) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"joyngjr"},"content":"            for (int i \u003d 0; i \u003c 30; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"joyngjr"},"content":"                if (!mp.dailyPlans[i].equals(this.dailyPlans[i])) {","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"joyngjr"},"content":"                    return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"joyngjr"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"joyngjr"},"content":"            return today.equals(mp.today);","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":178,"author":{"gitId":"joyngjr"},"content":"    public List\u003cDailyPlan\u003e getDailyPlans() {","lastModifiedDate":"2023-03-15"},{"lineNumber":179,"author":{"gitId":"joyngjr"},"content":"        return Arrays.asList(this.dailyPlans);","lastModifiedDate":"2023-03-15"},{"lineNumber":180,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":181,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":181}},{"path":"src/main/java/seedu/task/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model.tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":" * Represents a Tag in the task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric and not blank\";","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String getTagName() {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this.tagName;","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lywich":3,"PROGRAMMERHAO":5,"-":50}},{"path":"src/main/java/seedu/task/model/task/CategoricalTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":" * Represents a list of Tasks from the TaskBook","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"public abstract class CategoricalTaskList {","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"    abstract boolean isCorrectType(Task t, LocalDate d);","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":10}},{"path":"src/main/java/seedu/task/model/task/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":" * Represents a Task\u0027s date in the task book.","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"public class Date implements Comparable\u003cDate\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"Date must be valid and does not contain the time\";","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date must be valid\";","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"    public final LocalDateTime value;","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"     * @param date A valid date.","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"    public Date(String date) {","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"        value \u003d LocalDateTime.parse(formatDate(date));","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"        try {","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"            String toParse \u003d formatDate(test);","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"            LocalDateTime.parse(toParse);","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"        } catch (DateTimeException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"            return false;","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"        return true;","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"     * Returns true if date entered is a valid end date for this event\u0027s start date","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"    public boolean isValidEvent(Date test) {","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"        return this.value.isBefore(test.value) || this.value.equals(test.value);","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"     * Formats the String to be a parse-able String for LocalDateTime.","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"     * Only the first 4 numbers of the input String is parsed for time.","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"     * @param input input String by user.","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"     * @return String parse-able by LocalDateTime.","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"     * @Throw IndexOutOfBoundsException if input is not the right format.","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"    public static String formatDate(String input) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"        String[] dateTime \u003d input.trim().split(\" \");","lastModifiedDate":"2023-02-21"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"        String date \u003d dateTime[0];","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"        String time \u003d dateTime[1];","lastModifiedDate":"2023-02-21"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"        String hour \u003d time.substring(0, 2);","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"        String minute \u003d time.substring(2, 4);","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"        return date + \"T\" + hour + \":\" + minute + \":00\";","lastModifiedDate":"2023-02-21"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"lywich"},"content":"     * The seconds field is ignored.","lastModifiedDate":"2023-02-21"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"     * @return String to be printed out.","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"    public String toString() {","lastModifiedDate":"2023-02-21"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"        String month \u003d value.getMonth().toString().substring(0, 3);","lastModifiedDate":"2023-02-21"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"        int day \u003d value.getDayOfMonth();","lastModifiedDate":"2023-02-21"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"        int year \u003d value.getYear();","lastModifiedDate":"2023-02-21"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"        String hour \u003d String.format(\"%02d\", value.getHour());","lastModifiedDate":"2023-02-21"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"        String minute \u003d String.format(\"%02d\", value.getMinute());","lastModifiedDate":"2023-02-21"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"        return month + \" \" + day + \" \" + year + \" \" + hour + minute;","lastModifiedDate":"2023-02-21"},{"lineNumber":83,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Checks whether a date is a valid date","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param test The string input representing a date","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return True or False","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static String parseFindDate(String test) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"PROGRAMMERHAO"},"content":"            String toParse \u003d formatDateOnly(test);","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"PROGRAMMERHAO"},"content":"            LocalDate.parse(toParse);","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return toParse;","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"        } catch (DateTimeException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new ParseException(MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Trims the date for checking","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param input The date in form of a string","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return A trimmed string","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @throws IndexOutOfBoundsException","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static String formatDateOnly(String input) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String dateTime \u003d input.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return dateTime;","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"Huggenguggen"},"content":"     * Returns a full information String which can be parsed back into a DateTime.","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"Huggenguggen"},"content":"    public String getValue() {","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"Huggenguggen"},"content":"        String month \u003d String.format(\"%02d\", value.getMonthValue());","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"Huggenguggen"},"content":"        String day \u003d String.format(\"%02d\", value.getDayOfMonth());","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"Huggenguggen"},"content":"        int year \u003d value.getYear();","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"Huggenguggen"},"content":"        String hour \u003d String.format(\"%02d\", value.getHour());","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"Huggenguggen"},"content":"        String minute \u003d String.format(\"%02d\", value.getMinute());","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"Huggenguggen"},"content":"        return year + \"-\" + month + \"-\" + day + \" \" + hour + minute;","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"joyngjr"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"joyngjr"},"content":"        return this.value.toLocalDate();","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"lywich"},"content":"     * Compares the date using the LocalDateTime compareTo.","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"lywich"},"content":"     * @param date the object to be compared.","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"lywich"},"content":"     * @return int priority.","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"lywich"},"content":"    public int compareTo(Date date) {","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"lywich"},"content":"        return this.value.compareTo(date.value);","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":141,"author":{"gitId":"lywich"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-21"},{"lineNumber":142,"author":{"gitId":"lywich"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-21"},{"lineNumber":143,"author":{"gitId":"lywich"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2023-02-21"},{"lineNumber":144,"author":{"gitId":"lywich"},"content":"                \u0026\u0026 value.equals(((Date) other).value)); // state check","lastModifiedDate":"2023-02-21"},{"lineNumber":145,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":146,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":147,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":148,"author":{"gitId":"lywich"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-21"},{"lineNumber":149,"author":{"gitId":"lywich"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-21"},{"lineNumber":150,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":151,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"Huggenguggen":12,"lywich":94,"PROGRAMMERHAO":32,"joyngjr":13}},{"path":"src/main/java/seedu/task/model/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":" * Represents a Deadline in the task book.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":" * Guarantees: details ares present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"    // Identity fields","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"    private Date deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"    public Deadline(Name name, Description description, Set\u003cTag\u003e tags, Date deadline, Effort effort) {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"        super(name, description, tags, effort);","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"        requireAllNonNull(deadline);","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Overload the constructor to take in a {@code subtasks} field","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public Deadline(Name name, Description description, Set\u003cTag\u003e tags, Date deadline, Effort effort,","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    List\u003cSubtask\u003e subtasks) {","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"        super(name, description, tags, effort, subtasks);","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireAllNonNull(deadline);","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"    public Date getDeadline() {","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"        return this.deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"    public boolean isValidDate(LocalDate date) {","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"        return date.isBefore(deadline.getDate());","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"    public boolean isSimpleTask() {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"    public boolean isDeadline() {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"        return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"    public boolean isEvent() {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"     * Returns true if both deadlines have the same identity and data fields.","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"     * This defines a stronger notion of equality between two deadlines.","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"            return true;","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"        if (!(other instanceof Deadline)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"Huggenguggen"},"content":"            return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"        Deadline otherTask \u003d (Deadline) other;","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"Huggenguggen"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"                \u0026\u0026 otherTask.getDescription().equals(getDescription())","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"Huggenguggen"},"content":"                \u0026\u0026 otherTask.getTags().equals(getTags())","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"                \u0026\u0026 otherTask.getDeadline().equals(getDeadline())","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"                \u0026\u0026 otherTask.getEffort().equals(getEffort());","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"Huggenguggen"},"content":"     * Returns true if {@code deadline} is within the {@code alertWindow} from the current time.","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"Huggenguggen"},"content":"    public boolean isComingUp() {","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"Huggenguggen"},"content":"        boolean isAfterNow \u003d this.deadline.value.isAfter(LocalDateTime.now());","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"Huggenguggen"},"content":"        boolean isBeforeAlert \u003d this.deadline.value.minus(alertWindow).isBefore(LocalDateTime.now());","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"Huggenguggen"},"content":"        return isAfterNow \u0026\u0026 isBeforeAlert;","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"Huggenguggen"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"Huggenguggen"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"Huggenguggen"},"content":"        return Objects.hash(name, description, tags, deadline);","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"lywich"},"content":"     * Compares tasks to get their position in a sorted list.","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"lywich"},"content":"     * If task is a SimpleTask instance, task should be higher up on the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"lywich"},"content":"     * If task is an Event instance, this instance should be on higher up on the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"lywich"},"content":"     * If task is a Deadline instance, order to compare by is as follows: deadline, tags size, name.","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"lywich"},"content":"     * @param task the object to be compared.","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"lywich"},"content":"     * @return int priority.","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":112,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":113,"author":{"gitId":"lywich"},"content":"    public int compareTo(Task task) {","lastModifiedDate":"2023-03-04"},{"lineNumber":114,"author":{"gitId":"lywich"},"content":"        if (task instanceof SimpleTask) {","lastModifiedDate":"2023-03-04"},{"lineNumber":115,"author":{"gitId":"lywich"},"content":"            return 1;","lastModifiedDate":"2023-03-04"},{"lineNumber":116,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"lywich"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"lywich"},"content":"            return -1;","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"lywich"},"content":"        Deadline newTask \u003d (Deadline) task;","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"lywich"},"content":"        if (!this.deadline.equals(newTask.deadline)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"lywich"},"content":"            // if deadline is different, compare deadline.","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"lywich"},"content":"            return this.deadline.compareTo(newTask.deadline);","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"lywich"},"content":"        if (this.tags.size() \u003d\u003d newTask.tags.size()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"lywich"},"content":"            // if number of tags are the same, compare name.","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"lywich"},"content":"            return this.name.compareTo(newTask.name);","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"lywich"},"content":"        } else {","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"lywich"},"content":"            // if number of tags are different, compare size.","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"lywich"},"content":"            return Integer.compare(this.tags.size(), newTask.tags.size());","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":139,"author":{"gitId":"Huggenguggen"},"content":"    public String toString() {","lastModifiedDate":"2023-03-01"},{"lineNumber":140,"author":{"gitId":"Huggenguggen"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"Huggenguggen"},"content":"        builder.append(getName())","lastModifiedDate":"2023-03-01"},{"lineNumber":142,"author":{"gitId":"Huggenguggen"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"Huggenguggen"},"content":"                .append(getDescription())","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"Huggenguggen"},"content":"                .append(\"; Deadline: \")","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"joyngjr"},"content":"                .append(getDeadline())","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"joyngjr"},"content":"                .append(\"; Effort: \")","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"joyngjr"},"content":"                .append(getEffort());","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":149,"author":{"gitId":"Huggenguggen"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-01"},{"lineNumber":150,"author":{"gitId":"Huggenguggen"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":151,"author":{"gitId":"Huggenguggen"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-01"},{"lineNumber":152,"author":{"gitId":"Huggenguggen"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-01"},{"lineNumber":153,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"Huggenguggen"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"Huggenguggen":83,"lywich":35,"PROGRAMMERHAO":11,"joyngjr":28}},{"path":"src/main/java/seedu/task/model/task/DeadlineDateContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":" * Tests that a {@code Task}\u0027s {@code Description} matches any of the keywords given.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class DeadlineDateContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private final String keyphrase;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public DeadlineDateContainsKeywordsPredicate(String keyphrase) {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.keyphrase \u003d keyphrase;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"            String date \u003d deadline.getDeadline().getValue();","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return date.contains(keyphrase);","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"            || (other instanceof DeadlineDateContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"            \u0026\u0026 keyphrase.equals(((DeadlineDateContainsKeywordsPredicate) other).keyphrase)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"PROGRAMMERHAO":33}},{"path":"src/main/java/seedu/task/model/task/DeadlineList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":" * Storage for all Deadline task currently in the TaskBook in a list","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"public class DeadlineList extends CategoricalTaskList {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"    private List\u003cDeadline\u003e taskList \u003d new ArrayList\u003cDeadline\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"     * Constructor takes in all tasks from the taskbook and performs a check on them.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"     * Copies tasks which are of type Deadline which due date is in the future.","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"     * @param internalList all tasks from taskbook","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"     * @param today date command is ran","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"    public DeadlineList(ObservableList\u003cTask\u003e internalList, LocalDate today) {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"            isCorrectType(internalList.get(i), today);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"     * Empty constructor used for testing purposes.","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"     * Should not be called in regular program execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    public DeadlineList() {}","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"    public int size() {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"    public Deadline get(int index) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"    public boolean isCorrectType(Task t, LocalDate today) {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"        if (t.isDeadline()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"            Deadline d \u003d (Deadline) t;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"            if (d.isValidDate(today)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"                taskList.add(d);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"                return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"            return true;","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"        } else if (other instanceof DeadlineList) {","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"            DeadlineList list \u003d (DeadlineList) other;","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"            return taskList.equals(list.taskList);","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"        } else {","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"            return false;","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":65}},{"path":"src/main/java/seedu/task/model/task/DescContainsAllKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.util.StringUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":" * Tests that a {@code Task}\u0027s {@code Description} matches any of the keywords given.","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class DescContainsAllKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private final List\u003cString\u003e keyphrases;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public DescContainsAllKeywordsPredicate(List\u003cString\u003e keyphrase) {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.keyphrases \u003d keyphrase;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return keyphrases.stream().allMatch(keyphrase -\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"            StringUtil.containsIgnoreCase(task.getDescription().value, keyphrase));","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"            || (other instanceof DescContainsAllKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"            \u0026\u0026 keyphrases.equals(((DescContainsAllKeywordsPredicate) other).keyphrases)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"PROGRAMMERHAO":31}},{"path":"src/main/java/seedu/task/model/task/DescContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.commons.util.StringUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":" * Tests that a {@code Task}\u0027s {@code Description} matches any of the keywords given.","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"public class DescContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"    private final String keyphrase;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"    public DescContainsKeywordsPredicate(String keyphrase) {","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"        this.keyphrase \u003d keyphrase;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"        return StringUtil.containsIgnoreCase(task.getDescription().value, keyphrase)","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"                \u0026\u0026 task.hasDescription();","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"                || (other instanceof DescContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"                \u0026\u0026 keyphrase.equals(((DescContainsKeywordsPredicate) other).keyphrase)); // state check","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Huggenguggen":28,"lywich":2,"PROGRAMMERHAO":1}},{"path":"src/main/java/seedu/task/model/task/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":" * Represents a Task\u0027s description in the task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"public class Description {","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"        \"Description must contain at least one character\";","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String DEFAULT_VALUE \u003d \"No Description\";","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"    public final String value;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private boolean hasDescription \u003d false;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Constructs a {@code Description} with default description.","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public Description() {","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"        value \u003d DEFAULT_VALUE;","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"      * Constructs a {@code Description}.","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"      */","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"    public Description(String description) {","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"        value \u003d description;","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"        hasDescription \u003d true;","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"        return !test.trim().isEmpty();","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean getHasDescription() {","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return hasDescription;","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"    public String toString() {","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"        return value;","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"            || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"            \u0026\u0026 value.equals(((Description) other).value)); // state check","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"lywich":44,"PROGRAMMERHAO":20}},{"path":"src/main/java/seedu/task/model/task/Effort.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.exceptions.InvalidEffortException;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":" * Represent a Task\u0027s required effort in the task book.","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"public class Effort {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Effort must be an integer greater than or equal to 0.\";","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"    public static final long DEFAULT_DAILY_EFFORT \u003d 24;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"    private long effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"     * Creates an effort instance which is an abstraction on the estimated effort required to complete a task.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"     * @param effort","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"    public Effort(long effort) {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"        if (effort \u003c 0) {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"            throw new InvalidEffortException();","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"        this.effort \u003d effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    public Effort() {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"        this.effort \u003d DEFAULT_DAILY_EFFORT;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"    public long getEffort() {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"        return this.effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"     * Returns true if a given long can be converted into a valid effort.","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"    public static boolean isValidEffort(String value) {","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"        try {","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"            long checkValue \u003d Long.parseLong(value);","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"            return checkValue \u003e\u003d 0;","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"            return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"        String str \u003d \"\" + this.effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"        return str;","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"        if (!(other instanceof Effort)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"        Effort otherEffort \u003d (Effort) other;","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"        return Objects.equals(otherEffort.effort, this.effort);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"joyngjr":65}},{"path":"src/main/java/seedu/task/model/task/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":" * Represents an Event in the task book.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"public class Event extends Task {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"    // Identity fields","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"    private Date from;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"    private Date to;","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    public Event(Name name, Description description, Set\u003cTag\u003e tags, Date from, Date to, Effort effort) {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"        super(name, description, tags, effort);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"        requireAllNonNull(from, to);","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Overload the constructor to take in a {@code subtasks} field","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public Event(Name name, Description description, Set\u003cTag\u003e tags, Date from, Date to,","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"                 Effort effort, List\u003cSubtask\u003e subtask) {","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"        super(name, description, tags, effort, subtask);","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireAllNonNull(from, to);","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"    public Date getFrom() {","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"        return this.from;","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"    public Date getTo() {","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"        return this.to;","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"     * Checks if the given date happens during this event\u0027s period","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"    public boolean isDuringEvent(LocalDate referenceDate) {","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"        return referenceDate.isBefore(this.to.getDate()) \u0026\u0026 referenceDate.isAfter(this.from.getDate())","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"                || referenceDate.isEqual(this.to.getDate())","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"                || referenceDate.isEqual(this.from.getDate());","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"    public boolean isSimpleTask() {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"    public boolean isDeadline() {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"    public boolean isEvent() {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"        return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"     * Returns true if both events have the same identity and data fields.","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"Huggenguggen"},"content":"     * This defines a stronger notion of equality between two events.","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"Huggenguggen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"Huggenguggen"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"Huggenguggen"},"content":"            return true;","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"Huggenguggen"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"Huggenguggen"},"content":"            return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"Huggenguggen"},"content":"        Event otherTask \u003d (Event) other;","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"Huggenguggen"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"Huggenguggen"},"content":"                \u0026\u0026 otherTask.getDescription().equals(getDescription())","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"Huggenguggen"},"content":"                \u0026\u0026 otherTask.getTags().equals(getTags())","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"Huggenguggen"},"content":"                \u0026\u0026 otherTask.getFrom().equals(getFrom())","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"joyngjr"},"content":"                \u0026\u0026 otherTask.getTo().equals(getTo())","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"joyngjr"},"content":"                \u0026\u0026 otherTask.getEffort().equals(getEffort());","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"Huggenguggen"},"content":"     * Returns true if {@code to} or {@code from} is within the {@code alertWindow} from the current time.","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"Huggenguggen"},"content":"    public boolean isComingUp() {","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"Huggenguggen"},"content":"        boolean isToAfterNow \u003d this.to.value.isAfter(LocalDateTime.now());","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"Huggenguggen"},"content":"        boolean isToBeforeAlert \u003d this.to.value.minus(alertWindow).isBefore(LocalDateTime.now());","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"Huggenguggen"},"content":"        boolean isFromAfterNow \u003d this.from.value.isAfter(LocalDateTime.now());","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"Huggenguggen"},"content":"        boolean isFromBeforeAlert \u003d this.from.value.minus(alertWindow).isBefore(LocalDateTime.now());","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"Huggenguggen"},"content":"        return (isFromAfterNow \u0026\u0026 isFromBeforeAlert) || (isToAfterNow \u0026\u0026 isToBeforeAlert);","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"Huggenguggen"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"Huggenguggen"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"joyngjr"},"content":"        return Objects.hash(name, description, tags, from, to, effort);","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"lywich"},"content":"     * Compares tasks to get their position in a sorted list.","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"lywich"},"content":"     * If task is a SimpleTask or a Deadline instance, task should be higher up on the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"lywich"},"content":"     * If task is an Event instance, order to compare by is as follows: from, to, tags size, name.","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"lywich"},"content":"     * @param task the object to be compared.","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"lywich"},"content":"     * @return int priority.","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"lywich"},"content":"    public int compareTo(Task task) {","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"lywich"},"content":"        if (task instanceof SimpleTask) {","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"lywich"},"content":"            return 1;","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":132,"author":{"gitId":"lywich"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"lywich"},"content":"            return 1;","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"lywich"},"content":"        Event newTask \u003d (Event) task;","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"lywich"},"content":"        if (!this.from.equals(newTask.from)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"lywich"},"content":"            // compare to first.","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"lywich"},"content":"            return this.from.compareTo(newTask.from);","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"lywich"},"content":"        if (!this.to.equals(newTask.to)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"lywich"},"content":"            // if from is the same, compare to.","lastModifiedDate":"2023-03-04"},{"lineNumber":145,"author":{"gitId":"lywich"},"content":"            return this.to.compareTo(newTask.to);","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":147,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"lywich"},"content":"        if (this.tags.size() \u003d\u003d newTask.tags.size()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":149,"author":{"gitId":"lywich"},"content":"            // if number of tags are the same, compare name.","lastModifiedDate":"2023-03-04"},{"lineNumber":150,"author":{"gitId":"lywich"},"content":"            return this.name.compareTo(newTask.name);","lastModifiedDate":"2023-03-04"},{"lineNumber":151,"author":{"gitId":"lywich"},"content":"        } else {","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"lywich"},"content":"            // if number of tags are different, compare size.","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"lywich"},"content":"            return Integer.compare(this.tags.size(), newTask.tags.size());","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"Huggenguggen"},"content":"    public String toString() {","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"Huggenguggen"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"Huggenguggen"},"content":"        builder.append(getName())","lastModifiedDate":"2023-03-01"},{"lineNumber":161,"author":{"gitId":"Huggenguggen"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2023-03-01"},{"lineNumber":162,"author":{"gitId":"Huggenguggen"},"content":"                .append(getDescription())","lastModifiedDate":"2023-03-01"},{"lineNumber":163,"author":{"gitId":"Huggenguggen"},"content":"                .append(\"; From: \")","lastModifiedDate":"2023-03-01"},{"lineNumber":164,"author":{"gitId":"Huggenguggen"},"content":"                .append(getFrom())","lastModifiedDate":"2023-03-01"},{"lineNumber":165,"author":{"gitId":"Huggenguggen"},"content":"                .append(\"; To: \")","lastModifiedDate":"2023-03-01"},{"lineNumber":166,"author":{"gitId":"joyngjr"},"content":"                .append(getTo())","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"joyngjr"},"content":"                .append(\"; Effort: \")","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"joyngjr"},"content":"                .append(getEffort());","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":170,"author":{"gitId":"Huggenguggen"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-01"},{"lineNumber":171,"author":{"gitId":"Huggenguggen"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":172,"author":{"gitId":"Huggenguggen"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-01"},{"lineNumber":173,"author":{"gitId":"Huggenguggen"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-01"},{"lineNumber":174,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":175,"author":{"gitId":"Huggenguggen"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-01"},{"lineNumber":176,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":177,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":178,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"Huggenguggen":93,"lywich":39,"PROGRAMMERHAO":13,"joyngjr":33}},{"path":"src/main/java/seedu/task/model/task/EventFromContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":" * Tests that a {@code Task}\u0027s {@code Description} matches any of the keywords given.","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class EventFromContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private final String keyphrase;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public EventFromContainsKeywordsPredicate(String keyphrase) {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.keyphrase \u003d keyphrase;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"            String date \u003d event.getFrom().getValue();","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return date.contains(keyphrase);","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"            || (other instanceof EventFromContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"            \u0026\u0026 keyphrase.equals(((EventFromContainsKeywordsPredicate) other).keyphrase)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"PROGRAMMERHAO":32}},{"path":"src/main/java/seedu/task/model/task/EventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":" * Storage for all Event task currently in the TaskBook in a list","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"public class EventList extends CategoricalTaskList {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"    private List\u003cEvent\u003e taskList \u003d new ArrayList\u003cEvent\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"     * Filters and stores events which are valid","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"     * @param internalList all events that should be included in the planning algorithm","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"     * @param today date command is ran","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"    public EventList(ObservableList\u003cTask\u003e internalList, LocalDate today) {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"            isCorrectType(internalList.get(i), today);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"     * Empty constructor used for testing.","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"     * Should not be called in normal program execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"    public EventList() {}","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"    public Event get(int index) {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"    public int size() {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"        return taskList.size();","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"    public boolean isCorrectType(Task t, LocalDate today) {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        if (t.isEvent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"            Event e \u003d (Event) t;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"            taskList.add(e);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"            return true;","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"        } else if (other instanceof EventList) {","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"            EventList list \u003d (EventList) other;","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"            return taskList.equals(list.taskList);","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"        } else {","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"            return false;","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":61}},{"path":"src/main/java/seedu/task/model/task/EventToContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":" * Tests that a {@code Task}\u0027s {@code Description} matches any of the keywords given.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class EventToContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private final String keyphrase;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public EventToContainsKeywordsPredicate(String keyphrase) {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.keyphrase \u003d keyphrase;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"            String date \u003d event.getTo().getValue();","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return date.contains(keyphrase);","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"            || (other instanceof EventToContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"            \u0026\u0026 keyphrase.equals(((EventToContainsKeywordsPredicate) other).keyphrase)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"PROGRAMMERHAO":33}},{"path":"src/main/java/seedu/task/model/task/IsSameTaskPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":" * Tests if a {@code Task} is in the day\u0027s planned task","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"public class IsSameTaskPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"    public IsSameTaskPredicate(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"        int size \u003d this.taskList.size();","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"            if (taskList.get(i).equals(task)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"                return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"        return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"joyngjr":26}},{"path":"src/main/java/seedu/task/model/task/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":" * Represents a Task\u0027s name in the task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"     * The first character of the task must not be a whitespace,","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"    public boolean hasSameName(Name name) {","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        return this.fullName.toLowerCase().equals(name.fullName.toLowerCase());","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"     * Compares the name by their lexicographical order.","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"     * @param name the object to be compared.","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"     * @return int priority.","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"    public int compareTo(Name name) {","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"        return this.fullName.compareTo(name.fullName);","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"                \u0026\u0026 fullName.equalsIgnoreCase(((Name) other).fullName)); // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lywich":15,"PROGRAMMERHAO":1,"-":53,"joyngjr":4}},{"path":"src/main/java/seedu/task/model/task/NameContainsAllKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.util.StringUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":" * Tests that a {@code Task}\u0027s {@code Name} matches all of the keywords given.","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class NameContainsAllKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private final List\u003cString\u003e keyphrases;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public NameContainsAllKeywordsPredicate(List\u003cString\u003e keyphrases) {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.keyphrases \u003d keyphrases;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return keyphrases.stream().allMatch(keyphrase -\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"            StringUtil.containsIgnoreCase(task.getName().toString(), keyphrase));","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public List\u003cString\u003e getKeyphrases() {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this.keyphrases;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"            || (other instanceof NameContainsAllKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"            \u0026\u0026 keyphrases.equals(((NameContainsAllKeywordsPredicate) other).keyphrases)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"PROGRAMMERHAO":34,"joyngjr":1}},{"path":"src/main/java/seedu/task/model/task/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.util.StringUtil;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":" * Tests that a {@code Task}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"    private final String keyphrase;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"    public NameContainsKeywordsPredicate(String keyphrase) {","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"        this.keyphrase \u003d keyphrase;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"        return StringUtil.containsIgnoreCase(task.getName().fullName, keyphrase);","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"                \u0026\u0026 keyphrase.equals(((NameContainsKeywordsPredicate) other).keyphrase)); // state check","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Huggenguggen":6,"lywich":5,"-":17}},{"path":"src/main/java/seedu/task/model/task/SameEffortPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":" * Tests that a {@code Task}\u0027s {@code Effort} matches input effort level.","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"public class SameEffortPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"    private Effort effort;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"    public SameEffortPredicate(Effort effort) {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"        this.effort \u003d effort;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"        return task.getEffort().equals(this.effort);","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"                || (other instanceof SameEffortPredicate // instanceof handles nulls","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"                \u0026\u0026 effort.equals(((SameEffortPredicate) other).effort)); // state check","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"joyngjr":25}},{"path":"src/main/java/seedu/task/model/task/SimpleTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":" * Represents a Simple Task without dates in the task book.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"public class SimpleTask extends Task {","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"    public SimpleTask(Name name, Description description, Set\u003cTag\u003e tags, Effort effort) {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"        super(name, description, tags, effort);","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Overload the constructor to take in a {@code subtasks} field","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public SimpleTask(Name name, Description description, Set\u003cTag\u003e tags, Effort effort, List\u003cSubtask\u003e subtasks) {","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"        super(name, description, tags, effort, subtasks);","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"    public boolean isSimpleTask() {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"        return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"    public boolean isDeadline() {","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"    public boolean isEvent() {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"    public boolean isComingUp() {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"        return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"     * Compares tasks to get their position in a sorted list.","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"     * If task is a SimpleTask instance, the task with lesser tags should be higher up on the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"     * If tags size is the same, compare the name lexicographically.","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"     * If task is a deadline or event, simpleTask should be higher up on the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"     * @param task the object to be compared.","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"     * @return int priority.","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"    public int compareTo(Task task) {","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"            return -1;","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"            return -1;","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"        if (this.tags.size() !\u003d task.tags.size()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"            return Integer.compare(this.tags.size(), task.tags.size());","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"        return this.name.compareTo(task.name);","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"Huggenguggen":23,"lywich":23,"PROGRAMMERHAO":8,"joyngjr":17}},{"path":"src/main/java/seedu/task/model/task/SimpleTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":" * List of SimpleTask from TaskBook","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"public class SimpleTaskList extends CategoricalTaskList {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"    private List\u003cSimpleTask\u003e taskList \u003d new ArrayList\u003cSimpleTask\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"     * Regular constructor that filters and retains SimpleTasks.","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"     * @param internalList all entries in the taskbook","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"     * @param today date command is ran","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"    public SimpleTaskList(ObservableList\u003cTask\u003e internalList, LocalDate today) {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"            isCorrectType(internalList.get(i), today);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"        Collections.sort(taskList, new SimpleTaskListComparator());","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"     * Empty constructor for use in testing.","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"     * Should not be called in normal execution.","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"    public SimpleTaskList() {}","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"    public int size() {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"     * Retrieves a SimpleTask stored at indicated index","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"     * @param index location to retrieve from","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"     * @return SimpleTask stored at location","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"    public SimpleTask get(int index) {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"     * Checks if Task from records is a SimpleTask","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"     * @param t Current task to check","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"     * @param d Date command is ran","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"     * @return boolean value indicating if it is a simpleTask","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"    public boolean isCorrectType(Task t, LocalDate d) {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"        if (t.isSimpleTask()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"            SimpleTask s \u003d (SimpleTask) t;","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"            taskList.add(s);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"        return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"            return true;","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"        } else if (other instanceof SimpleTaskList) {","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"            SimpleTaskList list \u003d (SimpleTaskList) other;","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"            return taskList.equals(list.taskList);","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"        } else {","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"            return false;","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"     * Utility class to help order tasks in descending order of effort required.","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"    public static class SimpleTaskListComparator implements Comparator\u003cSimpleTask\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"        public int compare(SimpleTask o1, SimpleTask o2) {","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"            int position \u003d (int) (o2.getEffortValue() - o1.getEffortValue());","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"            return position;","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":87}},{"path":"src/main/java/seedu/task/model/task/StartupTaskWithinTimelinePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":" * Tests that a {@code Task}\u0027s {@code Deadline} or {@code to} matches any of the keywords given.","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"public class StartupTaskWithinTimelinePredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"    public StartupTaskWithinTimelinePredicate() {","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"        return task.isComingUp();","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"        return other \u003d\u003d this; // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Huggenguggen":23}},{"path":"src/main/java/seedu/task/model/task/Subtask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":" * Represents a subtask in the task book.","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class Subtask {","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"    // Identity fields","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"    protected Name name;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"    protected Description description;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Name, Description and Tag must be present and not null.","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Effort may or may not be null. If null, default value will be used.","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * alertWindow is generated with default values.","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * plannedDate will always be initialised with a placeholder value, indicating that value is not ready.","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public Subtask(Name name, Description description) {","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireAllNonNull(name, description);","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public Name getName() {","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return name;","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public Description getDescription() {","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return description;","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Returns true if both tasks have the same name.","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean isSameTask(Subtask otherTask) {","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"            \u0026\u0026 otherTask.getName().equals(getName());","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean hasDescription() {","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return description.getHasDescription();","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (!(other instanceof Subtask)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Subtask otherTask \u003d (Subtask) other;","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"            \u0026\u0026 otherTask.getDescription().equals(getDescription());","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return Objects.hash(name, description);","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String toString() {","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"        builder.append(getName())","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"            .append(\"; Description: \")","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"PROGRAMMERHAO"},"content":"            .append(getDescription());","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"PROGRAMMERHAO":92}},{"path":"src/main/java/seedu/task/model/task/TagsContainsAllKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.util.StringUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":" * Tests that any of a {@code Task}\u0027s {@code Tags} matches any of the keywords given.","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class TagsContainsAllKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private final List\u003cString\u003e keyphrases;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public TagsContainsAllKeywordsPredicate(List\u003cString\u003e keyphrases) {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.keyphrases \u003d keyphrases;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return keyphrases.stream().allMatch(keyphrase -\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"           StringUtil.containsIgnoreCase(task.getTags().toString(), keyphrase));","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"            || (other instanceof TagsContainsAllKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"            \u0026\u0026 keyphrases.equals(((TagsContainsAllKeywordsPredicate) other).keyphrases)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"PROGRAMMERHAO":31}},{"path":"src/main/java/seedu/task/model/task/TagsContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.util.List;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.commons.util.StringUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":" * Tests that any of a {@code Task}\u0027s {@code Tags} matches any of the keywords given.","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"public class TagsContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"    private final List\u003cString\u003e keyphrases;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"    public TagsContainsKeywordsPredicate(List\u003cString\u003e keyphrases) {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"        this.keyphrases \u003d keyphrases;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"        return keyphrases.stream().anyMatch(keyphrase -\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"                task.getTags().stream().anyMatch(tag -\u003e StringUtil.containsIgnoreCase(tag.tagName, keyphrase)));","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"                || (other instanceof TagsContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"                \u0026\u0026 keyphrases.equals(((TagsContainsKeywordsPredicate) other).keyphrases)); // state check","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"Huggenguggen":31}},{"path":"src/main/java/seedu/task/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.core.index.Index;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":" * Represents a Task in the task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"    protected Name name;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"    protected Description description;","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"    protected Duration alertWindow;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"    protected final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"    protected Effort effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"    protected UniqueSubtaskList subtasks \u003d new UniqueSubtaskList();","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"     * Name, Description and Tag must be present and not null.","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"     * Effort may or may not be null. If null, default value will be used.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"     * alertWindow is generated with default values.","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"     * plannedDate will always be initialised with a placeholder value, indicating that value is not ready.","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"    public Task(Name name, Description description, Set\u003cTag\u003e tags, Effort effort) {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"        requireAllNonNull(name, description, tags);","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"        this.effort \u003d effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"        this.alertWindow \u003d Duration.ofHours(24);","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Overload the constructor with an additional field of subtasks","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public Task(Name name, Description description, Set\u003cTag\u003e tags, Effort effort, List\u003cSubtask\u003e subtasks) {","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireAllNonNull(name, description, tags);","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.effort \u003d effort;","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.alertWindow \u003d Duration.ofHours(24);","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.subtasks.setSubtasks(subtasks);","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"    public boolean hasDescription() {","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"        return description.getHasDescription();","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"    public Description getDescription() {","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"        return description;","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"Huggenguggen"},"content":"    public Duration getAlertWindow() {","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"        return alertWindow;","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"Huggenguggen"},"content":"    public void setAlertWindow(Duration newAlertWindow) {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"        this.alertWindow \u003d newAlertWindow;","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Adds a non-null subtask to the list","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param subtask A subtask to be added","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void addSubtask(Subtask subtask) {","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireAllNonNull(subtask);","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"        subtasks.addSubtask(subtask);","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Removes a subtask from the list","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param index The position where the subtask is","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void removeSubtask(Index index) {","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Subtask subtask \u003d this.subtasks.getSubtask(index.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"PROGRAMMERHAO"},"content":"        subtasks.remove(subtask);","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Gets the subtasks as an {@code unmodifiableObservableList}","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return An UnmodifiableObservableList","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public ObservableList\u003cSubtask\u003e getSubtasks() {","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this.subtasks.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Gets the subtasks as the {@code uniqueSubtaskList}","lastModifiedDate":"2023-03-21"},{"lineNumber":118,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public UniqueSubtaskList getSubtasksAsOriginal() {","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this.subtasks;","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":123,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":125,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Change the subtask list to String format to be displayed later","lastModifiedDate":"2023-03-21"},{"lineNumber":126,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return A string description of subtasks","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":128,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String formatSubtasks() {","lastModifiedDate":"2023-03-21"},{"lineNumber":129,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (hasSubtasks()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"PROGRAMMERHAO"},"content":"            StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"PROGRAMMERHAO"},"content":"            int index \u003d 1;","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"PROGRAMMERHAO"},"content":"            output.append(\"\\n\");","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"PROGRAMMERHAO"},"content":"            for (Subtask subtask: subtasks) {","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"PROGRAMMERHAO"},"content":"                output.append(index);","lastModifiedDate":"2023-03-21"},{"lineNumber":135,"author":{"gitId":"PROGRAMMERHAO"},"content":"                output.append(\". \");","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"PROGRAMMERHAO"},"content":"                output.append(subtask);","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"PROGRAMMERHAO"},"content":"                output.append(\"\\n\");","lastModifiedDate":"2023-03-21"},{"lineNumber":138,"author":{"gitId":"PROGRAMMERHAO"},"content":"                index +\u003d 1;","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":140,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return output.toString();","lastModifiedDate":"2023-03-21"},{"lineNumber":141,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":142,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return \"There is no subsection\";","lastModifiedDate":"2023-03-21"},{"lineNumber":143,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":144,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":145,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":146,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Checks if there is at least one task in the list of subtasks","lastModifiedDate":"2023-03-21"},{"lineNumber":147,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return True or False","lastModifiedDate":"2023-03-21"},{"lineNumber":148,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":149,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean hasSubtasks() {","lastModifiedDate":"2023-03-21"},{"lineNumber":150,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (this.subtasks !\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":151,"author":{"gitId":"PROGRAMMERHAO"},"content":"            if (subtasks.size() \u003e 0) {","lastModifiedDate":"2023-03-21"},{"lineNumber":152,"author":{"gitId":"PROGRAMMERHAO"},"content":"                return true;","lastModifiedDate":"2023-03-21"},{"lineNumber":153,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":154,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":155,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":156,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":157,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":158,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":159,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Gets the size of the subtask list in this task","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return An integer representing the subtask size","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public int getSubtaskSize() {","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this.subtasks.size();","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":165,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"joyngjr"},"content":"    public Effort getEffort() {","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"joyngjr"},"content":"        return this.effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"joyngjr"},"content":"    public long getEffortValue() {","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"joyngjr"},"content":"        return this.effort.getEffort();","lastModifiedDate":"2023-03-22"},{"lineNumber":172,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":173,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"lywich"},"content":"     * Returns true if both tasks have the same name.","lastModifiedDate":"2023-02-18"},{"lineNumber":176,"author":{"gitId":"lywich"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":178,"author":{"gitId":"lywich"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2023-02-18"},{"lineNumber":179,"author":{"gitId":"lywich"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2023-02-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":183,"author":{"gitId":"lywich"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2023-02-18"},{"lineNumber":184,"author":{"gitId":"joyngjr"},"content":"                \u0026\u0026 this.name.hasSameName(otherTask.name);","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":187,"author":{"gitId":"joyngjr"},"content":"    public abstract boolean isSimpleTask();","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"joyngjr"},"content":"    public abstract boolean isDeadline();","lastModifiedDate":"2023-03-14"},{"lineNumber":190,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":191,"author":{"gitId":"joyngjr"},"content":"    public abstract boolean isEvent();","lastModifiedDate":"2023-03-14"},{"lineNumber":192,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":195,"author":{"gitId":"lywich"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2023-02-18"},{"lineNumber":196,"author":{"gitId":"lywich"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":204,"author":{"gitId":"lywich"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"lywich"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2023-02-18"},{"lineNumber":209,"author":{"gitId":"lywich"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2023-02-18"},{"lineNumber":210,"author":{"gitId":"lywich"},"content":"                \u0026\u0026 otherTask.getDescription().equals(getDescription())","lastModifiedDate":"2023-02-18"},{"lineNumber":211,"author":{"gitId":"joyngjr"},"content":"                \u0026\u0026 otherTask.getTags().equals(getTags())","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"joyngjr"},"content":"                \u0026\u0026 otherTask.getEffort().equals(getEffort());","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":215,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":216,"author":{"gitId":"Huggenguggen"},"content":"     * Returns true if end time of task is before {@code alertTime}.","lastModifiedDate":"2023-03-12"},{"lineNumber":217,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":218,"author":{"gitId":"Huggenguggen"},"content":"    public abstract boolean isComingUp();","lastModifiedDate":"2023-03-12"},{"lineNumber":219,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":223,"author":{"gitId":"joyngjr"},"content":"        return Objects.hash(name, description, tags, effort);","lastModifiedDate":"2023-03-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":230,"author":{"gitId":"lywich"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2023-02-18"},{"lineNumber":231,"author":{"gitId":"lywich"},"content":"                .append(getDescription());","lastModifiedDate":"2023-02-18"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":241,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":242,"author":{"gitId":"lywich"},"content":"    public abstract int compareTo(Task task);","lastModifiedDate":"2023-03-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Huggenguggen":16,"lywich":31,"PROGRAMMERHAO":97,"-":75,"joyngjr":24}},{"path":"src/main/java/seedu/task/model/task/TaskWithinTimelinePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":" * Tests that a {@code Task}\u0027s {@code Deadline} or {@code to} matches any of the keywords given.","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"public class TaskWithinTimelinePredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"    private final Duration timeframe;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"    public TaskWithinTimelinePredicate(Duration timeframe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"        this.timeframe \u003d timeframe;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"        task.setAlertWindow(timeframe);","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"        return task.isComingUp();","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"                || (other instanceof TaskWithinTimelinePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"                \u0026\u0026 timeframe.equals(((TaskWithinTimelinePredicate) other).timeframe)); // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Huggenguggen":30}},{"path":"src/main/java/seedu/task/model/task/UniqueSubtaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":" * A list of subtasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":" * A subtask is considered unique by comparing using {@code Subtask#isSameTask(Subtask)}.","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":" * As such, adding and updating of tasks uses Subtask#isSameTask(Subtask) for equality so","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":" * as to ensure that the task being added or updated is unique in terms of identity in the","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":" * UniqueSubtaskList. However, the removal of a task uses Subtask#equals(Object) so","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":" * as to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":" *","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":" * @see Subtask#isSameTask(Subtask)","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class UniqueSubtaskList implements Iterable\u003cSubtask\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"    protected final ObservableList\u003cSubtask\u003e uniqueList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"    protected final ObservableList\u003cSubtask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"        FXCollections.unmodifiableObservableList(uniqueList);","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Adds a subtask to the list","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param add The subtask to be added","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void addSubtask(Subtask add) {","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireNonNull(add);","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (contains(add)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"        uniqueList.add(add);","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Checks whether the list contains the subtask","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param check The input to be checked against the list","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return True or False","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean contains(Subtask check) {","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireNonNull(check);","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return uniqueList.stream().anyMatch(check::isSameTask);","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Remove the subtask from the list","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param toRemove The subtask to be removed","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void remove(Subtask toRemove) {","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (!uniqueList.remove(toRemove)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Gets subtask from the list based on an index","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param index The index of the subtask in the list","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return A subtask","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public Subtask getSubtask(int index) {","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return uniqueList.get(index);","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void setSubtasks(List\u003cSubtask\u003e subtasks) {","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"        requireNonNull(subtasks);","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (!tasksAreUnique(subtasks)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"PROGRAMMERHAO"},"content":"        uniqueList.setAll(subtasks);","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return Observable list","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public ObservableList\u003cSubtask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public ObservableList\u003cSubtask\u003e asInternalList() {","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return uniqueList;","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Hash the list","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return A hash value","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return uniqueList.hashCode();","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Checks the size of the {@code uniqueList}","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return Length of the list","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public int size() {","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this.uniqueList.size();","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Creates an iterator to make the list iterable","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return An iterator","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public Iterator\u003cSubtask\u003e iterator() {","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return uniqueList.iterator();","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"PROGRAMMERHAO"},"content":"            || (other instanceof UniqueSubtaskList \u0026\u0026 uniqueList.equals(((UniqueSubtaskList) other).uniqueList));","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private boolean tasksAreUnique(List\u003cSubtask\u003e subtasks) {","lastModifiedDate":"2023-03-21"},{"lineNumber":128,"author":{"gitId":"PROGRAMMERHAO"},"content":"        for (int i \u003d 0; i \u003c subtasks.size() - 1; i++) {","lastModifiedDate":"2023-03-21"},{"lineNumber":129,"author":{"gitId":"PROGRAMMERHAO"},"content":"            for (int j \u003d i + 1; j \u003c subtasks.size(); j++) {","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"PROGRAMMERHAO"},"content":"                if (subtasks.get(i).isSameTask(subtasks.get(j))) {","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"PROGRAMMERHAO"},"content":"                }","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"PROGRAMMERHAO"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"PROGRAMMERHAO":138}},{"path":"src/main/java/seedu/task/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import java.util.List;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.Planner;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.calendar.MonthlyPlan;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":" * tasks uses Task#isSameTask(Task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a task uses Task#equals(Object) so","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":" * as to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":" *","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"     * The task must exist in the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"lywich"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"lywich"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"lywich"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"lywich"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"lywich"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":105,"author":{"gitId":"lywich"},"content":"     * Sorts the contents of this list.","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"lywich"},"content":"    public void sort() {","lastModifiedDate":"2023-03-04"},{"lineNumber":108,"author":{"gitId":"lywich"},"content":"        FXCollections.sort(internalList, Task::compareTo);","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":111,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"lywich"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"lywich"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"lywich"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"joyngjr"},"content":"     * Main algorithm that supports the planning function","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"joyngjr"},"content":"     * @param workload amount of effort user wants to put in per day in the workplan.","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"joyngjr"},"content":"    public void plan(long workload, Planner planner) {","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"joyngjr"},"content":"        LocalDate currentDate \u003d java.time.LocalDate.now();","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"joyngjr"},"content":"        SimpleTaskList simpleTasks \u003d filterSimpleTasks(currentDate);","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"joyngjr"},"content":"        EventList events \u003d filterEvents(currentDate);","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"joyngjr"},"content":"        DeadlineList deadlines \u003d filterDeadlines(currentDate);","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"joyngjr"},"content":"        MonthlyPlan plan \u003d new MonthlyPlan(workload, currentDate);","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"joyngjr"},"content":"        plan.allocateEvents(events);","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"joyngjr"},"content":"        plan.allocateDeadlines(deadlines);","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"joyngjr"},"content":"        plan.allocateSimpleTasks(simpleTasks);","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"joyngjr"},"content":"        planner.setDailyPlans(plan.getDailyPlans());","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":137,"author":{"gitId":"lywich"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-02-18"},{"lineNumber":138,"author":{"gitId":"lywich"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"lywich"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"lywich"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"lywich"},"content":"            || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"lywich"},"content":"            \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":147,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":148,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":149,"author":{"gitId":"lywich"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"lywich"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-02-18"},{"lineNumber":151,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":152,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":153,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":154,"author":{"gitId":"lywich"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":155,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":156,"author":{"gitId":"lywich"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"lywich"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"lywich"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-02-18"},{"lineNumber":159,"author":{"gitId":"lywich"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2023-02-18"},{"lineNumber":160,"author":{"gitId":"lywich"},"content":"                    return false;","lastModifiedDate":"2023-02-18"},{"lineNumber":161,"author":{"gitId":"lywich"},"content":"                }","lastModifiedDate":"2023-02-18"},{"lineNumber":162,"author":{"gitId":"lywich"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":163,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":164,"author":{"gitId":"lywich"},"content":"        return true;","lastModifiedDate":"2023-02-18"},{"lineNumber":165,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":166,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"joyngjr"},"content":"    public SimpleTaskList filterSimpleTasks(LocalDate d) {","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"joyngjr"},"content":"        return new SimpleTaskList(this.internalList, d);","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"joyngjr"},"content":"    public DeadlineList filterDeadlines(LocalDate d) {","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"joyngjr"},"content":"        return new DeadlineList(this.internalList, d);","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"joyngjr"},"content":"    public EventList filterEvents(LocalDate d) {","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"joyngjr"},"content":"        return new EventList(this.internalList, d);","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"lywich":143,"PROGRAMMERHAO":2,"joyngjr":33}},{"path":"src/main/java/seedu/task/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model.task.exceptions;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":" * Signals that the operation will result in duplicate Tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":" * identity).","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"lywich":11}},{"path":"src/main/java/seedu/task/model/task/exceptions/InvalidEffortException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.task.exceptions;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":" * Signals that the amount of effort user keyed in is invalid.","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"public class InvalidEffortException extends RuntimeException {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"    public static final String INVALID_EFFORT_MESSAGE \u003d \"Effort entered for task must not be negative\";","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"    public InvalidEffortException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"        super(INVALID_EFFORT_MESSAGE);","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"joyngjr":13}},{"path":"src/main/java/seedu/task/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model.task.exceptions;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"lywich":6}},{"path":"src/main/java/seedu/task/model/tracker/TagComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.tracker;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":" * Encapsulate a tag-occurrence unit to facilitate sorting","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"public class TagComparator implements Comparable\u003cTagComparator\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"    private Tag name;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"    private int occurrences;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"     * Creates an instance of tag-pair entity","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"     * @param name","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"     * @param occurrences","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"    public TagComparator(Tag name, int occurrences) {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"        this.occurrences \u003d occurrences;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"    public String getName() {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"        return this.name.toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"    public int getOccurrences() {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"        return this.occurrences;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"    public int compareTo(TagComparator o) {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"        return o.occurrences - this.occurrences;","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"joyngjr":35}},{"path":"src/main/java/seedu/task/model/tracker/TaskByTagTracker.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.tracker;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import java.util.PriorityQueue;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":" * Implementation of the stats feature to sort by occurrences of each tag.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"public class TaskByTagTracker {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"     * Outputs in descending order the most frequent tag and its corresponding number of occurrence.","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"     * @param model interface to obtain data from","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"     * @return output to be printed","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"    public static String sort(Model model) {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"        int size \u003d lastShownList.size();","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"        HashMap\u003cTag, Integer\u003e counter \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"            Set\u003cTag\u003e tagSet \u003d lastShownList.get(i).getTags();","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"            Iterator\u003cTag\u003e itr \u003d tagSet.iterator();","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"            while (itr.hasNext()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"                counter \u003d editHashMap(counter, itr.next());","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"        String output \u003d orderAndPrint(counter);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"        return output;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"    private static String orderAndPrint(HashMap\u003cTag, Integer\u003e counter) {","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        PriorityQueue\u003cTagComparator\u003e ordering \u003d createOrdering(counter);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"        int idx \u003d 0;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"        int tags \u003d ordering.size();","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"        while (idx \u003c 10 \u0026\u0026 tags \u003e 0) {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"            TagComparator tc \u003d ordering.poll();","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"            output \u003d appendToBack(output, idx, tc);","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"            tags--;","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"            idx++;","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"        return output;","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"    private static HashMap\u003cTag, Integer\u003e editHashMap(HashMap\u003cTag, Integer\u003e hm, Tag tag) {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"        if (hm.containsKey(tag)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"            int tagCount \u003d hm.remove(tag);","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"            hm.put(tag, tagCount + 1);","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"        } else {","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"            hm.put(tag, 1);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"        return hm;","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"    private static PriorityQueue\u003cTagComparator\u003e createOrdering(HashMap\u003cTag, Integer\u003e counter) {","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"        PriorityQueue\u003cTagComparator\u003e ordering \u003d new PriorityQueue\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"        for (Map.Entry\u003cTag, Integer\u003e entry : counter.entrySet()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"            ordering.add(new TagComparator(entry.getKey(), entry.getValue()));","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"        return ordering;","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"    private static String appendToBack(String str, int idx, TagComparator tc) {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"        return str + (idx + 1) + \". \" + tc.getName() + \" (count: \" + tc.getOccurrences() + \")\\n\";","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"joyngjr":76}},{"path":"src/main/java/seedu/task/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model.util;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.Planner;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.ReadOnlyPlanner;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import seedu.task.model.TaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.calendar.DailyPlan;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Description;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.SimpleTask;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":" * Contains utility methods for populating {@code TaskBook} and {@code Planner} with sample data.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"        return new Task[] {","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"            new SimpleTask(new Name(\"Task A\"), new Description(\"A\u0027s description\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"                getTagSet(\"CS2102\"), new Effort(5)),","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"            new SimpleTask(new Name(\"Task B\"), new Description(\"B\u0027s description\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"                getTagSet(\"CS2102\", \"Project\"), new Effort(6)),","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"            new SimpleTask(new Name(\"Task C\"), new Description(\"C\u0027s description\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"                getTagSet(\"CS2106\", \"Project\"), new Effort(2)),","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"            new SimpleTask(new Name(\"Task D\"), new Description(\"D\u0027s description\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"                getTagSet(\"CS2106\"), new Effort(0)),","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"            new SimpleTask(new Name(\"Task I\"), new Description(\"I\u0027s description\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"                getTagSet(\"CS2103T\"), new Effort(10)),","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"            new SimpleTask(new Name(\"Task R\"), new Description(\"R\u0027s description\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"                getTagSet(\"CS2101\"), new Effort(2)),","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"            new SimpleTask(new Name(\"Task Z\"), new Description(),","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"                getTagSet(\"NoDescription\"), new Effort(2))","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"    public static ReadOnlyTaskBook getSampleTaskBook() {","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"        TaskBook sampleAb \u003d new TaskBook();","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"            sampleAb.addTask(sampleTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"     * Creates a 30-day sample daily plan","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"    public static DailyPlan[] getSampleDailyPlan() {","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"        LocalDate startDate \u003d LocalDate.now();","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"        DailyPlan[] dailyPlans \u003d new DailyPlan[30];","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c 30; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"            dailyPlans[i] \u003d new DailyPlan(5, startDate.plusDays(i));","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"        return dailyPlans;","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"     * Stores generated daily plans in a Planner","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"    public static ReadOnlyPlanner getSamplePlanner() {","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"        Planner sample \u003d new Planner();","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"        for (DailyPlan samplePlan : getSampleDailyPlan()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"            sample.addDailyPlan(samplePlan);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"        return sample;","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"lywich":14,"-":26,"joyngjr":43}},{"path":"src/main/java/seedu/task/storage/JsonAdaptedDailyPlan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.calendar.DailyPlan;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":" * Jackson-friendly version of {@link DailyPlan}.","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"public class JsonAdaptedDailyPlan {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"DailyPlan\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"    public static final String NEGATIVE_FIELD_MESSAGE_FORMAT \u003d \"DailyPlan\u0027s %s field must be non-negative!\";","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"    private final List\u003cJsonAdaptedTask\u003e task \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"    private long desiredWorkload;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"    private long currentWorkload;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    private String date;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"     * Constructs a {@code JsonAdaptedDailyPlan} with the given Daily Plan details.","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"    public JsonAdaptedDailyPlan(@JsonProperty(\"task\") List\u003cJsonAdaptedTask\u003e task,","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"                                @JsonProperty(\"desiredWorkload\") Long desiredWorkload,","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"                                @JsonProperty(\"currentWorkload\") Long currentWorkload,","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"                                @JsonProperty(\"date\") String date) {","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"        this.task.addAll(task);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"        if (desiredWorkload !\u003d null) {","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"            this.desiredWorkload \u003d desiredWorkload;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"        if (currentWorkload !\u003d null) {","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"            this.currentWorkload \u003d currentWorkload;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"     * Converts a given {@code DailyPlan} into this class for Jackson use","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"    public JsonAdaptedDailyPlan(DailyPlan source) {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"        task.addAll(source.getTasks().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"                .map(JsonAdaptedTask::new)","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"        desiredWorkload \u003d source.getDesiredWorkload();","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"        currentWorkload \u003d source.getCurrentWorkload();","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"        date \u003d source.getDate().toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"     * Converts this DailyPlan object to model\u0027s {@code DailyPlan} object.","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted DailyPlan.","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"    public DailyPlan toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"        final ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"        for (JsonAdaptedTask t : task) {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"            tasksList.add(t.toModelType());","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"        if (desiredWorkload \u003c 0) {","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"            throw new IllegalValueException(String.format(NEGATIVE_FIELD_MESSAGE_FORMAT, \"Desired Workload\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"        if (currentWorkload \u003c 0) {","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"            throw new IllegalValueException(String.format(NEGATIVE_FIELD_MESSAGE_FORMAT, \"Current Workload\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"        if (Objects.isNull(date) || date \u003d\u003d \"\") {","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Date\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"        LocalDate actualDate \u003d LocalDate.parse(date);","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"        return new DailyPlan(tasksList, desiredWorkload, currentWorkload, actualDate);","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"joyngjr"},"content":"            return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"joyngjr"},"content":"        } else if (!(other instanceof JsonAdaptedDailyPlan)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"joyngjr"},"content":"            return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"joyngjr"},"content":"        } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"joyngjr"},"content":"            JsonAdaptedDailyPlan dp \u003d (JsonAdaptedDailyPlan) other;","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"joyngjr"},"content":"            return dp.task.equals(this.task)","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"joyngjr"},"content":"                    \u0026\u0026 dp.desiredWorkload \u003d\u003d this.desiredWorkload","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"joyngjr"},"content":"                    \u0026\u0026 dp.currentWorkload \u003d\u003d this.currentWorkload","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"joyngjr"},"content":"                    \u0026\u0026 dp.date \u003d\u003d this.date;","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":102}},{"path":"src/main/java/seedu/task/storage/JsonAdaptedSubtask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Description;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Subtask;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":" * Jackson-friendly version of {@link Subtask}.","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class JsonAdaptedSubtask {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private final String name;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private final String description;","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private final String hasDescription;","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Constructs a {@code JsonAdaptedHomework} with the given homework details.","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public JsonAdaptedSubtask(@JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"                              @JsonProperty(\"description\") String description,","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"                              @JsonProperty(\"hasDescription\") String hasDescription) {","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.hasDescription \u003d String.valueOf(hasDescription);","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Converts a given {@code Homework} into this class for Jackson use.","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public JsonAdaptedSubtask(Subtask source) {","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.name \u003d source.getName().fullName;","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.description \u003d source.getDescription().value;","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.hasDescription \u003d String.valueOf(source.hasDescription());","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @JsonProperty(\"name\")","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return name;","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @JsonProperty(\"description\")","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return description;","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Converts this Jackson-friendly adapted homework object into the model\u0027s {@code Homework} object.","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public Subtask toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (description \u003d\u003d null","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"            || hasDescription.equals(\"null\")) {","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"                Description.class.getSimpleName()));","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (Boolean.parseBoolean(hasDescription)","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"            \u0026\u0026 !Description.isValidDescription(description)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"        final Description modelDescription;","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (Boolean.parseBoolean(hasDescription)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"            modelDescription \u003d new Description(description);","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"PROGRAMMERHAO"},"content":"        } else {","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"            modelDescription \u003d new Description();","lastModifiedDate":"2023-03-25"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Subtask subtask \u003d new Subtask(modelName, modelDescription);","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return subtask;","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"PROGRAMMERHAO":95}},{"path":"src/main/java/seedu/task/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lywich":3,"-":45}},{"path":"src/main/java/seedu/task/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import java.util.List;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Date;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Deadline;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Description;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Event;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.SimpleTask;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Subtask;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.exceptions.InvalidEffortException;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"    public static final String DEADLINE_EVENT_OVERLAP \u003d \"You can only declare a deadline or an event!\";","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"    private final String name;","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"    private final String description;","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"    private final String hasDescription;","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"    private String deadline \u003d \"\";","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"    private String from \u003d \"\";","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"    private String to \u003d \"\";","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"    private long effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"    private String alertWindow \u003d \"\";","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private final List\u003cJsonAdaptedSubtask\u003e subtaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"    public JsonAdaptedTask(@JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"                           @JsonProperty(\"description\") String description,","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"                           @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"                           @JsonProperty(\"deadline\") String deadline,","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"                           @JsonProperty(\"from\") String from,","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"                           @JsonProperty(\"to\") String to,","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"                           @JsonProperty(\"effort\") Long effort,","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"                           @JsonProperty(\"subtasks\") List\u003cJsonAdaptedSubtask\u003e subtaskList,","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"                           @JsonProperty(\"alertWindow\") String alertWindow,","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"                           @JsonProperty(\"hasDescription\") String hasDescription) {","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"        this.hasDescription \u003d String.valueOf(hasDescription);","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"        if (deadline !\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"        if (from !\u003d null \u0026\u0026 to !\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"Huggenguggen"},"content":"            this.from \u003d from;","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"Huggenguggen"},"content":"            this.to \u003d to;","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"        this.effort \u003d effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"        if (alertWindow !\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"Huggenguggen"},"content":"            this.alertWindow \u003d alertWindow;","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"        if (subtaskList !\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"            this.subtaskList.addAll(subtaskList);","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"lywich"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"lywich"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"lywich"},"content":"        description \u003d source.getDescription().value;","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"        hasDescription \u003d String.valueOf(source.hasDescription());","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"        subtaskList.addAll(source.getSubtasks().stream()","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"PROGRAMMERHAO"},"content":"            .map(JsonAdaptedSubtask::new)","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"PROGRAMMERHAO"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"Huggenguggen"},"content":"        if (source instanceof Deadline) {","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"Huggenguggen"},"content":"            deadline \u003d ((Deadline) source).getDeadline().getValue();","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"Huggenguggen"},"content":"        if (source instanceof Event) {","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"Huggenguggen"},"content":"            Event tmp \u003d (Event) source;","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"Huggenguggen"},"content":"            from \u003d tmp.getFrom().getValue();","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"Huggenguggen"},"content":"            to \u003d tmp.getTo().getValue();","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"joyngjr"},"content":"        effort \u003d source.getEffort().getEffort();","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"Huggenguggen"},"content":"        alertWindow \u003d String.valueOf(source.getAlertWindow().toHours());","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"lywich"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"lywich"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"lywich"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"lywich"},"content":"        final List\u003cTag\u003e taskTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"lywich"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"lywich"},"content":"            taskTags.add(tag.toModelType());","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"lywich"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"lywich"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"lywich"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"lywich"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"lywich"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"lywich"},"content":"        if (description \u003d\u003d null || hasDescription.equals(\"null\")) {","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"lywich"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"lywich"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"lywich"},"content":"        if (Boolean.parseBoolean(hasDescription) \u0026\u0026 !Description.isValidDescription(description)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"lywich"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":137,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"lywich"},"content":"        final Description modelDescription;","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"lywich"},"content":"        if (Boolean.parseBoolean(hasDescription)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"lywich"},"content":"            modelDescription \u003d new Description(description);","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"lywich"},"content":"        } else {","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"lywich"},"content":"            modelDescription \u003d new Description();","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"lywich"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(taskTags);","lastModifiedDate":"2023-02-18"},{"lineNumber":147,"author":{"gitId":"Huggenguggen"},"content":"        if (!deadline.equals(\"\") \u0026\u0026 (!from.equals(\"\") || !to.equals(\"\"))) {","lastModifiedDate":"2023-03-01"},{"lineNumber":148,"author":{"gitId":"Huggenguggen"},"content":"            throw new IllegalValueException(String.format(DEADLINE_EVENT_OVERLAP));","lastModifiedDate":"2023-03-01"},{"lineNumber":149,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":150,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":151,"author":{"gitId":"Huggenguggen"},"content":"        if (!deadline.equals(\"\") \u0026\u0026 !Date.isValidDate(deadline)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":152,"author":{"gitId":"Huggenguggen"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":153,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"Huggenguggen"},"content":"        if (alertWindow \u003d\u003d null || alertWindow.isBlank()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"Huggenguggen"},"content":"            alertWindow \u003d \"24\";","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"Huggenguggen"},"content":"        // if either from or to are non-empty check formatting","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"Huggenguggen"},"content":"        if (!from.equals(\"\") || !to.equals(\"\")) {","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"Huggenguggen"},"content":"            // if either of them are empty AND","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"Huggenguggen"},"content":"            // either of them are invalid date formats (this will be true if either of them are empty)","lastModifiedDate":"2023-03-01"},{"lineNumber":161,"author":{"gitId":"Huggenguggen"},"content":"            if ((from.equals(\"\") || to.equals(\"\")) \u0026\u0026 (!Date.isValidDate(from) || !Date.isValidDate(to))) {","lastModifiedDate":"2023-03-01"},{"lineNumber":162,"author":{"gitId":"Huggenguggen"},"content":"                throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":163,"author":{"gitId":"Huggenguggen"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":164,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":165,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"joyngjr"},"content":"        if (effort \u003c 0) {","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"joyngjr"},"content":"            throw new InvalidEffortException();","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"joyngjr"},"content":"        final Effort modelEffort \u003d new Effort(this.effort);","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"PROGRAMMERHAO"},"content":"        final List\u003cSubtask\u003e modelSubtaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-21"},{"lineNumber":172,"author":{"gitId":"PROGRAMMERHAO"},"content":"        for (JsonAdaptedSubtask subtask : subtaskList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":173,"author":{"gitId":"PROGRAMMERHAO"},"content":"            modelSubtaskList.add(subtask.toModelType());","lastModifiedDate":"2023-03-21"},{"lineNumber":174,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":175,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":176,"author":{"gitId":"Huggenguggen"},"content":"        if (Date.isValidDate(deadline)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":177,"author":{"gitId":"joyngjr"},"content":"            // Deadline","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"Huggenguggen"},"content":"            Date modelDeadline \u003d new Date(deadline);","lastModifiedDate":"2023-03-01"},{"lineNumber":179,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Deadline deadline \u003d new Deadline(modelName, modelDescription,","lastModifiedDate":"2023-03-21"},{"lineNumber":180,"author":{"gitId":"PROGRAMMERHAO"},"content":"                modelTags, modelDeadline, modelEffort, modelSubtaskList);","lastModifiedDate":"2023-03-21"},{"lineNumber":181,"author":{"gitId":"Huggenguggen"},"content":"            deadline.setAlertWindow(Duration.ofHours(Long.valueOf(alertWindow)));","lastModifiedDate":"2023-03-12"},{"lineNumber":182,"author":{"gitId":"Huggenguggen"},"content":"            return deadline;","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":185,"author":{"gitId":"Huggenguggen"},"content":"        if (Date.isValidDate(from) \u0026\u0026 Date.isValidDate(to)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":186,"author":{"gitId":"joyngjr"},"content":"            // Event","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"Huggenguggen"},"content":"            Date modelFrom \u003d new Date(from);","lastModifiedDate":"2023-03-01"},{"lineNumber":188,"author":{"gitId":"Huggenguggen"},"content":"            Date modelTo \u003d new Date(to);","lastModifiedDate":"2023-03-01"},{"lineNumber":189,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Event event \u003d new Event(modelName, modelDescription,","lastModifiedDate":"2023-03-21"},{"lineNumber":191,"author":{"gitId":"PROGRAMMERHAO"},"content":"                modelTags, modelFrom, modelTo, modelEffort, modelSubtaskList);","lastModifiedDate":"2023-03-21"},{"lineNumber":192,"author":{"gitId":"Huggenguggen"},"content":"            event.setAlertWindow(Duration.ofHours(Long.valueOf(alertWindow)));","lastModifiedDate":"2023-03-12"},{"lineNumber":193,"author":{"gitId":"Huggenguggen"},"content":"            return event;","lastModifiedDate":"2023-03-12"},{"lineNumber":194,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":195,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"joyngjr"},"content":"        // Simple Task","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"PROGRAMMERHAO"},"content":"        SimpleTask simpleTask \u003d new SimpleTask(modelName, modelDescription, modelTags, modelEffort, modelSubtaskList);","lastModifiedDate":"2023-03-21"},{"lineNumber":198,"author":{"gitId":"Huggenguggen"},"content":"        simpleTask.setAlertWindow(Duration.ofHours(Long.valueOf(alertWindow)));","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"Huggenguggen"},"content":"        return simpleTask;","lastModifiedDate":"2023-03-12"},{"lineNumber":200,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":202,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":203,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"Huggenguggen":59,"lywich":90,"PROGRAMMERHAO":23,"joyngjr":31}},{"path":"src/main/java/seedu/task/storage/JsonPlannerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.core.LogsCenter;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.util.FileUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.util.JsonUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.ReadOnlyPlanner;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":" * A class to access Planner data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"public class JsonPlannerStorage implements PlannerStorage {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPlannerStorage.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"    public JsonPlannerStorage(Path filePath) {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    public Path getPlannerFilePath() {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"        return filePath;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"     * Similar to {@link #readPlanner()}.","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"    public Optional\u003cReadOnlyPlanner\u003e readPlanner(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"        Optional\u003cJsonSerializablePlanner\u003e jsonPlanner \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"                filePath, JsonSerializablePlanner.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"        if (!jsonPlanner.isPresent()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"            return Optional.of(jsonPlanner.get().toModelType());","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"    public Optional\u003cReadOnlyPlanner\u003e readPlanner() throws DataConversionException {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"        return readPlanner(filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"    public void savePlanner(ReadOnlyPlanner planner) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"        savePlanner(planner, filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"     * @see #savePlanner(ReadOnlyPlanner)","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"    public void savePlanner(ReadOnlyPlanner planner, Path filePath) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"        requireNonNull(planner);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"        JsonUtil.saveJsonFile(new JsonSerializablePlanner(planner), filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":75}},{"path":"src/main/java/seedu/task/storage/JsonSerializablePlanner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.Planner;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.ReadOnlyPlanner;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.calendar.DailyPlan;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":" * An immutable planner that is serializable to JSON format.","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"@JsonRootName(value \u003d \"planner\")","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"public class JsonSerializablePlanner {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"    private final List\u003cJsonAdaptedDailyPlan\u003e plans \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"     * Constructs a {@code JsonSerializablePlanner} with the given tasks.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"    public JsonSerializablePlanner(@JsonProperty(\"plans\") List\u003cJsonAdaptedDailyPlan\u003e plans) {","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"        this.plans.addAll(plans);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"     * Converts a given {@code ReadOnlyPlanner} into this class to use.","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTaskBook}.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"    public JsonSerializablePlanner(ReadOnlyPlanner source) {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"        plans.addAll(source.getDailyPlanList().stream().map(JsonAdaptedDailyPlan::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"     * Converts this planner into the model\u0027s {@code Planner} object.","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"    public Planner toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"        Planner planner \u003d new Planner();","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"        for (JsonAdaptedDailyPlan jsonAdaptedDailyPlan : plans) {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"            DailyPlan plan \u003d jsonAdaptedDailyPlan.toModelType();","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"            planner.addDailyPlan(plan);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"        return planner;","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":54}},{"path":"src/main/java/seedu/task/storage/JsonSerializableTaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import java.util.List;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import seedu.task.model.TaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":" * An Immutable TaskBook that is serializable to JSON format.","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"@JsonRootName(value \u003d \"taskbook\")","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"class JsonSerializableTaskBook {","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Tasks list contains duplicate task(s).\";","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"     * Constructs a {@code JsonSerializableTaskBook} with the given tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"    public JsonSerializableTaskBook(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"     * Converts a given {@code ReadOnlyTaskBook} into this class for Jackson use.","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTaskBook}.","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"    public JsonSerializableTaskBook(ReadOnlyTaskBook source) {","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"     * Converts this task book into the model\u0027s {@code TaskBook} object.","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"    public TaskBook toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"        TaskBook taskBook \u003d new TaskBook();","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"            if (taskBook.hasTask(task)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"            taskBook.addTask(task);","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"        return taskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"lywich":60}},{"path":"src/main/java/seedu/task/storage/JsonTaskBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.LogsCenter;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.util.FileUtil;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.util.JsonUtil;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":" * A class to access TaskBook data stored as a json file on the hard disk.","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"public class JsonTaskBookStorage implements TaskBookStorage {","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskBookStorage.class);","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"    private Path filePath;","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"    public JsonTaskBookStorage(Path filePath) {","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"        return filePath;","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook() throws DataConversionException {","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"        return readTaskBook(filePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"     * Similar to {@link #readTaskBook()}.","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"        Optional\u003cJsonSerializableTaskBook\u003e jsonTaskBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"                filePath, JsonSerializableTaskBook.class);","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"        if (!jsonTaskBook.isPresent()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"            return Optional.empty();","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"            return Optional.of(jsonTaskBook.get().toModelType());","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook) throws IOException {","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"        saveTaskBook(taskBook, filePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"     * Similar to {@link #saveTaskBook(ReadOnlyTaskBook)}.","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook, Path filePath) throws IOException {","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"        requireNonNull(taskBook);","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskBook(taskBook), filePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"lywich":80}},{"path":"src/main/java/seedu/task/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.util.JsonUtil;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.model.UserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"lywich":5,"-":42}},{"path":"src/main/java/seedu/task/storage/PlannerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.ReadOnlyPlanner;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.calendar.DailyPlan;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":" * Represents a storage for {@link DailyPlan}.","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"public interface PlannerStorage {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"    Path getPlannerFilePath();","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"     * Returns Planner data as a {@link ReadOnlyPlanner}.","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    Optional\u003cReadOnlyPlanner\u003e readPlanner() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"     * @see #getPlannerFilePath()","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    Optional\u003cReadOnlyPlanner\u003e readPlanner(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"     * Saves the given {@link ReadOnlyPlanner} to the storage.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"     * @param plans cannot be null.","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"    void savePlanner(ReadOnlyPlanner plans) throws IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"     * @see #savePlanner(ReadOnlyPlanner)","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"    void savePlanner(ReadOnlyPlanner plans, Path filePath) throws IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":44}},{"path":"src/main/java/seedu/task/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.ReadOnlyPlanner;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import seedu.task.model.UserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":" * API of the Storage component","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"public interface Storage extends TaskBookStorage, UserPrefsStorage, PlannerStorage {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"    Optional\u003cReadOnlyTaskBook\u003e readTaskBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"    void saveTaskBook(ReadOnlyTaskBook taskBook) throws IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"    Optional\u003cReadOnlyPlanner\u003e readPlanner() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"lywich":31,"joyngjr":4}},{"path":"src/main/java/seedu/task/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.LogsCenter;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.ReadOnlyPlanner;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import seedu.task.model.UserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":" * Manages storage of TaskBook data and Planner data in local storage.","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"    private TaskBookStorage taskBookStorage;","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"    private PlannerStorage plannerStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"     * Creates a {@code StorageManager} with the given {@code TaskBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    public StorageManager(TaskBookStorage taskBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"                          PlannerStorage plannerStorage) {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"        this.taskBookStorage \u003d taskBookStorage;","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"        this.plannerStorage \u003d plannerStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"        return taskBookStorage.getTaskBookFilePath();","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook() throws DataConversionException, IOException {","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"        return readTaskBook(taskBookStorage.getTaskBookFilePath());","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"        return taskBookStorage.readTaskBook(filePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook) throws IOException {","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"        saveTaskBook(taskBook, taskBookStorage.getTaskBookFilePath());","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook, Path filePath) throws IOException {","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"        logger.fine(\"Attempting to write to task data file: \" + filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"        taskBookStorage.saveTaskBook(taskBook, filePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Planner methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"    public Path getPlannerFilePath() {","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"        return plannerStorage.getPlannerFilePath();","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"    public Optional\u003cReadOnlyPlanner\u003e readPlanner() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"joyngjr"},"content":"        return readPlanner(plannerStorage.getPlannerFilePath());","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"joyngjr"},"content":"    public Optional\u003cReadOnlyPlanner\u003e readPlanner(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"joyngjr"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"joyngjr"},"content":"        return plannerStorage.readPlanner(filePath);","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"joyngjr"},"content":"    public void savePlanner(ReadOnlyPlanner plans) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"joyngjr"},"content":"        savePlanner(plans, plannerStorage.getPlannerFilePath());","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"joyngjr"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"joyngjr"},"content":"    public void savePlanner(ReadOnlyPlanner plans, Path filePath) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"joyngjr"},"content":"        logger.fine(\"Attempting to write to planner data file: \" + filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"joyngjr"},"content":"        plannerStorage.savePlanner(plans, filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"lywich":75,"joyngjr":35}},{"path":"src/main/java/seedu/task/storage/TaskBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import seedu.task.model.TaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":" * Represents a storage for {@link TaskBook}.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"public interface TaskBookStorage {","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"     * Returns TaskBook data as a {@link ReadOnlyTaskBook}.","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"    Optional\u003cReadOnlyTaskBook\u003e readTaskBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"     * @see #getTaskBookFilePath()","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"    Optional\u003cReadOnlyTaskBook\u003e readTaskBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"     * Saves the given {@link ReadOnlyTaskBook} to the storage.","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"     * @param taskBook cannot be null.","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"    void saveTaskBook(ReadOnlyTaskBook taskBook) throws IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"     * @see #saveTaskBook(ReadOnlyTaskBook)","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"    void saveTaskBook(ReadOnlyTaskBook taskBook, Path filePath) throws IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"lywich":46}},{"path":"src/main/java/seedu/task/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import seedu.task.model.UserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":" * Represents a storage for {@link seedu.task.model.UserPrefs}.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"     * Saves the given {@link seedu.task.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"lywich":6,"-":30}},{"path":"src/main/java/seedu/task/ui/AlertListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.ui;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.commons.core.LogsCenter;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"public class AlertListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"    private static final String FXML \u003d \"AlertListPanel.fxml\";","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"    public AlertListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"        super(FXML);","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"        taskListView.setCellFactory(listView -\u003e new AlertListPanelCell());","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"    class AlertListPanelCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"                setText(null);","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"            } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Huggenguggen":49}},{"path":"src/main/java/seedu/task/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.CommandResult;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"         * @see seedu.task.logic.Logic#execute(String)","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"lywich":5,"-":80}},{"path":"src/main/java/seedu/task/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.LogsCenter;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"    public static final String USERGUIDE_URL \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"            \"https://ay2223s2-cs2103t-w13-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lywich":4,"-":99}},{"path":"src/main/java/seedu/task/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.GuiSettings;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.LogsCenter;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.Logic;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.CommandResult;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"    private AlertListPanel alertList;","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"    private StackPane alertListPlaceholder;","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"    private Label alertStatus;","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"        handleAlert();","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"lywich"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"lywich"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"Huggenguggen"},"content":"        alertList \u003d new AlertListPanel(logic.getAlertTaskList());","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"Huggenguggen"},"content":"        alertListPlaceholder.getChildren().add(alertList.getRoot());","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"Huggenguggen"},"content":"        alertStatus.setText(\"Alerts\");","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"Huggenguggen"},"content":"        alertStatus.setFont(new Font(\"Segoe UI Light\", 32));","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"Huggenguggen"},"content":"        alertStatus.setStyle(\"-fx-text-fill: white; -fx-opacity: 1; -fx-font-size: 15pt\");","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"lywich"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getTaskBookFilePath());","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"Huggenguggen"},"content":"     * Opens the alert window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":169,"author":{"gitId":"Huggenguggen"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"Huggenguggen"},"content":"    public void handleAlert() {","lastModifiedDate":"2023-03-12"},{"lineNumber":171,"author":{"gitId":"Huggenguggen"},"content":"        alertList \u003d new AlertListPanel(logic.getAlertTaskList());","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"Huggenguggen"},"content":"        alertListPlaceholder.getChildren().add(alertList.getRoot());","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":191,"author":{"gitId":"lywich"},"content":"    public TaskListPanel getTaskListPanel() {","lastModifiedDate":"2023-02-18"},{"lineNumber":192,"author":{"gitId":"lywich"},"content":"        return taskListPanel;","lastModifiedDate":"2023-02-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"lywich"},"content":"     * @see seedu.task.logic.Logic#execute(String)","lastModifiedDate":"2023-02-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"Huggenguggen"},"content":"            if (commandResult.isShowAlert()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":211,"author":{"gitId":"Huggenguggen"},"content":"                handleAlert();","lastModifiedDate":"2023-03-12"},{"lineNumber":212,"author":{"gitId":"Huggenguggen"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":213,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Huggenguggen":29,"lywich":15,"-":181}},{"path":"src/main/java/seedu/task/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lywich":1,"-":27}},{"path":"src/main/java/seedu/task/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lywich":1,"-":27}},{"path":"src/main/java/seedu/task/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.Deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.Event;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on TaskBook level 4\u003c/a\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"    public final Task task;","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"    private Label description;","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"    private Label time;","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"    @FXML","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"    private Label effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private Label subsections;","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"     * Creates a {@code TaskCode} with the given {@code Task} and index to display.","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"        name.setText(task.getName().fullName);","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"        description.setText(task.getDescription().value);","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"        time.setText(\"No specified time\");","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"        effort.setText(\"Effort: \" + task.getEffort().toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"        subsections.setText(\"Subsections: \" + task.formatSubtasks());","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"            Deadline tmp \u003d (Deadline) task;","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"            time.setText(\"Deadline: \" + tmp.getDeadline().toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"            Event tmp \u003d (Event) task;","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"            time.setText(\"From: \" + tmp.getFrom().toString() + \" to: \" + tmp.getTo().toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"        task.getTags().stream()","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"                .forEach(this::makeLabel);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"     * Returns a color code to be used for the corresponding tag name.","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"     * This process is deterministic.","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"     * @return String color code chosen.","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"lywich"},"content":"    public String chooseColor(String tagName) {","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"        String[] arr \u003d new String[] {","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"lywich"},"content":"            // Color examples courtesy of https://sashamaps.net/docs/resources/20-colors/.","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"            \"#e6194b\", \"#3cb44b\", \"#ffe119\", \"#4363d8\", \"#f58231\",","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"            \"#911eb4\", \"#46f0f0\", \"#f032e6\", \"#bcf60c\", \"#fabebe\",","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"lywich"},"content":"            \"#008080\", \"#e6beff\", \"#9a6324\", \"#fffac8\", \"#800000\",","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"lywich"},"content":"            \"#aaffc3\", \"#808000\", \"#ffd8b1\", \"#808080\", \"#ffffff\"","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"lywich"},"content":"        };","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"        int pos \u003d Math.abs(tagName.hashCode() % arr.length);","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"        return arr[pos];","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"lywich"},"content":"     * Chooses a color to be used to display tags based on the hashcode of the tag\u0027s name.","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"lywich"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"     * @param tag to choose color based on.","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"lywich"},"content":"    public void makeLabel(Tag tag) {","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"lywich"},"content":"        Label newLabel \u003d new Label(tag.tagName);","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"lywich"},"content":"        String str \u003d chooseColor(tag.tagName);","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"lywich"},"content":"        newLabel.setStyle(\"-fx-text-fill: black;\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"lywich"},"content":"                + \"-fx-background-color: \" + str + \";\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"lywich"},"content":"                + \"-fx-padding: 1 3 1 3;\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"lywich"},"content":"                + \"-fx-border-radius: 2;\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"lywich"},"content":"                + \"-fx-background-radius: 2;\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"lywich"},"content":"                + \"-fx-font-size: 11;\");","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"lywich"},"content":"        tags.getChildren().add(newLabel);","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":121,"author":{"gitId":"lywich"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":126,"author":{"gitId":"lywich"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":128,"author":{"gitId":"lywich"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Huggenguggen":13,"lywich":56,"PROGRAMMERHAO":5,"-":53,"joyngjr":3}},{"path":"src/main/java/seedu/task/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.LogsCenter;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"    @FXML","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"        super(FXML);","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"        @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"                setGraphic(null);","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"                setText(null);","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"            } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"lywich":49}},{"path":"src/main/java/seedu/task/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"lywich":1,"-":12}},{"path":"src/main/java/seedu/task/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.MainApp;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.LogsCenter;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.util.StringUtil;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.Logic;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/clock-work.png\";","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lywich":5,"PROGRAMMERHAO":1,"-":82}},{"path":"src/main/java/seedu/task/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import seedu.task.MainApp;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lywich":2,"-":86}},{"path":"src/main/resources/view/AlertListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Huggenguggen":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"lywich"},"content":"#filterField, #taskListPanel, #taskWebpage {","lastModifiedDate":"2023-02-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"lywich":1,"-":342}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"         title\u003d\"Clock-Work\" minWidth\u003d\"800\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"    \u003cImage url\u003d\"@/images/clock-work.png\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"      \u003cVBox HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"        \u003cVBox fx:id\u003d\"taskList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"          \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"      \u003cVBox fx:id\u003d\"alertList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"          \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"        \u003cLabel fx:id\u003d\"alertStatus\" VBox.vgrow\u003d\"ALWAYS\" style\u003d\"-fx-padding: 0 5 10 5;\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"        \u003cStackPane fx:id\u003d\"alertListPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Huggenguggen":13,"lywich":2,"PROGRAMMERHAO":1,"-":53}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"      \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"      \u003cLabel fx:id\u003d\"effort\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\"/\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"      \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"      \u003cLabel fx:id\u003d\"subsections\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Huggenguggen":1,"lywich":1,"PROGRAMMERHAO":1,"-":33,"joyngjr":1}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"  \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lywich":1,"-":7}},{"path":"src/test/java/seedu/task/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"lywich":1,"-":57}},{"path":"src/test/java/seedu/task/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.core;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"lywich":1,"-":26}},{"path":"src/test/java/seedu/task/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.core;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lywich":2,"-":133}},{"path":"src/test/java/seedu/task/commons/core/index/IndexListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.commons.core.index;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"public class IndexListTest {","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"    public void getZeroBasedIndex() {","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"        IndexList list \u003d new IndexList();","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"        list.add(Index.fromOneBased(1));","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"        list.add(Index.fromOneBased(2));","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"        list.add(Index.fromOneBased(3));","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"        assertEquals(2, list.getZeroBasedIndex(2));","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"        assertEquals(1, list.getZeroBasedIndex(1));","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    public void checkValidIndex_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"        IndexList list \u003d new IndexList();","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"        list.add(Index.fromOneBased(1));","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"        list.add(Index.fromOneBased(2));","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"        list.add(Index.fromOneBased(3));","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"        // index deleting from is greater than list size","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"        assertThrows(CommandException.class, () -\u003e list.isValidIndex(2));","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"        // index entered in non-ascending order","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"        list.add(Index.fromOneBased(2));","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"        assertThrows(CommandException.class, () -\u003e list.isValidIndex(4));","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"    public void checkValidIndex_validIndexList_throwsCommandException() throws CommandException {","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        IndexList list \u003d new IndexList();","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"        list.add(Index.fromOneBased(1));","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"        list.add(Index.fromOneBased(2));","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"        list.add(Index.fromOneBased(3));","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"        assertTrue(list.isValidIndex(3));","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"    public void modifyForDelete() {","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"        IndexList referenceList \u003d new IndexList();","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"        referenceList.add(Index.fromOneBased(1));","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"        referenceList.add(Index.fromOneBased(1));","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"        referenceList.add(Index.fromOneBased(1));","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"        IndexList testedList \u003d new IndexList();","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"        testedList.add(Index.fromOneBased(1));","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"        testedList.add(Index.fromOneBased(2));","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"        testedList.add(Index.fromOneBased(3));","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"        testedList.modifyForDelete();","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"        assertEquals(referenceList, testedList);","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"    public void fromOneBasedList() {","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"        IndexList expectedList \u003d new IndexList();","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"        expectedList.add(Index.fromOneBased(1));","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"        expectedList.add(Index.fromOneBased(2));","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"        expectedList.add(Index.fromOneBased(3));","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"        IndexList inputList \u003d new IndexList();","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"        int[] testIndices \u003d {1, 2, 3};","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"        IndexList outputList \u003d inputList.fromOneBasedList(testIndices);","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"        assertEquals(expectedList, outputList);","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"    public void equals() {","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"        IndexList checklist1 \u003d new IndexList();","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"        checklist1.add(Index.fromOneBased(1));","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"        checklist1.add(Index.fromOneBased(2));","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"        IndexList checklist2 \u003d new IndexList();","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"        checklist2.add(Index.fromZeroBased(0));","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"        checklist2.add(Index.fromZeroBased(1));","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"        IndexList checklist3 \u003d new IndexList();","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"joyngjr"},"content":"        checklist3.add(Index.fromZeroBased(0));","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"joyngjr"},"content":"        checklist3.add(Index.fromZeroBased(2));","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"joyngjr"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"joyngjr"},"content":"        assertTrue(checklist1.equals(checklist2));","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"joyngjr"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"joyngjr"},"content":"        assertTrue(checklist2.equals(checklist2));","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"joyngjr"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"joyngjr"},"content":"        assertFalse(checklist1.equals(null));","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"joyngjr"},"content":"        // different number of index -\u003e returns false","lastModifiedDate":"2023-04-04"},{"lineNumber":104,"author":{"gitId":"joyngjr"},"content":"        IndexList checklist4 \u003d new IndexList();","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"joyngjr"},"content":"        checklist4.add(Index.fromOneBased(2));","lastModifiedDate":"2023-04-04"},{"lineNumber":106,"author":{"gitId":"joyngjr"},"content":"        assertFalse(checklist4.equals(checklist1));","lastModifiedDate":"2023-04-04"},{"lineNumber":107,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":108,"author":{"gitId":"joyngjr"},"content":"        // same number of index, different values -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":109,"author":{"gitId":"joyngjr"},"content":"        assertFalse(checklist2.equals(checklist3));","lastModifiedDate":"2023-04-04"},{"lineNumber":110,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"joyngjr":111}},{"path":"src/test/java/seedu/task/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.core.index;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"    public void modifyIndex() {","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"        Index check \u003d Index.fromZeroBased(5);","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"        check.modifyIndex(-4);","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"        assertEquals(1, check.getZeroBased());","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"        check.modifyIndex(1);","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"        assertEquals(2, check.getZeroBased());","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"        final Index fifthTaskIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"        assertTrue(fifthTaskIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"        assertTrue(fifthTaskIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"        assertTrue(fifthTaskIndex.equals(fifthTaskIndex));","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"        assertFalse(fifthTaskIndex.equals(null));","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"        assertFalse(fifthTaskIndex.equals(5.0f));","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"        assertFalse(fifthTaskIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"lywich":9,"-":51,"joyngjr":9}},{"path":"src/test/java/seedu/task/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.util;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"lywich":2,"-":34}},{"path":"src/test/java/seedu/task/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.util;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"lywich":3,"-":105}},{"path":"src/test/java/seedu/task/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.util;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.Config;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"lywich":4,"-":112}},{"path":"src/test/java/seedu/task/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.util;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lywich":2,"-":21}},{"path":"src/test/java/seedu/task/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.util;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.testutil.SerializableTestClass;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import seedu.task.testutil.TestUtil;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lywich":3,"-":42}},{"path":"src/test/java/seedu/task/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.commons.util;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"Huggenguggen"},"content":"    //---------------- Tests for containsIgnoreCase --------------------------------------","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"Huggenguggen"},"content":"    /*","lastModifiedDate":"2023-02-20"},{"lineNumber":129,"author":{"gitId":"Huggenguggen"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"Huggenguggen"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2023-02-20"},{"lineNumber":131,"author":{"gitId":"Huggenguggen"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2023-02-20"},{"lineNumber":132,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":133,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"Huggenguggen"},"content":"    public void containsIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"Huggenguggen"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"Huggenguggen"},"content":"    public void containsIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"Huggenguggen"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"Huggenguggen"},"content":"                -\u003e StringUtil.containsIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":144,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":145,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":146,"author":{"gitId":"Huggenguggen"},"content":"    public void containsIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2023-02-20"},{"lineNumber":147,"author":{"gitId":"Huggenguggen"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsIgnoreCase(null, \"abc\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":148,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":149,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":150,"author":{"gitId":"Huggenguggen"},"content":"    /*","lastModifiedDate":"2023-02-20"},{"lineNumber":151,"author":{"gitId":"Huggenguggen"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2023-02-20"},{"lineNumber":152,"author":{"gitId":"Huggenguggen"},"content":"     *   - any word","lastModifiedDate":"2023-02-20"},{"lineNumber":153,"author":{"gitId":"Huggenguggen"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2023-02-20"},{"lineNumber":154,"author":{"gitId":"Huggenguggen"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2023-02-20"},{"lineNumber":155,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":156,"author":{"gitId":"Huggenguggen"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2023-02-20"},{"lineNumber":157,"author":{"gitId":"Huggenguggen"},"content":"     *   - empty string","lastModifiedDate":"2023-02-20"},{"lineNumber":158,"author":{"gitId":"Huggenguggen"},"content":"     *   - one word","lastModifiedDate":"2023-02-20"},{"lineNumber":159,"author":{"gitId":"Huggenguggen"},"content":"     *   - multiple words","lastModifiedDate":"2023-02-20"},{"lineNumber":160,"author":{"gitId":"Huggenguggen"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2023-02-20"},{"lineNumber":161,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":162,"author":{"gitId":"Huggenguggen"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2023-02-20"},{"lineNumber":163,"author":{"gitId":"Huggenguggen"},"content":"     *   - substring of the sentence/word","lastModifiedDate":"2023-02-20"},{"lineNumber":164,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":165,"author":{"gitId":"Huggenguggen"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2023-02-20"},{"lineNumber":166,"author":{"gitId":"Huggenguggen"},"content":"     *   - query word does not match any part of the sentence/word","lastModifiedDate":"2023-02-20"},{"lineNumber":167,"author":{"gitId":"Huggenguggen"},"content":"     *   - query word is longer than sentence match","lastModifiedDate":"2023-02-20"},{"lineNumber":168,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":169,"author":{"gitId":"Huggenguggen"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2023-02-20"},{"lineNumber":170,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":171,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":172,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":173,"author":{"gitId":"Huggenguggen"},"content":"    public void containsIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2023-02-20"},{"lineNumber":174,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":175,"author":{"gitId":"Huggenguggen"},"content":"        // Empty sentence","lastModifiedDate":"2023-02-20"},{"lineNumber":176,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(StringUtil.containsIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2023-02-20"},{"lineNumber":177,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(StringUtil.containsIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":178,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":179,"author":{"gitId":"Huggenguggen"},"content":"        // Matches a partial word only","lastModifiedDate":"2023-02-20"},{"lineNumber":180,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(StringUtil.containsIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2023-02-20"},{"lineNumber":181,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(StringUtil.containsIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2023-02-20"},{"lineNumber":182,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":183,"author":{"gitId":"Huggenguggen"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2023-02-20"},{"lineNumber":184,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(StringUtil.containsIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2023-02-20"},{"lineNumber":185,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(StringUtil.containsIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2023-02-20"},{"lineNumber":186,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(StringUtil.containsIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2023-02-20"},{"lineNumber":187,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(StringUtil.containsIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2023-02-20"},{"lineNumber":188,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(StringUtil.containsIgnoreCase(\"aaa bbb ccc\", \"   ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2023-02-20"},{"lineNumber":189,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":190,"author":{"gitId":"Huggenguggen"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2023-02-20"},{"lineNumber":191,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(StringUtil.containsIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":192,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":193,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Huggenguggen":68,"lywich":2,"-":141}},{"path":"src/test/java/seedu/task/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.DESCRIPTION_DESC_AMY;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.AMY;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.AddCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.CommandResult;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.ListCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ModelManager;","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"import seedu.task.model.UserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"import seedu.task.storage.JsonPlannerStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"import seedu.task.storage.JsonTaskBookStorage;","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"import seedu.task.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"import seedu.task.storage.StorageManager;","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.SimpleTaskBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"        JsonTaskBookStorage taskBookStorage \u003d","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"                new JsonTaskBookStorage(temporaryFolder.resolve(\"taskBook.json\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"        JsonPlannerStorage plannerStorage \u003d new JsonPlannerStorage(temporaryFolder.resolve(\"planner.json\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"        StorageManager storage \u003d new StorageManager(taskBookStorage, userPrefsStorage, plannerStorage);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"        // Setup LogicManager with JsonTaskBookIoExceptionThrowingStub","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"        JsonTaskBookStorage taskBookStorage \u003d","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"                new JsonTaskBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionTaskBook.json\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"        JsonPlannerStorage plannerStorage \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"                new JsonPlannerStorage(temporaryFolder.resolve(\"ioExceptionPlanner.json\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"        StorageManager storage \u003d new StorageManager(taskBookStorage, userPrefsStorage, plannerStorage);","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + DESCRIPTION_DESC_AMY;","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"Huggenguggen"},"content":"        Task expectedTask \u003d new SimpleTaskBuilder(AMY).withTags().build();","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"        expectedModel.addTask(expectedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredTaskList().remove(0));","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"joyngjr"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaskBook(), new UserPrefs(), model.getPlanner());","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"lywich"},"content":"    private static class JsonTaskBookIoExceptionThrowingStub extends JsonTaskBookStorage {","lastModifiedDate":"2023-02-18"},{"lineNumber":154,"author":{"gitId":"lywich"},"content":"        private JsonTaskBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-02-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"lywich"},"content":"        public void saveTaskBook(ReadOnlyTaskBook taskBook, Path filePath) throws IOException {","lastModifiedDate":"2023-02-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Huggenguggen":2,"lywich":33,"-":121,"joyngjr":7}},{"path":"src/test/java/seedu/task/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDailyPlans.getTypicalPlanner;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ModelManager;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"import seedu.task.model.UserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.SimpleTaskBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"        model \u003d new ModelManager(getTypicalTaskBook(), new UserPrefs(), getTypicalPlanner());","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"    public void execute_newTask_success() {","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"        Task validTask \u003d new SimpleTaskBuilder().build();","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaskBook(), new UserPrefs(), model.getPlanner());","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"        expectedModel.addTask(validTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"        assertCommandSuccess(new AddCommand(validTask), model,","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, \"1. \" + validTask + \"\\n\"), expectedModel);","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"        ArrayList\u003cTask\u003e taskInList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"        taskInList.add(model.getTaskBook().getTaskList().get(0));","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"        assertCommandFailure(new AddCommand(taskInList), model, AddCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Huggenguggen":2,"lywich":13,"PROGRAMMERHAO":5,"-":24,"joyngjr":3}},{"path":"src/test/java/seedu/task/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.GuiSettings;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.ReadOnlyPlanner;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"import seedu.task.model.TaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.SimpleTaskBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand((Task) null));","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded();","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"        ArrayList\u003cTask\u003e validTask \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"        validTask.add(new SimpleTaskBuilder().build());","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"        CommandResult commandResult \u003d new AddCommand(validTask).execute(modelStub);","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, \"1. \"","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"            + validTask.get(0) + \"\\n\"), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertEquals(Arrays.asList(validTask.get(0)), modelStub.tasksAdded);","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"        Task validTask \u003d new SimpleTaskBuilder().build();","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"        AddCommand addCommand \u003d new AddCommand(validTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"        ModelStub modelStub \u003d new ModelStubWithTask(validTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_TASK, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"        Task alice \u003d new SimpleTaskBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"        Task bob \u003d new SimpleTaskBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"lywich"},"content":"        public Path getTaskBookFilePath() {","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"lywich"},"content":"        public void setTaskBookFilePath(Path taskBookFilePath) {","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"joyngjr"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"joyngjr"},"content":"        public Path getPlannerFilePath() {","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"joyngjr"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"lywich"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"lywich"},"content":"        public void setTaskBook(ReadOnlyTaskBook newData) {","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"lywich"},"content":"        public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"lywich"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"lywich"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"lywich"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"lywich"},"content":"        @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":150,"author":{"gitId":"lywich"},"content":"        public void sortTask() {","lastModifiedDate":"2023-03-04"},{"lineNumber":151,"author":{"gitId":"lywich"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"joyngjr"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"joyngjr"},"content":"        public void plan(long value) {","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"joyngjr"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"lywich"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-02-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"Huggenguggen"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":165,"author":{"gitId":"Huggenguggen"},"content":"        public ObservableList\u003cTask\u003e getAlertTaskList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"Huggenguggen"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"lywich"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-02-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"Huggenguggen"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"Huggenguggen"},"content":"        public void updateAlertTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"Huggenguggen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"joyngjr"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"joyngjr"},"content":"        public ReadOnlyPlanner getPlanner() {","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"joyngjr"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":183,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":184,"author":{"gitId":"joyngjr"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":185,"author":{"gitId":"joyngjr"},"content":"        public void schedule(LocalDate date) {","lastModifiedDate":"2023-03-20"},{"lineNumber":186,"author":{"gitId":"joyngjr"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":187,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"lywich"},"content":"     * A Model stub that contains a single task.","lastModifiedDate":"2023-02-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"lywich"},"content":"    private class ModelStubWithTask extends ModelStub {","lastModifiedDate":"2023-02-18"},{"lineNumber":194,"author":{"gitId":"lywich"},"content":"        private final Task task;","lastModifiedDate":"2023-02-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"lywich"},"content":"        ModelStubWithTask(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":197,"author":{"gitId":"lywich"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-02-18"},{"lineNumber":198,"author":{"gitId":"lywich"},"content":"            this.task \u003d task;","lastModifiedDate":"2023-02-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"lywich"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":203,"author":{"gitId":"lywich"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-02-18"},{"lineNumber":204,"author":{"gitId":"lywich"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2023-02-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"lywich"},"content":"     * A Model stub that always accept the task being added.","lastModifiedDate":"2023-02-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"lywich"},"content":"    private class ModelStubAcceptingTaskAdded extends ModelStub {","lastModifiedDate":"2023-02-18"},{"lineNumber":212,"author":{"gitId":"lywich"},"content":"        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"lywich"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":216,"author":{"gitId":"lywich"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-02-18"},{"lineNumber":217,"author":{"gitId":"lywich"},"content":"            return tasksAdded.stream().anyMatch(task::isSameTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"lywich"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":222,"author":{"gitId":"lywich"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-02-18"},{"lineNumber":223,"author":{"gitId":"lywich"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2023-02-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"lywich"},"content":"        public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2023-02-18"},{"lineNumber":228,"author":{"gitId":"lywich"},"content":"            return new TaskBook();","lastModifiedDate":"2023-02-18"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Huggenguggen":15,"lywich":54,"PROGRAMMERHAO":5,"-":136,"joyngjr":22}},{"path":"src/test/java/seedu/task/logic/commands/AddSubtaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.testutil.TypicalSubtasks.ALICE_HOMEWORK;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.testutil.TypicalSubtasks.AMY_LAB;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.core.GuiSettings;","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.core.Messages;","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.ReadOnlyPlanner;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Subtask;","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.UniqueTaskList;","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.testutil.SimpleTaskBuilder;","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.testutil.SubtaskBuilder;","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class AddSubtaskCommandTest {","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddSubtaskCommand((Index) null, (Subtask) null));","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Task validTask \u003d new SimpleTaskBuilder().withSubtasks(ALICE_HOMEWORK).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"        ModelStub modelStub \u003d new ModelStubWithTask(validTask);","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"        CommandResult commandResult \u003d new AddSubtaskCommand(Index.fromOneBased(1),","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"            AMY_LAB).execute(modelStub);","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertEquals(String.format(AddSubtaskCommand.MESSAGE_SUCCESS, AMY_LAB), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Task validTask \u003d new SimpleTaskBuilder().withSubtasks(ALICE_HOMEWORK).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"        AddSubtaskCommand addSubtaskCommand \u003d new AddSubtaskCommand(Index.fromOneBased(1), ALICE_HOMEWORK);","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"        ModelStub modelStub \u003d new ModelStubWithTask(validTask);","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertThrows(CommandException.class, AddSubtaskCommand.MESSAGE_DUPLICATE_TASK, () -\u003e addSubtaskCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"            .execute(modelStub));","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void execute_taskIndexOutOfBounds_throwsCommandException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Task validTask \u003d new SimpleTaskBuilder().withSubtasks(ALICE_HOMEWORK).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"        AddSubtaskCommand addSubtaskCommand \u003d new AddSubtaskCommand(Index.fromOneBased(2), AMY_LAB);","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"        AddSubtaskCommandTest.ModelStub modelStub \u003d new AddSubtaskCommandTest.ModelStubWithTask(validTask);","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX, () -\u003e addSubtaskCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"            .execute(modelStub));","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void equals() {","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Subtask alice \u003d new SubtaskBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Subtask bob \u003d new SubtaskBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"        AddSubtaskCommand addAliceCommand \u003d new AddSubtaskCommand(Index.fromOneBased(1), alice);","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"        AddSubtaskCommand addBobCommand \u003d new AddSubtaskCommand(Index.fromOneBased(1), bob);","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"        AddSubtaskCommand addAliceCommandCopy \u003d new AddSubtaskCommand(Index.fromOneBased(1), alice);","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public Path getTaskBookFilePath() {","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void setTaskBookFilePath(Path taskBookFilePath) {","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void setTaskBook(ReadOnlyTaskBook newData) {","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":154,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":155,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-03-24"},{"lineNumber":156,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void sortTask() {","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void plan(long workload) {","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void schedule(LocalDate date) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public Path getPlannerFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"PROGRAMMERHAO"},"content":"        };","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public ReadOnlyPlanner getPlanner() {","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"PROGRAMMERHAO"},"content":"        };","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public ObservableList\u003cTask\u003e getAlertTaskList() {","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void updateAlertTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":205,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":206,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * A Model stub that contains a single task.","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private class ModelStubWithTask extends ModelStub {","lastModifiedDate":"2023-03-24"},{"lineNumber":209,"author":{"gitId":"PROGRAMMERHAO"},"content":"        private final Task task;","lastModifiedDate":"2023-03-24"},{"lineNumber":210,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":211,"author":{"gitId":"PROGRAMMERHAO"},"content":"        private final UniqueTaskList taskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":213,"author":{"gitId":"PROGRAMMERHAO"},"content":"        private final FilteredList\u003cTask\u003e filteredList \u003d new FilteredList\u003c\u003e(taskList.asUnmodifiableObservableList());","lastModifiedDate":"2023-03-24"},{"lineNumber":214,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":215,"author":{"gitId":"PROGRAMMERHAO"},"content":"        ModelStubWithTask(Task task) {","lastModifiedDate":"2023-03-24"},{"lineNumber":216,"author":{"gitId":"PROGRAMMERHAO"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-24"},{"lineNumber":217,"author":{"gitId":"PROGRAMMERHAO"},"content":"            this.task \u003d task;","lastModifiedDate":"2023-03-24"},{"lineNumber":218,"author":{"gitId":"PROGRAMMERHAO"},"content":"            this.taskList.add(task);","lastModifiedDate":"2023-03-24"},{"lineNumber":219,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":220,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":221,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":222,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-24"},{"lineNumber":223,"author":{"gitId":"PROGRAMMERHAO"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-24"},{"lineNumber":224,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2023-03-24"},{"lineNumber":225,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":226,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":227,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":228,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-24"},{"lineNumber":229,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return this.filteredList;","lastModifiedDate":"2023-03-24"},{"lineNumber":230,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":231,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":232,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":233,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void setTask(Task taskToEdit, Task newTask) {","lastModifiedDate":"2023-03-24"},{"lineNumber":234,"author":{"gitId":"PROGRAMMERHAO"},"content":"            this.taskList.setTask(taskToEdit, newTask);","lastModifiedDate":"2023-03-24"},{"lineNumber":235,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":236,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":237,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":238,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-03-24"},{"lineNumber":239,"author":{"gitId":"PROGRAMMERHAO"},"content":"            requireNonNull(predicate);","lastModifiedDate":"2023-03-24"},{"lineNumber":240,"author":{"gitId":"PROGRAMMERHAO"},"content":"            filteredList.setPredicate(predicate);","lastModifiedDate":"2023-03-24"},{"lineNumber":241,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":242,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":243,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":244,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":245,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":246,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"PROGRAMMERHAO":246}},{"path":"src/test/java/seedu/task/logic/commands/AlertCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.testutil.TypicalComplicatedTasks.getTypicalComplicatedTasks;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDailyPlans.getTypicalPlanner;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.TaskWithinTimelinePredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":" * {@code AlertCommand}.","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"public class AlertCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    private Model model \u003d new ModelManager(getTypicalComplicatedTasks(), new UserPrefs(), getTypicalPlanner());","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"    public void execute_validIndexAlertList_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"        AlertCommand alertCommand \u003d new AlertCommand(48);","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"        String expectedMessage \u003d AlertCommand.ALERT_COMMAND_SUCCESS;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTaskBook(), new UserPrefs(), model.getPlanner());","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"        expectedModel.updateAlertTaskList(new TaskWithinTimelinePredicate(Duration.ofHours(48)));","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"        assertCommandSuccess(alertCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"    public void execute_invalidIndexAlertList_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"        AlertCommand alertCommand \u003d new AlertCommand(0);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"        assertCommandFailure(alertCommand, model, Messages.MESSAGE_INVALID_DURATION);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"    public void test_equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"        AlertCommand alertCommand \u003d new AlertCommand(5);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"        AlertCommand alertCommand2 \u003d new AlertCommand(5);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"        AlertCommand alertCommand3 \u003d new AlertCommand(3);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(alertCommand2.equals(alertCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(alertCommand2.equals(alertCommand3));","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Huggenguggen":49,"joyngjr":3}},{"path":"src/test/java/seedu/task/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDailyPlans.getTypicalPlanner;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ModelManager;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import seedu.task.model.TaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import seedu.task.model.UserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"public class ClearCommandTest {","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"    public void execute_emptyTaskBook_success() {","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"    public void execute_nonEmptyTaskBook_success() {","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"        Model model \u003d new ModelManager(getTypicalTaskBook(), new UserPrefs(), getTypicalPlanner());","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalTaskBook(), new UserPrefs(), model.getPlanner());","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"        expectedModel.setTaskBook(new TaskBook());","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"lywich":30,"joyngjr":3}},{"path":"src/test/java/seedu/task/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"lywich":1,"-":53}},{"path":"src/test/java/seedu/task/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_FROM;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_SUBTASK_INDEX;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.index.Index;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.core.index.IndexList;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"import seedu.task.model.TaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"import seedu.task.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"    public static final String VALID_DESCRIPTION_AMY \u003d \"Amy\u0027s description\";","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String VALID_DESCRIPTION_DEFAULT \u003d \"No Description\";","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"    public static final String VALID_DESCRIPTION_BOB \u003d \"Bob\u0027s description\";","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String VALID_TASK_INDEX \u003d \"1\";","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String VALID_SUBTASK_INDEX \u003d \"1\";","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String INVALID_INDEX \u003d \"a\";","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String INDEX_1 \u003d \" \" + VALID_SUBTASK_INDEX;","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String INDEX_SUBTASK \u003d \" \" + PREFIX_SUBTASK_INDEX + VALID_SUBTASK_INDEX;","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String INVALID_SUBTASK_INDEX \u003d \" \" + PREFIX_SUBTASK_INDEX;","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String VALID_DESCRIPTION_BOTH \u003d \"Both description\";","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"    public static final String VALID_FROM_DATE \u003d \"2023-01-01 1800\";","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"    public static final String VALID_TO_DATE \u003d \"2023-01-02 1800\";","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"    public static final String DESCRIPTION_DESC_AMY \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_AMY;","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"    public static final String DESCRIPTION_DESC_BOB \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"    public static final String DESCRIPTION_DESC_DEFAULT \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_DEFAULT;","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String DESCRIPTION_DESC_BOTH \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_BOTH;","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"    public static final String FROM_DESC_DEFAULT \u003d \" \" + PREFIX_FROM + VALID_FROM_DATE;","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"    public static final String TO_DESC_DEFAULT \u003d \" \" + PREFIX_TO + VALID_TO_DATE;","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String VALID_DEADLINE \u003d \"2023-03-29 2359\";","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String DEADLINE_DESC_DEFAULT \u003d \" \" + PREFIX_DEADLINE + VALID_DEADLINE;","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"    public static final String BLANK_DESCRIPTION_DESC \u003d \" \" + PREFIX_DESCRIPTION + \"\";","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"    public static final String INVALID_FROM_DESC \u003d \" \" + PREFIX_FROM + VALID_TO_DATE;","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"    public static final String INVALID_TO_DESC \u003d \" \" + PREFIX_TO + VALID_FROM_DATE;","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"    public static final long VALID_EFFORT \u003d 3;","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"    public static final EditCommand.EditTaskDescriptor DESC_AMY;","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"    public static final EditCommand.EditTaskDescriptor DESC_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final EditCommand.EditTaskDescriptor DESC_AMY_EVENT;","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final EditCommand.EditTaskDescriptor DESC_AMY_DEADLINE;","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String VALID_DATE \u003d \"2023-03-30 2359\";","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String VALID_FROM \u003d \"2023-03-25 2359\";","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String VALID_TO \u003d \"2023-03-26 2359\";","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"        DESC_AMY \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"                .withDescription(VALID_DESCRIPTION_AMY)","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"lywich"},"content":"        DESC_BOB \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"lywich"},"content":"                .withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"PROGRAMMERHAO"},"content":"        DESC_AMY_EVENT \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"PROGRAMMERHAO"},"content":"                .withDescription(VALID_DESCRIPTION_AMY)","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"PROGRAMMERHAO"},"content":"                .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"PROGRAMMERHAO"},"content":"                .withFrom(VALID_FROM)","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"PROGRAMMERHAO"},"content":"                .withTo(VALID_TO).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"PROGRAMMERHAO"},"content":"        DESC_AMY_DEADLINE \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"PROGRAMMERHAO"},"content":"            .withDescription(VALID_DESCRIPTION_AMY)","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"PROGRAMMERHAO"},"content":"            .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"PROGRAMMERHAO"},"content":"            .withDeadline(VALID_DEADLINE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"lywich"},"content":"     * - the task book, filtered task list and selected task in {@code actualModel} remain unchanged","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"lywich"},"content":"        TaskBook expectedTaskBook \u003d new TaskBook(actualModel.getTaskBook());","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"lywich"},"content":"        List\u003cTask\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredTaskList());","lastModifiedDate":"2023-02-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":149,"author":{"gitId":"lywich"},"content":"        assertEquals(expectedTaskBook, actualModel.getTaskBook());","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"lywich"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredTaskList());","lastModifiedDate":"2023-02-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":153,"author":{"gitId":"lywich"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2023-02-18"},{"lineNumber":154,"author":{"gitId":"lywich"},"content":"     * {@code model}\u0027s task book.","lastModifiedDate":"2023-02-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"lywich"},"content":"    public static void showTaskAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"lywich"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":159,"author":{"gitId":"lywich"},"content":"        Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-02-18"},{"lineNumber":160,"author":{"gitId":"Huggenguggen"},"content":"        model.updateFilteredTaskList(new NameContainsKeywordsPredicate(task.getName().fullName));","lastModifiedDate":"2023-02-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":162,"author":{"gitId":"lywich"},"content":"        assertEquals(1, model.getFilteredTaskList().size());","lastModifiedDate":"2023-02-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":164,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":165,"author":{"gitId":"joyngjr"},"content":"     * Updates {@code model}\u0027s filtered list to show only the tasks at the given {@code targetIndex} in the","lastModifiedDate":"2023-02-20"},{"lineNumber":166,"author":{"gitId":"joyngjr"},"content":"     * {@code model}\u0027s task book.","lastModifiedDate":"2023-02-20"},{"lineNumber":167,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":168,"author":{"gitId":"joyngjr"},"content":"    public static void showTaskAtIndexList(Model model, IndexList targetIndices) {","lastModifiedDate":"2023-02-20"},{"lineNumber":169,"author":{"gitId":"joyngjr"},"content":"        int n \u003d targetIndices.size();","lastModifiedDate":"2023-02-20"},{"lineNumber":170,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":171,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":172,"author":{"gitId":"joyngjr"},"content":"            assertTrue(targetIndices.getZeroBasedIndex(i) \u003c model.getFilteredTaskList().size());","lastModifiedDate":"2023-02-20"},{"lineNumber":173,"author":{"gitId":"joyngjr"},"content":"            int curr \u003d targetIndices.getZeroBasedIndex(i);","lastModifiedDate":"2023-02-20"},{"lineNumber":174,"author":{"gitId":"joyngjr"},"content":"            Task task \u003d model.getFilteredTaskList().get(curr);","lastModifiedDate":"2023-02-20"},{"lineNumber":175,"author":{"gitId":"Huggenguggen"},"content":"            model.updateFilteredTaskList(new NameContainsKeywordsPredicate(task.getName().fullName));","lastModifiedDate":"2023-02-21"},{"lineNumber":176,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"joyngjr"},"content":"        assertEquals(n, model.getFilteredTaskList().size());","lastModifiedDate":"2023-02-20"},{"lineNumber":179,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Huggenguggen":2,"lywich":35,"PROGRAMMERHAO":40,"-":79,"joyngjr":24}},{"path":"src/test/java/seedu/task/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.commands.CommandTestUtil.showTaskAtIndexList;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDailyPlans.getTypicalPlanner;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalIndexLists.INDEXLIST_FIRST_TASK;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalIndexLists.INDEXLIST_SECOND_TASK;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.Messages;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.index.Index;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.core.index.IndexList;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ModelManager;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"import seedu.task.model.UserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"    private Model model \u003d new ModelManager(getTypicalTaskBook(), new UserPrefs(), getTypicalPlanner());","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEXLIST_FIRST_TASK);","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"        String expectedMessage \u003d DeleteCommand.MESSAGE_DELETE_TASK_SUCCESS;","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTaskBook(), new UserPrefs(), model.getPlanner());","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"        int n \u003d INDEXLIST_FIRST_TASK.size();","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"            Task taskToDelete \u003d model.getFilteredTaskList().get(INDEXLIST_FIRST_TASK.getZeroBasedIndex(i));","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"            expectedMessage \u003d expectedMessage + \"\\n\" + taskToDelete;","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"            expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"        IndexList il \u003d new IndexList();","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"        il.add(outOfBoundIndex);","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(il);","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"        showTaskAtIndexList(model, INDEXLIST_FIRST_TASK);","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"        int n \u003d INDEXLIST_FIRST_TASK.size();","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEXLIST_FIRST_TASK);","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaskBook(), new UserPrefs(), model.getPlanner());","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"        String expectedMessage \u003d DeleteCommand.MESSAGE_DELETE_TASK_SUCCESS;","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"            Task taskToDelete \u003d model.getFilteredTaskList().get(INDEXLIST_FIRST_TASK.getZeroBasedIndex(i));","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"            expectedMessage \u003d expectedMessage + \"\\n\" + taskToDelete;","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"            expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"        showNoTask(expectedModel);","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"        showTaskAtIndexList(model, INDEXLIST_FIRST_TASK);","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"        IndexList outOfBoundIndexList \u003d INDEXLIST_SECOND_TASK;","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"        int n \u003d outOfBoundIndexList.size();","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"        for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"            // ensures that outOfBoundIndexList is still in bounds of task book list","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"joyngjr"},"content":"            assertTrue(outOfBoundIndexList.getZeroBasedIndex(i) \u003c model.getTaskBook().getTaskList().size());","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"joyngjr"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndexList);","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"lywich"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"joyngjr"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEXLIST_FIRST_TASK);","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"joyngjr"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEXLIST_SECOND_TASK);","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"joyngjr"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEXLIST_FIRST_TASK);","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"lywich"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"lywich"},"content":"    private void showNoTask(Model model) {","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"lywich"},"content":"        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"lywich"},"content":"        assertTrue(model.getFilteredTaskList().isEmpty());","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"lywich":20,"-":65,"joyngjr":44}},{"path":"src/test/java/seedu/task/logic/commands/DeleteSubtaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.testutil.TypicalSubtasks.ALICE_HOMEWORK;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.core.GuiSettings;","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.core.Messages;","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.ReadOnlyPlanner;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Subtask;","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.UniqueTaskList;","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.testutil.SimpleTaskBuilder;","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.testutil.SubtaskBuilder;","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class DeleteSubtaskCommandTest {","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteSubtaskCommand((Index) null, (Index) null));","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Task validTask \u003d new SimpleTaskBuilder().withSubtasks(ALICE_HOMEWORK).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"        ModelStub modelStub \u003d new ModelStubWithTask(validTask);","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"        CommandResult commandResult \u003d new DeleteSubtaskCommand(Index.fromOneBased(1),","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Index.fromOneBased(1)).execute(modelStub);","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertEquals(String.format(DeleteSubtaskCommand.MESSAGE_SUCCESS, ALICE_HOMEWORK),","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"            commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void execute_taskIndexOutOfBounds_throwsCommandException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Task validTask \u003d new SimpleTaskBuilder().withSubtasks(ALICE_HOMEWORK).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"        DeleteSubtaskCommand deleteSubtaskCommand \u003d new DeleteSubtaskCommand(Index.fromOneBased(2),","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Index.fromOneBased(1));","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"        ModelStub modelStub \u003d new ModelStubWithTask(validTask);","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX, () -\u003e deleteSubtaskCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"            .execute(modelStub));","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void execute_subtaskIndexOutOfBounds_throwsCommandException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Task validTask \u003d new SimpleTaskBuilder().withSubtasks(ALICE_HOMEWORK).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"        DeleteSubtaskCommand deleteSubtaskCommand \u003d new DeleteSubtaskCommand(Index.fromOneBased(1),","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Index.fromOneBased(2));","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"        ModelStub modelStub \u003d new ModelStubWithTask(validTask);","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX, () -\u003e deleteSubtaskCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"            .execute(modelStub));","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void equals() {","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Subtask alice \u003d new SubtaskBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Subtask bob \u003d new SubtaskBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"        DeleteSubtaskCommand deleteAliceCommand \u003d new DeleteSubtaskCommand(Index.fromOneBased(1),","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Index.fromOneBased(1));","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"        DeleteSubtaskCommand deleteBobCommand \u003d new DeleteSubtaskCommand(Index.fromOneBased(1),","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Index.fromOneBased(2));","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(deleteAliceCommand.equals(deleteAliceCommand));","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"        DeleteSubtaskCommand deleteAliceCommandCopy \u003d new DeleteSubtaskCommand(Index.fromOneBased(1),","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"            Index.fromOneBased(1));","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(deleteAliceCommand.equals(deleteAliceCommandCopy));","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(deleteAliceCommand.equals(1));","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(deleteBobCommand.equals(null));","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(deleteAliceCommand.equals(deleteBobCommand));","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * A default model stub that have all the methods failing.","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public Path getTaskBookFilePath() {","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void setTaskBookFilePath(Path taskBookFilePath) {","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void setTaskBook(ReadOnlyTaskBook newData) {","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2023-03-24"},{"lineNumber":154,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":155,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":156,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void sortTask() {","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void plan(long value) {","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":171,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void schedule(LocalDate date) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public Path getPlannerFilePath() {","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"PROGRAMMERHAO"},"content":"        };","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public ReadOnlyPlanner getPlanner() {","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"PROGRAMMERHAO"},"content":"        };","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public ObservableList\u003cTask\u003e getAlertTaskList() {","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void updateAlertTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"PROGRAMMERHAO"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":205,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":206,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * A Model stub that contains a single task.","lastModifiedDate":"2023-03-24"},{"lineNumber":209,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":210,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private class ModelStubWithTask extends ModelStub {","lastModifiedDate":"2023-03-24"},{"lineNumber":211,"author":{"gitId":"PROGRAMMERHAO"},"content":"        private final Task task;","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":213,"author":{"gitId":"PROGRAMMERHAO"},"content":"        private final UniqueTaskList taskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-03-24"},{"lineNumber":214,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":215,"author":{"gitId":"PROGRAMMERHAO"},"content":"        private final FilteredList\u003cTask\u003e filteredList \u003d new FilteredList\u003c\u003e(taskList.asUnmodifiableObservableList());","lastModifiedDate":"2023-03-24"},{"lineNumber":216,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":217,"author":{"gitId":"PROGRAMMERHAO"},"content":"        ModelStubWithTask(Task task) {","lastModifiedDate":"2023-03-24"},{"lineNumber":218,"author":{"gitId":"PROGRAMMERHAO"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-24"},{"lineNumber":219,"author":{"gitId":"PROGRAMMERHAO"},"content":"            this.task \u003d task;","lastModifiedDate":"2023-03-24"},{"lineNumber":220,"author":{"gitId":"PROGRAMMERHAO"},"content":"            this.taskList.add(task);","lastModifiedDate":"2023-03-24"},{"lineNumber":221,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":222,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":223,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":224,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-24"},{"lineNumber":225,"author":{"gitId":"PROGRAMMERHAO"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-24"},{"lineNumber":226,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2023-03-24"},{"lineNumber":227,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":228,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":229,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":230,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-24"},{"lineNumber":231,"author":{"gitId":"PROGRAMMERHAO"},"content":"            return this.filteredList;","lastModifiedDate":"2023-03-24"},{"lineNumber":232,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":233,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":234,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":235,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void setTask(Task taskToEdit, Task newTask) {","lastModifiedDate":"2023-03-24"},{"lineNumber":236,"author":{"gitId":"PROGRAMMERHAO"},"content":"            this.taskList.setTask(taskToEdit, newTask);","lastModifiedDate":"2023-03-24"},{"lineNumber":237,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":238,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":239,"author":{"gitId":"PROGRAMMERHAO"},"content":"        @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":240,"author":{"gitId":"PROGRAMMERHAO"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-03-24"},{"lineNumber":241,"author":{"gitId":"PROGRAMMERHAO"},"content":"            requireNonNull(predicate);","lastModifiedDate":"2023-03-24"},{"lineNumber":242,"author":{"gitId":"PROGRAMMERHAO"},"content":"            filteredList.setPredicate(predicate);","lastModifiedDate":"2023-03-24"},{"lineNumber":243,"author":{"gitId":"PROGRAMMERHAO"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":244,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":245,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":246,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":247,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":248,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":249,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"PROGRAMMERHAO":249}},{"path":"src/test/java/seedu/task/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDailyPlans.getTypicalPlanner;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.Messages;","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.index.Index;","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ModelManager;","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"import seedu.task.model.TaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"import seedu.task.model.UserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"import seedu.task.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.SimpleTaskBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"    private Model model \u003d new ModelManager(getTypicalTaskBook(), new UserPrefs(), getTypicalPlanner());","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private Model eventModel \u003d new ModelManager(getTypicalEventBook(), new UserPrefs(), getTypicalPlanner());","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() throws CommandException {","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"        Task editedTask \u003d new SimpleTaskBuilder().build();","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK, descriptor);","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"        Model expectedModel \u003d new ModelManager(new TaskBook(model.getTaskBook()), new UserPrefs(), model.getPlanner());","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"        Index indexLastTask \u003d Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"        Task lastTask \u003d model.getFilteredTaskList().get(indexLastTask.getZeroBased());","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"        SimpleTaskBuilder taskInList \u003d new SimpleTaskBuilder(lastTask);","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"        Task editedTask \u003d taskInList.withName(VALID_NAME_BOB).withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"                .withDescription(VALID_DESCRIPTION_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastTask, descriptor);","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"        Model expectedModel \u003d new ModelManager(new TaskBook(model.getTaskBook()), new UserPrefs(), model.getPlanner());","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"lywich"},"content":"        expectedModel.setTask(lastTask, editedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK, new EditTaskDescriptor());","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"        Task editedTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"        Model expectedModel \u003d new ModelManager(new TaskBook(model.getTaskBook()), new UserPrefs(), model.getPlanner());","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"lywich"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"        Task taskInFilteredList \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"Huggenguggen"},"content":"        Task editedTask \u003d new SimpleTaskBuilder(taskInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"lywich"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"lywich"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"joyngjr"},"content":"        Model expectedModel \u003d new ModelManager(new TaskBook(model.getTaskBook()), new UserPrefs(), model.getPlanner());","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"lywich"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"lywich"},"content":"    public void execute_duplicateTaskUnfilteredList_failure() {","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"lywich"},"content":"        Task firstTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"lywich"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(firstTask).build();","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"lywich"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_TASK, descriptor);","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"lywich"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"lywich"},"content":"    public void execute_duplicateTaskFilteredList_failure() {","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"lywich"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"lywich"},"content":"        // edit task in filtered list into a duplicate in task book","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"lywich"},"content":"        Task taskInList \u003d model.getTaskBook().getTaskList().get(INDEX_SECOND_TASK.getZeroBased());","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"lywich"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"lywich"},"content":"                new EditTaskDescriptorBuilder(taskInList).build());","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"lywich"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"lywich"},"content":"    public void execute_invalidTaskIndexUnfilteredList_failure() {","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"lywich"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"lywich"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"joyngjr"},"content":"        assertCommandFailure(editCommand, model, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"joyngjr"},"content":"                EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"lywich"},"content":"     * but smaller than size of task book","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"lywich"},"content":"    public void execute_invalidTaskIndexFilteredList_failure() {","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"lywich"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"lywich"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"lywich"},"content":"        // ensures that outOfBoundIndex is still in bounds of task book list","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"lywich"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaskBook().getTaskList().size());","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"lywich"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-02-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"joyngjr"},"content":"        assertCommandFailure(editCommand, model,","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"joyngjr"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void execute_invalidStartEndEventTime() {","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"PROGRAMMERHAO"},"content":"        showTaskAtIndex(eventModel, INDEX_FIRST_TASK);","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"PROGRAMMERHAO"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new EditTaskDescriptorBuilder().withFrom(\"2023-01-03 1800\").build());","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertCommandFailure(editCommand, eventModel, Messages.MESSAGE_INVALID_EVENT_DATES);","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"lywich"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_TASK, DESC_AMY);","lastModifiedDate":"2023-02-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"lywich"},"content":"        EditTaskDescriptor copyDescriptor \u003d new EditTaskDescriptor(DESC_AMY);","lastModifiedDate":"2023-02-18"},{"lineNumber":168,"author":{"gitId":"lywich"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_TASK, copyDescriptor);","lastModifiedDate":"2023-02-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"lywich"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_TASK, DESC_AMY)));","lastModifiedDate":"2023-02-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"lywich"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_TASK, DESC_BOB)));","lastModifiedDate":"2023-02-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Huggenguggen":4,"lywich":71,"PROGRAMMERHAO":10,"-":91,"joyngjr":11}},{"path":"src/test/java/seedu/task/logic/commands/EditTaskDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.DESC_AMY_DEADLINE;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.DESC_AMY_EVENT;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_DATE;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_EFFORT;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"import seedu.task.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"public class EditTaskDescriptorTest {","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"    public void isAnyFieldEdited_none_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"        EditTaskDescriptor emptyDesc \u003d new EditTaskDescriptor();","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"        assertFalse(emptyDesc.isAnyFieldEdited());","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"    public void isAnyFieldEdited_changed_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"        EditTaskDescriptor bobDesc \u003d new EditTaskDescriptor(DESC_BOB);","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"        assertTrue(bobDesc.isAnyFieldEdited());","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"        EditTaskDescriptor amyDesc \u003d new EditTaskDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"        assertTrue(amyDesc.isAnyFieldEdited());","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"        // edit only name -\u003e return True","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"        EditTaskDescriptor customDesc \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"                .withName(\"TAN\")","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"        assertTrue(customDesc.isAnyFieldEdited());","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        // edit only description -\u003e return True","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"        customDesc \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"                .withDescription(\"owes money\")","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"        assertTrue(customDesc.isAnyFieldEdited());","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"        // edit only tags -\u003e return True","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"        customDesc \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"                .withTags(\"friend\")","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"        assertTrue(customDesc.isAnyFieldEdited());","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"        // edit only effort -\u003e return True","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"        customDesc \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"                .withEffort(5)","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"        assertTrue(customDesc.isAnyFieldEdited());","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // edit only to date -\u003e return True","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"        customDesc \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"                .withFrom(\"2023-03-30 2359\")","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"                .build();","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(customDesc.isAnyFieldEdited());","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // edit only from date -\u003e return True","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"        customDesc \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"                .withTo(\"2023-03-30 2359\")","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"                .build();","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(customDesc.isAnyFieldEdited());","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // edit only deadline -\u003e return True","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"        customDesc \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"                .withDeadline(\"2023-03-30 2359\")","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"                .build();","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(customDesc.isAnyFieldEdited());","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"        EditTaskDescriptor descriptorWithSameValues \u003d new EditTaskDescriptor(DESC_AMY);","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"        EditTaskDescriptor editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":101,"author":{"gitId":"lywich"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"lywich"},"content":"        editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withDescription(VALID_DESCRIPTION_BOB).build();","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"lywich"},"content":"        editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":108,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"joyngjr"},"content":"        // different effort -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"joyngjr"},"content":"        editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withEffort(VALID_EFFORT).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"joyngjr"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // different from date -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"PROGRAMMERHAO"},"content":"        editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY_EVENT).withFrom(VALID_DATE).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(DESC_AMY_EVENT.equals(editedAmy));","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // different to date -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"PROGRAMMERHAO"},"content":"        editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY_EVENT).withTo(VALID_DATE).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(DESC_AMY_EVENT.equals(editedAmy));","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // different deadline -\u003e returns false","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"PROGRAMMERHAO"},"content":"        editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY_DEADLINE).withDeadline(VALID_DATE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"lywich":14,"PROGRAMMERHAO":33,"-":34,"joyngjr":44}},{"path":"src/test/java/seedu/task/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ModelManager;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"lywich":5,"-":15}},{"path":"src/test/java/seedu/task/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_TASKS_LISTED_OVERVIEW;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDailyPlans.getTypicalPlanner;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.testutil.TypicalDeadlines.ASSIGNMENT;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.testutil.TypicalDeadlines.RETURN_BOOK;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.testutil.TypicalDeadlines.getTypicalDeadlineBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.testutil.TypicalEvents.MEETING;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.testutil.TypicalTasks.BENSON;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.testutil.TypicalTasks.DANIEL;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ModelManager;","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"import seedu.task.model.UserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.DeadlineDateContainsKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.EventFromContainsKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.EventToContainsKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.NameContainsAllKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"    private Model model \u003d new ModelManager(getTypicalTaskBook(), new UserPrefs(), getTypicalPlanner());","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalTaskBook(), new UserPrefs(), getTypicalPlanner());","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"    private Model deadlineModel \u003d new ModelManager(getTypicalDeadlineBook(), new UserPrefs(), getTypicalPlanner());","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"    private Model expectedDeadlineModel \u003d new ModelManager(getTypicalDeadlineBook(), new UserPrefs(),","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"            getTypicalPlanner());","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"    private Model eventModel \u003d new ModelManager(getTypicalEventBook(), new UserPrefs(), getTypicalPlanner());","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"    private Model expectedEventModel \u003d new ModelManager(getTypicalEventBook(), new UserPrefs(), getTypicalPlanner());","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"                new NameContainsKeywordsPredicate(\"first\");","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"                new NameContainsKeywordsPredicate(\"second\");","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] inputs \u003d {\"study\", \"party\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"        NameContainsAllKeywordsPredicate thirdPredicate \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"                new NameContainsAllKeywordsPredicate(Arrays.asList(inputs));","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"        FindCommand findThirdCommand \u003d new FindCommand(thirdPredicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"        //same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(findThirdCommand.equals(new FindCommand(thirdPredicate)));","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"    public void execute_keywords_noTaskFound() {","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"Huggenguggen"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"TESTING\");","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredTaskList());","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"lywich"},"content":"    public void execute_multipleKeywords_multipleTasksFound() {","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"Huggenguggen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"Huggenguggen"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Meier\");","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"Huggenguggen"},"content":"        model.getFilteredTaskList().stream().forEach(task -\u003e System.out.println(task.getName()));","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"Huggenguggen"},"content":"        assertEquals(Arrays.asList(BENSON, DANIEL), model.getFilteredTaskList());","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":100,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void execute_multipleKeywords_oneTasksFound() {","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"PROGRAMMERHAO"},"content":"        NameContainsAllKeywordsPredicate predicate \u003d prepareAllPredicate(\"Benson\", \"Meier\");","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"PROGRAMMERHAO"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"PROGRAMMERHAO"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"PROGRAMMERHAO"},"content":"        model.getFilteredTaskList().stream().forEach(task -\u003e System.out.println(task.getName()));","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertEquals(Arrays.asList(BENSON), model.getFilteredTaskList());","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void execute_findDeadline_oneTaskFound() {","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"joyngjr"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"PROGRAMMERHAO"},"content":"        DeadlineDateContainsKeywordsPredicate predicate \u003d prepareDeadlinePredicate(\"2023-01-01\");","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"PROGRAMMERHAO"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"PROGRAMMERHAO"},"content":"        expectedDeadlineModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertCommandSuccess(command, deadlineModel, expectedMessage, expectedDeadlineModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"PROGRAMMERHAO"},"content":"        model.getFilteredTaskList().stream().forEach(task -\u003e System.out.println(task.getName()));","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"joyngjr"},"content":"        assertEquals(Arrays.asList(RETURN_BOOK, ASSIGNMENT), deadlineModel.getFilteredTaskList());","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void execute_findEventByFrom_oneTaskFound() {","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"PROGRAMMERHAO"},"content":"        EventFromContainsKeywordsPredicate predicate \u003d prepareEventFromPredicate(\"2023-01-01\");","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"PROGRAMMERHAO"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"PROGRAMMERHAO"},"content":"        expectedEventModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertCommandSuccess(command, eventModel, expectedMessage, expectedEventModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"PROGRAMMERHAO"},"content":"        expectedEventModel.getFilteredTaskList().stream().forEach(task -\u003e System.out.println(task.getName()));","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertEquals(Arrays.asList(MEETING), eventModel.getFilteredTaskList());","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void execute_findEventByTo_oneTaskFound() {","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"PROGRAMMERHAO"},"content":"        EventToContainsKeywordsPredicate predicate \u003d prepareEventToPredicate(\"2023-01-02\");","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"PROGRAMMERHAO"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"PROGRAMMERHAO"},"content":"        expectedEventModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertCommandSuccess(command, eventModel, expectedMessage, expectedEventModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"PROGRAMMERHAO"},"content":"        expectedEventModel.getFilteredTaskList().stream().forEach(task -\u003e System.out.println(task.getName()));","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertEquals(Arrays.asList(MEETING), eventModel.getFilteredTaskList());","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"Huggenguggen"},"content":"        return new NameContainsKeywordsPredicate(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":153,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private NameContainsAllKeywordsPredicate prepareAllPredicate(String... userInput) {","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return new NameContainsAllKeywordsPredicate(Arrays.asList(userInput));","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private DeadlineDateContainsKeywordsPredicate prepareDeadlinePredicate(String deadline) {","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return new DeadlineDateContainsKeywordsPredicate(deadline);","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private EventFromContainsKeywordsPredicate prepareEventFromPredicate(String from) {","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return new EventFromContainsKeywordsPredicate(from);","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private EventToContainsKeywordsPredicate prepareEventToPredicate(String to) {","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return new EventToContainsKeywordsPredicate(to);","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Huggenguggen":11,"lywich":14,"PROGRAMMERHAO":78,"-":55,"joyngjr":10}},{"path":"src/test/java/seedu/task/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ModelManager;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"lywich":5,"-":15}},{"path":"src/test/java/seedu/task/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDailyPlans.getTypicalPlanner;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ModelManager;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import seedu.task.model.UserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"        model \u003d new ModelManager(getTypicalTaskBook(), new UserPrefs(), getTypicalPlanner());","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"        expectedModel \u003d new ModelManager(model.getTaskBook(), new UserPrefs(), model.getPlanner());","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"lywich":9,"-":28,"joyngjr":3}},{"path":"src/test/java/seedu/task/logic/commands/PlanCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.commands.PlanCommand.PLAN_SUCCESS_MESSAGE;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.ModelManager;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.UserPrefs;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Effort;","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"public class PlanCommandTest {","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"    public void execute_planEmptyTaskBook_success() {","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"        assertCommandSuccess(new PlanCommand(new Effort(15)), model, PLAN_SUCCESS_MESSAGE, expectedModel);","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    public void execute_validEffort_success() {","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"        PlanCommand planCommand \u003d new PlanCommand(new Effort(10));","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"        String expectedMessage \u003d PlanCommand.PLAN_SUCCESS_MESSAGE;","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTaskBook(), new UserPrefs(), model.getPlanner());","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"        expectedModel.plan(10);","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"        assertCommandSuccess(planCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"    public void equals() {","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"        PlanCommand pcA \u003d new PlanCommand(new Effort(10));","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        PlanCommand pcB \u003d new PlanCommand(new Effort(10));","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"        PlanCommand pcC \u003d new PlanCommand(new Effort(15));","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"        // same object -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"        assertTrue(pcA.equals(pcA));","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"        // different object, same values -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"        assertTrue(pcA.equals(pcB));","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"        // different values -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"        assertFalse(pcA.equals(pcC));","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"joyngjr":54}},{"path":"src/test/java/seedu/task/logic/commands/ScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDailyPlans.getTypicalPlanner;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"import seedu.task.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.ModelManager;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.UserPrefs;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Effort;","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"public class ScheduleCommandTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"    private Model model \u003d new ModelManager(getTypicalTaskBook(), new UserPrefs(), getTypicalPlanner());","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"    public void execute_validDateNullEffort_success() throws CommandException {","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(LocalDate.parse(\"2023-04-28\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"        String expectedMessage \u003d ScheduleCommand.SCHEDULE_SUCCESS_MESSAGE;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTaskBook(), new UserPrefs(), model.getPlanner());","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"        expectedModel.schedule(LocalDate.parse(\"2023-04-28\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"        assertCommandSuccess(scheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"    public void execute_validDateNonNullEffort_success() throws CommandException {","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(LocalDate.parse(\"2023-04-28\"), new Effort(10));","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"        String expectedMessage \u003d PlanCommand.PLAN_SUCCESS_MESSAGE + \"\\n\" + ScheduleCommand.SCHEDULE_SUCCESS_MESSAGE;","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTaskBook(), new UserPrefs(), model.getPlanner());","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        expectedModel.plan(10);","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"        expectedModel.schedule(LocalDate.parse(\"2023-04-28\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"        assertCommandSuccess(scheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"    public void execute_invalidEffort_throwsCommandException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(LocalDate.parse(\"2023-09-28\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"        assertCommandFailure(scheduleCommand, model, ScheduleCommand.OUT_OF_RANGE_MESSAGE);","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"    public void execute_planEmptyTaskBook_throwsCommandException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"        assertCommandFailure(new ScheduleCommand(LocalDate.parse(\"2023-04-28\")), model,","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"                ScheduleCommand.OUT_OF_RANGE_MESSAGE);","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"    public void equals() {","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"        LocalDate date1 \u003d LocalDate.parse(\"2023-03-23\");","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"        LocalDate date2 \u003d LocalDate.parse(\"2023-03-24\");","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"        ScheduleCommand cmdA \u003d new ScheduleCommand(date1);","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"        ScheduleCommand cmdB \u003d new ScheduleCommand(date2);","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"        ScheduleCommand cmdC \u003d new ScheduleCommand(date1);","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"        ScheduleCommand cmdD \u003d new ScheduleCommand(date1, new Effort(5));","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"        ScheduleCommand cmdE \u003d new ScheduleCommand(date1, new Effort(5));","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"        ScheduleCommand cmdF \u003d new ScheduleCommand(date1, new Effort(1));","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"        ScheduleCommand cmdG \u003d new ScheduleCommand(date2, new Effort(1));","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"        assertTrue(cmdA.equals(cmdA));","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"        // same date, effort null -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"        assertTrue(cmdA.equals(cmdC)); // both effort null","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"        assertTrue(cmdA.equals(cmdD)); // one effort null","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"        // same date, same effort -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"        assertTrue(cmdE.equals(cmdD));","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"        // same date, different effort -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"        assertFalse(cmdE.equals(cmdF));","lastModifiedDate":"2023-04-04"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"        // different date -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"        assertFalse(cmdA.equals(cmdB)); // both effort null","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"joyngjr"},"content":"        assertFalse(cmdC.equals(cmdG)); // one effort null","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"joyngjr"},"content":"        assertFalse(cmdF.equals(cmdG)); // no null effort","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"joyngjr":94}},{"path":"src/test/java/seedu/task/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.SortCommand.SORT_SUCCESS_MESSAGE;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ModelManager;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"public class SortCommandTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"    public void execute_sortEmptyTaskBook_success() {","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"        assertCommandSuccess(new SortCommand(), model, SORT_SUCCESS_MESSAGE, expectedModel);","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"    public void execute_sort_success() {","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SORT_SUCCESS_MESSAGE, false, false);","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"        assertCommandSuccess(new SortCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"lywich":29}},{"path":"src/test/java/seedu/task/logic/commands/StatsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.logic.commands;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.commands.StatsCommand.STATS_SUCCESS_MESSAGE;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.ModelManager;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"public class StatsCommandTest {","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"    public void execute_statsEmptyTaskBook_success() {","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"        assertCommandSuccess(new StatsCommand(), model, STATS_SUCCESS_MESSAGE, expectedModel);","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"    public void execute_stats_success() {","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(STATS_SUCCESS_MESSAGE, false, false);","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"        assertCommandSuccess(new StatsCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"joyngjr":28}},{"path":"src/test/java/seedu/task/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_EVENT_DATES;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.BLANK_DESCRIPTION_DESC;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.DESCRIPTION_DESC_AMY;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.DESCRIPTION_DESC_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.DESCRIPTION_DESC_BOTH;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.DESCRIPTION_DESC_DEFAULT;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.commands.CommandTestUtil.FROM_DESC_DEFAULT;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.commands.CommandTestUtil.INVALID_FROM_DESC;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.commands.CommandTestUtil.INVALID_TO_DESC;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.commands.CommandTestUtil.TO_DESC_DEFAULT;","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_EFFORT;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_FROM;","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.testutil.TypicalDeadlines.ASSIGNMENT;","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.testutil.TypicalDeadlines.RETURN_BOOK;","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.testutil.TypicalEvents.MEETING;","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.testutil.TypicalEvents.REST;","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.AMY;","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.testutil.TypicalTasks.AMY_BOTH;","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.testutil.TypicalTasks.BOB_BOTH;","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.AddCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.Deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Description;","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.Event;","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.DeadlineBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.EventBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.SimpleTaskBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"    public void parseSimpleTask_allFieldsPresent_success() {","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"        Task expectedTask \u003d new SimpleTaskBuilder(BOB)","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"                .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"                .build();","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"        Task expectedBobBoth \u003d new SimpleTaskBuilder(BOB_BOTH)","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"                .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"                .build();","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"        Task expectedAmyBoth \u003d new SimpleTaskBuilder(AMY_BOTH)","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"                .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-02-21"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"                .build();","lastModifiedDate":"2023-02-21"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"        ArrayList\u003cTask\u003e multiNameTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"        multiNameTasks.add(expectedAmyBoth);","lastModifiedDate":"2023-02-21"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"        multiNameTasks.add(expectedBobBoth);","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + DESCRIPTION_DESC_BOB","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedTask));","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + DESCRIPTION_DESC_BOTH","lastModifiedDate":"2023-02-21"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"                + TAG_DESC_FRIEND, new AddCommand(multiNameTasks));","lastModifiedDate":"2023-02-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"        // multiple description - last description accepted","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + DESCRIPTION_DESC_AMY + DESCRIPTION_DESC_BOB","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"lywich"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedTask));","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"Huggenguggen"},"content":"        Task expectedTaskMultipleTags \u003d new SimpleTaskBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + DESCRIPTION_DESC_BOB","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedTaskMultipleTags));","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"Huggenguggen"},"content":"    public void parseDeadline_allFieldsPresent_success() {","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"Huggenguggen"},"content":"        Deadline expectedDeadline \u003d new DeadlineBuilder(RETURN_BOOK)","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"Huggenguggen"},"content":"                .build();","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"Huggenguggen"},"content":"        Task expectedAssignment \u003d new DeadlineBuilder(ASSIGNMENT)","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"Huggenguggen"},"content":"                .build();","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"Huggenguggen"},"content":"        ArrayList\u003cTask\u003e multiNameTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"Huggenguggen"},"content":"        multiNameTasks.add(expectedAssignment);","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"Huggenguggen"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"Huggenguggen"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + \" \" + PREFIX_NAME + \"Return Book \"","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"Huggenguggen"},"content":"                + PREFIX_DESCRIPTION + \"Return book description \" + PREFIX_TAG + \"Reminder \"","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"joyngjr"},"content":"                + PREFIX_DEADLINE + \"2023-01-01 1800 \" + PREFIX_EFFORT + \"1\", new AddCommand(expectedDeadline));","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"Huggenguggen"},"content":"    public void parseEvent_allFieldsPresent_success() {","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"Huggenguggen"},"content":"        Event expectedEvent \u003d new EventBuilder(MEETING)","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"Huggenguggen"},"content":"                .build();","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"Huggenguggen"},"content":"        Task expectedRest \u003d new EventBuilder(REST)","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"Huggenguggen"},"content":"                .build();","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"Huggenguggen"},"content":"        ArrayList\u003cTask\u003e multiNameTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"Huggenguggen"},"content":"        multiNameTasks.add(expectedRest);","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"Huggenguggen"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"Huggenguggen"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + \" \" + PREFIX_NAME + \"Meeting \"","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"Huggenguggen"},"content":"                + PREFIX_DESCRIPTION + \"Meeting description \" + PREFIX_TAG + \"Reminder \"","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"joyngjr"},"content":"                + PREFIX_FROM + \"2023-01-01 1800 \" + PREFIX_TO + \"2023-01-02 1800 \" + PREFIX_EFFORT + \"5\",","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"joyngjr"},"content":"                new AddCommand(expectedEvent));","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"Huggenguggen"},"content":"    public void parseInvalidTask_mixedDeadlineFromTo_failure() {","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"Huggenguggen"},"content":"        String validDate \u003d \"2023-01-01 1800\";","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"Huggenguggen"},"content":"        // Test if input has deadline and from","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"Huggenguggen"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + DESCRIPTION_DESC_AMY + PREFIX_DESCRIPTION + \" \"","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"Huggenguggen"},"content":"                        + PREFIX_DEADLINE + validDate + \" \" + PREFIX_FROM + validDate,","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"Huggenguggen"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"Huggenguggen"},"content":"        // Test if input has deadline and to","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"Huggenguggen"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + DESCRIPTION_DESC_AMY + PREFIX_DESCRIPTION + \" \"","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"Huggenguggen"},"content":"                        + PREFIX_DEADLINE + validDate + \" \" + PREFIX_TO + validDate,","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"Huggenguggen"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"Huggenguggen"},"content":"        // Test if input has deadline and from and to","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"Huggenguggen"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + DESCRIPTION_DESC_AMY + PREFIX_DESCRIPTION + \" \"","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"Huggenguggen"},"content":"                        + PREFIX_DEADLINE + validDate + \" \" + PREFIX_FROM + validDate + \" \"","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"Huggenguggen"},"content":"                        + PREFIX_TO + validDate,","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"Huggenguggen"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"Huggenguggen"},"content":"        // Test if input has only from/to","lastModifiedDate":"2023-03-26"},{"lineNumber":145,"author":{"gitId":"Huggenguggen"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + DESCRIPTION_DESC_AMY + PREFIX_DESCRIPTION + \" \"","lastModifiedDate":"2023-03-26"},{"lineNumber":146,"author":{"gitId":"Huggenguggen"},"content":"                        + PREFIX_FROM + validDate,","lastModifiedDate":"2023-03-26"},{"lineNumber":147,"author":{"gitId":"Huggenguggen"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-26"},{"lineNumber":148,"author":{"gitId":"Huggenguggen"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + DESCRIPTION_DESC_AMY + PREFIX_DESCRIPTION + \" \"","lastModifiedDate":"2023-03-26"},{"lineNumber":149,"author":{"gitId":"Huggenguggen"},"content":"                        + PREFIX_TO + validDate,","lastModifiedDate":"2023-03-26"},{"lineNumber":150,"author":{"gitId":"Huggenguggen"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-26"},{"lineNumber":151,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"Huggenguggen"},"content":"    public void parseSimpleTask_optionalFieldsMissing_success() {","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"Huggenguggen"},"content":"        Task expectedTask \u003d new SimpleTaskBuilder(AMY).withTags().build();","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"lywich"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + DESCRIPTION_DESC_AMY,","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"lywich"},"content":"                new AddCommand(expectedTask));","lastModifiedDate":"2023-02-18"},{"lineNumber":159,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"lywich"},"content":"        // no description","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"lywich"},"content":"        expectedTask \u003d new SimpleTaskBuilder(AMY).withTags().withDescription().build();","lastModifiedDate":"2023-03-23"},{"lineNumber":162,"author":{"gitId":"lywich"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + DESCRIPTION_DESC_DEFAULT,","lastModifiedDate":"2023-03-23"},{"lineNumber":163,"author":{"gitId":"lywich"},"content":"                new AddCommand(expectedTask));","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"joyngjr"},"content":"    public void parseEvent_validDates_success() {","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"joyngjr"},"content":"        // zero tags","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"joyngjr"},"content":"        Task expectedTask \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"joyngjr"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + DESCRIPTION_DESC_AMY + FROM_DESC_DEFAULT + TO_DESC_DEFAULT,","lastModifiedDate":"2023-03-24"},{"lineNumber":171,"author":{"gitId":"joyngjr"},"content":"                new AddCommand(expectedTask));","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"joyngjr"},"content":"    public void parseEvent_invalidDates_failure() {","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"joyngjr"},"content":"        // zero tags","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"joyngjr"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + DESCRIPTION_DESC_AMY + INVALID_FROM_DESC + INVALID_TO_DESC,","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"joyngjr"},"content":"                MESSAGE_INVALID_EVENT_DATES);","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"lywich"},"content":"    public void parseSimpleTask_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"lywich"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + DESCRIPTION_DESC_BOB,","lastModifiedDate":"2023-02-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"lywich"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_DESCRIPTION_BOB,","lastModifiedDate":"2023-02-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"lywich"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + DESCRIPTION_DESC_BOB","lastModifiedDate":"2023-02-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"lywich"},"content":"        // invalid description","lastModifiedDate":"2023-02-18"},{"lineNumber":201,"author":{"gitId":"lywich"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + BLANK_DESCRIPTION_DESC","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"lywich"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"lywich"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DESCRIPTION_DESC_BOB","lastModifiedDate":"2023-02-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"lywich"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + BLANK_DESCRIPTION_DESC,","lastModifiedDate":"2023-03-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":213,"author":{"gitId":"lywich"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + DESCRIPTION_DESC_BOB","lastModifiedDate":"2023-02-18"},{"lineNumber":214,"author":{"gitId":"lywich"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-02-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Huggenguggen":75,"lywich":54,"PROGRAMMERHAO":15,"-":49,"joyngjr":24}},{"path":"src/test/java/seedu/task/logic/parser/AddSubtaskParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.BLANK_DESCRIPTION_DESC;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.DESCRIPTION_DESC_AMY;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.DESCRIPTION_DESC_BOB;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.INDEX_1;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.testutil.TypicalSubtasks.BOB_SUBTASK;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.core.index.Index;","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.logic.commands.AddSubtaskCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Description;","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Subtask;","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.testutil.SubtaskBuilder;","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class AddSubtaskParserTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private AddSubtaskParser parser \u003d new AddSubtaskParser();","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void parseSimpleTask_allFieldsPresent_success() {","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Subtask expectedTask \u003d new SubtaskBuilder(BOB_SUBTASK).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Subtask expectedNoDescription \u003d new SubtaskBuilder().withName(VALID_NAME_BOB).withDescription().build();","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // whitespace in preamble","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + INDEX_1 + NAME_DESC_BOB + DESCRIPTION_DESC_BOB,","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new AddSubtaskCommand(Index.fromOneBased(1), expectedTask));","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // no description","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseSuccess(parser, INDEX_1 + NAME_DESC_BOB,","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new AddSubtaskCommand(Index.fromOneBased(1), expectedNoDescription));","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // multiple description - last description accepted","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseSuccess(parser, INDEX_1 + NAME_DESC_BOB + DESCRIPTION_DESC_AMY + DESCRIPTION_DESC_BOB,","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new AddSubtaskCommand(Index.fromOneBased(1), expectedTask));","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void parseSimpleTask_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSubtaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // missing name prefix","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + DESCRIPTION_DESC_BOB,","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"            expectedMessage);","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // missing description prefix","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_DESCRIPTION_BOB,","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"            expectedMessage);","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // all prefixes missing","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_DESCRIPTION_BOB,","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"            expectedMessage);","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSubtaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // invalid name","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseFailure(parser, INDEX_1 + INVALID_NAME_DESC + DESCRIPTION_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // invalid description","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseFailure(parser, INDEX_1 + NAME_DESC_BOB + BLANK_DESCRIPTION_DESC, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // empty preamble","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DESCRIPTION_DESC_BOB","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSubtaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseFailure(parser, INDEX_1 + INVALID_NAME_DESC + BLANK_DESCRIPTION_DESC,","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"PROGRAMMERHAO":91}},{"path":"src/test/java/seedu/task/logic/parser/AlertCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.logic.commands.AlertCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":" * outside of the AlertCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":" * same path through the AlertCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"public class AlertCommandParserTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"    private AlertCommandParser parser \u003d new AlertCommandParser();","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"    public void parser_validArgs_returnsAlertCommand() {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"        assertParseSuccess(parser, \"1\", new AlertCommand(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"        // Test for multiple arguments but all valid (should take the last one)","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"        assertParseSuccess(parser, \"1 1 1 1 1 2\", new AlertCommand(2));","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"        assertParseSuccess(parser, \"1  1   1  2\", new AlertCommand(2));","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"        assertParseSuccess(parser, \"a 1 2 3\", new AlertCommand(3));","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AlertCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"        // Test if there are multi arguments but some are invalid","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"        assertParseFailure(parser, \"1 2 b\",","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AlertCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"    public void onlyDigits_onlyDigits_returnsTrue() {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"        AlertCommandParser parser \u003d new AlertCommandParser();","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(parser.onlyDigits(\"1 2 3 4 5 6 7 8\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(parser.onlyDigits(\"12034 9091   10290 12   3\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"    public void onlyDigits_notOnlyDigits_returnsFalse() {","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"        AlertCommandParser parser \u003d new AlertCommandParser();","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(parser.onlyDigits(\"a b c d e f g\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(parser.onlyDigits(\"a 2 4 0 v 1 2\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Huggenguggen":56}},{"path":"src/test/java/seedu/task/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"lywich":1,"-":149}},{"path":"src/test/java/seedu/task/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.Command;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"lywich":3,"-":36}},{"path":"src/test/java/seedu/task/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalIndexLists.INDEXLIST_FIRST_TASK;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.DeleteCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEXLIST_FIRST_TASK));","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"lywich":5,"-":25,"joyngjr":2}},{"path":"src/test/java/seedu/task/logic/parser/DeleteSubtaskParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.INDEX_1;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.INDEX_SUBTASK;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.INVALID_INDEX;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.INVALID_SUBTASK_INDEX;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_SUBTASK_INDEX;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_TASK_INDEX;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.core.index.Index;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.logic.commands.DeleteSubtaskCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class DeleteSubtaskParserTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private DeleteSubtaskParser parser \u003d new DeleteSubtaskParser();","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // whitespace in preamble","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + INDEX_1 + INDEX_SUBTASK,","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new DeleteSubtaskCommand(Index.fromOneBased(1), Index.fromOneBased(1)));","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void parseSimpleTask_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteSubtaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // missing main task index","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseFailure(parser, INDEX_SUBTASK,","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"            expectedMessage);","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // missing subtask index","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseFailure(parser, INDEX_1,","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"            expectedMessage);","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"        //missing subtask index prefix","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseFailure(parser, INDEX_1 + VALID_SUBTASK_INDEX,","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"            expectedMessage);","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // all prefixes missing","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseFailure(parser, VALID_TASK_INDEX + VALID_SUBTASK_INDEX,","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"            expectedMessage);","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteSubtaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // invalid name","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseFailure(parser, INVALID_INDEX + INDEX_SUBTASK, expectedMessage);","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // invalid description","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseFailure(parser, INDEX_1 + INVALID_SUBTASK_INDEX, expectedMessage);","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"PROGRAMMERHAO":67}},{"path":"src/test/java/seedu/task/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.BLANK_DESCRIPTION_DESC;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.DEADLINE_DESC_DEFAULT;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.DESCRIPTION_DESC_AMY;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.DESCRIPTION_DESC_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.FROM_DESC_DEFAULT;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.TO_DESC_DEFAULT;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_DEADLINE;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_DESCRIPTION_AMY;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_FROM_DATE;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_TO_DATE;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalIndexes.INDEX_THIRD_TASK;","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.index.Index;","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.EditCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"import seedu.task.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Task} being edited,","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + BLANK_DESCRIPTION_DESC,","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"        Index targetIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"lywich"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"lywich"},"content":"                + DESCRIPTION_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"        EditCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"lywich"},"content":"                .withDescription(VALID_DESCRIPTION_AMY)","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"lywich"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"lywich"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_BOB + DESCRIPTION_DESC_AMY;","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"lywich"},"content":"        EditCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"lywich"},"content":"                .withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"lywich"},"content":"                .withDescription(VALID_DESCRIPTION_AMY)","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"lywich"},"content":"                .build();","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"lywich"},"content":"        Index targetIndex \u003d INDEX_THIRD_TASK;","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"lywich"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"lywich"},"content":"        // description","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"lywich"},"content":"        userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_AMY;","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"lywich"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_AMY).build();","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"lywich"},"content":"        // description is being edited to now be \"deleted\".","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"lywich"},"content":"        userInput \u003d targetIndex.getOneBased() + BLANK_DESCRIPTION_DESC;","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"lywich"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withDescription(\"No Description\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"lywich"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"lywich"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"lywich"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // from dates","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"PROGRAMMERHAO"},"content":"        userInput \u003d targetIndex.getOneBased() + FROM_DESC_DEFAULT;","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"PROGRAMMERHAO"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withFrom(VALID_FROM_DATE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"PROGRAMMERHAO"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // to dates","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"PROGRAMMERHAO"},"content":"        userInput \u003d targetIndex.getOneBased() + TO_DESC_DEFAULT;","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"PROGRAMMERHAO"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withTo(VALID_TO_DATE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"PROGRAMMERHAO"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // deadline date","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"PROGRAMMERHAO"},"content":"        userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_DEFAULT;","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"PROGRAMMERHAO"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withDeadline(VALID_DEADLINE).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"PROGRAMMERHAO"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":168,"author":{"gitId":"lywich"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2023-02-18"},{"lineNumber":169,"author":{"gitId":"lywich"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-02-18"},{"lineNumber":170,"author":{"gitId":"lywich"},"content":"                + DESCRIPTION_DESC_AMY + TAG_DESC_FRIEND + DESCRIPTION_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-02-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"lywich"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2023-02-18"},{"lineNumber":173,"author":{"gitId":"lywich"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"lywich"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2023-02-18"},{"lineNumber":185,"author":{"gitId":"lywich"},"content":"        String userInput \u003d targetIndex.getOneBased() + BLANK_DESCRIPTION_DESC + DESCRIPTION_DESC_BOB;","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"lywich"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_BOB).build();","lastModifiedDate":"2023-02-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":191,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":195,"author":{"gitId":"lywich"},"content":"        Index targetIndex \u003d INDEX_THIRD_TASK;","lastModifiedDate":"2023-02-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"lywich"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-02-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"lywich":66,"PROGRAMMERHAO":26,"-":111}},{"path":"src/test/java/seedu/task/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.FindCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.DeadlineDateContainsKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.EventFromContainsKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.EventToContainsKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.NameContainsAllKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.TagsContainsKeywordsPredicate;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(\"Alice Bob\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"        assertParseSuccess(parser, \" n/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"        List\u003cString\u003e names \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"        names.add(\"Bob\");","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"        names.add(\"Alice\");","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"        FindCommand expectedFindCommand2 \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new FindCommand(new NameContainsAllKeywordsPredicate(names));","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseSuccess(parser, \" all/ n/Alice n/Bob\", expectedFindCommand2);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"        FindCommand expectedFindCommand3 \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new FindCommand(new DeadlineDateContainsKeywordsPredicate(\"2023-01-01\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseSuccess(parser, \" D/2023-01-01\", expectedFindCommand3);","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"        FindCommand expectedFindCommand4 \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new FindCommand(new EventToContainsKeywordsPredicate(\"2023-01-01\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseSuccess(parser, \" T/2023-01-01\", expectedFindCommand4);","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"        FindCommand expectedFindCommand5 \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new FindCommand(new EventFromContainsKeywordsPredicate(\"2023-01-01\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseSuccess(parser, \" F/2023-01-01\", expectedFindCommand5);","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"    public void parse_inValidArgs_throwsParseException() {","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"        assertParseFailure(parser, \" n/Alice d/test\",","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseFailure(parser, \" n/\", Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"    public void parse_multipleTags_returnsFindCommand() {","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"        String[] tags \u003d {\"friend\", \"family\"};","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"                new FindCommand(new TagsContainsKeywordsPredicate(Arrays.asList(tags)));","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"        assertParseSuccess(parser, \" t/friend t/family\", expectedFindCommand);","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void parse_multipleNames_returnsFindCommand() {","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] names \u003d {\"study\", \"eat\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"        FindCommand expectedFindCommand2 \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new FindCommand(new NameContainsAllKeywordsPredicate(Arrays.asList(names)));","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertParseSuccess(parser, \" all/ n/study n/eat \", expectedFindCommand2);","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"Huggenguggen":17,"lywich":6,"PROGRAMMERHAO":32,"-":23}},{"path":"src/test/java/seedu/task/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.ParserUtil.MESSAGE_INVALID_TIME;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.Date;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"\";","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"    private static final String INVALID_DATE \u003d \"2023 Jan 4\";","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"    private static final String VALID_DATE \u003d \"2023-01-02 1800\";","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"        assertEquals(INDEX_FIRST_TASK, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"        assertEquals(INDEX_FIRST_TASK, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"    public void parseTimeFrame_invalidInput_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTimeFrame(\"10 a\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"    public void parseTimeFrame_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_TIME, ()","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"                -\u003e ParserUtil.parseTimeFrame(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"    public void parseTimeFrame_validInput_success() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"        // No whitespaces","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"        assertEquals(1, ParserUtil.parseTimeFrame(\"1\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"        assertEquals(1, ParserUtil.parseTimeFrame(\"  1  \"));","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"    public void parseDescription_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription((String) null));","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"lywich"},"content":"    public void parseDescription_invalidValue_throwsParseException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"lywich"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDescription(INVALID_DESCRIPTION));","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"Huggenguggen"},"content":"    public void parseDate_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"Huggenguggen"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDate((String) null));","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"Huggenguggen"},"content":"    public void parseDate_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"Huggenguggen"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE));","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"Huggenguggen"},"content":"    public void parseDate_validValue_returnsDate() throws Exception {","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"Huggenguggen"},"content":"        assertEquals(new Date(VALID_DATE), ParserUtil.parseDate(VALID_DATE));","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Huggenguggen":28,"lywich":14,"-":125}},{"path":"src/test/java/seedu/task/logic/parser/ScheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import seedu.task.logic.commands.ScheduleCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Effort;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"public class ScheduleCommandParserTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"    private ScheduleCommandParser parser \u003d new ScheduleCommandParser();","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"    public void parse_haveDateNoEffort_returnsScheduleCommand() {","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"        assertParseSuccess(parser, \" D/2023-07-18\", new ScheduleCommand(LocalDate.parse(\"2023-07-18\")));","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"    public void parse_haveDateHaveEffort_returnsScheduleCommand() {","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"        assertParseSuccess(parser, \" D/2023-07-18 E/10\", new ScheduleCommand(LocalDate.parse(\"2023-07-18\"),","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"                new Effort(10)));","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"joyngjr":32}},{"path":"src/test/java/seedu/task/logic/parser/TaskBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.logic.parser;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_ALLMATCH;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalIndexLists.INDEXLIST_FIRST_TASK;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalIndexLists.INDEXLIST_FIRST_TASK_INT;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.AddCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.ClearCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.DeleteCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.EditCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.ExitCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.FindCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.HelpCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.ListCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.DescContainsAllKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.DescContainsKeywordsPredicate;","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.NameContainsAllKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.TagsContainsKeywordsPredicate;","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"import seedu.task.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.SimpleTaskBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"import seedu.task.testutil.TaskUtil;","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"public class TaskBookParserTest {","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"    private final TaskBookParser parser \u003d new TaskBookParser();","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"        Task task \u003d new SimpleTaskBuilder().build();","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(TaskUtil.getAddCommand(task));","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertEquals(new AddCommand(tasks), command);","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEXLIST_FIRST_TASK_INT);","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"        assertEquals(new DeleteCommand(INDEXLIST_FIRST_TASK), command);","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"        // tests for empty effort field","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"        Task task \u003d new SimpleTaskBuilder().buildDefault();","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(task).build();","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"                + INDEX_FIRST_TASK.getOneBased() + \" \" + TaskUtil.getEditTaskDescriptorDetails(descriptor));","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"        assertTrue(new EditCommand(INDEX_FIRST_TASK, descriptor).equals(command));","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"        // TODO: add tests for non-empty effort field","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"Huggenguggen"},"content":"        String nameKeyphrase \u003d \"Alice\";","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String nameKeyphrase1 \u003d \"Bob\";","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"Huggenguggen"},"content":"                FindCommand.COMMAND_WORD + \" \" + PREFIX_NAME + nameKeyphrase);","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"Huggenguggen"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(nameKeyphrase)), command);","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"PROGRAMMERHAO"},"content":"        FindCommand command1 \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"            FindCommand.COMMAND_WORD + \" \" + PREFIX_ALLMATCH + \" \" + PREFIX_NAME","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"PROGRAMMERHAO"},"content":"                + nameKeyphrase + \" \" + PREFIX_NAME + nameKeyphrase1);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"PROGRAMMERHAO"},"content":"        List\u003cString\u003e nameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"PROGRAMMERHAO"},"content":"        nameList.add(\"Bob\");","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"PROGRAMMERHAO"},"content":"        nameList.add(\"Alice\");","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertEquals(new FindCommand(new NameContainsAllKeywordsPredicate(nameList)), command1);","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"Huggenguggen"},"content":"        String descriptionKeyphrase \u003d \"test\";","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String descriptionKeyphrase1 \u003d \"now\";","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Huggenguggen"},"content":"        FindCommand descriptionCommand \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"Huggenguggen"},"content":"                FindCommand.COMMAND_WORD + \" \" + PREFIX_DESCRIPTION + descriptionKeyphrase);","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"Huggenguggen"},"content":"        assertEquals(new FindCommand(new DescContainsKeywordsPredicate(descriptionKeyphrase)), descriptionCommand);","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"PROGRAMMERHAO"},"content":"        FindCommand descriptionCommand1 \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"PROGRAMMERHAO"},"content":"            FindCommand.COMMAND_WORD + \" \" + PREFIX_ALLMATCH + \" \"","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"PROGRAMMERHAO"},"content":"                + PREFIX_DESCRIPTION + descriptionKeyphrase","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"PROGRAMMERHAO"},"content":"                + \" \" + PREFIX_DESCRIPTION + descriptionKeyphrase1);","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"PROGRAMMERHAO"},"content":"        List\u003cString\u003e descriptionList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"PROGRAMMERHAO"},"content":"        descriptionList.add(descriptionKeyphrase);","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"PROGRAMMERHAO"},"content":"        descriptionList.add(descriptionKeyphrase1);","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertEquals(new FindCommand(new DescContainsAllKeywordsPredicate(descriptionList)), descriptionCommand1);","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"Huggenguggen"},"content":"        String[] tagKeyphrases \u003d {\"friend\", \"family\"};","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"Huggenguggen"},"content":"        String tagKeyphrase \u003d PREFIX_TAG + \"friend \" + PREFIX_TAG + \"family\";","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"Huggenguggen"},"content":"        FindCommand tagCommand \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"Huggenguggen"},"content":"                FindCommand.COMMAND_WORD + \" \" + tagKeyphrase);","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"Huggenguggen"},"content":"        assertEquals(new FindCommand(new TagsContainsKeywordsPredicate(Arrays.asList(tagKeyphrases))), tagCommand);","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Huggenguggen":21,"lywich":26,"PROGRAMMERHAO":27,"-":63,"joyngjr":10}},{"path":"src/test/java/seedu/task/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDailyPlans.getTypicalPlanner;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.BENSON;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.GuiSettings;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.testutil.TaskBookBuilder;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"        assertEquals(new TaskBook(), new TaskBook(modelManager.getTaskBook()));","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"        assertEquals(new Planner(), new Planner(modelManager.getPlanner()));","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"        Path path \u003d Paths.get(\"task/book/file/path\");","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        userPrefs.setTaskBookFilePath(path);","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"        userPrefs.setPlannerFilePath(path);","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"        path \u003d Paths.get(\"new/task/book/file/path\");","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"        userPrefs.setTaskBookFilePath(path);","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"        userPrefs.setPlannerFilePath(path);","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"    public void setTaskBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setTaskBookFilePath(null));","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"    public void setTaskBookFilePath_validPath_setsTaskBookFilePath() {","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"        Path path \u003d Paths.get(\"task/book/file/path\");","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"        modelManager.setTaskBookFilePath(path);","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"        assertEquals(path, modelManager.getTaskBookFilePath());","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"    public void hasTask_taskNotInTaskBook_returnsFalse() {","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"        assertFalse(modelManager.hasTask(ALICE));","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"    public void hasTask_taskInTaskBook_returnsTrue() {","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"        modelManager.addTask(ALICE);","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"        assertTrue(modelManager.hasTask(ALICE));","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"lywich"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"lywich"},"content":"        TaskBook taskBook \u003d new TaskBookBuilder().withTask(ALICE).withTask(BENSON).build();","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"lywich"},"content":"        TaskBook differentTaskBook \u003d new TaskBook();","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"joyngjr"},"content":"        Planner samePlanner \u003d getTypicalPlanner();","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"joyngjr"},"content":"        modelManager \u003d new ModelManager(taskBook, userPrefs, samePlanner);","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"joyngjr"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(taskBook, userPrefs, samePlanner);","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"lywich"},"content":"        // different taskBook -\u003e returns false","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"joyngjr"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentTaskBook, userPrefs, samePlanner)));","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"Huggenguggen"},"content":"        String keyphrase \u003d ALICE.getName().fullName;","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"Huggenguggen"},"content":"        modelManager.updateFilteredTaskList(new NameContainsKeywordsPredicate(keyphrase));","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"joyngjr"},"content":"        assertFalse(modelManager.equals(new ModelManager(taskBook, userPrefs, samePlanner)));","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"lywich"},"content":"        modelManager.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"lywich"},"content":"        differentUserPrefs.setTaskBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"joyngjr"},"content":"        assertFalse(modelManager.equals(new ModelManager(taskBook, differentUserPrefs, samePlanner)));","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Huggenguggen":2,"lywich":29,"-":93,"joyngjr":14}},{"path":"src/test/java/seedu/task/model/PlannerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDailyPlans.getTypicalPlanner;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import java.util.Collections;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"public class PlannerTest {","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"    private final Planner planner \u003d new Planner();","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"    public void constructor() {","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"        assertEquals(Collections.emptyList(), planner.getDailyPlanList());","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"        assertThrows(NullPointerException.class, () -\u003e planner.resetData(null));","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"    public void resetData_withValidReadOnlyPlanner_replacesData() {","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"        Planner newPlans \u003d getTypicalPlanner();","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"        planner.resetData(newPlans);","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"        assertEquals(newPlans, planner);","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"joyngjr":28}},{"path":"src/test/java/seedu/task/model/TaskBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import java.util.Collection;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"import java.util.List;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.SimpleTaskBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"public class TaskBookTest {","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"    private final TaskBook taskBook \u003d new TaskBook();","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"    public void constructor() {","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"        assertEquals(Collections.emptyList(), taskBook.getTaskList());","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskBook.resetData(null));","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"    public void resetData_withValidReadOnlyTaskBook_replacesData() {","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"        TaskBook newData \u003d getTypicalTaskBook();","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"        taskBook.resetData(newData);","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"        assertEquals(newData, taskBook);","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"    public void resetData_withDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"        // Two tasks with the same identity fields","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"        Task editedAlice \u003d new SimpleTaskBuilder(ALICE).withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"                .build();","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"        List\u003cTask\u003e newTasks \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"        TaskBookStub newData \u003d new TaskBookStub(newTasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e taskBook.resetData(newData));","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskBook.hasTask(null));","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"    public void hasTask_taskNotInTaskBook_returnsFalse() {","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"        assertFalse(taskBook.hasTask(ALICE));","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"    public void hasTask_taskInTaskBook_returnsTrue() {","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"        taskBook.addTask(ALICE);","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"lywich"},"content":"        assertTrue(taskBook.hasTask(ALICE));","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"    public void hasTask_taskWithSameIdentityFieldsInTaskBook_returnsTrue() {","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"        taskBook.addTask(ALICE);","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"Huggenguggen"},"content":"        Task editedAlice \u003d new SimpleTaskBuilder(ALICE).withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"                .build();","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"        assertTrue(taskBook.hasTask(editedAlice));","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"    public void getTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"lywich"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e taskBook.getTaskList().remove(0));","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"lywich"},"content":"     * A stub ReadOnlyTaskBook whose tasks list can violate interface constraints.","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"    private static class TaskBookStub implements ReadOnlyTaskBook {","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"        TaskBookStub(Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"lywich"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"        @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"lywich"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"lywich"},"content":"            return tasks;","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"Huggenguggen":5,"lywich":99}},{"path":"src/test/java/seedu/task/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"    public void setTaskBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setTaskBookFilePath(null));","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"lywich":4,"-":17}},{"path":"src/test/java/seedu/task/model/calendar/DailyPlanTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.calendar;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalEvents.EXAM;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalEvents.SLEEPOVER;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalEvents.STUDY;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalLocalDates.APR27;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalLocalDates.LOCAL_DATE_FIRST;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalLocalDates.LOCAL_DATE_FOURTH;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalLocalDates.LOCAL_DATE_SECOND;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalLocalDates.LOCAL_DATE_THIRD;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalLocalDates.MAY5;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.AMY;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.BENSON;","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.BOB;","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.GEORGE;","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.EventList;","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"import seedu.task.testutil.TypicalEvents;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"public class DailyPlanTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"    public void allocateEvent() {","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"        ObservableList obList \u003d FXCollections.observableList(TypicalEvents.getTypicalEventsInApril());","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"        EventList taskList \u003d new EventList(obList, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"        // Event happening on date -\u003e add to date","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"        DailyPlan actualPlan \u003d new DailyPlan(24, APR27);","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"        actualPlan.allocateEvent(taskList);","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"        tasks.add(SLEEPOVER);","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"        DailyPlan expectedPlan \u003d new DailyPlan(tasks, 24, 1, APR27);","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"        assertEquals(expectedPlan, actualPlan);","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"        // No event happening on date -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"        DailyPlan p2 \u003d new DailyPlan(24, MAY5);","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"        expectedPlan \u003d new DailyPlan(tasks, 24, 0, MAY5);","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"        actualPlan \u003d new DailyPlan(24, MAY5);","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"        actualPlan.allocateEvent(taskList);","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"        assertEquals(expectedPlan, actualPlan);","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"    public void hasRemoved() {","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"        DailyPlan p1 \u003d new DailyPlan(30, LOCAL_DATE_FOURTH);","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"        p1.addTask(AMY);","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"        p1.addTask(BENSON);","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"        p1.addTask(BOB);","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"        // found task to remove -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"        assertTrue(p1.hasRemoved(AMY));","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"        // task not found -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"        assertFalse(p1.hasRemoved(GEORGE));","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"    public void hasEdited() {","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"        DailyPlan p1 \u003d new DailyPlan(30, LOCAL_DATE_FOURTH);","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"        p1.addTask(AMY);","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"        p1.addTask(BENSON);","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"        p1.addTask(BOB);","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"        // found task, edit it -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"        assertTrue(p1.hasEdited(AMY, GEORGE));","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"        // task not found -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"        assertFalse(p1.hasEdited(AMY, BOB));","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"    public void getCurrentWorkload() {","lastModifiedDate":"2023-04-04"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"        DailyPlan p1 \u003d new DailyPlan(30, LOCAL_DATE_FOURTH);","lastModifiedDate":"2023-04-04"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"        p1.addTask(AMY);","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"        assertEquals(24, p1.getCurrentWorkload());","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"joyngjr"},"content":"        p1.addTask(BENSON);","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"joyngjr"},"content":"        assertEquals(28, p1.getCurrentWorkload());","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"joyngjr"},"content":"        p1.addTask(BOB);","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"joyngjr"},"content":"        assertEquals(52, p1.getCurrentWorkload());","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"joyngjr"},"content":"    public void getSpareTime() {","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"joyngjr"},"content":"        DailyPlan p1 \u003d new DailyPlan(30, LOCAL_DATE_FOURTH);","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"joyngjr"},"content":"        p1.addTask(AMY);","lastModifiedDate":"2023-04-04"},{"lineNumber":104,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"joyngjr"},"content":"        // Still have spare time","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"joyngjr"},"content":"        assertEquals(6, p1.getSpareTime());","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"joyngjr"},"content":"        DailyPlan p2 \u003d new DailyPlan(3, LOCAL_DATE_FOURTH);","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"joyngjr"},"content":"        p2.addTask(AMY);","lastModifiedDate":"2023-04-04"},{"lineNumber":111,"author":{"gitId":"joyngjr"},"content":"        p2.addTask(BOB);","lastModifiedDate":"2023-04-04"},{"lineNumber":112,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"joyngjr"},"content":"        // Overloaded day","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"joyngjr"},"content":"        assertEquals(-45, p2.getSpareTime());","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"joyngjr"},"content":"    public void isWithinRange() {","lastModifiedDate":"2023-04-04"},{"lineNumber":119,"author":{"gitId":"joyngjr"},"content":"        DailyPlan p1 \u003d new DailyPlan(5, LOCAL_DATE_FOURTH);","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"joyngjr"},"content":"        DailyPlan p2 \u003d new DailyPlan(2, LOCAL_DATE_THIRD);","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"joyngjr"},"content":"        // same day -\u003e return true","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"joyngjr"},"content":"        assertTrue(p1.isWithinRange(EXAM));","lastModifiedDate":"2023-04-04"},{"lineNumber":124,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"joyngjr"},"content":"        // within day range -\u003e return true","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"joyngjr"},"content":"        assertTrue(p1.isWithinRange(SLEEPOVER));","lastModifiedDate":"2023-04-04"},{"lineNumber":127,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"joyngjr"},"content":"        // after day -\u003e return false","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"joyngjr"},"content":"        assertFalse(p2.isWithinRange(EXAM));","lastModifiedDate":"2023-04-04"},{"lineNumber":130,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"joyngjr"},"content":"        // before day -\u003e return false","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"joyngjr"},"content":"        assertFalse(p1.isWithinRange(STUDY));","lastModifiedDate":"2023-04-04"},{"lineNumber":133,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"joyngjr"},"content":"    public void hasSpareTime() {","lastModifiedDate":"2023-04-04"},{"lineNumber":137,"author":{"gitId":"joyngjr"},"content":"        DailyPlan p1 \u003d new DailyPlan(5, LOCAL_DATE_FIRST);","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"joyngjr"},"content":"        // work longer than desired -\u003e return false","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"joyngjr"},"content":"        assertFalse(p1.hasSpareTime(10));","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"joyngjr"},"content":"        // work shorter than desired -\u003e return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"joyngjr"},"content":"        assertTrue(p1.hasSpareTime(2));","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"joyngjr"},"content":"        // work does not take time -\u003e return true","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"joyngjr"},"content":"        assertTrue(p1.hasSpareTime(0));","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"joyngjr"},"content":"    public void equals_test() {","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"joyngjr"},"content":"        DailyPlan p1 \u003d new DailyPlan(5, LOCAL_DATE_FIRST);","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"joyngjr"},"content":"        DailyPlan p2 \u003d new DailyPlan(5, LOCAL_DATE_FIRST);","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"joyngjr"},"content":"        DailyPlan p3 \u003d new DailyPlan(5, LOCAL_DATE_SECOND);","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"joyngjr"},"content":"        DailyPlan p4 \u003d new DailyPlan(10, LOCAL_DATE_SECOND);","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"joyngjr"},"content":"        // same object -\u003e return true","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"joyngjr"},"content":"        assertTrue(p1.equals(p1));","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"joyngjr"},"content":"        // different object, same field -\u003e return true","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"joyngjr"},"content":"        assertTrue(p1.equals(p2));","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"joyngjr"},"content":"        // same workload, different date -\u003e return false","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"joyngjr"},"content":"        assertFalse(p1.equals(p3));","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"joyngjr"},"content":"        // same date, different workload -\u003e return false","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"joyngjr"},"content":"        assertFalse(p3.equals(p4));","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"joyngjr"},"content":"        // different date and workload -\u003e return false","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"joyngjr"},"content":"        assertFalse(p2.equals(p3));","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"joyngjr"},"content":"        // null -\u003e return false","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"joyngjr"},"content":"        assertFalse(p1.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":174,"author":{"gitId":"joyngjr"},"content":"        ArrayList taskList \u003d new ArrayList();","lastModifiedDate":"2023-04-04"},{"lineNumber":175,"author":{"gitId":"joyngjr"},"content":"        DailyPlan p5 \u003d new DailyPlan(taskList, 10, 10, LocalDate.parse(\"2023-03-23\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":176,"author":{"gitId":"joyngjr"},"content":"        DailyPlan p6 \u003d new DailyPlan(taskList, 10, 10, LocalDate.parse(\"2023-03-23\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":177,"author":{"gitId":"joyngjr"},"content":"        DailyPlan p7 \u003d new DailyPlan(taskList, 10, 10, LocalDate.parse(\"2023-03-24\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":178,"author":{"gitId":"joyngjr"},"content":"        DailyPlan p8 \u003d new DailyPlan(taskList, 5, 10, LocalDate.parse(\"2023-03-24\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":179,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":180,"author":{"gitId":"joyngjr"},"content":"        // same values from Json -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":181,"author":{"gitId":"joyngjr"},"content":"        assertTrue(p5.equals(p6));","lastModifiedDate":"2023-04-04"},{"lineNumber":182,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":183,"author":{"gitId":"joyngjr"},"content":"        // different values from Json -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":184,"author":{"gitId":"joyngjr"},"content":"        assertFalse(p5.equals(p7));","lastModifiedDate":"2023-04-04"},{"lineNumber":185,"author":{"gitId":"joyngjr"},"content":"        assertFalse(p8.equals(p7));","lastModifiedDate":"2023-04-04"},{"lineNumber":186,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":187}},{"path":"src/test/java/seedu/task/model/calendar/MonthlyPlanTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.calendar;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDeadlines.getTypicalDeadlinesInApril;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalEvents.getTypicalEventsInApril;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalLocalDates.LOCAL_DATE_FOURTH;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalMonthlyPlan.APR26_PLAN;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalMonthlyPlan.DAILY_PLANS_DEADLINE;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalMonthlyPlan.DAILY_PLANS_EVENT;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalMonthlyPlan.DAILY_PLANS_SIMPLE_TASK;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.getTypicalTasks;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.DeadlineList;","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.EventList;","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.SimpleTaskList;","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"public class MonthlyPlanTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    public void constructorCreation() {","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"        MonthlyPlan m \u003d new MonthlyPlan(24, LOCAL_DATE_FOURTH);","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"        MonthlyPlan m2 \u003d APR26_PLAN;","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"        assertEquals(APR26_PLAN, m);","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"    public void allocateEvents() {","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"        ObservableList obList \u003d FXCollections.observableList(getTypicalEventsInApril());","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"        EventList taskList \u003d new EventList(obList, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"        MonthlyPlan expectedPlan \u003d new MonthlyPlan(DAILY_PLANS_EVENT, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"        MonthlyPlan actualPlan \u003d new MonthlyPlan(24, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        actualPlan.allocateEvents(taskList);","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"        assertTrue(expectedPlan.equals(actualPlan));","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"    public void allocateDeadlines() {","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"        ObservableList obList \u003d FXCollections.observableList(getTypicalDeadlinesInApril());","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"        DeadlineList taskList \u003d new DeadlineList(obList, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"        MonthlyPlan expectedPlan \u003d new MonthlyPlan(DAILY_PLANS_DEADLINE, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"        MonthlyPlan actualPlan \u003d new MonthlyPlan(24, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"        actualPlan.allocateDeadlines(taskList);","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"        assertTrue(expectedPlan.equals(actualPlan));","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"    public void allocateSimpleTasks() {","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"        ObservableList obList \u003d FXCollections.observableList(getTypicalTasks());","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"        SimpleTaskList taskList \u003d new SimpleTaskList(obList, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"        MonthlyPlan expectedPlan \u003d new MonthlyPlan(DAILY_PLANS_SIMPLE_TASK, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"        MonthlyPlan actualPlan \u003d new MonthlyPlan(24, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"        actualPlan.allocateSimpleTasks(taskList);","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"        assertTrue(expectedPlan.equals(actualPlan));","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"    public void findMostBusyFreeDate() {","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"        // not yet populated, first free day","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"        assertEquals(0, APR26_PLAN.findMostBusyFreeDate(0));","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"        // task requires too much effort -\u003e return -1","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"        assertEquals(-1, APR26_PLAN.findMostBusyFreeDate(50));","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"    public void findFirstFreeDate() {","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"        // not yet populated, first free day","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"        assertEquals(0, APR26_PLAN.findFirstFreeDate(3, 1));","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"        // no free days before the deadline -\u003e return -1","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"        assertEquals(-1, APR26_PLAN.findFirstFreeDate(3, -1));","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"joyngjr"},"content":"    public void equals() {","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"joyngjr"},"content":"        MonthlyPlan planA \u003d new MonthlyPlan(10, LocalDate.parse(\"2023-03-23\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"joyngjr"},"content":"        MonthlyPlan planB \u003d new MonthlyPlan(10, LocalDate.parse(\"2023-03-23\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"joyngjr"},"content":"        MonthlyPlan planC \u003d new MonthlyPlan(15, LocalDate.parse(\"2023-03-23\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"joyngjr"},"content":"        MonthlyPlan planD \u003d new MonthlyPlan(10, LocalDate.parse(\"2023-03-20\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":97,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"joyngjr"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"joyngjr"},"content":"        assertTrue(planA.equals(planA));","lastModifiedDate":"2023-04-04"},{"lineNumber":100,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"joyngjr"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-04-04"},{"lineNumber":102,"author":{"gitId":"joyngjr"},"content":"        assertTrue(planA.equals(planB));","lastModifiedDate":"2023-04-04"},{"lineNumber":103,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":104,"author":{"gitId":"joyngjr"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"joyngjr"},"content":"        Assertions.assertFalse(planA.equals(planC)); // different workload","lastModifiedDate":"2023-04-04"},{"lineNumber":106,"author":{"gitId":"joyngjr"},"content":"        Assertions.assertFalse(planA.equals(planD)); // different date","lastModifiedDate":"2023-04-04"},{"lineNumber":107,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":108}},{"path":"src/test/java/seedu/task/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model.tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"lywich":2,"-":24}},{"path":"src/test/java/seedu/task/model/task/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"public class DateTest {","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"    public static final String VALID_DATE \u003d \"2023-01-01 1800\";","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"        String invalidDate \u003d \"invalid date\";","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"    public void isValidDate_validInput_returnsTrue() {","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"        // valid Date","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"        assertTrue(Date.isValidDate(\" 2023-01-01 1800\")); // input is trimmed.","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"        assertTrue(Date.isValidDate(\"2023-01-01 1800\")); // time must be at least 4 characters and max of 6","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"        assertTrue(Date.isValidDate(\"2023-02-01 18000\")); // time must be at least 4 characters and max of 6","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"        assertTrue(Date.isValidDate(\"2023-02-01 180000\")); // time must be at least 4 characters and max of 6","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"        assertTrue(Date.isValidDate(\"2023-02-01 0000 2023-02-01 1800\")); // only the first valid date is parsed","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"    public void isValidDate_invalidInput_returnsTrue() {","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"        // null Date","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"        // blank Date","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"        assertFalse(Date.isValidDate(\"\")); // empty string","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"        assertFalse(Date.isValidDate(\" \")); // spaces only","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"        // invalid Date format","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"        assertFalse(Date.isValidDate(\"2023-01-01\")); // missing time field","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"        assertFalse(Date.isValidDate(\"2023-01-01 \")); // missing time field","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"        assertFalse(Date.isValidDate(\"2023-01-01 0\")); // invalid time field","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"        assertFalse(Date.isValidDate(\"2023-01-01 00\")); // invalid time field","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"        assertFalse(Date.isValidDate(\"2023-01-01 000\")); // invalid time field","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"        assertFalse(Date.isValidDate(\"2023-01-01 0 0\")); // invalid time field","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"        assertFalse(Date.isValidDate(\"2023-01-01 0 0 0\")); // invalid time field","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"        assertFalse(Date.isValidDate(\"2023-01-01 000\")); // invalid time field","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"        assertFalse(Date.isValidDate(\"2023-01-01  000\")); // invalid time field","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"        assertFalse(Date.isValidDate(\"2023-02-0 0000\")); // missing date field","lastModifiedDate":"2023-02-21"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"        assertFalse(Date.isValidDate(\"2023-0-00 0000\")); // missing date field","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"        assertFalse(Date.isValidDate(\"202-02-00 0000\")); // missing date field","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"        assertFalse(Date.isValidDate(\"2023-02-31_0000\")); // underscore in local part","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"        assertFalse(Date.isValidDate(\"2023-02-0+0000\")); // plus in local part","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"        // invalid Dates","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"        assertFalse(Date.isValidDate(\"2023-02-31 0000\")); // 31st Feb does not exist","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"    public void formatDateTest() {","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"        assertEquals(Date.formatDate(\"2023-01-01 1800\"), \"2023-01-01T18:00:00\");","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"        assertEquals(Date.formatDate(\"2023-01-01 18001\"), \"2023-01-01T18:00:00\");","lastModifiedDate":"2023-02-21"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"        assertEquals(Date.formatDate(\"2023-01-01 180011\"), \"2023-01-01T18:00:00\");","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Date.formatDate(\"2023-01-01 180\"));","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"    public void toString_test() {","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"        Date dateTest \u003d new Date(VALID_DATE);","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"        assertEquals(dateTest.toString(), \"JAN 1 2023 1800\");","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"Huggenguggen"},"content":"    public void getValue_test() {","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"        Date dateTest \u003d new Date(VALID_DATE);","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"Huggenguggen"},"content":"        assertEquals(dateTest.getValue(), VALID_DATE);","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":85,"author":{"gitId":"lywich"},"content":"    public void equals_test() {","lastModifiedDate":"2023-02-21"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"        Date dateTest \u003d new Date(\"2023-01-01 1800\");","lastModifiedDate":"2023-02-21"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"        Date dateTestClone \u003d new Date(\"2023-01-01 1800\");","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"lywich"},"content":"        assertEquals(dateTest, dateTestClone);","lastModifiedDate":"2023-02-21"},{"lineNumber":89,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"    public void compareTo_test() {","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"        Date dateTest \u003d new Date(\"2023-01-01 1800\");","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"        Date dateTestClone \u003d new Date(\"2023-01-01 1800\");","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"lywich"},"content":"        assertEquals(0, dateTest.compareTo(dateTestClone));","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"lywich"},"content":"        dateTestClone \u003d new Date(\"2023-01-01 1700\");","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"lywich"},"content":"        assertEquals(1, dateTest.compareTo(dateTestClone));","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"        dateTestClone \u003d new Date(\"2023-01-01 1900\");","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"lywich"},"content":"        assertEquals(-1, dateTest.compareTo(dateTestClone));","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"Huggenguggen":9,"lywich":92}},{"path":"src/test/java/seedu/task/model/task/DeadlineListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDeadlines.PROJECT;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDeadlines.getTypicalDeadlinesInApril;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalEvents.MEETING;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalLocalDates.LOCAL_DATE_FIFTH;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalLocalDates.LOCAL_DATE_THIRD;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalMixedClassList.getTypicalMixedClassList;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"public class DeadlineListTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"    public void constructor_mixedInputs_onlyAddDeadlines() {","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"        ObservableList allTaskList \u003d FXCollections.observableList(getTypicalMixedClassList());","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"        DeadlineList actual \u003d new DeadlineList(allTaskList, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"        ObservableList deadlineList \u003d FXCollections.observableList(getTypicalDeadlinesInApril());","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"        DeadlineList expected \u003d new DeadlineList(deadlineList, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"    public void size() {","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"        ObservableList deadlineList \u003d FXCollections.observableList(getTypicalDeadlinesInApril());","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"        DeadlineList list \u003d new DeadlineList(deadlineList, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"        assertEquals(2, list.size());","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"    public void filter() {","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        DeadlineList list \u003d new DeadlineList();","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"        // Select SimpleTasks -\u003e return false","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"        assertFalse(list.isCorrectType(ALICE, LOCAL_DATE_THIRD));","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"        // Select Deadline, Before due date -\u003e return true","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"        assertTrue(list.isCorrectType(PROJECT, LOCAL_DATE_FIFTH));","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"        //Select Deadline, after due date -\u003e return false","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"        assertFalse(list.isCorrectType(PROJECT, LOCAL_DATE_THIRD));","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"        // Select Event -\u003e return false","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"        assertFalse(list.isCorrectType(MEETING, LOCAL_DATE_THIRD));","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"    public void equals() {","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"        ObservableList list1 \u003d FXCollections.observableList(getTypicalDeadlinesInApril());","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"        DeadlineList d1 \u003d new DeadlineList(list1, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"        DeadlineList d2 \u003d new DeadlineList(list1, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"        ObservableList list2 \u003d FXCollections.observableList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"        DeadlineList d3 \u003d new DeadlineList(list2, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"        DeadlineList d4 \u003d new DeadlineList(list2, LocalDate.parse(\"2023-04-28\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"        // same instance -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"        assertTrue(d1.equals(d1));","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"        // same values -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"        assertTrue(d1.equals(d2));","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"        // different list -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"        assertFalse(d3.equals(d2));","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"        // different dates, same list -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"        assertTrue(d3.equals(d4));","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"        // null -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"        assertFalse(d4.equals(null));","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"        // different type -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"        assertFalse(d4.equals(\"ABC\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":84}},{"path":"src/test/java/seedu/task/model/task/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.testutil.TypicalDeadlines.ASSIGNMENT;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.testutil.TypicalDeadlines.RETURN_BOOK;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.DeadlineBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"        Task task \u003d new DeadlineBuilder().build();","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e task.getTags().remove(0));","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    public void isValidDeadline() {","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"        // before deadline -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"        assertTrue(ASSIGNMENT.isValidDate(LocalDate.parse(\"2022-12-12\")));","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"        // after deadline -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"        assertFalse(ASSIGNMENT.isValidDate(LocalDate.parse(\"2023-02-12\")));","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"        // same day as deadline -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"        assertFalse(ASSIGNMENT.isValidDate(LocalDate.parse(\"2023-01-01\")));","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"    public void isSameDeadline() {","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(RETURN_BOOK.isSameTask(RETURN_BOOK));","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(RETURN_BOOK.isSameTask(null));","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"        Task editedReturn \u003d new DeadlineBuilder(RETURN_BOOK).withDescription(\"Return book description 2\")","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"                .withTags(\"Reminder2\").withDate(\"2023-01-01 1800\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(RETURN_BOOK.isSameTask(editedReturn));","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"        editedReturn \u003d new DeadlineBuilder(RETURN_BOOK).withName(\"Assignment\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(RETURN_BOOK.isSameTask(editedReturn));","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"        Task editedAssignment \u003d new DeadlineBuilder(ASSIGNMENT).withName(\"Assignment\".toLowerCase()).build();","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"        assertTrue(ASSIGNMENT.isSameTask(editedAssignment));","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"        String nameWithTrailingSpaces \u003d \"Assignment\" + \" \";","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"        editedAssignment \u003d new DeadlineBuilder(ASSIGNMENT).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(ASSIGNMENT.isSameTask(editedAssignment));","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"        // different effort, all other attributes same -\u003e return true","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"        editedAssignment \u003d new DeadlineBuilder(ASSIGNMENT).withEffort(3).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"        assertTrue(ASSIGNMENT.isSameTask(editedAssignment));","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"        // all attributes same, different instance -\u003e return true","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"        Task copyAssignment1 \u003d new DeadlineBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"        Task copyAssignment2 \u003d new DeadlineBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"        assertTrue(copyAssignment1.isSameTask(copyAssignment2));","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"Huggenguggen"},"content":"    public void equals() {","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"Huggenguggen"},"content":"        Task returnCopy \u003d new DeadlineBuilder(RETURN_BOOK).build();","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(RETURN_BOOK.equals(returnCopy));","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"Huggenguggen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(RETURN_BOOK.equals(RETURN_BOOK));","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"Huggenguggen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(RETURN_BOOK.equals(null));","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"Huggenguggen"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(RETURN_BOOK.equals(5));","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"Huggenguggen"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(RETURN_BOOK.equals(ASSIGNMENT));","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"Huggenguggen"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"Huggenguggen"},"content":"        Task editedReturn \u003d new DeadlineBuilder(RETURN_BOOK).withName(\"Assignment\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(RETURN_BOOK.equals(editedReturn));","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"Huggenguggen"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"Huggenguggen"},"content":"        editedReturn \u003d new DeadlineBuilder(RETURN_BOOK).withDescription(\"Assignment description\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(RETURN_BOOK.equals(editedReturn));","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"Huggenguggen"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"Huggenguggen"},"content":"        editedReturn \u003d new DeadlineBuilder(RETURN_BOOK).withTags(\"Important\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(RETURN_BOOK.equals(editedReturn));","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"joyngjr"},"content":"        // different effort, all other attributes same -\u003e return false","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"joyngjr"},"content":"        editedReturn \u003d new DeadlineBuilder(ASSIGNMENT).withEffort(3).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"joyngjr"},"content":"        assertTrue(ASSIGNMENT.isSameTask(editedReturn));","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"joyngjr"},"content":"        // all attributes same, different instance -\u003e return true","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"joyngjr"},"content":"        Task copyReturn1 \u003d new DeadlineBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"joyngjr"},"content":"        Task copyReturn2 \u003d new DeadlineBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"joyngjr"},"content":"        assertTrue(copyReturn1.isSameTask(copyReturn2));","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"Huggenguggen"},"content":"    public void isComingUp_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"Huggenguggen"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"Huggenguggen"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"Huggenguggen"},"content":"        String validTime \u003d now.plus(Duration.ofHours(5)).format(formatter);","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"Huggenguggen"},"content":"        //test if the deadline is coming up","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"Huggenguggen"},"content":"        Task deadlineComingUp \u003d new DeadlineBuilder().withDate(validTime)","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"Huggenguggen"},"content":"                        .withAlertWindow(\"6\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(deadlineComingUp.isComingUp());","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"Huggenguggen"},"content":"    public void isComingUp_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"Huggenguggen"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"Huggenguggen"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"Huggenguggen"},"content":"        String invalidFromTime \u003d now.minus(Duration.ofHours(1)).format(formatter);","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"Huggenguggen"},"content":"        String farTime \u003d now.minus(Duration.ofHours(60)).format(formatter);","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"Huggenguggen"},"content":"        // Test for overdue deadline","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"Huggenguggen"},"content":"        Task overdueDeadline \u003d new DeadlineBuilder().withDate(invalidFromTime)","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"Huggenguggen"},"content":"                .withAlertWindow(\"6\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"Huggenguggen"},"content":"        //deadline further than alertwindow","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"Huggenguggen"},"content":"        Task farAwayEvent \u003d new DeadlineBuilder().withDate(farTime)","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"Huggenguggen"},"content":"                .withAlertWindow(\"6\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(overdueDeadline.isComingUp());","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(farAwayEvent.isComingUp());","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":147,"author":{"gitId":"lywich"},"content":"    public void compareTo_tags() {","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"lywich"},"content":"        Tag tagOne \u003d new Tag(\"Tag1\");","lastModifiedDate":"2023-03-04"},{"lineNumber":149,"author":{"gitId":"lywich"},"content":"        Tag tagTwo \u003d new Tag(\"Tag2\");","lastModifiedDate":"2023-03-04"},{"lineNumber":150,"author":{"gitId":"lywich"},"content":"        Set\u003cTag\u003e zeroTag \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":151,"author":{"gitId":"lywich"},"content":"        Set\u003cTag\u003e oneTag \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"lywich"},"content":"        oneTag.add(tagOne);","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"lywich"},"content":"        Set\u003cTag\u003e twoTag \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"lywich"},"content":"        twoTag.add(tagOne);","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"lywich"},"content":"        twoTag.add(tagTwo);","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"lywich"},"content":"        Task zeroTagDeadline \u003d new Deadline(new Name(\"zeroTag\"), new Description(\"zeroTag\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":158,"author":{"gitId":"joyngjr"},"content":"                zeroTag, new Date(\"2023-04-01 0000\"), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"lywich"},"content":"        Task oneTagDeadline \u003d new Deadline(new Name(\"oneTag\"), new Description(\"oneTag\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":160,"author":{"gitId":"joyngjr"},"content":"                oneTag, new Date(\"2023-04-01 0000\"), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"lywich"},"content":"        Task twoTagDeadline \u003d new Deadline(new Name(\"twoTag\"), new Description(\"twoTag\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":162,"author":{"gitId":"joyngjr"},"content":"                twoTag, new Date(\"2023-04-01 0000\"), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":164,"author":{"gitId":"lywich"},"content":"        assertEquals(1, oneTagDeadline.compareTo(zeroTagDeadline));","lastModifiedDate":"2023-03-04"},{"lineNumber":165,"author":{"gitId":"lywich"},"content":"        assertEquals(-1, oneTagDeadline.compareTo(twoTagDeadline));","lastModifiedDate":"2023-03-04"},{"lineNumber":166,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":167,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":168,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":169,"author":{"gitId":"lywich"},"content":"    public void compareTo_name() {","lastModifiedDate":"2023-03-04"},{"lineNumber":170,"author":{"gitId":"lywich"},"content":"        Task aName \u003d new Deadline(new Name(\"apple\"), new Description(\"apple\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":171,"author":{"gitId":"joyngjr"},"content":"                new HashSet\u003c\u003e(), new Date(\"2023-04-01 0000\"), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"lywich"},"content":"        Task bName \u003d new Deadline(new Name(\"bucket\"), new Description(\"bucket\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":173,"author":{"gitId":"joyngjr"},"content":"                new HashSet\u003c\u003e(), new Date(\"2023-04-01 0000\"), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"lywich"},"content":"        Task cName \u003d new Deadline(new Name(\"car\"), new Description(\"car\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":175,"author":{"gitId":"joyngjr"},"content":"                new HashSet\u003c\u003e(), new Date(\"2023-04-01 0000\"), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":177,"author":{"gitId":"lywich"},"content":"        assertEquals(1, bName.compareTo(aName));","lastModifiedDate":"2023-03-04"},{"lineNumber":178,"author":{"gitId":"lywich"},"content":"        assertEquals(-1, bName.compareTo(cName));","lastModifiedDate":"2023-03-04"},{"lineNumber":179,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":180,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":181,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":182,"author":{"gitId":"lywich"},"content":"    public void compareTo_date() {","lastModifiedDate":"2023-03-04"},{"lineNumber":183,"author":{"gitId":"lywich"},"content":"        Task morningDeadline \u003d new Deadline(new Name(\"Morning\"), new Description(\"0000 to 1200\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":184,"author":{"gitId":"joyngjr"},"content":"                new HashSet\u003c\u003e(), new Date(\"2023-04-01 0000\"), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"lywich"},"content":"        Task noonDeadline \u003d new Deadline(new Name(\"WholeDay\"), new Description(\"0000 to 2359\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":186,"author":{"gitId":"joyngjr"},"content":"                new HashSet\u003c\u003e(), new Date(\"2023-04-01 1200\"), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"lywich"},"content":"        Task nightDeadline \u003d new Deadline(new Name(\"Night\"), new Description(\"1200 to 2359\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":188,"author":{"gitId":"joyngjr"},"content":"                new HashSet\u003c\u003e(), new Date(\"2023-04-01 2359\"), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":190,"author":{"gitId":"lywich"},"content":"        assertEquals(-1, morningDeadline.compareTo(noonDeadline));","lastModifiedDate":"2023-03-04"},{"lineNumber":191,"author":{"gitId":"lywich"},"content":"        assertEquals(-1, morningDeadline.compareTo(nightDeadline));","lastModifiedDate":"2023-03-04"},{"lineNumber":192,"author":{"gitId":"lywich"},"content":"        assertEquals(-1, noonDeadline.compareTo(nightDeadline));","lastModifiedDate":"2023-03-04"},{"lineNumber":193,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":194,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"Huggenguggen":107,"lywich":45,"joyngjr":42}},{"path":"src/test/java/seedu/task/model/task/DescContainsAllKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.testutil.SimpleTaskBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class DescContainsAllKeywordsPredicateTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] firstPredicateKeyword \u003d {\"third\", \"fourth\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] secondPredicateKeyword \u003d {\"third\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"        DescContainsAllKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new DescContainsAllKeywordsPredicate(Arrays.asList(firstPredicateKeyword));","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"        DescContainsAllKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new DescContainsAllKeywordsPredicate(Arrays.asList(secondPredicateKeyword));","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"        DescContainsAllKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new DescContainsAllKeywordsPredicate(Arrays.asList(firstPredicateKeyword));","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void test_descContainsAllKeywords_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] book \u003d {\"book\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] readBook \u003d {\"read\", \"book\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] bookMessy \u003d {\"rEaD BoOK\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // One keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"        DescContainsAllKeywordsPredicate predicate \u003d new DescContainsAllKeywordsPredicate(Arrays.asList(book));","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withDescription(\"book\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // keyphrase","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"        predicate \u003d new DescContainsAllKeywordsPredicate(Arrays.asList(readBook));","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withDescription(\"read book in library\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"        predicate \u003d new DescContainsAllKeywordsPredicate(Arrays.asList(bookMessy));","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withDescription(\"read book\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] test \u003d {\"study\", \"party\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // Multiple descriptions with all keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"        DescContainsAllKeywordsPredicate predicate2 \u003d new DescContainsAllKeywordsPredicate(Arrays.asList(test));","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(predicate2.test(new SimpleTaskBuilder().withDescription(\"study party\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void test_descDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] test \u003d {\"legoes\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"        DescContainsAllKeywordsPredicate predicate \u003d new DescContainsAllKeywordsPredicate(Arrays.asList(test));","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(predicate.test(new SimpleTaskBuilder().withDescription(\"read book\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] test2 \u003d {\"study\", \"party\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"        //Multiple descriptions with all keyword but the task only has one matching keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"        DescContainsAllKeywordsPredicate predicate2 \u003d new DescContainsAllKeywordsPredicate(Arrays.asList(test2));","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(predicate2.test(new SimpleTaskBuilder().withDescription(\"study\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"PROGRAMMERHAO":80}},{"path":"src/test/java/seedu/task/model/task/DescContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.SimpleTaskBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"public class DescContainsKeywordsPredicateTest {","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"    public void equals() {","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"        String secondPredicateKeyword \u003d \"second\";","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"        DescContainsKeywordsPredicate firstPredicate \u003d new DescContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"        DescContainsKeywordsPredicate secondPredicate \u003d new DescContainsKeywordsPredicate(secondPredicateKeyword);","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"        DescContainsKeywordsPredicate firstPredicateCopy \u003d new DescContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"    public void test_descContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"        // One keyword","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"        DescContainsKeywordsPredicate predicate \u003d new DescContainsKeywordsPredicate(\"book\");","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withDescription(\"book\").build()));","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"        // keyphrase","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"        predicate \u003d new DescContainsKeywordsPredicate(\"read book\");","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withDescription(\"read book in library\").build()));","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"        predicate \u003d new DescContainsKeywordsPredicate(\"book\");","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withDescription(\"read book\").build()));","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"        predicate \u003d new DescContainsKeywordsPredicate(\"rEaD BoOK\");","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withDescription(\"read book\").build()));","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"    public void test_descDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"        DescContainsKeywordsPredicate predicate \u003d new DescContainsKeywordsPredicate(\"legoes\");","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(predicate.test(new SimpleTaskBuilder().withDescription(\"read book\").build()));","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"        // Keywords match name, but does not match description","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"        predicate \u003d new DescContainsKeywordsPredicate(\"Alice\");","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(predicate.test(new SimpleTaskBuilder()","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"                .withName(\"Alice\").withDescription(\"likes to play\").build()));","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"Huggenguggen":68,"PROGRAMMERHAO":2}},{"path":"src/test/java/seedu/task/model/task/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"public class DescriptionTest {","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"    public void isValidDescription() {","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"        // null Description","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDescription(null));","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"        // blank Description","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"        assertFalse(Description.isValidDescription(\"\")); // empty string","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"        assertFalse(Description.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"        // valid Description","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"        assertTrue(Description.isValidDescription(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"        assertTrue(Description.isValidDescription(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"        assertTrue(Description.isValidDescription(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"        assertTrue(Description.isValidDescription(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"        assertTrue(Description.isValidDescription(\"a@bc\")); // minimal","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"        assertTrue(Description.isValidDescription(\"test@localhost\")); // alphabets only","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"        assertTrue(Description.isValidDescription(\"123@145\")); // numeric local part","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"        assertTrue(Description.isValidDescription(\"a1+be.d@example1.com\")); // alphanumeric and special characters","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"        assertTrue(Description.isValidDescription(\"peter_jack@very-very-very-long-example.com\")); // long desc","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"        assertTrue(Description.isValidDescription(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"        assertTrue(Description.isValidDescription(\"e1234567@u.nus.edu\")); // more than one period in description","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"lywich":44}},{"path":"src/test/java/seedu/task/model/task/EffortTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.model.task.Effort.isValidEffort;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.exceptions.InvalidEffortException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"public class EffortTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"    public static final long VALID_EFFORT_0 \u003d 0;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"    public static final long VALID_EFFORT_1 \u003d 1;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"    public static final long DEFAULT_EFFORT \u003d 24;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"    public static final long VALID_EFFORT_3 \u003d 3;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"    public static final long INVALID_EFFORT \u003d -1;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"    public void constructor_invalidEffort_throwsInvalidEffortException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"        assertThrows(InvalidEffortException.class, () -\u003e new Effort(INVALID_EFFORT));","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"    public void isValidEffortTest() {","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"        // valid effort -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"        assertTrue(isValidEffort(\"50\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"        assertTrue(isValidEffort(\"0\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"        // invalid effort -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"        assertFalse(isValidEffort(\"ABC\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"        assertFalse(isValidEffort(\"-1\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"    public void constructor_createsDefault_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"        Effort defaultEffort \u003d new Effort();","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"        Effort expectedEffort \u003d new Effort(DEFAULT_EFFORT);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"        assertTrue(defaultEffort.equals(expectedEffort));","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"    public void toString_createsString_equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"        Effort effort0 \u003d new Effort(VALID_EFFORT_0);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"        Effort effort1 \u003d new Effort(VALID_EFFORT_1);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"        Effort effort3 \u003d new Effort(VALID_EFFORT_3);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"        assertEquals(effort0.toString(), \"0\");","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"        assertEquals(effort1.toString(), \"1\");","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"        assertEquals(effort3.toString(), \"3\");","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"        // initialisation","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"        Effort effort0 \u003d new Effort(VALID_EFFORT_0);","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"        Effort effort1 \u003d new Effort(VALID_EFFORT_1);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"        Effort effort3 \u003d new Effort(VALID_EFFORT_3);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"        // not effort -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"        assertFalse(effort0.equals(new Name(\"TEST\")));","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"        // same instance -\u003e return true","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"        assertTrue(effort0.equals(effort0));","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"        assertTrue(effort1.equals(effort1));","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"        // different value -\u003e return false","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"        assertFalse(effort0.equals(effort1));","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"        assertFalse(effort3.equals(effort1));","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"        // different instance, same value -\u003e return true","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"        Effort copy \u003d new Effort(VALID_EFFORT_0);","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"        assertTrue(copy.equals(effort0));","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"joyngjr":77}},{"path":"src/test/java/seedu/task/model/task/EventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDeadlines.PROJECT;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalEvents.EXAM;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalEvents.REST;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalEvents.SLEEPOVER;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalEvents.getTypicalEventsInApril;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalLocalDates.APR26;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalLocalDates.APR30;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalLocalDates.LOCAL_DATE_FIFTH;","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalLocalDates.LOCAL_DATE_THIRD;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalMixedClassList.getTypicalMixedClassList;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"public class EventListTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"    public void constructor_mixedInputs_onlyAddEvents() {","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"        ObservableList allTaskList \u003d FXCollections.observableList(getTypicalMixedClassList());","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"        EventList actual \u003d new EventList(allTaskList, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"        ObservableList eventList \u003d FXCollections.observableList(getTypicalEventsInApril());","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"        EventList expected \u003d new EventList(eventList, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"    public void size() {","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"        ObservableList eventList \u003d FXCollections.observableList(getTypicalEventsInApril());","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"        EventList list \u003d new EventList(eventList, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        assertEquals(2, list.size());","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"    public void filter_test() {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"        EventList list \u003d new EventList();","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"        // Select SimpleTasks -\u003e return false","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"        assertFalse(list.isCorrectType(ALICE, LOCAL_DATE_THIRD));","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"        // Select Deadline -\u003e return false","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"        assertFalse(list.isCorrectType(PROJECT, LOCAL_DATE_FIFTH));","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"        // Select Event -\u003e return true","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"        assertTrue(list.isCorrectType(SLEEPOVER, APR30));","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"        assertTrue(list.isCorrectType(EXAM, APR26));","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"        // Select Event, date is outside of event dates, validation is done during scheduling -\u003e return true","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"        assertTrue(list.isCorrectType(REST, APR30));","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"    public void equals() {","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"        ObservableList list1 \u003d FXCollections.observableList(getTypicalEventsInApril());","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"        EventList e1 \u003d new EventList(list1, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"        EventList e2 \u003d new EventList(list1, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"        ObservableList list2 \u003d FXCollections.observableList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"        DeadlineList e3 \u003d new DeadlineList(list2, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"        DeadlineList e4 \u003d new DeadlineList(list2, LocalDate.parse(\"2023-04-28\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"        // same instance -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"        assertTrue(e1.equals(e1));","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"        // same values -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"        assertTrue(e1.equals(e2));","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"        // different list -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"        assertFalse(e3.equals(e2));","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"        // different dates, same list -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"        assertTrue(e3.equals(e4));","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"        // null -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"        assertFalse(e4.equals(null));","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"        // different type -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"        assertFalse(e2.equals(\"ABC\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":90}},{"path":"src/test/java/seedu/task/model/task/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.testutil.TypicalEvents.MEETING;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.testutil.TypicalEvents.STUDY;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.EventBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"public class EventTest {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"        Task task \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e task.getTags().remove(0));","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    public void isDuringEvent() {","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"        // start date -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"        assertTrue(STUDY.isDuringEvent(LocalDate.parse(\"2023-01-02\")));","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"        // end date -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"        assertTrue(STUDY.isDuringEvent(LocalDate.parse(\"2023-01-03\")));","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"        // before event -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"        assertFalse(STUDY.isDuringEvent(LocalDate.parse(\"2023-01-01\")));","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"        // after event -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        assertFalse(STUDY.isDuringEvent(LocalDate.parse(\"2023-01-04\")));","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"    public void isSimpleTask() {","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"        assertFalse(STUDY.isSimpleTask());","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"    public void isDeadline() {","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"        assertFalse(STUDY.isDeadline());","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"    public void isEvent() {","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"        assertTrue(STUDY.isEvent());","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"    public void isSameEvent() {","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(MEETING.isSameTask(MEETING));","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(MEETING.isSameTask(null));","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"        Task editedMeeting \u003d new EventBuilder(MEETING)","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"                .withDescription(\"Meeting description 2\")","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"                .withTags(\"Reminder2\").withFrom(\"2023-01-01 1900\")","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"                .withTo(\"2023-01-02 1900\")","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"                .withEffort(10)","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(MEETING.isSameTask(editedMeeting));","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Huggenguggen"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"        editedMeeting \u003d new EventBuilder(MEETING).withName(\"Assignment\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(MEETING.isSameTask(editedMeeting));","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"Huggenguggen"},"content":"        Task editedStudy \u003d new EventBuilder(STUDY).withName(\"Study\".toLowerCase()).build();","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"        assertTrue(STUDY.isSameTask(editedStudy));","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"Huggenguggen"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"Huggenguggen"},"content":"        String nameWithTrailingSpaces \u003d \"Study\" + \" \";","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"Huggenguggen"},"content":"        editedStudy \u003d new EventBuilder(STUDY).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(STUDY.isSameTask(editedStudy));","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"        // same name, different effort -\u003e return true","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"joyngjr"},"content":"        editedMeeting \u003d new EventBuilder(MEETING).withEffort(10).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"joyngjr"},"content":"        assertTrue(MEETING.isSameTask(editedMeeting));","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"Huggenguggen"},"content":"    public void equals() {","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"Huggenguggen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"Huggenguggen"},"content":"        Task meetingCopy \u003d new EventBuilder(MEETING).build();","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(MEETING.equals(meetingCopy));","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"Huggenguggen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(MEETING.equals(MEETING));","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"Huggenguggen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(MEETING.equals(null));","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"Huggenguggen"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(MEETING.equals(5));","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"Huggenguggen"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(MEETING.equals(STUDY));","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"Huggenguggen"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"Huggenguggen"},"content":"        Task editedMeeting \u003d new EventBuilder(MEETING).withName(\"Study\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(MEETING.equals(editedMeeting));","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"Huggenguggen"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"Huggenguggen"},"content":"        editedMeeting \u003d new EventBuilder(MEETING).withDescription(\"Study description\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(MEETING.equals(editedMeeting));","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"Huggenguggen"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"Huggenguggen"},"content":"        editedMeeting \u003d new EventBuilder(MEETING).withTags(\"Important\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(MEETING.equals(editedMeeting));","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"joyngjr"},"content":"        // different effort -\u003e return false","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"joyngjr"},"content":"        editedMeeting \u003d new EventBuilder(MEETING).withEffort(10).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"joyngjr"},"content":"        assertFalse(MEETING.equals(editedMeeting));","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":130,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"Huggenguggen"},"content":"    public void isComingUp_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"Huggenguggen"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"Huggenguggen"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"Huggenguggen"},"content":"        String invalidFromTime \u003d now.minus(Duration.ofHours(1)).format(formatter);","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"Huggenguggen"},"content":"        String validTime \u003d now.plus(Duration.ofHours(5)).format(formatter);","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"Huggenguggen"},"content":"        String invalidTime \u003d now.plus(Duration.ofHours(50)).format(formatter);","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"Huggenguggen"},"content":"        //test if the from is coming up but the to is not","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"Huggenguggen"},"content":"        Task fromComingUpEvent \u003d new EventBuilder().withFrom(validTime)","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"Huggenguggen"},"content":"                .withTo(invalidTime).withAlertWindow(\"6\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"Huggenguggen"},"content":"        //test if the to is coming up but the from is past//before","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"Huggenguggen"},"content":"        Task toComingUpEvent \u003d new EventBuilder().withFrom(invalidFromTime)","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"Huggenguggen"},"content":"                        .withTo(validTime).withAlertWindow(\"6\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(fromComingUpEvent.isComingUp());","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(toComingUpEvent.isComingUp());","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"Huggenguggen"},"content":"    public void isComingUp_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"Huggenguggen"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"Huggenguggen"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"Huggenguggen"},"content":"        String invalidFromTime \u003d now.minus(Duration.ofHours(1)).format(formatter);","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"Huggenguggen"},"content":"        String farTime \u003d now.minus(Duration.ofHours(60)).format(formatter);","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"Huggenguggen"},"content":"        // Test for both from and to being before call","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"Huggenguggen"},"content":"        Task overdueEvent \u003d new EventBuilder().withFrom(invalidFromTime)","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"Huggenguggen"},"content":"                .withTo(invalidFromTime).withAlertWindow(\"6\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"Huggenguggen"},"content":"        //Both further than alertwindow","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"Huggenguggen"},"content":"        Task farAwayEvent \u003d new EventBuilder().withFrom(farTime)","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"Huggenguggen"},"content":"                        .withTo(farTime).withAlertWindow(\"6\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(overdueEvent.isComingUp());","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(farAwayEvent.isComingUp());","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":166,"author":{"gitId":"lywich"},"content":"    public void compareTo_tags() {","lastModifiedDate":"2023-03-04"},{"lineNumber":167,"author":{"gitId":"lywich"},"content":"        Tag tagOne \u003d new Tag(\"Tag1\");","lastModifiedDate":"2023-03-04"},{"lineNumber":168,"author":{"gitId":"lywich"},"content":"        Tag tagTwo \u003d new Tag(\"Tag2\");","lastModifiedDate":"2023-03-04"},{"lineNumber":169,"author":{"gitId":"lywich"},"content":"        Set\u003cTag\u003e zeroTag \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":170,"author":{"gitId":"lywich"},"content":"        Set\u003cTag\u003e oneTag \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":171,"author":{"gitId":"lywich"},"content":"        oneTag.add(tagOne);","lastModifiedDate":"2023-03-04"},{"lineNumber":172,"author":{"gitId":"lywich"},"content":"        Set\u003cTag\u003e twoTag \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":173,"author":{"gitId":"lywich"},"content":"        twoTag.add(tagOne);","lastModifiedDate":"2023-03-04"},{"lineNumber":174,"author":{"gitId":"lywich"},"content":"        twoTag.add(tagTwo);","lastModifiedDate":"2023-03-04"},{"lineNumber":175,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":176,"author":{"gitId":"lywich"},"content":"        Task zeroTagEvent \u003d new Event(new Name(\"zeroTag\"), new Description(\"zeroTag\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":177,"author":{"gitId":"joyngjr"},"content":"                zeroTag, new Date(\"2023-04-01 0000\"), new Date(\"2023-04-01 0100\"), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"lywich"},"content":"        Task oneTagEvent \u003d new Event(new Name(\"oneTag\"), new Description(\"oneTag\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":179,"author":{"gitId":"joyngjr"},"content":"                oneTag, new Date(\"2023-04-01 0000\"), new Date(\"2023-04-01 0100\"), new Effort(3));","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"lywich"},"content":"        Task twoTagEvent \u003d new Event(new Name(\"twoTag\"), new Description(\"twoTag\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":181,"author":{"gitId":"joyngjr"},"content":"                twoTag, new Date(\"2023-04-01 0000\"), new Date(\"2023-04-01 0100\"), new Effort(2));","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":183,"author":{"gitId":"lywich"},"content":"        assertEquals(1, oneTagEvent.compareTo(zeroTagEvent));","lastModifiedDate":"2023-03-04"},{"lineNumber":184,"author":{"gitId":"lywich"},"content":"        assertEquals(-1, oneTagEvent.compareTo(twoTagEvent));","lastModifiedDate":"2023-03-04"},{"lineNumber":185,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":186,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":187,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":188,"author":{"gitId":"lywich"},"content":"    public void compareTo_name() {","lastModifiedDate":"2023-03-04"},{"lineNumber":189,"author":{"gitId":"lywich"},"content":"        Task aName \u003d new Event(new Name(\"apple\"), new Description(\"apple\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":190,"author":{"gitId":"joyngjr"},"content":"                new HashSet\u003c\u003e(), new Date(\"2023-04-01 0000\"), new Date(\"2023-04-01 0100\"), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"lywich"},"content":"        Task bName \u003d new Event(new Name(\"bucket\"), new Description(\"car\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":192,"author":{"gitId":"joyngjr"},"content":"                new HashSet\u003c\u003e(), new Date(\"2023-04-01 0000\"), new Date(\"2023-04-01 0100\"), new Effort(2));","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"lywich"},"content":"        Task cName \u003d new Event(new Name(\"car\"), new Description(\"car\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":194,"author":{"gitId":"joyngjr"},"content":"                new HashSet\u003c\u003e(), new Date(\"2023-04-01 0000\"), new Date(\"2023-04-01 0100\"), new Effort(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":196,"author":{"gitId":"lywich"},"content":"        assertEquals(1, bName.compareTo(aName));","lastModifiedDate":"2023-03-04"},{"lineNumber":197,"author":{"gitId":"lywich"},"content":"        assertEquals(-1, bName.compareTo(cName));","lastModifiedDate":"2023-03-04"},{"lineNumber":198,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":199,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":200,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":201,"author":{"gitId":"lywich"},"content":"    public void compareTo_date() {","lastModifiedDate":"2023-03-04"},{"lineNumber":202,"author":{"gitId":"lywich"},"content":"        Task morningEvent \u003d new Event(new Name(\"Morning\"), new Description(\"0000 to 1200\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":203,"author":{"gitId":"joyngjr"},"content":"                new HashSet\u003c\u003e(), new Date(\"2023-04-01 0000\"), new Date(\"2023-04-01 1200\"), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"lywich"},"content":"        Task wholeDayEvent \u003d new Event(new Name(\"WholeDay\"), new Description(\"0000 to 2359\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":205,"author":{"gitId":"joyngjr"},"content":"                new HashSet\u003c\u003e(), new Date(\"2023-04-01 0000\"), new Date(\"2023-04-01 2359\"), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":206,"author":{"gitId":"lywich"},"content":"        Task nightEvent \u003d new Event(new Name(\"Night\"), new Description(\"1200 to 2359\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":207,"author":{"gitId":"joyngjr"},"content":"                new HashSet\u003c\u003e(), new Date(\"2023-04-01 1200\"), new Date(\"2023-04-01 2359\"), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":209,"author":{"gitId":"lywich"},"content":"        assertEquals(-1, morningEvent.compareTo(wholeDayEvent));","lastModifiedDate":"2023-03-04"},{"lineNumber":210,"author":{"gitId":"lywich"},"content":"        assertEquals(-1, morningEvent.compareTo(nightEvent));","lastModifiedDate":"2023-03-04"},{"lineNumber":211,"author":{"gitId":"lywich"},"content":"        assertEquals(-1, wholeDayEvent.compareTo(nightEvent));","lastModifiedDate":"2023-03-04"},{"lineNumber":212,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":213,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"Huggenguggen":111,"lywich":45,"joyngjr":57}},{"path":"src/test/java/seedu/task/model/task/NameContainsAllKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.testutil.SimpleTaskBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class NameContainsAllKeywordsPredicateTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] firstPredicateKeyword \u003d {\"third\", \"fourth\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] secondPredicateKeyword \u003d {\"third\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"        NameContainsAllKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new NameContainsAllKeywordsPredicate(Arrays.asList(firstPredicateKeyword));","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"        NameContainsAllKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new NameContainsAllKeywordsPredicate(Arrays.asList(secondPredicateKeyword));","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"        NameContainsAllKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new NameContainsAllKeywordsPredicate(Arrays.asList(firstPredicateKeyword));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void test_nameContainsAllKeywords_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] alice \u003d {\"Alice\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] aliceBob \u003d {\"Alice\", \"Bob\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] aliceBobMixed \u003d {\"aLicE\", \"bOB\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // One keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"        NameContainsAllKeywordsPredicate predicate \u003d new NameContainsAllKeywordsPredicate(Arrays.asList(alice));","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // keyphrase","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"        predicate \u003d new NameContainsAllKeywordsPredicate(Arrays.asList(aliceBob));","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"        predicate \u003d new NameContainsAllKeywordsPredicate(Arrays.asList(alice));","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"        predicate \u003d new NameContainsAllKeywordsPredicate(Arrays.asList(aliceBobMixed));","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] test \u003d {\"study\", \"party\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // Multiple names with all keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"        NameContainsAllKeywordsPredicate predicate2 \u003d new NameContainsAllKeywordsPredicate(Arrays.asList(test));","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(predicate2.test(new SimpleTaskBuilder().withName(\"study party\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"        NameContainsAllKeywordsPredicate predicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] carol \u003d {\"Carol\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] likeToPlay \u003d {\"likeToPlay\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"        predicate \u003d new NameContainsAllKeywordsPredicate(Arrays.asList(carol));","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(predicate.test(new SimpleTaskBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // Keywords match description, but does not match name","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"        predicate \u003d new NameContainsAllKeywordsPredicate(Arrays.asList(likeToPlay));","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(predicate.test(new SimpleTaskBuilder()","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"            .withName(\"Alice\").withDescription(\"likes to play\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] test \u003d {\"study\", \"party\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"        //Multiple names with all keyword but the task only has one matching keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"        NameContainsAllKeywordsPredicate predicate3 \u003d new NameContainsAllKeywordsPredicate(Arrays.asList(test));","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(predicate3.test(new SimpleTaskBuilder().withName(\"study\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"PROGRAMMERHAO":93}},{"path":"src/test/java/seedu/task/model/task/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.SimpleTaskBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"        String secondPredicateKeyword \u003d \"second\";","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeyword);","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(\"Alice\");","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"        // keyphrase","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"Alice Bob\");","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"Carol\");","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"aLicE bOB\");","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(\"\");","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"Carol\");","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(predicate.test(new SimpleTaskBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"        // Keywords match description, but does not match name","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(\"likes to play\");","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(predicate.test(new SimpleTaskBuilder()","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"                .withName(\"Alice\").withDescription(\"likes to play\").build()));","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Huggenguggen":20,"lywich":4,"PROGRAMMERHAO":3,"-":45}},{"path":"src/test/java/seedu/task/model/task/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"lywich":2,"-":38}},{"path":"src/test/java/seedu/task/model/task/SameEffortPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.GEORGE;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"public class SameEffortPredicateTest {","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"    public void sameEffort() {","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"        Effort e \u003d new Effort(24);","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"        SameEffortPredicate predicate \u003d new SameEffortPredicate(e);","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"        // same effort -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"        assertTrue(predicate.test(GEORGE));","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"        // different effort -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"        assertFalse(predicate.test(ALICE));","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"    public void equals() {","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"        Effort e1 \u003d new Effort(24);","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"        Effort e2 \u003d new Effort(10);","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"        SameEffortPredicate firstPredicate \u003d new SameEffortPredicate(e1);","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"        SameEffortPredicate secondPredicate \u003d new SameEffortPredicate(e2);","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"        SameEffortPredicate firstPredicateCopy \u003d new SameEffortPredicate(e1);","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"        // different effort -\u003e returns false","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"joyngjr":48}},{"path":"src/test/java/seedu/task/model/task/SimpleTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDeadlines.PROJECT;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalEvents.MEETING;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalLocalDates.LOCAL_DATE_THIRD;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.getTypicalTasks;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"public class SimpleTaskListTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"    public void constructor_mixedInputs_onlyAddSimpleTasks() {","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"        ObservableList allTaskList \u003d FXCollections.observableList(getTypicalTasks());","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"        SimpleTaskList actual \u003d new SimpleTaskList(allTaskList, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"        ObservableList simpleTaskList \u003d FXCollections.observableList(getTypicalTasks());","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"        SimpleTaskList expected \u003d new SimpleTaskList(simpleTaskList, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"        Assertions.assertEquals(actual, expected);","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"    public void size() {","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"        ObservableList taskList \u003d FXCollections.observableList(getTypicalTasks());","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"        SimpleTaskList list \u003d new SimpleTaskList(taskList, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"        Assertions.assertEquals(7, list.size());","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"    public void filter_test() {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        SimpleTaskList list \u003d new SimpleTaskList();","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"        // Select SimpleTasks -\u003e return true","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"        assertTrue(list.isCorrectType(ALICE, LOCAL_DATE_THIRD));","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"        // Select Deadline -\u003e return false","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"        assertFalse(list.isCorrectType(PROJECT, LOCAL_DATE_THIRD));","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"        // Select Event -\u003e return false","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"        assertFalse(list.isCorrectType(MEETING, LOCAL_DATE_THIRD));","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"    public void equals() {","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"        ObservableList list1 \u003d FXCollections.observableList(getTypicalTasks());","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"        SimpleTaskList t1 \u003d new SimpleTaskList(list1, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"        SimpleTaskList t2 \u003d new SimpleTaskList(list1, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"        ObservableList list2 \u003d FXCollections.observableList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"        SimpleTaskList t3 \u003d new SimpleTaskList(list2, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"        SimpleTaskList t4 \u003d new SimpleTaskList(list2, LocalDate.parse(\"2023-04-28\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"        // same instance -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"        assertTrue(t1.equals(t1));","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"        // same values -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"        assertTrue(t1.equals(t2));","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"        // different list -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"        assertFalse(t3.equals(t2));","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"        // different dates, same list -\u003e return true","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"        assertTrue(t3.equals(t4));","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"        // null -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"        assertFalse(t4.equals(null));","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"        // different type -\u003e return false","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"        assertFalse(t2.equals(\"ABC\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":81}},{"path":"src/test/java/seedu/task/model/task/SimpleTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.ELLE;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.SimpleTaskBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"public class SimpleTaskTest {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"        Task task \u003d new SimpleTaskBuilder().build();","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e task.getTags().remove(0));","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    public void isSimpleTask() {","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"        assertTrue(ALICE.isSimpleTask());","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"    public void isDeadline() {","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"        assertFalse(ALICE.isDeadline());","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"    public void isEvent() {","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        assertFalse(ALICE.isEvent());","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"    public void isComingUp() {","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"        assertFalse(ALICE.isEvent());","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"    public void isSameTask() {","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"        assertTrue(ALICE.isSameTask(ALICE));","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"        assertFalse(ALICE.isSameTask(null));","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"        Task editedAlice \u003d new SimpleTaskBuilder(ALICE).withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"        assertTrue(ALICE.isSameTask(editedAlice));","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"        editedAlice \u003d new SimpleTaskBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"        assertFalse(ALICE.isSameTask(editedAlice));","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"        Task editedBob \u003d new SimpleTaskBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"        assertTrue(BOB.isSameTask(editedBob));","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":73,"author":{"gitId":"Huggenguggen"},"content":"        editedBob \u003d new SimpleTaskBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"        assertFalse(BOB.isSameTask(editedBob));","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"        Task aliceCopy \u003d new SimpleTaskBuilder(ALICE).build();","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"Huggenguggen"},"content":"        Task editedAlice \u003d new SimpleTaskBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"lywich"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"Huggenguggen"},"content":"        editedAlice \u003d new SimpleTaskBuilder(ALICE).withDescription(VALID_DESCRIPTION_BOB).build();","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":104,"author":{"gitId":"Huggenguggen"},"content":"        editedAlice \u003d new SimpleTaskBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":106,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"joyngjr"},"content":"        // same effort -\u003e return true","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"joyngjr"},"content":"        Task editedElle1 \u003d new SimpleTaskBuilder(ELLE).withEffort(5).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"joyngjr"},"content":"        Task editedElle2 \u003d new SimpleTaskBuilder(ELLE).withEffort(5).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"joyngjr"},"content":"        assertTrue(editedElle1.equals(editedElle2));","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"joyngjr"},"content":"        // different effort -\u003e return false","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"joyngjr"},"content":"        editedAlice \u003d new SimpleTaskBuilder(ALICE).withEffort(1).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"joyngjr"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":117,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"lywich"},"content":"    public void compareTo_tags() {","lastModifiedDate":"2023-03-04"},{"lineNumber":119,"author":{"gitId":"lywich"},"content":"        Tag tagOne \u003d new Tag(\"Tag1\");","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"lywich"},"content":"        Tag tagTwo \u003d new Tag(\"Tag2\");","lastModifiedDate":"2023-03-04"},{"lineNumber":121,"author":{"gitId":"lywich"},"content":"        Set\u003cTag\u003e zeroTag \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"lywich"},"content":"        Set\u003cTag\u003e oneTag \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"lywich"},"content":"        oneTag.add(tagOne);","lastModifiedDate":"2023-03-04"},{"lineNumber":124,"author":{"gitId":"lywich"},"content":"        Set\u003cTag\u003e twoTag \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"lywich"},"content":"        twoTag.add(tagOne);","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"lywich"},"content":"        twoTag.add(tagTwo);","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":128,"author":{"gitId":"lywich"},"content":"        Task zeroTagDeadline \u003d new SimpleTask(new Name(\"zeroTag\"), new Description(\"zeroTag\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"joyngjr"},"content":"                zeroTag, new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"lywich"},"content":"        Task oneTagDeadline \u003d new SimpleTask(new Name(\"oneTag\"), new Description(\"oneTag\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":131,"author":{"gitId":"joyngjr"},"content":"                oneTag, new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"lywich"},"content":"        Task twoTagDeadline \u003d new SimpleTask(new Name(\"twoTag\"), new Description(\"twoTag\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":133,"author":{"gitId":"joyngjr"},"content":"                twoTag, new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":135,"author":{"gitId":"lywich"},"content":"        assertEquals(1, oneTagDeadline.compareTo(zeroTagDeadline));","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"lywich"},"content":"        assertEquals(-1, oneTagDeadline.compareTo(twoTagDeadline));","lastModifiedDate":"2023-03-04"},{"lineNumber":137,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"lywich"},"content":"    public void compareTo_name() {","lastModifiedDate":"2023-03-04"},{"lineNumber":141,"author":{"gitId":"lywich"},"content":"        Task aName \u003d new SimpleTask(new Name(\"apple\"), new Description(\"apple\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"joyngjr"},"content":"                new HashSet\u003c\u003e(), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"lywich"},"content":"        Task bName \u003d new SimpleTask(new Name(\"bucket\"), new Description(\"bucket\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"joyngjr"},"content":"                new HashSet\u003c\u003e(), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"lywich"},"content":"        Task cName \u003d new SimpleTask(new Name(\"car\"), new Description(\"car\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"joyngjr"},"content":"                new HashSet\u003c\u003e(), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"lywich"},"content":"        assertEquals(1, bName.compareTo(aName));","lastModifiedDate":"2023-03-04"},{"lineNumber":149,"author":{"gitId":"lywich"},"content":"        assertEquals(-1, bName.compareTo(cName));","lastModifiedDate":"2023-03-04"},{"lineNumber":150,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":151,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"lywich"},"content":"    public void compareTo_all_tasks() {","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"lywich"},"content":"        Task aName \u003d new SimpleTask(new Name(\"apple\"), new Description(\"apple\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"joyngjr"},"content":"                new HashSet\u003c\u003e(), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"lywich"},"content":"        Task bName \u003d new Deadline(new Name(\"bucket\"), new Description(\"bucket\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"joyngjr"},"content":"                new HashSet\u003c\u003e(), new Date(\"2023-04-01 0000\"), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"lywich"},"content":"        Task cName \u003d new Event(new Name(\"car\"), new Description(\"car\"),","lastModifiedDate":"2023-03-04"},{"lineNumber":159,"author":{"gitId":"joyngjr"},"content":"                new HashSet\u003c\u003e(), new Date(\"2023-04-01 0000\"), new Date(\"2023-04-01 0100\"), new Effort(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":161,"author":{"gitId":"lywich"},"content":"        assertEquals(1, bName.compareTo(aName));","lastModifiedDate":"2023-03-04"},{"lineNumber":162,"author":{"gitId":"lywich"},"content":"        assertEquals(-1, bName.compareTo(cName));","lastModifiedDate":"2023-03-04"},{"lineNumber":163,"author":{"gitId":"lywich"},"content":"        assertEquals(-1, aName.compareTo(cName));","lastModifiedDate":"2023-03-04"},{"lineNumber":164,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Huggenguggen":11,"lywich":64,"-":49,"joyngjr":41}},{"path":"src/test/java/seedu/task/model/task/StartupTaskWithinTimelinePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.DeadlineBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.EventBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.SimpleTaskBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"public class StartupTaskWithinTimelinePredicateTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"        StartupTaskWithinTimelinePredicate firstPredicate \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"                new StartupTaskWithinTimelinePredicate();","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"        StartupTaskWithinTimelinePredicate secondPredicate \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"                new StartupTaskWithinTimelinePredicate();","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"        // same object -\u003e return true","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"        // different types -\u003e return false","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"    public void test_taskIsWithinTimeline_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"        StartupTaskWithinTimelinePredicate firstPredicate \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"                new StartupTaskWithinTimelinePredicate();","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"        LocalDateTime now \u003d LocalDateTime.now().plus(Duration.ofHours(3));","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"        String formatDateTime \u003d now.format(formatter);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"        //within the timing","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(firstPredicate.test(new DeadlineBuilder().withDate(formatDateTime).withAlertWindow(\"5\").build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(firstPredicate.test(new EventBuilder().withTo(formatDateTime).withAlertWindow(\"5\").build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"    public void test_taskIsNotWithinTimeline_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"        StartupTaskWithinTimelinePredicate firstPredicate \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"                new StartupTaskWithinTimelinePredicate();","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"        LocalDateTime now \u003d LocalDateTime.now().plus(Duration.ofHours(6));","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"        String formatDateTime \u003d now.format(formatter);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"        //outside timing","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(firstPredicate.test(new SimpleTaskBuilder().withAlertWindow(\"5\").build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Huggenguggen":63}},{"path":"src/test/java/seedu/task/model/task/SubtaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.testutil.TypicalSubtasks.ALICE_HOMEWORK;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.testutil.TypicalSubtasks.AMY_LAB;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.testutil.SubtaskBuilder;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class SubtaskTest {","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void isSameTask() {","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(ALICE_HOMEWORK.isSameTask(ALICE_HOMEWORK));","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(ALICE_HOMEWORK.isSameTask(null));","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Subtask editedAliceHomework \u003d new SubtaskBuilder().withName(\"Homework\").withDescription(\"CS2103T\").build();","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(ALICE_HOMEWORK.isSameTask(editedAliceHomework));","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"        editedAliceHomework \u003d new SubtaskBuilder().withName(\"AMY\").build();","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(ALICE_HOMEWORK.isSameTask(editedAliceHomework));","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Subtask editedAlice \u003d new SubtaskBuilder().withName(\"Homework\".toLowerCase()).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(ALICE_HOMEWORK.isSameTask(editedAlice));","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String nameWithTrailingSpaces \u003d \"Homework\" + \" \";","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"        editedAlice \u003d new SubtaskBuilder().withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(ALICE_HOMEWORK.isSameTask(editedAlice));","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void equals() {","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Subtask aliceHomeworkCopy \u003d new SubtaskBuilder(ALICE_HOMEWORK).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(ALICE_HOMEWORK.equals(aliceHomeworkCopy));","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(ALICE_HOMEWORK.equals(ALICE_HOMEWORK));","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(ALICE_HOMEWORK.equals(null));","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(ALICE_HOMEWORK.equals(5));","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(ALICE_HOMEWORK.equals(AMY_LAB));","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"        Subtask editedAliceHomework \u003d new SubtaskBuilder(ALICE_HOMEWORK)","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"            .withName(AMY_LAB.getName().fullName).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(ALICE_HOMEWORK.equals(editedAliceHomework));","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"        editedAliceHomework \u003d new SubtaskBuilder(ALICE_HOMEWORK)","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"            .withDescription(AMY_LAB.getDescription().value).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(ALICE_HOMEWORK.equals(editedAliceHomework));","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"PROGRAMMERHAO":74}},{"path":"src/test/java/seedu/task/model/task/TagsContainsAllKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.testutil.SimpleTaskBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class TagsContainsAllKeywordsPredicateTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] firstPredicateKeyword \u003d {\"third\", \"fourth\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] secondPredicateKeyword \u003d {\"third\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"        TagsContainsAllKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new TagsContainsAllKeywordsPredicate(Arrays.asList(firstPredicateKeyword));","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"        TagsContainsAllKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new TagsContainsAllKeywordsPredicate(Arrays.asList(secondPredicateKeyword));","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"        TagsContainsAllKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new TagsContainsAllKeywordsPredicate(Arrays.asList(firstPredicateKeyword));","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void test_tagsContainsAllKeywords_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] tag \u003d {\"urgent\", \"important\", \"uRgEnT\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"        TagsContainsAllKeywordsPredicate predicate \u003d new TagsContainsAllKeywordsPredicate(Arrays.asList(tag[2]));","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withTags(\"urgent\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] test \u003d {\"study\", \"party\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // Multiple tags with all keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"        TagsContainsAllKeywordsPredicate predicate2 \u003d new TagsContainsAllKeywordsPredicate(Arrays.asList(test));","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertTrue(predicate2.test(new SimpleTaskBuilder().withTags(\"party\", \"study\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void test_tagsDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"        DescContainsKeywordsPredicate predicate \u003d new DescContainsKeywordsPredicate(\"legoes\");","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(predicate.test(new SimpleTaskBuilder().withDescription(\"read book\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"        // Keywords match name, but does not match description","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"        predicate \u003d new DescContainsKeywordsPredicate(\"Alice\");","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(predicate.test(new SimpleTaskBuilder()","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"            .withName(\"Alice\").withDescription(\"likes to play\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String[] test \u003d {\"study\", \"party\"};","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"        //Multiple tags with all keyword but the task only has one matching keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"        TagsContainsAllKeywordsPredicate predicate3 \u003d new TagsContainsAllKeywordsPredicate(Arrays.asList(test));","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertFalse(predicate3.test(new SimpleTaskBuilder().withName(\"study\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"PROGRAMMERHAO":73}},{"path":"src/test/java/seedu/task/model/task/TagsContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.SimpleTaskBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"public class TagsContainsKeywordsPredicateTest {","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"    public void equals() {","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"        String[] firstPredicateKeyword \u003d {\"first\"};","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"        String[] secondPredicateKeyword \u003d {\"second\"};","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"        TagsContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"                new TagsContainsKeywordsPredicate(Arrays.asList(firstPredicateKeyword));","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"        TagsContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"                new TagsContainsKeywordsPredicate(Arrays.asList(secondPredicateKeyword));","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"        TagsContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"                new TagsContainsKeywordsPredicate(Arrays.asList(firstPredicateKeyword));","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"    public void test_tagsContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"        String[] tag \u003d {\"urgent\", \"important\", \"uRgEnT\"};","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"        // One keyword","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"        TagsContainsKeywordsPredicate predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(tag[0]));","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withTags(\"urgent\").build()));","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"        // match 1","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(tag[1]));","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withTags(\"urgent\", \"important\").build()));","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"        // match at least 1","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(tag));","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withTags(\"sorta\", \"important\").build()));","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(tag[2]));","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(predicate.test(new SimpleTaskBuilder().withTags(\"urgent\").build()));","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"    public void test_tagsDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"Huggenguggen"},"content":"        DescContainsKeywordsPredicate predicate \u003d new DescContainsKeywordsPredicate(\"legoes\");","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(predicate.test(new SimpleTaskBuilder().withDescription(\"read book\").build()));","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"Huggenguggen"},"content":"        // Keywords match name, but does not match description","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"        predicate \u003d new DescContainsKeywordsPredicate(\"Alice\");","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(predicate.test(new SimpleTaskBuilder()","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"                .withName(\"Alice\").withDescription(\"likes to play\").build()));","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"Huggenguggen":74,"PROGRAMMERHAO":8}},{"path":"src/test/java/seedu/task/model/task/TaskWithinTimelinePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.DeadlineBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.EventBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.SimpleTaskBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"public class TaskWithinTimelinePredicateTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"        TaskWithinTimelinePredicate firstPredicate \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"                new TaskWithinTimelinePredicate(Duration.ofHours(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"        TaskWithinTimelinePredicate secondPredicate \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"                new TaskWithinTimelinePredicate(Duration.ofHours(10));","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"        // same object -\u003e return true","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(firstPredicate.equals(new TaskWithinTimelinePredicate(Duration.ofHours(5))));","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"        // different types -\u003e return false","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"    public void test_taskIsWithinTimeline_returnsTrue() {","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"        TaskWithinTimelinePredicate firstPredicate \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"                new TaskWithinTimelinePredicate(Duration.ofHours(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"        LocalDateTime now \u003d LocalDateTime.now().plus(Duration.ofHours(3));","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"        String formatDateTime \u003d now.format(formatter);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"        //within the timing","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(firstPredicate.test(new DeadlineBuilder().withDate(formatDateTime).build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"        assertTrue(firstPredicate.test(new EventBuilder().withTo(formatDateTime).build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"    public void test_taskIsNotWithinTimeline_returnsFalse() {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"        TaskWithinTimelinePredicate firstPredicate \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"                new TaskWithinTimelinePredicate(Duration.ofHours(5));","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"        LocalDateTime now \u003d LocalDateTime.now().plus(Duration.ofHours(6));","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"        String formatDateTime \u003d now.format(formatter);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"        //outside timing","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(firstPredicate.test(new DeadlineBuilder().withDate(formatDateTime).build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(firstPredicate.test(new EventBuilder().withTo(formatDateTime).build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"        assertFalse(firstPredicate.test(new SimpleTaskBuilder().build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Huggenguggen":68}},{"path":"src/test/java/seedu/task/model/task/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.model.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import java.util.List;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.testutil.SimpleTaskBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"        assertFalse(uniqueTaskList.contains(ALICE));","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"        assertTrue(uniqueTaskList.contains(ALICE));","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"    public void contains_taskWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"        Task editedAlice \u003d new SimpleTaskBuilder(ALICE).withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"                .build();","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"        assertTrue(uniqueTaskList.contains(editedAlice));","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.add(ALICE));","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, ALICE));","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(ALICE, null));","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(ALICE, ALICE));","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"        uniqueTaskList.setTask(ALICE, ALICE);","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"        expectedUniqueTaskList.add(ALICE);","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"lywich"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"    public void setTask_editedTaskHasSameIdentity_success() {","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"lywich"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"Huggenguggen"},"content":"        Task editedAlice \u003d new SimpleTaskBuilder(ALICE).withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"Huggenguggen"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"                .build();","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"        uniqueTaskList.setTask(ALICE, editedAlice);","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"        expectedUniqueTaskList.add(editedAlice);","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"lywich"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"lywich"},"content":"    public void setTask_editedTaskHasDifferentIdentity_success() {","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"lywich"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"lywich"},"content":"        uniqueTaskList.setTask(ALICE, BOB);","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"lywich"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"lywich"},"content":"        expectedUniqueTaskList.add(BOB);","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"lywich"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"lywich"},"content":"    public void setTask_editedTaskHasNonUniqueIdentity_throwsDuplicateTaskException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"lywich"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"lywich"},"content":"        uniqueTaskList.add(BOB);","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"lywich"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTask(ALICE, BOB));","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"lywich"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"lywich"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"lywich"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(ALICE));","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"lywich"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"lywich"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"lywich"},"content":"        uniqueTaskList.remove(ALICE);","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"lywich"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"lywich"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"lywich"},"content":"    public void setTasks_nullUniqueTaskList_throwsNullPointerException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":134,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));","lastModifiedDate":"2023-02-18"},{"lineNumber":135,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":137,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":138,"author":{"gitId":"lywich"},"content":"    public void setTasks_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"lywich"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"lywich"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"lywich"},"content":"        expectedUniqueTaskList.add(BOB);","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"lywich"},"content":"        uniqueTaskList.setTasks(expectedUniqueTaskList);","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"lywich"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":147,"author":{"gitId":"lywich"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":148,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2023-02-18"},{"lineNumber":149,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":151,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":152,"author":{"gitId":"lywich"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-02-18"},{"lineNumber":153,"author":{"gitId":"lywich"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2023-02-18"},{"lineNumber":154,"author":{"gitId":"lywich"},"content":"        List\u003cTask\u003e taskList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-02-18"},{"lineNumber":155,"author":{"gitId":"lywich"},"content":"        uniqueTaskList.setTasks(taskList);","lastModifiedDate":"2023-02-18"},{"lineNumber":156,"author":{"gitId":"lywich"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"lywich"},"content":"        expectedUniqueTaskList.add(BOB);","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"lywich"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2023-02-18"},{"lineNumber":159,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":160,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":161,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":162,"author":{"gitId":"lywich"},"content":"    public void setTasks_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":163,"author":{"gitId":"lywich"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-02-18"},{"lineNumber":164,"author":{"gitId":"lywich"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTasks(listWithDuplicateTasks));","lastModifiedDate":"2023-02-18"},{"lineNumber":165,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":166,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":167,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":168,"author":{"gitId":"lywich"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":169,"author":{"gitId":"lywich"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-02-18"},{"lineNumber":170,"author":{"gitId":"lywich"},"content":"            -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-02-18"},{"lineNumber":171,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":172,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"Huggenguggen":5,"lywich":167}},{"path":"src/test/java/seedu/task/model/tracker/TagComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.tracker;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTagComparator.CODE_3;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTagComparator.EAT_1;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTagComparator.SLEEP_5;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"public class TagComparatorTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"    public void getsName_tagComparator() {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"        assertEquals(\"[CODE]\", CODE_3.getName());","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"        assertEquals(\"[SLEEP]\", SLEEP_5.getName());","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"        assertEquals(\"[EAT]\", EAT_1.getName());","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"    public void getsOccurrences_tagComparator() {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"        assertEquals(3, CODE_3.getOccurrences());","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"        assertEquals(5, SLEEP_5.getOccurrences());","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"        assertEquals(1, EAT_1.getOccurrences());","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    public void compareTo_tagComparator() {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"        assertEquals(2, CODE_3.compareTo(SLEEP_5));","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"        assertEquals(-2, SLEEP_5.compareTo(CODE_3));","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"        assertEquals(0, EAT_1.compareTo(EAT_1));","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"joyngjr":31}},{"path":"src/test/java/seedu/task/model/tracker/TaskByTagTrackerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.model.tracker;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.BENSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.CARL;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.DANIEL;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"public class TaskByTagTrackerTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"    public void sort_emptyModel_emptyString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"        assertEquals(\"\", TaskByTagTracker.sort(modelManager));","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"    public void sort_populatedModel_sorted() {","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"        modelManager.addTask(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"        modelManager.addTask(BENSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"        modelManager.addTask(CARL);","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"        modelManager.addTask(DANIEL);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"        assertEquals(\"1. [friends] (count: 3)\\n2. [owesMoney] (count: 1)\\n\",","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"                TaskByTagTracker.sort(modelManager));","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"joyngjr":30}},{"path":"src/test/java/seedu/task/storage/JsonAdaptedDailyPlanTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDailyPlans.APRIL26;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDailyPlans.MAY1;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"public class JsonAdaptedDailyPlanTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"    private static final long VALID_DESIRED_WORKLOAD \u003d 50;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"    private static final long INVALID_DESIRED_WORKLOAD \u003d -1;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"    private static final long VALID_CURRENT_WORKLOAD \u003d 30;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"    private static final long INVALID_CURRENT_WORKLOAD \u003d -1;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"    private static final long ZERO_WORKLOAD \u003d 0;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"    private static final String VALID_DATE \u003d \"2023-04-12\";","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"    private static final List\u003cJsonAdaptedTask\u003e VALID_TASKS \u003d MAY1.getTasks().stream()","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"            .map(JsonAdaptedTask::new)","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"        JsonAdaptedDailyPlan dp \u003d new JsonAdaptedDailyPlan(APRIL26);","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"        assertEquals(APRIL26, dp.toModelType());","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"    public void toModelType_invalidDesiredWorkload_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"        JsonAdaptedDailyPlan dp \u003d new JsonAdaptedDailyPlan(VALID_TASKS, INVALID_DESIRED_WORKLOAD,","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"                VALID_CURRENT_WORKLOAD, VALID_DATE);","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"        String expectedMessage \u003d \"DailyPlan\u0027s Desired Workload field must be non-negative!\";","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, dp::toModelType);","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"    public void toModelType_nullDesiredWorkload_defaultWorkload() {","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"        JsonAdaptedDailyPlan dp \u003d new JsonAdaptedDailyPlan(VALID_TASKS, null,","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"                VALID_CURRENT_WORKLOAD, VALID_DATE);","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"        JsonAdaptedDailyPlan defaultDP \u003d new JsonAdaptedDailyPlan(VALID_TASKS, ZERO_WORKLOAD,","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"                VALID_CURRENT_WORKLOAD, VALID_DATE);","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"        assertEquals(dp, defaultDP);","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"    public void toModelType_invalidCurrentWorkload_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"        JsonAdaptedDailyPlan dp \u003d new JsonAdaptedDailyPlan(VALID_TASKS, VALID_DESIRED_WORKLOAD,","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"                INVALID_CURRENT_WORKLOAD, VALID_DATE);","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"        String expectedMessage \u003d \"DailyPlan\u0027s Current Workload field must be non-negative!\";","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, dp::toModelType);","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"    public void toModelType_nullCurrentWorkload_defaultWorkload() {","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"        JsonAdaptedDailyPlan dp \u003d new JsonAdaptedDailyPlan(VALID_TASKS, VALID_DESIRED_WORKLOAD,","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"                null, VALID_DATE);","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"        JsonAdaptedDailyPlan defaultDP \u003d new JsonAdaptedDailyPlan(VALID_TASKS, VALID_DESIRED_WORKLOAD,","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"                ZERO_WORKLOAD, VALID_DATE);","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"        assertEquals(dp, defaultDP);","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"        JsonAdaptedDailyPlan dp \u003d new JsonAdaptedDailyPlan(VALID_TASKS, VALID_DESIRED_WORKLOAD,","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"                VALID_CURRENT_WORKLOAD, null);","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"        String expectedMessage \u003d \"DailyPlan\u0027s Date field is missing!\";","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, dp::toModelType);","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"joyngjr":74}},{"path":"src/test/java/seedu/task/storage/JsonAdaptedSubtaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.storage.JsonAdaptedSubtask.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.testutil.TypicalSubtasks.ALICE_HOMEWORK;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Description;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class JsonAdaptedSubtaskTest {","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"\";","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private static final String VALID_NAME \u003d ALICE_HOMEWORK.getName().toString();","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private static final String VALID_DESCRIPTION \u003d ALICE_HOMEWORK.getDescription().toString();","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private static final String NEGATIVE_HAS_DESCRIPTION \u003d \"false\";","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private static final String POSITIVE_HAS_DESCRIPTION \u003d \"true\";","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void toModelType_validTaskDetails_returnsSubtask() throws Exception {","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"        JsonAdaptedSubtask task \u003d new JsonAdaptedSubtask(ALICE_HOMEWORK);","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertEquals(ALICE_HOMEWORK, task.toModelType());","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"        JsonAdaptedSubtask task \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new JsonAdaptedSubtask(INVALID_NAME, VALID_DESCRIPTION, POSITIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"        JsonAdaptedSubtask task \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new JsonAdaptedSubtask(null, VALID_DESCRIPTION, POSITIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"        JsonAdaptedSubtask task \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new JsonAdaptedSubtask(VALID_NAME, INVALID_DESCRIPTION, POSITIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String expectedMessage \u003d Description.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"        JsonAdaptedSubtask task \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"            new JsonAdaptedSubtask(VALID_NAME, null, NEGATIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName());","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"PROGRAMMERHAO":73}},{"path":"src/test/java/seedu/task/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import static seedu.task.storage.JsonAdaptedTask.DEADLINE_EVENT_OVERLAP;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.storage.JsonAdaptedTask.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.BENSON;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import java.util.List;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.Date;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Description;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.exceptions.InvalidEffortException;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"\"; // to be used with POSITIVE_HAS_DESCRIPTION.","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"    private static final String NEGATIVE_HAS_DESCRIPTION \u003d \"false\";","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"    private static final String POSITIVE_HAS_DESCRIPTION \u003d \"true\";","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"    private static final String INVALID_DATE \u003d \"2 Feb 2023\";","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"    private static final long INVALID_EFFORT \u003d -1;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"    private static final String VALID_DESCRIPTION \u003d BENSON.getDescription().toString();","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"    private static final String VALID_DATE \u003d \"2023-01-01 1800\";","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"    private static final long VALID_EFFORT \u003d 1;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"    private static final String EMPTY_DATE \u003d \"\";","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"    private static final String VALID_WINDOW \u003d \"24\";","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"    private static final String EMPTY_WINDOW \u003d \"\";","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private static final List\u003cJsonAdaptedSubtask\u003e VALID_SUBTASK \u003d BENSON.getSubtasks().stream()","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"        .map(JsonAdaptedSubtask::new)","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(BENSON);","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"        assertEquals(BENSON, task.toModelType());","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"                new JsonAdaptedTask(INVALID_NAME, VALID_DESCRIPTION, VALID_TAGS,","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"                        EMPTY_DATE, EMPTY_DATE, EMPTY_DATE,","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        VALID_EFFORT, VALID_SUBTASK, VALID_WINDOW, POSITIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"                new JsonAdaptedTask(null, VALID_DESCRIPTION, VALID_TAGS,","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"                        EMPTY_DATE, EMPTY_DATE, EMPTY_DATE,","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        VALID_EFFORT, VALID_SUBTASK, VALID_WINDOW, POSITIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"                new JsonAdaptedTask(VALID_NAME, INVALID_DESCRIPTION, VALID_TAGS,","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"                        EMPTY_DATE, EMPTY_DATE, EMPTY_DATE,","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        VALID_EFFORT, VALID_SUBTASK, VALID_WINDOW, POSITIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"lywich"},"content":"        String expectedMessage \u003d Description.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"lywich"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"Huggenguggen"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"Huggenguggen"},"content":"                new JsonAdaptedTask(VALID_NAME, null, VALID_TAGS,","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"                        EMPTY_DATE, EMPTY_DATE, EMPTY_DATE,","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        VALID_EFFORT, VALID_SUBTASK, VALID_WINDOW, NEGATIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName());","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"lywich"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"Huggenguggen"},"content":"    public void toModelType_invalidDeadline_throwsIllegalValueException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"Huggenguggen"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"Huggenguggen"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_TAGS,","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        INVALID_DATE, EMPTY_DATE, EMPTY_DATE, VALID_EFFORT, VALID_SUBTASK,","lastModifiedDate":"2023-03-25"},{"lineNumber":108,"author":{"gitId":"PROGRAMMERHAO"},"content":"                            VALID_WINDOW, POSITIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-25"},{"lineNumber":109,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"Huggenguggen"},"content":"        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"Huggenguggen"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"Huggenguggen"},"content":"    public void toModelType_invalidFromDate_throwsIllegalValueException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"Huggenguggen"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"PROGRAMMERHAO"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_TAGS,","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"lywich"},"content":"                        EMPTY_DATE, INVALID_DATE, EMPTY_DATE,","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        VALID_EFFORT, VALID_SUBTASK, VALID_WINDOW, POSITIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"Huggenguggen"},"content":"        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"Huggenguggen"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"Huggenguggen"},"content":"    public void toModelType_invalidToDate_throwsIllegalValueException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"Huggenguggen"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"Huggenguggen"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_TAGS,","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"lywich"},"content":"                        EMPTY_DATE, EMPTY_DATE, VALID_DATE,","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        VALID_EFFORT, VALID_SUBTASK, VALID_WINDOW, POSITIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"Huggenguggen"},"content":"        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-01"},{"lineNumber":138,"author":{"gitId":"Huggenguggen"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-03-01"},{"lineNumber":139,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":140,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"Huggenguggen"},"content":"    public void toModelType_invalidFromToFormat_throwsIllegalValueException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":143,"author":{"gitId":"Huggenguggen"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"lywich"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_TAGS,","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"lywich"},"content":"                        EMPTY_DATE, EMPTY_DATE, VALID_DATE,","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        VALID_EFFORT, VALID_SUBTASK, VALID_WINDOW, POSITIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"Huggenguggen"},"content":"        JsonAdaptedTask task2 \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":148,"author":{"gitId":"Huggenguggen"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_TAGS,","lastModifiedDate":"2023-03-12"},{"lineNumber":149,"author":{"gitId":"lywich"},"content":"                        EMPTY_DATE, VALID_DATE, EMPTY_DATE,","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        VALID_EFFORT, VALID_SUBTASK, VALID_WINDOW, POSITIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"Huggenguggen"},"content":"        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"Huggenguggen"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"Huggenguggen"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task2::toModelType);","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":158,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"Huggenguggen"},"content":"    public void toModelType_deadlineAndEventOverlap_throwsIllegalValueException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"Huggenguggen"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":161,"author":{"gitId":"Huggenguggen"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_TAGS,","lastModifiedDate":"2023-03-12"},{"lineNumber":162,"author":{"gitId":"lywich"},"content":"                        VALID_DATE, VALID_DATE, VALID_DATE,","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        VALID_EFFORT, VALID_SUBTASK, VALID_WINDOW, POSITIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"Huggenguggen"},"content":"        JsonAdaptedTask task2 \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":165,"author":{"gitId":"Huggenguggen"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_TAGS,","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"lywich"},"content":"                        VALID_DATE, VALID_DATE, EMPTY_DATE,","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        VALID_EFFORT, VALID_SUBTASK, VALID_WINDOW, POSITIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"Huggenguggen"},"content":"        JsonAdaptedTask task3 \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":169,"author":{"gitId":"Huggenguggen"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_TAGS,","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        VALID_DATE, EMPTY_DATE, VALID_WINDOW, VALID_EFFORT, VALID_SUBTASK,","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    VALID_WINDOW, POSITIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"Huggenguggen"},"content":"        String expectedMessage \u003d DEADLINE_EVENT_OVERLAP;","lastModifiedDate":"2023-03-01"},{"lineNumber":175,"author":{"gitId":"Huggenguggen"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2023-03-01"},{"lineNumber":176,"author":{"gitId":"Huggenguggen"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task2::toModelType);","lastModifiedDate":"2023-03-04"},{"lineNumber":177,"author":{"gitId":"Huggenguggen"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task3::toModelType);","lastModifiedDate":"2023-03-04"},{"lineNumber":178,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":179,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"Huggenguggen"},"content":"    public void toModelType_nullAlertWindow_stillSucceed() throws Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":182,"author":{"gitId":"Huggenguggen"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"Huggenguggen"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_TAGS,","lastModifiedDate":"2023-03-12"},{"lineNumber":184,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        EMPTY_DATE, EMPTY_DATE, EMPTY_DATE, VALID_EFFORT, VALID_SUBTASK,","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    null, POSITIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"Huggenguggen"},"content":"        JsonAdaptedTask task1 \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":187,"author":{"gitId":"Huggenguggen"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_TAGS,","lastModifiedDate":"2023-03-12"},{"lineNumber":188,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        EMPTY_DATE, EMPTY_DATE, EMPTY_DATE, VALID_EFFORT, VALID_SUBTASK,","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    EMPTY_WINDOW, POSITIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"Huggenguggen"},"content":"        JsonAdaptedTask task2 \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":191,"author":{"gitId":"Huggenguggen"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_TAGS,","lastModifiedDate":"2023-03-12"},{"lineNumber":192,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        EMPTY_DATE, EMPTY_DATE, EMPTY_DATE, VALID_EFFORT, VALID_SUBTASK,","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"PROGRAMMERHAO"},"content":"                    VALID_WINDOW, POSITIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"Huggenguggen"},"content":"        assertEquals(task2.toModelType(), task.toModelType());","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"Huggenguggen"},"content":"        assertEquals(task2.toModelType(), task1.toModelType());","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":200,"author":{"gitId":"lywich"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":201,"author":{"gitId":"lywich"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-02-18"},{"lineNumber":202,"author":{"gitId":"lywich"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-02-18"},{"lineNumber":203,"author":{"gitId":"lywich"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2023-02-18"},{"lineNumber":204,"author":{"gitId":"Huggenguggen"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, invalidTags, EMPTY_DATE,","lastModifiedDate":"2023-03-12"},{"lineNumber":205,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        EMPTY_DATE, EMPTY_DATE, VALID_EFFORT, VALID_SUBTASK, VALID_WINDOW, POSITIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-25"},{"lineNumber":206,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"lywich"},"content":"        assertThrows(IllegalValueException.class, task::toModelType);","lastModifiedDate":"2023-02-18"},{"lineNumber":209,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":210,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":211,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"joyngjr"},"content":"    public void toModelType_invalidEffort_throwsInvalidEffortException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"joyngjr"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"joyngjr"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_TAGS, EMPTY_DATE, EMPTY_DATE, EMPTY_DATE,","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"PROGRAMMERHAO"},"content":"                        INVALID_EFFORT, VALID_SUBTASK, VALID_WINDOW, POSITIVE_HAS_DESCRIPTION);","lastModifiedDate":"2023-03-25"},{"lineNumber":216,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":217,"author":{"gitId":"joyngjr"},"content":"        assertThrows(InvalidEffortException.class, task::toModelType);","lastModifiedDate":"2023-03-13"},{"lineNumber":218,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":219,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"Huggenguggen":72,"lywich":83,"PROGRAMMERHAO":32,"joyngjr":33}},{"path":"src/test/java/seedu/task/storage/JsonPlannerStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDailyPlans.AUG22;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDailyPlans.JULY18;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDailyPlans.getTypicalPlanner;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.Planner;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.ReadOnlyPlanner;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"public class JsonPlannerStorageTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonPlannerStorageTest\");","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"    @TempDir","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"    public void readPlanner_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"        assertThrows(NullPointerException.class, () -\u003e readPlanner(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"    private Optional\u003cReadOnlyPlanner\u003e readPlanner(String filePath) throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"        return new JsonPlannerStorage(Paths.get(filePath)).readPlanner(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"                : null;","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"        assertFalse(readPlanner(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"        assertThrows(DataConversionException.class, () -\u003e readPlanner(\"notJsonFormatPlanner.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"    public void readTaskBook_invalidDailyPlanPlanner_throwDataConversionException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"        assertThrows(DataConversionException.class, () -\u003e readPlanner(\"invalidDailyPlanPlanner.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"    public void readTaskBook_invalidAndValidDailyPlanPlanner_throwDataConversionException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"        assertThrows(DataConversionException.class, () -\u003e readPlanner(\"invalidAndValidPlanPlanner.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"    public void readAndSavePlanner_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"        Path filePath \u003d testFolder.resolve(\"TempPlanner.json\");","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"        Planner original \u003d getTypicalPlanner();","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"        JsonPlannerStorage jsonPlannerStorage \u003d new JsonPlannerStorage(filePath);","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"        jsonPlannerStorage.savePlanner(original, filePath);","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"        ReadOnlyPlanner readBack \u003d jsonPlannerStorage.readPlanner(filePath).get();","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"        assertEquals(original, new Planner(readBack));","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"        original.addDailyPlan(JULY18);","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"        jsonPlannerStorage.savePlanner(original, filePath);","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"        readBack \u003d jsonPlannerStorage.readPlanner(filePath).get();","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"        assertEquals(original, new Planner(readBack));","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"        original.addDailyPlan(AUG22);","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"        jsonPlannerStorage.savePlanner(original); // file path not specified","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"        readBack \u003d jsonPlannerStorage.readPlanner().get(); // file path not specified","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"        assertEquals(original, new Planner(readBack));","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"    public void savePlanner_nullPlanner_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePlanner(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"joyngjr"},"content":"    private void savePlanner(ReadOnlyPlanner planner, String filePath) {","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"joyngjr"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"joyngjr"},"content":"            new JsonPlannerStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"joyngjr"},"content":"                    .savePlanner(planner, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"joyngjr"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"joyngjr"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"joyngjr"},"content":"    public void savePlanner_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"joyngjr"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePlanner(new Planner(), null));","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"joyngjr":105}},{"path":"src/test/java/seedu/task/storage/JsonSerializablePlannerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.util.JsonUtil;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.Planner;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"import seedu.task.testutil.TypicalDailyPlans;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"public class JsonSerializablePlannerTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"            \"JsonSerializablePlannerTest\");","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"    private static final Path TYPICAL_DAILY_PLANS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalDailyPlansPlanner.json\");","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"    private static final Path INVALID_DAILY_PLANS_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidDailyPlansPlanner.json\");","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"    public void toModelType_typicalDailyPlansFile_success() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"        JsonSerializablePlanner dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_DAILY_PLANS_FILE,","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"                JsonSerializablePlanner.class).get();","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"        Planner plannerFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"        Planner typicalDailyPlansPlanner \u003d TypicalDailyPlans.getTypicalPlanner();","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"        assertEquals(plannerFromFile, typicalDailyPlansPlanner);","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"    public void toModelType_invalidDailyPlansFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"        JsonSerializablePlanner dataFromFile \u003d JsonUtil.readJsonFile(INVALID_DAILY_PLANS_FILE,","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"                JsonSerializablePlanner.class).get();","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"joyngjr":37}},{"path":"src/test/java/seedu/task/storage/JsonSerializableTaskBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.util.JsonUtil;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import seedu.task.model.TaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import seedu.task.testutil.TypicalTasks;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"public class JsonSerializableTaskBookTest {","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableTaskBookTest\");","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"    private static final Path TYPICAL_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTasksTaskBook.json\");","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"    private static final Path INVALID_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTaskTaskBook.json\");","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"    private static final Path DUPLICATE_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTaskTaskBook.json\");","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"    public void toModelType_typicalTasksFile_success() throws Exception {","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"        JsonSerializableTaskBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TASKS_FILE,","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"                JsonSerializableTaskBook.class).get();","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"        TaskBook taskBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"        TaskBook typicalTasksTaskBook \u003d TypicalTasks.getTypicalTaskBook();","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"        assertEquals(taskBookFromFile, typicalTasksTaskBook);","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"    public void toModelType_invalidTaskFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"        JsonSerializableTaskBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASK_FILE,","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"                JsonSerializableTaskBook.class).get();","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"    public void toModelType_duplicateTasks_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"        JsonSerializableTaskBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TASK_FILE,","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"                JsonSerializableTaskBook.class).get();","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableTaskBook.MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"lywich":47}},{"path":"src/test/java/seedu/task/storage/JsonTaskBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.HOON;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.IDA;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"import seedu.task.model.TaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"public class JsonTaskBookStorageTest {","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTaskBookStorageTest\");","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"    @TempDir","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"    public Path testFolder;","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"    public void readTaskBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e readTaskBook(null));","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"    private java.util.Optional\u003cReadOnlyTaskBook\u003e readTaskBook(String filePath) throws Exception {","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"        return new JsonTaskBookStorage(Paths.get(filePath)).readTaskBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"lywich"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"                : null;","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"        assertFalse(readTaskBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskBook(\"notJsonFormatTaskBook.json\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"    public void readTaskBook_invalidTaskTaskBook_throwDataConversionException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskBook(\"invalidTaskTaskBook.json\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"    public void readTaskBook_invalidAndValidTaskTaskBook_throwDataConversionException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskBook(\"invalidAndValidTaskTaskBook.json\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"    public void readAndSaveTaskBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"        Path filePath \u003d testFolder.resolve(\"TempTaskBook.json\");","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"        TaskBook original \u003d getTypicalTaskBook();","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"        JsonTaskBookStorage jsonTaskBookStorage \u003d new JsonTaskBookStorage(filePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"        jsonTaskBookStorage.saveTaskBook(original, filePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"lywich"},"content":"        ReadOnlyTaskBook readBack \u003d jsonTaskBookStorage.readTaskBook(filePath).get();","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"lywich"},"content":"        assertEquals(original, new TaskBook(readBack));","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"        original.addTask(HOON);","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"        original.removeTask(ALICE);","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"        jsonTaskBookStorage.saveTaskBook(original, filePath);","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"        readBack \u003d jsonTaskBookStorage.readTaskBook(filePath).get();","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"        assertEquals(original, new TaskBook(readBack));","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"        original.addTask(IDA);","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"lywich"},"content":"        jsonTaskBookStorage.saveTaskBook(original); // file path not specified","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"        readBack \u003d jsonTaskBookStorage.readTaskBook().get(); // file path not specified","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"lywich"},"content":"        assertEquals(original, new TaskBook(readBack));","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"lywich"},"content":"    public void saveTaskBook_nullTaskBook_throwsNullPointerException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskBook(null, \"SomeFile.json\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"lywich"},"content":"     * Saves {@code taskBook} at the specified {@code filePath}.","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"lywich"},"content":"    private void saveTaskBook(ReadOnlyTaskBook taskBook, String filePath) {","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"        try {","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"lywich"},"content":"            new JsonTaskBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"lywich"},"content":"                    .saveTaskBook(taskBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"lywich"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"lywich"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"lywich"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"lywich"},"content":"    public void saveTaskBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"lywich"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskBook(new TaskBook(), null));","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"lywich":110}},{"path":"src/test/java/seedu/task/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.GuiSettings;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"import seedu.task.model.UserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"        userPrefs.setTaskBookFilePath(Paths.get(\"taskbook.json\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"lywich":6,"-":117}},{"path":"src/test/java/seedu/task/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDailyPlans.getTypicalPlanner;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.TypicalTasks.getTypicalTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.GuiSettings;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.Planner;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.ReadOnlyPlanner;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"import seedu.task.model.ReadOnlyTaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"import seedu.task.model.TaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"import seedu.task.model.UserPrefs;","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"        JsonTaskBookStorage taskBookStorage \u003d new JsonTaskBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"        JsonPlannerStorage plannerStorage \u003d new JsonPlannerStorage(getTempFilePath(\"plans\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"        storageManager \u003d new StorageManager(taskBookStorage, userPrefsStorage, plannerStorage);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"    public void taskBookReadSave() throws Exception {","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"         * {@link JsonTaskBookStorage} class.","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonTaskBookStorageTest} class.","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"        TaskBook original \u003d getTypicalTaskBook();","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"        storageManager.saveTaskBook(original);","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"        ReadOnlyTaskBook retrieved \u003d storageManager.readTaskBook().get();","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"        assertEquals(original, new TaskBook(retrieved));","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"    public void plannerReadSave() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"        /*","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"         * {@link JsonPlannerStorage} class.","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonPlannerStorageTest} class.","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"         */","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"        Planner original \u003d getTypicalPlanner();","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"        storageManager.savePlanner(original);","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"        ReadOnlyPlanner retrieved \u003d storageManager.readPlanner().get();","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"        assertEquals(original, new Planner(retrieved));","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"    public void getTaskBookFilePath() {","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"lywich"},"content":"        assertNotNull(storageManager.getTaskBookFilePath());","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lywich":16,"-":51,"joyngjr":19}},{"path":"src/test/java/seedu/task/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"lywich":1,"-":33}},{"path":"src/test/java/seedu/task/testutil/DeadlineBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Date;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Deadline;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Description;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":" * A utility class to help with building Deadline objects.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"public class DeadlineBuilder {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Amy\u0027s description\";","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"    public static final String DEFAULT_TIME \u003d \"2023-01-01 1800\";","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"    private Name name;","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"    private Description description;","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"    private Date deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"    private Effort effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"    private Duration alertWindow;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"     * Creates a {@code DeadlineBuilder} with the default details.","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"    public DeadlineBuilder() {","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"        deadline \u003d new Date(DEFAULT_TIME);","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"        effort \u003d new Effort();","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"     * Initializes the DeadlineBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"    public DeadlineBuilder(Deadline taskToCopy) {","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"        name \u003d taskToCopy.getName();","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"        description \u003d taskToCopy.getDescription();","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"        tags \u003d new HashSet\u003c\u003e(taskToCopy.getTags());","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"        deadline \u003d taskToCopy.getDeadline();","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"        effort \u003d taskToCopy.getEffort();","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"     * Sets the {@code Name} of the {@code Deadline} that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"    public DeadlineBuilder withName(String name) {","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Deadline} that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"    public DeadlineBuilder withTags(String ... tags) {","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"     * Sets the {@code Description} of the {@code Deadline} that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"    public DeadlineBuilder withDescription(String description) {","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"Huggenguggen"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"Huggenguggen"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Huggenguggen"},"content":"     * Sets the {@code Date} of the {@code Deadline} that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"Huggenguggen"},"content":"    public DeadlineBuilder withDate(String deadline) {","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"        this.deadline \u003d new Date(deadline);","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"Huggenguggen"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"     * Sets the {@code Effort} of the {@code Deadline} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"    public DeadlineBuilder withEffort(long e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"        this.effort \u003d new Effort(e);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"Huggenguggen"},"content":"     * Sets the {@code alertWindow} of the {@code Deadline} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"Huggenguggen"},"content":"    public DeadlineBuilder withAlertWindow(String alertWindow) {","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"Huggenguggen"},"content":"        this.alertWindow \u003d Duration.ofHours(Long.valueOf(alertWindow));","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"Huggenguggen"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"Huggenguggen"},"content":"    public Deadline build() {","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"joyngjr"},"content":"        return new Deadline(name, description, tags, deadline, effort);","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"Huggenguggen":88,"joyngjr":17}},{"path":"src/test/java/seedu/task/testutil/EditTaskDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Date;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Description;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":" * A utility class to help with building EditTaskDescriptor objects.","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"public class EditTaskDescriptorBuilder {","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"    private EditTaskDescriptor descriptor;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"    public EditTaskDescriptorBuilder() {","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"    public EditTaskDescriptorBuilder(EditTaskDescriptor descriptor) {","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"        this.descriptor \u003d new EditTaskDescriptor(descriptor);","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"     * Returns an {@code EditTaskDescriptor} with fields containing {@code task}\u0027s details","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"    public EditTaskDescriptorBuilder(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"        descriptor.setName(task.getName());","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"        descriptor.setDescription(task.getDescription());","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"        descriptor.setTags(task.getTags());","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"        descriptor.setEffort(task.getEffort());","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"     * Sets the {@code Name} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"    public EditTaskDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"        return this;","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"     * Sets the {@code Description} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"    public EditTaskDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"        descriptor.setDescription(new Description(description));","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"        return this;","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditTaskDescriptor}","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"     * that we are building.","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"    public EditTaskDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"lywich"},"content":"        return this;","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"     * Sets the {@code Effort} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"    public EditTaskDescriptorBuilder withEffort(long e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"        descriptor.setEffort(new Effort(e));","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Sets the {@code from} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public EditTaskDescriptorBuilder withFrom(String date) {","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"        descriptor.setFrom(new Date(date));","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Sets the {@code to} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public EditTaskDescriptorBuilder withTo(String to) {","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"PROGRAMMERHAO"},"content":"        descriptor.setTo(new Date(to));","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Sets the {@code Effort} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public EditTaskDescriptorBuilder withDeadline(String deadline) {","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"        descriptor.setDeadline(new Date(deadline));","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"lywich"},"content":"    public EditTaskDescriptor build() {","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"lywich"},"content":"        return descriptor;","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"lywich":67,"PROGRAMMERHAO":27,"joyngjr":10}},{"path":"src/test/java/seedu/task/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Date;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Description;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Event;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":" * A utility class to help with building Event objects.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"public class EventBuilder {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Amy\u0027s description\";","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"    public static final String DEFAULT_START \u003d \"2023-01-01 1800\";","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"    public static final String DEFAULT_END \u003d \"2023-01-02 1800\";","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"    public static final long DEFAULT_EFFORT \u003d 24;","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"    private Name name;","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"    private Description description;","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"    private Date from;","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"    private Date to;","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"    private Duration alertWindow;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"    private Effort effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"     * Creates a {@code EventBuilder} with the default details.","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"    public EventBuilder() {","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"        from \u003d new Date(DEFAULT_START);","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"        to \u003d new Date(DEFAULT_END);","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"        effort \u003d new Effort(DEFAULT_EFFORT);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"     * Initializes the EventBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"    public EventBuilder(Event taskToCopy) {","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"        name \u003d taskToCopy.getName();","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"        description \u003d taskToCopy.getDescription();","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"        tags \u003d new HashSet\u003c\u003e(taskToCopy.getTags());","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"        from \u003d taskToCopy.getFrom();","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"        to \u003d taskToCopy.getTo();","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"        effort \u003d taskToCopy.getEffort();","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"     * Sets the {@code Name} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"    public EventBuilder withName(String name) {","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Event} that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"    public EventBuilder withTags(String ... tags) {","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"Huggenguggen"},"content":"     * Sets the {@code Description} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Huggenguggen"},"content":"    public EventBuilder withDescription(String description) {","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"Huggenguggen"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"Huggenguggen"},"content":"     * Sets the {@code Date} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"Huggenguggen"},"content":"    public EventBuilder withFrom(String from) {","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"Huggenguggen"},"content":"        this.from \u003d new Date(from);","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"Huggenguggen"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"Huggenguggen"},"content":"     * Sets the {@code Date} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"Huggenguggen"},"content":"    public EventBuilder withTo(String to) {","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"Huggenguggen"},"content":"        this.to \u003d new Date(to);","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"Huggenguggen"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"joyngjr"},"content":"     * Sets the {@code Effort} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"joyngjr"},"content":"    public EventBuilder withEffort(long e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"joyngjr"},"content":"        this.effort \u003d new Effort(e);","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"joyngjr"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"Huggenguggen"},"content":"     * Sets the {@code alertWindow} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"Huggenguggen"},"content":"    public EventBuilder withAlertWindow(String alertWindow) {","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"Huggenguggen"},"content":"        this.alertWindow \u003d Duration.ofHours(Long.valueOf(alertWindow));","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"Huggenguggen"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"Huggenguggen"},"content":"    public Event build() {","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"joyngjr"},"content":"        return new Event(name, description, tags, from, to, effort);","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"Huggenguggen":100,"joyngjr":19}},{"path":"src/test/java/seedu/task/testutil/PlannerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.Planner;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.calendar.DailyPlan;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":" * A utility class to help with building Planner objects.","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":" *     {@code Planner ab \u003d new PlannerBuilder().withPlan(\"APRIL26\").build();}","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"public class PlannerBuilder {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"    private Planner planner;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"    public PlannerBuilder() {","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"        planner \u003d new Planner();","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"     * Adds a new {@code DailyPlan} to the {@code Planner} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"    public PlannerBuilder withPlan(DailyPlan dp) {","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"        planner.addDailyPlan(dp);","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    public Planner build() {","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"        return planner;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"joyngjr":29}},{"path":"src/test/java/seedu/task/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lywich":1,"-":71}},{"path":"src/test/java/seedu/task/testutil/SimpleTaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.time.Duration;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Description;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.SimpleTask;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Subtask;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.UniqueSubtaskList;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"import seedu.task.model.util.SampleDataUtil;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"public class SimpleTaskBuilder {","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"    private Name name;","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"    private Description description;","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    private Effort effort;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"    private Duration alertWindow;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private UniqueSubtaskList subtasks;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"     * Creates a {@code SimpleTaskBuilder} with the default details.","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"    public SimpleTaskBuilder() {","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"lywich"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"        description \u003d new Description();","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"        effort \u003d new Effort();","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"        subtasks \u003d new UniqueSubtaskList();","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"     * Initializes the SimpleTaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"    public SimpleTaskBuilder(Task taskToCopy) {","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"        name \u003d taskToCopy.getName();","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"        description \u003d taskToCopy.getDescription();","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"lywich"},"content":"        tags \u003d new HashSet\u003c\u003e(taskToCopy.getTags());","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"        effort \u003d taskToCopy.getEffort();","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"        subtasks \u003d taskToCopy.getSubtasksAsOriginal();","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"     * Sets the {@code Name} of the {@code Task} that we are building.","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"    public SimpleTaskBuilder withName(String name) {","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"        return this;","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Task} that we are building.","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"    public SimpleTaskBuilder withTags(String ... tags) {","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"lywich"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"        return this;","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"     * Sets the {@code Description} of the {@code Task} that we are building.","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"Huggenguggen"},"content":"    public SimpleTaskBuilder withDescription(String description) {","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"lywich"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"lywich"},"content":"        return this;","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"lywich"},"content":"     * Sets the {@code Description} of the {@code Task} that we are building.","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"lywich"},"content":"    public SimpleTaskBuilder withDescription() {","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"        this.description \u003d new Description();","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"        return this;","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"     * Sets the {@code Effort} of the {@code Task} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"    public SimpleTaskBuilder withEffort(long e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"        this.effort \u003d new Effort(e);","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Sets the {@code UniqueSubtaskList}of the {@code Task} that we are building.","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @param subtask A pre-built subtask","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * @return A SimpleTaskBuilder","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public SimpleTaskBuilder withSubtasks(Subtask subtask) {","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.subtasks.addSubtask(subtask);","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this;","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"Huggenguggen"},"content":"     * Sets the {@code alertWindow} of the {@code Task} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"Huggenguggen"},"content":"    public SimpleTaskBuilder withAlertWindow(String alertWindow) {","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"Huggenguggen"},"content":"        this.alertWindow \u003d Duration.ofHours(Long.valueOf(alertWindow));","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"joyngjr"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"lywich"},"content":"    public Task build() {","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return new SimpleTask(name, description, tags, effort, subtasks.asInternalList());","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"joyngjr"},"content":"    public Task buildDefault() {","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"joyngjr"},"content":"        return new SimpleTask(name, description, tags, null);","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"Huggenguggen":15,"lywich":64,"PROGRAMMERHAO":17,"joyngjr":23}},{"path":"src/test/java/seedu/task/testutil/SubtaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Description;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Name;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Subtask;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class SubtaskBuilder {","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String DEFAULT_NAME \u003d \"do homework\";","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"lecture 1\";","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private Name name;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"    private Description description;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Creates a {@code SimpleTaskBuilder} with the default details.","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public SubtaskBuilder() {","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Initializes the SimpleTaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public SubtaskBuilder(Subtask taskToCopy) {","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"PROGRAMMERHAO"},"content":"        name \u003d taskToCopy.getName();","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"PROGRAMMERHAO"},"content":"        description \u003d taskToCopy.getDescription();","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Sets the {@code Name} of the {@code Subtask} that we are building.","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public SubtaskBuilder withName(String name) {","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this;","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Sets the {@code Description} of the {@code Subtask} that we are building.","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public SubtaskBuilder withDescription(String description) {","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this;","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"PROGRAMMERHAO"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"PROGRAMMERHAO"},"content":"     * Sets the {@code Description} of the {@code Task} that we are building.","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"PROGRAMMERHAO"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public SubtaskBuilder withDescription() {","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"PROGRAMMERHAO"},"content":"        this.description \u003d new Description();","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return this;","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public Subtask build() {","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return new Subtask(name, description);","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public Subtask buildDefault() {","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"PROGRAMMERHAO"},"content":"        return new Subtask(name, description);","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"PROGRAMMERHAO"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"PROGRAMMERHAO":68}},{"path":"src/test/java/seedu/task/testutil/TagComparatorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.tracker.TagComparator;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":" * A utility class to help with building TagComparator objects.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"public class TagComparatorBuilder {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"    private static final String DEFAULT_TAG \u003d \"CODE\";","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"    private static final int DEFAULT_OCCURRENCES \u003d 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"    private Tag tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"    private int occurrences;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"     * Creates a {@code TagComparatorBuilder} with the default details.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"    public TagComparatorBuilder() {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"        this.tag \u003d new Tag(DEFAULT_TAG);","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"        this.occurrences \u003d DEFAULT_OCCURRENCES;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"     * Initializes the TagComparatorBuilder with the data of {@code tag}.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    public TagComparatorBuilder withTag(String tag) {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"        this.tag \u003d new Tag(tag);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"        return this;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"     * Initializes the TagComparatorBuilder with the data of {@code num}.","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"    public TagComparatorBuilder withOccurrence(int num) {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"        this.occurrences \u003d num;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"        return this;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"    public TagComparator build() {","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"        return new TagComparator(tag, occurrences);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"joyngjr":42}},{"path":"src/test/java/seedu/task/testutil/TaskBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import seedu.task.model.TaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":" * A utility class to help with building Taskbook objects.","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":" *     {@code TaskBook ab \u003d new TaskBookBuilder().withTask(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"public class TaskBookBuilder {","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"    private TaskBook taskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"    public TaskBookBuilder() {","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"        taskBook \u003d new TaskBook();","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"    public TaskBookBuilder(TaskBook taskBook) {","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"        this.taskBook \u003d taskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"lywich"},"content":"     * Adds a new {@code Task} to the {@code TaskBook} that we are building.","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"lywich"},"content":"    public TaskBookBuilder withTask(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"        taskBook.addTask(task);","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"lywich"},"content":"        return this;","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"    public TaskBook build() {","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"        return taskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"lywich":34}},{"path":"src/test/java/seedu/task/testutil/TaskUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.AddCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"import seedu.task.model.tag.Tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":" * A utility class for Task.","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"public class TaskUtil {","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":"     * Returns an add command string for adding the {@code task}.","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"    public static String getAddCommand(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getTaskDetails(task);","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"lywich"},"content":"     * Returns the part of command string for the given {@code task}\u0027s details.","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"lywich"},"content":"    public static String getTaskDetails(Task task) {","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"        sb.append(PREFIX_NAME + task.getName().fullName + \" \");","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"lywich"},"content":"        sb.append(PREFIX_DESCRIPTION + task.getDescription().value + \" \");","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"lywich"},"content":"        task.getTags().stream().forEach(","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"lywich"},"content":"     * Returns the part of command string for the given {@code EditTaskDescriptor}\u0027s details.","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"lywich"},"content":"    public static String getEditTaskDescriptorDetails(EditTaskDescriptor descriptor) {","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"lywich"},"content":"        descriptor.getDescription()","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"                .ifPresent(description -\u003e sb.append(PREFIX_DESCRIPTION).append(description.value).append(\" \"));","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"lywich":22,"-":35}},{"path":"src/test/java/seedu/task/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.index.Index;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import seedu.task.model.Model;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"lywich"},"content":"     * Returns the middle index of the task in the {@code model}\u0027s task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"        return Index.fromOneBased(model.getFilteredTaskList().size() / 2);","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"lywich"},"content":"     * Returns the last index of the task in the {@code model}\u0027s task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"        return Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"     * Returns the task in the {@code model}\u0027s task list at {@code index}.","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"    public static Task getTask(Model model, Index index) {","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"        return model.getFilteredTaskList().get(index.getZeroBased());","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lywich":11,"-":44}},{"path":"src/test/java/seedu/task/testutil/TypicalComplicatedTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.TaskBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.Deadline;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.Event;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"public class TypicalComplicatedTasks {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"    public static final Deadline RETURN_BOOK \u003d new DeadlineBuilder().withName(\"Return Book\")","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"            .withDescription(\"Return book description\")","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"            .withTags(\"Reminder\")","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"            .withDate(\"2023-01-05 2000\")","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"            .withAlertWindow(\"24\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"    public static final Deadline ASSIGNMENT \u003d new DeadlineBuilder().withName(\"Assignment\")","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"            .withDescription(\"Assignment description\")","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"            .withTags(\"Important\")","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"            .withDate(\"2023-01-03 1800\")","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"            .withAlertWindow(\"24\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"    public static final Event REST \u003d new EventBuilder().withName(\"REST\")","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"            .withDescription(\"rest description\")","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"            .withTags(\"Important\")","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"            .withFrom(\"2023-01-03 1800\")","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"            .withTo(\"2023-01-03 2000\")","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"            .withAlertWindow(\"24\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"    private TypicalComplicatedTasks() {} // prevents instantiation","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"     * Returns an {@code TaskBook} with all the typical tasks.","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"    public static TaskBook getTypicalComplicatedTasks() {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"        TaskBook ab \u003d new TaskBook();","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"        for (Task task : getComplicatedTasks()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"            ab.addTask(task);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"        return ab;","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"    public static List\u003cTask\u003e getComplicatedTasks() {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(RETURN_BOOK, ASSIGNMENT, REST));","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Huggenguggen":53}},{"path":"src/test/java/seedu/task/testutil/TypicalDailyPlans.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDeadlines.CHICKEN_EXPIRY;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalDeadlines.SUSHI_EXPIRY;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalEvents.EXAM;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalEvents.SLEEPOVER;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.BENSON;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.CARL;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.DANIEL;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.ELLE;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.FIONA;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"import static seedu.task.testutil.TypicalTasks.GEORGE;","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.Planner;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.calendar.DailyPlan;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":" * A utility class containing a list of {@code TypicalDailyPlans} objects to be used in tests.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"public class TypicalDailyPlans {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"    public static final int DEFAULT_WORKLOAD \u003d 24;","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan APRIL26 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.APR26);","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan APRIL27 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.APR27);","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan APRIL28 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.APR28);","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan APRIL29 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.APR29);","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan APRIL30 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.APR30);","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY1 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY1);","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY2 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY2);","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY3 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY3);","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY4 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY4);","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY5 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY5);","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY6 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY6);","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY7 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY7);","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY8 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY8);","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY9 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY9);","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY10 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY10);","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY11 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY11);","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY12 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY12);","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY13 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY13);","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY14 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY14);","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY15 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY15);","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY16 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY16);","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY17 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY17);","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY18 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY18);","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY19 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY19);","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY20 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY20);","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY21 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY21);","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY22 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY22);","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY23 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY23);","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY24 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY24);","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan MAY25 \u003d new DailyPlan(DEFAULT_WORKLOAD, TypicalLocalDates.MAY25);","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan JULY18 \u003d new DailyPlan(21, TypicalLocalDates.JULY18);","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan AUG22 \u003d new DailyPlan(21, TypicalLocalDates.AUGUST22);","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"     * Returns an {@code Planner} with all the typical DailyPlans.","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"    public static Planner getTypicalPlanner() {","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"joyngjr"},"content":"        Planner p \u003d new Planner();","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"joyngjr"},"content":"        for (DailyPlan dp : getDailyPlans()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"joyngjr"},"content":"            p.addDailyPlan(dp);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"joyngjr"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"        return p;","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"    private static List\u003cDailyPlan\u003e getDailyPlans() {","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"        return new ArrayList\u003c\u003e((Arrays.asList(APRIL26, APRIL27, APRIL28, APRIL29, APRIL30, MAY1, MAY2, MAY3, MAY4,","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"joyngjr"},"content":"                MAY5, MAY6, MAY7, MAY8, MAY9, MAY10, MAY11, MAY12, MAY13, MAY14, MAY15, MAY16, MAY17, MAY18, MAY19,","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"joyngjr"},"content":"                MAY20, MAY21, MAY22, MAY23, MAY24, MAY25)));","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"joyngjr"},"content":"     * SimpleTasks allocated to Apr 26 in test.","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"joyngjr"},"content":"    public static DailyPlan april26SimpleTask() {","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"joyngjr"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"joyngjr"},"content":"        taskList.add(ELLE);","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"joyngjr"},"content":"        return new DailyPlan(taskList, 24, 24, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":87,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":88,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"joyngjr"},"content":"     * SimpleTasks allocated to Apr 27 in test.","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"joyngjr"},"content":"    public static DailyPlan april27SimpleTask() {","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"joyngjr"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"joyngjr"},"content":"        taskList.add(FIONA);","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"joyngjr"},"content":"        return new DailyPlan(taskList, 24, 24, LocalDate.parse(\"2023-04-27\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":97,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"joyngjr"},"content":"     * SimpleTasks allocated to Apr 28 in test.","lastModifiedDate":"2023-04-04"},{"lineNumber":100,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"joyngjr"},"content":"    public static DailyPlan april28SimpleTask() {","lastModifiedDate":"2023-04-04"},{"lineNumber":102,"author":{"gitId":"joyngjr"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":103,"author":{"gitId":"joyngjr"},"content":"        taskList.add(GEORGE);","lastModifiedDate":"2023-04-04"},{"lineNumber":104,"author":{"gitId":"joyngjr"},"content":"        return new DailyPlan(taskList, 24, 24, LocalDate.parse(\"2023-04-28\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":106,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":107,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":108,"author":{"gitId":"joyngjr"},"content":"     * SimpleTasks allocated to Apr 29 in test.","lastModifiedDate":"2023-04-04"},{"lineNumber":109,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":110,"author":{"gitId":"joyngjr"},"content":"    public static DailyPlan april29SimpleTask() {","lastModifiedDate":"2023-04-04"},{"lineNumber":111,"author":{"gitId":"joyngjr"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":112,"author":{"gitId":"joyngjr"},"content":"        taskList.add(DANIEL);","lastModifiedDate":"2023-04-04"},{"lineNumber":113,"author":{"gitId":"joyngjr"},"content":"        taskList.add(BENSON);","lastModifiedDate":"2023-04-04"},{"lineNumber":114,"author":{"gitId":"joyngjr"},"content":"        taskList.add(CARL);","lastModifiedDate":"2023-04-04"},{"lineNumber":115,"author":{"gitId":"joyngjr"},"content":"        taskList.add(ALICE);","lastModifiedDate":"2023-04-04"},{"lineNumber":116,"author":{"gitId":"joyngjr"},"content":"        return new DailyPlan(taskList, 24, 15, LocalDate.parse(\"2023-04-29\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":117,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":118,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":119,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":120,"author":{"gitId":"joyngjr"},"content":"     * Deadlines allocated to Apr 26 in test.","lastModifiedDate":"2023-04-04"},{"lineNumber":121,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":122,"author":{"gitId":"joyngjr"},"content":"    public static DailyPlan april26Deadline() {","lastModifiedDate":"2023-04-04"},{"lineNumber":123,"author":{"gitId":"joyngjr"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":124,"author":{"gitId":"joyngjr"},"content":"        taskList.add(CHICKEN_EXPIRY);","lastModifiedDate":"2023-04-04"},{"lineNumber":125,"author":{"gitId":"joyngjr"},"content":"        return new DailyPlan(taskList, 24, 28, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":126,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":127,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":128,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":129,"author":{"gitId":"joyngjr"},"content":"     * Deadline allocated to Apr 27 in test.","lastModifiedDate":"2023-04-04"},{"lineNumber":130,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":131,"author":{"gitId":"joyngjr"},"content":"    public static DailyPlan april27Deadline() {","lastModifiedDate":"2023-04-04"},{"lineNumber":132,"author":{"gitId":"joyngjr"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":133,"author":{"gitId":"joyngjr"},"content":"        taskList.add(SUSHI_EXPIRY);","lastModifiedDate":"2023-04-04"},{"lineNumber":134,"author":{"gitId":"joyngjr"},"content":"        return new DailyPlan(taskList, 24, 12, LocalDate.parse(\"2023-04-27\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":135,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":136,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":137,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":138,"author":{"gitId":"joyngjr"},"content":"     * Events allocated to Apr 26 in test.","lastModifiedDate":"2023-04-04"},{"lineNumber":139,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":140,"author":{"gitId":"joyngjr"},"content":"    public static DailyPlan april26Event() {","lastModifiedDate":"2023-04-04"},{"lineNumber":141,"author":{"gitId":"joyngjr"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":142,"author":{"gitId":"joyngjr"},"content":"        taskList.add(EXAM);","lastModifiedDate":"2023-04-04"},{"lineNumber":143,"author":{"gitId":"joyngjr"},"content":"        taskList.add(SLEEPOVER);","lastModifiedDate":"2023-04-04"},{"lineNumber":144,"author":{"gitId":"joyngjr"},"content":"        return new DailyPlan(taskList, 24, 6, LocalDate.parse(\"2023-04-26\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":145,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":146,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":147,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":148,"author":{"gitId":"joyngjr"},"content":"     * Events allocated to Apr 27 in test.","lastModifiedDate":"2023-04-04"},{"lineNumber":149,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":150,"author":{"gitId":"joyngjr"},"content":"    public static DailyPlan april27Event() {","lastModifiedDate":"2023-04-04"},{"lineNumber":151,"author":{"gitId":"joyngjr"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":152,"author":{"gitId":"joyngjr"},"content":"        taskList.add(SLEEPOVER);","lastModifiedDate":"2023-04-04"},{"lineNumber":153,"author":{"gitId":"joyngjr"},"content":"        return new DailyPlan(taskList, 24, 1, LocalDate.parse(\"2023-04-27\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":154,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":155,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":156,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":157,"author":{"gitId":"joyngjr"},"content":"     * Events allocated to Apr 28 in test.","lastModifiedDate":"2023-04-04"},{"lineNumber":158,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":159,"author":{"gitId":"joyngjr"},"content":"    public static DailyPlan april28Event() {","lastModifiedDate":"2023-04-04"},{"lineNumber":160,"author":{"gitId":"joyngjr"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":161,"author":{"gitId":"joyngjr"},"content":"        taskList.add(SLEEPOVER);","lastModifiedDate":"2023-04-04"},{"lineNumber":162,"author":{"gitId":"joyngjr"},"content":"        return new DailyPlan(taskList, 24, 1, LocalDate.parse(\"2023-04-28\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":163,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":164,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":165,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":166,"author":{"gitId":"joyngjr"},"content":"     * Events allocated to Apr 29 in test.","lastModifiedDate":"2023-04-04"},{"lineNumber":167,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":168,"author":{"gitId":"joyngjr"},"content":"    public static DailyPlan april29Event() {","lastModifiedDate":"2023-04-04"},{"lineNumber":169,"author":{"gitId":"joyngjr"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":170,"author":{"gitId":"joyngjr"},"content":"        taskList.add(SLEEPOVER);","lastModifiedDate":"2023-04-04"},{"lineNumber":171,"author":{"gitId":"joyngjr"},"content":"        return new DailyPlan(taskList, 24, 1, LocalDate.parse(\"2023-04-29\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":172,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":173,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":174,"author":{"gitId":"joyngjr"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":175,"author":{"gitId":"joyngjr"},"content":"     * Events allocated to Apr 30 in test.","lastModifiedDate":"2023-04-04"},{"lineNumber":176,"author":{"gitId":"joyngjr"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":177,"author":{"gitId":"joyngjr"},"content":"    public static DailyPlan april30Event() {","lastModifiedDate":"2023-04-04"},{"lineNumber":178,"author":{"gitId":"joyngjr"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":179,"author":{"gitId":"joyngjr"},"content":"        taskList.add(SLEEPOVER);","lastModifiedDate":"2023-04-04"},{"lineNumber":180,"author":{"gitId":"joyngjr"},"content":"        return new DailyPlan(taskList, 24, 1, LocalDate.parse(\"2023-04-30\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":181,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":182,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":182}},{"path":"src/test/java/seedu/task/testutil/TypicalDeadlines.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.TaskBook;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.Deadline;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"public class TypicalDeadlines {","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"    public static final Deadline RETURN_BOOK \u003d new DeadlineBuilder().withName(\"Return Book\")","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"            .withDescription(\"Return book description\")","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"            .withTags(\"Reminder\")","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"            .withDate(\"2023-01-01 1800\")","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"            .withEffort(1)","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"            .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"    public static final Deadline ASSIGNMENT \u003d new DeadlineBuilder().withName(\"Assignment\")","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"            .withDescription(\"Assignment description\")","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"            .withTags(\"Important\")","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"            .withDate(\"2023-01-01 1800\")","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"            .withEffort(1)","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"            .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"    public static final Deadline PROJECT \u003d new DeadlineBuilder().withName(\"Project\")","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"            .withDescription(\"Project description\")","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"            .withTags(\"Important\")","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"            .withDate(\"2023-06-01 1800\")","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"            .withEffort(5)","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"            .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"    public static final Deadline CHICKEN_EXPIRY \u003d new DeadlineBuilder().withName(\"Chicken\")","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"            .withDate(\"2023-04-29 1800\")","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"            .withEffort(28)","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"            .build();","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"    public static final Deadline SUSHI_EXPIRY \u003d new DeadlineBuilder().withName(\"Sushi\")","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"            .withDate(\"2023-04-30 1800\")","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"            .withEffort(12)","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"            .build();","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"    private TypicalDeadlines() {} // prevents instantiation","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"     * Returns an {@code TaskBook} with all the typical tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"    public static TaskBook getTypicalDeadlineBook() {","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"        TaskBook ab \u003d new TaskBook();","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"        for (Task task : getTypicalDeadlines()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"            ab.addTask(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"        return ab;","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"    public static List\u003cTask\u003e getTypicalDeadlines() {","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(RETURN_BOOK, ASSIGNMENT, PROJECT));","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"joyngjr"},"content":"    public static List\u003cTask\u003e getTypicalDeadlinesInApril() {","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"joyngjr"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(CHICKEN_EXPIRY, SUSHI_EXPIRY));","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"Huggenguggen":45,"joyngjr":22}},{"path":"src/test/java/seedu/task/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.TaskBook;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.Event;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"public class TypicalEvents {","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"    public static final Event MEETING \u003d new EventBuilder().withName(\"Meeting\")","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"            .withDescription(\"Meeting description\")","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"            .withTags(\"Reminder\")","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"            .withFrom(\"2023-01-01 1800\")","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"            .withTo(\"2023-01-02 1800\")","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"            .withEffort(5)","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"            .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"    public static final Event STUDY \u003d new EventBuilder().withName(\"Study\")","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"            .withDescription(\"Study description\")","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"            .withTags(\"Concentrate\")","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"            .withFrom(\"2023-01-02 1800\")","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"            .withTo(\"2023-01-03 1800\")","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"            .withEffort(3)","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"            .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"    public static final Event REST \u003d new EventBuilder().withName(\"REST\")","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"            .withDescription(\"rest description\")","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"            .withTags(\"Important\")","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"            .withFrom(\"2023-01-03 1800\")","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"            .withTo(\"2023-01-03 2000\")","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"            .withEffort(2)","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"            .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"    public static final Event EXAM \u003d new EventBuilder().withName(\"EXAM\")","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"            .withDescription(\"CS2103T\")","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"            .withTags(\"Important\", \"Study\")","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"            .withFrom(\"2023-04-26 0900\")","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"            .withTo(\"2023-04-26 1700\")","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"            .withEffort(5)","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"            .build();","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"    public static final Event SLEEPOVER \u003d new EventBuilder().withName(\"SLEEPOVER\")","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"            .withDescription(\"with friends\")","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"            .withTags(\"leisure\")","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"            .withFrom(\"2023-04-25 0900\")","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"            .withTo(\"2023-04-30 1700\")","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"            .withEffort(1)","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"            .build();","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"    private TypicalEvents() {} // prevents instantiation","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"     * Returns an {@code TaskBook} with all the typical tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"    public static TaskBook getTypicalEventBook() {","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"        TaskBook ab \u003d new TaskBook();","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"        for (Task task : getTypicalEvents()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"            ab.addTask(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"        return ab;","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"    public static List\u003cTask\u003e getTypicalEvents() {","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MEETING, STUDY, REST));","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"joyngjr"},"content":"    public static List\u003cTask\u003e getTypicalEventsInApril() {","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"joyngjr"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(EXAM, SLEEPOVER));","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"Huggenguggen":48,"joyngjr":28}},{"path":"src/test/java/seedu/task/testutil/TypicalIndexLists.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import seedu.task.commons.core.index.IndexList;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":" * A utility class containing a list of {@code IndexList} objects to be used in tests.","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"public class TypicalIndexLists {","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"    public static final int[] A \u003d {1};","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"    public static final String INDEXLIST_FIRST_TASK_INT \u003d \"1\";","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"    public static final int[] B \u003d {1, 2};","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"    public static final IndexList INDEXLIST_FIRST_TASK \u003d IndexList.fromOneBasedList(A);","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"    public static final IndexList INDEXLIST_SECOND_TASK \u003d IndexList.fromOneBasedList(B);","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"joyngjr":16}},{"path":"src/test/java/seedu/task/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import seedu.task.commons.core.index.Index;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"lywich"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"    public static final Index INDEX_THIRD_TASK \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"lywich":5,"-":7}},{"path":"src/test/java/seedu/task/testutil/TypicalLocalDates.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":" *","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"public class TypicalLocalDates {","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate LOCAL_DATE_FIRST \u003d LocalDate.parse(\"2023-05-14\");","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate LOCAL_DATE_SECOND \u003d LocalDate.parse(\"2023-06-20\");","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate LOCAL_DATE_THIRD \u003d LocalDate.parse(\"2023-09-14\");","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate LOCAL_DATE_FOURTH \u003d LocalDate.parse(\"2023-04-26\");","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate LOCAL_DATE_FIFTH \u003d LocalDate.parse(\"2020-01-01\");","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate APR26 \u003d LocalDate.parse(\"2023-04-26\");","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate APR27 \u003d LocalDate.parse(\"2023-04-27\");","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate APR28 \u003d LocalDate.parse(\"2023-04-28\");","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate APR29 \u003d LocalDate.parse(\"2023-04-29\");","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate APR30 \u003d LocalDate.parse(\"2023-04-30\");","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY1 \u003d LocalDate.parse(\"2023-05-01\");","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY2 \u003d LocalDate.parse(\"2023-05-02\");","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY3 \u003d LocalDate.parse(\"2023-05-03\");","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY4 \u003d LocalDate.parse(\"2023-05-04\");","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY5 \u003d LocalDate.parse(\"2023-05-05\");","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY6 \u003d LocalDate.parse(\"2023-05-06\");","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY7 \u003d LocalDate.parse(\"2023-05-07\");","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY8 \u003d LocalDate.parse(\"2023-05-08\");","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY9 \u003d LocalDate.parse(\"2023-05-09\");","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY10 \u003d LocalDate.parse(\"2023-05-10\");","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY11 \u003d LocalDate.parse(\"2023-05-11\");","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY12 \u003d LocalDate.parse(\"2023-05-12\");","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY13 \u003d LocalDate.parse(\"2023-05-13\");","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY14 \u003d LocalDate.parse(\"2023-05-14\");","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY15 \u003d LocalDate.parse(\"2023-05-15\");","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY16 \u003d LocalDate.parse(\"2023-05-16\");","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY17 \u003d LocalDate.parse(\"2023-05-17\");","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY18 \u003d LocalDate.parse(\"2023-05-18\");","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY19 \u003d LocalDate.parse(\"2023-05-19\");","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY20 \u003d LocalDate.parse(\"2023-05-20\");","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY21 \u003d LocalDate.parse(\"2023-05-21\");","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY22 \u003d LocalDate.parse(\"2023-05-22\");","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY23 \u003d LocalDate.parse(\"2023-05-23\");","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY24 \u003d LocalDate.parse(\"2023-05-24\");","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate MAY25 \u003d LocalDate.parse(\"2023-05-25\");","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate JULY18 \u003d LocalDate.parse(\"2023-07-18\");","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"    public static final LocalDate AUGUST22 \u003d LocalDate.parse(\"2023-08-22\");","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":46}},{"path":"src/test/java/seedu/task/testutil/TypicalMixedClassList.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import java.util.List;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":" * Generates a list of tasks for testing.","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"public class TypicalMixedClassList {","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"    public static List\u003cTask\u003e getTypicalMixedClassList() {","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"        List\u003cTask\u003e list \u003d TypicalTasks.getTypicalTasks();","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"        list.add(TypicalDeadlines.CHICKEN_EXPIRY);","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"        list.add(TypicalDeadlines.SUSHI_EXPIRY);","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"        list.add(TypicalEvents.EXAM);","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"        list.add(TypicalEvents.SLEEPOVER);","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"        return list;","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"joyngjr":20}},{"path":"src/test/java/seedu/task/testutil/TypicalMonthlyPlan.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.calendar.DailyPlan;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.calendar.MonthlyPlan;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":" * A utility class containing a {@TypicalMonthlyPlan} objects to be used in tests.","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"public class TypicalMonthlyPlan {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan[] DAILY_PLANS \u003d {","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.APRIL26, TypicalDailyPlans.APRIL27, TypicalDailyPlans.APRIL28, TypicalDailyPlans.APRIL29,","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.APRIL30, TypicalDailyPlans.MAY1, TypicalDailyPlans.MAY2, TypicalDailyPlans.MAY3,","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY4, TypicalDailyPlans.MAY5, TypicalDailyPlans.MAY6, TypicalDailyPlans.MAY7,","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY8, TypicalDailyPlans.MAY9, TypicalDailyPlans.MAY10, TypicalDailyPlans.MAY11,","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY12, TypicalDailyPlans.MAY13, TypicalDailyPlans.MAY14, TypicalDailyPlans.MAY15,","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY16, TypicalDailyPlans.MAY17, TypicalDailyPlans.MAY18, TypicalDailyPlans.MAY19,","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY20, TypicalDailyPlans.MAY21, TypicalDailyPlans.MAY22, TypicalDailyPlans.MAY23,","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY24, TypicalDailyPlans.MAY25","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"    };","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan[] DAILY_PLANS_SIMPLE_TASK \u003d {","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.april26SimpleTask(), TypicalDailyPlans.april27SimpleTask(),","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.april28SimpleTask(), TypicalDailyPlans.april29SimpleTask(),","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.APRIL30, TypicalDailyPlans.MAY1, TypicalDailyPlans.MAY2, TypicalDailyPlans.MAY3,","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY4, TypicalDailyPlans.MAY5, TypicalDailyPlans.MAY6, TypicalDailyPlans.MAY7,","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY8, TypicalDailyPlans.MAY9, TypicalDailyPlans.MAY10, TypicalDailyPlans.MAY11,","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY12, TypicalDailyPlans.MAY13, TypicalDailyPlans.MAY14, TypicalDailyPlans.MAY15,","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY16, TypicalDailyPlans.MAY17, TypicalDailyPlans.MAY18, TypicalDailyPlans.MAY19,","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY20, TypicalDailyPlans.MAY21, TypicalDailyPlans.MAY22, TypicalDailyPlans.MAY23,","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY24, TypicalDailyPlans.MAY25","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"    };","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan[] DAILY_PLANS_DEADLINE \u003d {","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.april26Deadline(), TypicalDailyPlans.april27Deadline(),","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.APRIL28, TypicalDailyPlans.APRIL29, TypicalDailyPlans.APRIL30, TypicalDailyPlans.MAY1,","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY2, TypicalDailyPlans.MAY3, TypicalDailyPlans.MAY4, TypicalDailyPlans.MAY5,","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY6, TypicalDailyPlans.MAY7, TypicalDailyPlans.MAY8, TypicalDailyPlans.MAY9,","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY10, TypicalDailyPlans.MAY11, TypicalDailyPlans.MAY12, TypicalDailyPlans.MAY13,","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY14, TypicalDailyPlans.MAY15, TypicalDailyPlans.MAY16, TypicalDailyPlans.MAY17,","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY18, TypicalDailyPlans.MAY19, TypicalDailyPlans.MAY20, TypicalDailyPlans.MAY21,","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY22, TypicalDailyPlans.MAY23, TypicalDailyPlans.MAY24, TypicalDailyPlans.MAY25","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"    };","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"joyngjr"},"content":"    public static final DailyPlan[] DAILY_PLANS_EVENT \u003d {","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.april26Event(), TypicalDailyPlans.april27Event(), TypicalDailyPlans.april28Event(),","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.april29Event(), TypicalDailyPlans.april30Event(), TypicalDailyPlans.MAY1,","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY2, TypicalDailyPlans.MAY3, TypicalDailyPlans.MAY4, TypicalDailyPlans.MAY5,","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY6, TypicalDailyPlans.MAY7, TypicalDailyPlans.MAY8, TypicalDailyPlans.MAY9,","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY10, TypicalDailyPlans.MAY11, TypicalDailyPlans.MAY12, TypicalDailyPlans.MAY13,","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY14, TypicalDailyPlans.MAY15, TypicalDailyPlans.MAY16, TypicalDailyPlans.MAY17,","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY18, TypicalDailyPlans.MAY19, TypicalDailyPlans.MAY20, TypicalDailyPlans.MAY21,","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"joyngjr"},"content":"        TypicalDailyPlans.MAY22, TypicalDailyPlans.MAY23, TypicalDailyPlans.MAY24, TypicalDailyPlans.MAY25","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"joyngjr"},"content":"    };","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"joyngjr"},"content":"    private static final LocalDate DEFAULT_DATE \u003d LocalDate.parse(\"2023-04-26\");","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"joyngjr"},"content":"    public static final MonthlyPlan APR26_PLAN \u003d new MonthlyPlan(DAILY_PLANS, DEFAULT_DATE);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joyngjr":59}},{"path":"src/test/java/seedu/task/testutil/TypicalSubtasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"PROGRAMMERHAO"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"PROGRAMMERHAO"},"content":"import seedu.task.model.task.Subtask;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"PROGRAMMERHAO"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":" * A utility class containing a list of {@code Subtask} objects to be used in tests.","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"PROGRAMMERHAO"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"PROGRAMMERHAO"},"content":"public class TypicalSubtasks {","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final Subtask ALICE_HOMEWORK \u003d new SubtaskBuilder().withName(\"Homework\")","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"PROGRAMMERHAO"},"content":"        .withDescription(\"lecture 1\")","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"PROGRAMMERHAO"},"content":"        .build();","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final Subtask AMY_LAB \u003d new SubtaskBuilder().withName(\"Lab\")","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"PROGRAMMERHAO"},"content":"        .withDescription(\"lecture 2\")","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"PROGRAMMERHAO"},"content":"        .build();","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"PROGRAMMERHAO"},"content":"    public static final Subtask BOB_SUBTASK \u003d new SubtaskBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"PROGRAMMERHAO"},"content":"        .withDescription(VALID_DESCRIPTION_BOB).build();","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"PROGRAMMERHAO"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"PROGRAMMERHAO":25}},{"path":"src/test/java/seedu/task/testutil/TypicalTagComparator.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joyngjr"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"joyngjr"},"content":"import seedu.task.model.tracker.TagComparator;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"joyngjr"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"joyngjr"},"content":" * A utility class containing a list of {@code TagComparator} objects to be used in tests.","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"joyngjr"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"joyngjr"},"content":"public class TypicalTagComparator {","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"joyngjr"},"content":"    public static final TagComparator CODE_3 \u003d new TagComparatorBuilder().withOccurrence(3).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"joyngjr"},"content":"    public static final TagComparator EAT_1 \u003d new TagComparatorBuilder()","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"joyngjr"},"content":"            .withTag(\"EAT\")","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"joyngjr"},"content":"            .withOccurrence(1)","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"joyngjr"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"joyngjr"},"content":"    public static final TagComparator SLEEP_5 \u003d new TagComparatorBuilder()","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"joyngjr"},"content":"            .withTag(\"SLEEP\")","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"joyngjr"},"content":"            .withOccurrence(5)","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"joyngjr"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"joyngjr"},"content":"    private TypicalTagComparator() {} // prevents instantiation","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"joyngjr"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"joyngjr":21}},{"path":"src/test/java/seedu/task/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.testutil;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_DESCRIPTION_AMY;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOTH;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"lywich"},"content":"import static seedu.task.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"PROGRAMMERHAO"},"content":"import static seedu.task.testutil.TypicalSubtasks.ALICE_HOMEWORK;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"lywich"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"lywich"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import java.util.List;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"lywich"},"content":"import seedu.task.model.TaskBook;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"lywich"},"content":"import seedu.task.model.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"lywich"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"lywich"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"lywich"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"lywich"},"content":"public class TypicalTasks {","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"    public static final Task ALICE \u003d new SimpleTaskBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"lywich"},"content":"            .withDescription(\"Alice\u0027s description\")","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"joyngjr"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"joyngjr"},"content":"            .withEffort(2)","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"joyngjr"},"content":"            .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"    public static final Task BENSON \u003d new SimpleTaskBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"lywich"},"content":"            .withDescription(\"Benson\u0027s description\")","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"joyngjr"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"joyngjr"},"content":"            .withEffort(4)","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"PROGRAMMERHAO"},"content":"            .withSubtasks(ALICE_HOMEWORK)","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"joyngjr"},"content":"            .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"    public static final Task CARL \u003d new SimpleTaskBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"lywich"},"content":"            .withDescription(\"Carl\u0027s description\")","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"joyngjr"},"content":"            .withEffort(3)","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"lywich"},"content":"            .build();","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"    public static final Task DANIEL \u003d new SimpleTaskBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"lywich"},"content":"            .withDescription(\"Daniel\u0027s description\")","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"joyngjr"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"joyngjr"},"content":"            .withEffort(6)","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"joyngjr"},"content":"            .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"    public static final Task ELLE \u003d new SimpleTaskBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"lywich"},"content":"            .withDescription(\"Elle\u0027s description\")","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"lywich"},"content":"            .build();","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"    public static final Task FIONA \u003d new SimpleTaskBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"lywich"},"content":"            .withDescription(\"Fiona\u0027s description\")","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"lywich"},"content":"            .build();","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"    public static final Task GEORGE \u003d new SimpleTaskBuilder().withName(\"George Best\")","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"lywich"},"content":"            .withDescription(\"George\u0027s description\")","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"lywich"},"content":"            .build();","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"lywich"},"content":"    // Manually added","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"    public static final Task HOON \u003d new SimpleTaskBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"lywich"},"content":"            .withDescription(\"Hoon\u0027s description\")","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"lywich"},"content":"            .build();","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"    public static final Task IDA \u003d new SimpleTaskBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"lywich"},"content":"            .withDescription(\"Ida\u0027s description\")","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"lywich"},"content":"            .build();","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"lywich"},"content":"    // Manually added - Task\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"    public static final Task AMY \u003d new SimpleTaskBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"            .withDescription(VALID_DESCRIPTION_AMY)","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"lywich"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"    public static final Task BOB \u003d new SimpleTaskBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"            .withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"lywich"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"lywich"},"content":"            .build();","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"joyngjr"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Huggenguggen"},"content":"    public static final Task BOB_BOTH \u003d new SimpleTaskBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"PROGRAMMERHAO"},"content":"        .withDescription(VALID_DESCRIPTION_BOTH)","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"PROGRAMMERHAO"},"content":"        .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-02-21"},{"lineNumber":75,"author":{"gitId":"PROGRAMMERHAO"},"content":"        .build();","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"    public static final Task AMY_BOTH \u003d new SimpleTaskBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"PROGRAMMERHAO"},"content":"        .withDescription(VALID_DESCRIPTION_BOTH)","lastModifiedDate":"2023-02-21"},{"lineNumber":78,"author":{"gitId":"PROGRAMMERHAO"},"content":"        .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-02-21"},{"lineNumber":79,"author":{"gitId":"PROGRAMMERHAO"},"content":"        .build();","lastModifiedDate":"2023-02-21"},{"lineNumber":80,"author":{"gitId":"PROGRAMMERHAO"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":81,"author":{"gitId":"lywich"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"lywich"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"lywich"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"lywich"},"content":"     * Returns an {@code TaskBook} with all the typical tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"lywich"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"lywich"},"content":"    public static TaskBook getTypicalTaskBook() {","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"lywich"},"content":"        TaskBook ab \u003d new TaskBook();","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"lywich"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"lywich"},"content":"            ab.addTask(task);","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"lywich"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"lywich"},"content":"        return ab;","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"lywich"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"lywich"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"lywich"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"lywich"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"lywich"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"Huggenguggen":15,"lywich":62,"PROGRAMMERHAO":11,"joyngjr":11}},{"path":"src/test/java/seedu/task/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"lywich":1,"-":34}},{"path":"src/test/java/seedu/task/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lywich"},"content":"package seedu.task.ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"lywich"},"content":"import static seedu.task.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"lywich"},"content":"import seedu.task.MainApp;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"lywich":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"\u003c?import seedu.task.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"lywich":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"lywich"},"content":"\u003cfx:root type\u003d\"seedu.task.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"lywich":1,"-":5}}]
